--
-- PostgreSQL database cluster dump
--

\restrict 5Ag9QlxjBPBR8PBJSh0e6vAsLhM4Be5bw2pACgQulAZArt5YFQsn0wGmM0BAQXf

SET default_transaction_read_only = off;

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

--
-- Roles
--

CREATE ROLE anon;
ALTER ROLE anon WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE authenticated;
ALTER ROLE authenticated WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE authenticator;
ALTER ROLE authenticator WITH NOSUPERUSER NOINHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE dashboard_user;
ALTER ROLE dashboard_user WITH NOSUPERUSER INHERIT CREATEROLE CREATEDB NOLOGIN REPLICATION NOBYPASSRLS;
CREATE ROLE pgbouncer;
ALTER ROLE pgbouncer WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE postgres;
ALTER ROLE postgres WITH NOSUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS;
CREATE ROLE service_role;
ALTER ROLE service_role WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION BYPASSRLS;
CREATE ROLE supabase_admin;
ALTER ROLE supabase_admin WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS;
CREATE ROLE supabase_auth_admin;
ALTER ROLE supabase_auth_admin WITH NOSUPERUSER NOINHERIT CREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE supabase_etl_admin;
ALTER ROLE supabase_etl_admin WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN REPLICATION NOBYPASSRLS;
CREATE ROLE supabase_read_only_user;
ALTER ROLE supabase_read_only_user WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION BYPASSRLS;
CREATE ROLE supabase_realtime_admin;
ALTER ROLE supabase_realtime_admin WITH NOSUPERUSER NOINHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE supabase_replication_admin;
ALTER ROLE supabase_replication_admin WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN REPLICATION NOBYPASSRLS;
CREATE ROLE supabase_storage_admin;
ALTER ROLE supabase_storage_admin WITH NOSUPERUSER NOINHERIT CREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;

--
-- User Configurations
--

--
-- User Config "anon"
--

ALTER ROLE anon SET statement_timeout TO '3s';

--
-- User Config "authenticated"
--

ALTER ROLE authenticated SET statement_timeout TO '8s';

--
-- User Config "authenticator"
--

ALTER ROLE authenticator SET session_preload_libraries TO 'safeupdate';
ALTER ROLE authenticator SET statement_timeout TO '8s';
ALTER ROLE authenticator SET lock_timeout TO '8s';

--
-- User Config "postgres"
--

ALTER ROLE postgres SET search_path TO E'\\$user', 'public', 'extensions';

--
-- User Config "supabase_admin"
--

ALTER ROLE supabase_admin SET search_path TO '$user', 'public', 'auth', 'extensions';
ALTER ROLE supabase_admin SET log_statement TO 'none';

--
-- User Config "supabase_auth_admin"
--

ALTER ROLE supabase_auth_admin SET search_path TO 'auth';
ALTER ROLE supabase_auth_admin SET idle_in_transaction_session_timeout TO '60000';
ALTER ROLE supabase_auth_admin SET log_statement TO 'none';

--
-- User Config "supabase_read_only_user"
--

ALTER ROLE supabase_read_only_user SET default_transaction_read_only TO 'on';

--
-- User Config "supabase_storage_admin"
--

ALTER ROLE supabase_storage_admin SET search_path TO 'storage';
ALTER ROLE supabase_storage_admin SET log_statement TO 'none';


--
-- Role memberships
--

GRANT anon TO authenticator WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT anon TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT authenticated TO authenticator WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT authenticated TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT authenticator TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT authenticator TO supabase_storage_admin WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT pg_create_subscription TO postgres WITH INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_monitor TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_read_all_data TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_read_all_data TO supabase_etl_admin WITH INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_read_all_data TO supabase_read_only_user WITH INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_signal_backend TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT service_role TO authenticator WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT service_role TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT supabase_realtime_admin TO postgres WITH INHERIT TRUE GRANTED BY supabase_admin;






\unrestrict 5Ag9QlxjBPBR8PBJSh0e6vAsLhM4Be5bw2pACgQulAZArt5YFQsn0wGmM0BAQXf

--
-- Databases
--

--
-- Database "template1" dump
--

\connect template1

--
-- PostgreSQL database dump
--

\restrict RRkB4SQqDvYWa8Xhx8r6lcpzvgAKVahF1aO7ZHfWkgcILapVYPfbeKStUdmEPuF

-- Dumped from database version 17.4
-- Dumped by pg_dump version 17.6 (Debian 17.6-2.pgdg12+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- PostgreSQL database dump complete
--

\unrestrict RRkB4SQqDvYWa8Xhx8r6lcpzvgAKVahF1aO7ZHfWkgcILapVYPfbeKStUdmEPuF

--
-- Database "postgres" dump
--

\connect postgres

--
-- PostgreSQL database dump
--

\restrict J7Bcjx4vALmedxoZauPQqMAV44DSjJz3uCzU02egK1j4fJxoCbP03Ptzcpzi2GI

-- Dumped from database version 17.4
-- Dumped by pg_dump version 17.6 (Debian 17.6-2.pgdg12+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: auth; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA auth;


ALTER SCHEMA auth OWNER TO supabase_admin;

--
-- Name: extensions; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA extensions;


ALTER SCHEMA extensions OWNER TO postgres;

--
-- Name: graphql; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA graphql;


ALTER SCHEMA graphql OWNER TO supabase_admin;

--
-- Name: graphql_public; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA graphql_public;


ALTER SCHEMA graphql_public OWNER TO supabase_admin;

--
-- Name: menuca_v3; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA menuca_v3;


ALTER SCHEMA menuca_v3 OWNER TO postgres;

--
-- Name: pgbouncer; Type: SCHEMA; Schema: -; Owner: pgbouncer
--

CREATE SCHEMA pgbouncer;


ALTER SCHEMA pgbouncer OWNER TO pgbouncer;

--
-- Name: realtime; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA realtime;


ALTER SCHEMA realtime OWNER TO supabase_admin;

--
-- Name: staging; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA staging;


ALTER SCHEMA staging OWNER TO postgres;

--
-- Name: storage; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA storage;


ALTER SCHEMA storage OWNER TO supabase_admin;

--
-- Name: supabase_migrations; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA supabase_migrations;


ALTER SCHEMA supabase_migrations OWNER TO postgres;

--
-- Name: vault; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA vault;


ALTER SCHEMA vault OWNER TO supabase_admin;

--
-- Name: pg_graphql; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_graphql WITH SCHEMA graphql;


--
-- Name: EXTENSION pg_graphql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_graphql IS 'pg_graphql: GraphQL support';


--
-- Name: pg_stat_statements; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_stat_statements WITH SCHEMA extensions;


--
-- Name: EXTENSION pg_stat_statements; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_stat_statements IS 'track planning and execution statistics of all SQL statements executed';


--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA extensions;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: postgis; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS postgis WITH SCHEMA public;


--
-- Name: EXTENSION postgis; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION postgis IS 'PostGIS geometry and geography spatial types and functions';


--
-- Name: supabase_vault; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS supabase_vault WITH SCHEMA vault;


--
-- Name: EXTENSION supabase_vault; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION supabase_vault IS 'Supabase Vault Extension';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA extensions;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: aal_level; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.aal_level AS ENUM (
    'aal1',
    'aal2',
    'aal3'
);


ALTER TYPE auth.aal_level OWNER TO supabase_auth_admin;

--
-- Name: code_challenge_method; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.code_challenge_method AS ENUM (
    's256',
    'plain'
);


ALTER TYPE auth.code_challenge_method OWNER TO supabase_auth_admin;

--
-- Name: factor_status; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.factor_status AS ENUM (
    'unverified',
    'verified'
);


ALTER TYPE auth.factor_status OWNER TO supabase_auth_admin;

--
-- Name: factor_type; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.factor_type AS ENUM (
    'totp',
    'webauthn',
    'phone'
);


ALTER TYPE auth.factor_type OWNER TO supabase_auth_admin;

--
-- Name: oauth_registration_type; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.oauth_registration_type AS ENUM (
    'dynamic',
    'manual'
);


ALTER TYPE auth.oauth_registration_type OWNER TO supabase_auth_admin;

--
-- Name: one_time_token_type; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.one_time_token_type AS ENUM (
    'confirmation_token',
    'reauthentication_token',
    'recovery_token',
    'email_change_token_new',
    'email_change_token_current',
    'phone_change_token'
);


ALTER TYPE auth.one_time_token_type OWNER TO supabase_auth_admin;

--
-- Name: amount_type; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.amount_type AS ENUM (
    'percent',
    'fixed'
);


ALTER TYPE public.amount_type OWNER TO postgres;

--
-- Name: contact_type; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.contact_type AS ENUM (
    'owner',
    'manager',
    'billing',
    'technical',
    'marketing',
    'operations',
    'other'
);


ALTER TYPE public.contact_type OWNER TO postgres;

--
-- Name: domain_type; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.domain_type AS ENUM (
    'main',
    'other',
    'mobile'
);


ALTER TYPE public.domain_type OWNER TO postgres;

--
-- Name: fee_type; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.fee_type AS ENUM (
    'convenience',
    'service',
    'commission',
    'pay_at_door',
    'vendor_commission_extra',
    'contract_fee'
);


ALTER TYPE public.fee_type OWNER TO postgres;

--
-- Name: restaurant_status; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.restaurant_status AS ENUM (
    'pending',
    'active',
    'suspended',
    'inactive',
    'closed'
);


ALTER TYPE public.restaurant_status OWNER TO postgres;

--
-- Name: service_type; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.service_type AS ENUM (
    'delivery',
    'takeout'
);


ALTER TYPE public.service_type OWNER TO postgres;

--
-- Name: action; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.action AS ENUM (
    'INSERT',
    'UPDATE',
    'DELETE',
    'TRUNCATE',
    'ERROR'
);


ALTER TYPE realtime.action OWNER TO supabase_admin;

--
-- Name: equality_op; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.equality_op AS ENUM (
    'eq',
    'neq',
    'lt',
    'lte',
    'gt',
    'gte',
    'in'
);


ALTER TYPE realtime.equality_op OWNER TO supabase_admin;

--
-- Name: user_defined_filter; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.user_defined_filter AS (
	column_name text,
	op realtime.equality_op,
	value text
);


ALTER TYPE realtime.user_defined_filter OWNER TO supabase_admin;

--
-- Name: wal_column; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.wal_column AS (
	name text,
	type_name text,
	type_oid oid,
	value jsonb,
	is_pkey boolean,
	is_selectable boolean
);


ALTER TYPE realtime.wal_column OWNER TO supabase_admin;

--
-- Name: wal_rls; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.wal_rls AS (
	wal jsonb,
	is_rls_enabled boolean,
	subscription_ids uuid[],
	errors text[]
);


ALTER TYPE realtime.wal_rls OWNER TO supabase_admin;

--
-- Name: buckettype; Type: TYPE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TYPE storage.buckettype AS ENUM (
    'STANDARD',
    'ANALYTICS'
);


ALTER TYPE storage.buckettype OWNER TO supabase_storage_admin;

--
-- Name: email(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.email() RETURNS text
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.email', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'email')
  )::text
$$;


ALTER FUNCTION auth.email() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION email(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.email() IS 'Deprecated. Use auth.jwt() -> ''email'' instead.';


--
-- Name: jwt(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.jwt() RETURNS jsonb
    LANGUAGE sql STABLE
    AS $$
  select 
    coalesce(
        nullif(current_setting('request.jwt.claim', true), ''),
        nullif(current_setting('request.jwt.claims', true), '')
    )::jsonb
$$;


ALTER FUNCTION auth.jwt() OWNER TO supabase_auth_admin;

--
-- Name: role(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.role() RETURNS text
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.role', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'role')
  )::text
$$;


ALTER FUNCTION auth.role() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION role(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.role() IS 'Deprecated. Use auth.jwt() -> ''role'' instead.';


--
-- Name: uid(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.uid() RETURNS uuid
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.sub', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'sub')
  )::uuid
$$;


ALTER FUNCTION auth.uid() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION uid(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.uid() IS 'Deprecated. Use auth.jwt() -> ''sub'' instead.';


--
-- Name: grant_pg_cron_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_cron_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  IF EXISTS (
    SELECT
    FROM pg_event_trigger_ddl_commands() AS ev
    JOIN pg_extension AS ext
    ON ev.objid = ext.oid
    WHERE ext.extname = 'pg_cron'
  )
  THEN
    grant usage on schema cron to postgres with grant option;

    alter default privileges in schema cron grant all on tables to postgres with grant option;
    alter default privileges in schema cron grant all on functions to postgres with grant option;
    alter default privileges in schema cron grant all on sequences to postgres with grant option;

    alter default privileges for user supabase_admin in schema cron grant all
        on sequences to postgres with grant option;
    alter default privileges for user supabase_admin in schema cron grant all
        on tables to postgres with grant option;
    alter default privileges for user supabase_admin in schema cron grant all
        on functions to postgres with grant option;

    grant all privileges on all tables in schema cron to postgres with grant option;
    revoke all on table cron.job from postgres;
    grant select on table cron.job to postgres with grant option;
  END IF;
END;
$$;


ALTER FUNCTION extensions.grant_pg_cron_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_cron_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_cron_access() IS 'Grants access to pg_cron';


--
-- Name: grant_pg_graphql_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_graphql_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $_$
DECLARE
    func_is_graphql_resolve bool;
BEGIN
    func_is_graphql_resolve = (
        SELECT n.proname = 'resolve'
        FROM pg_event_trigger_ddl_commands() AS ev
        LEFT JOIN pg_catalog.pg_proc AS n
        ON ev.objid = n.oid
    );

    IF func_is_graphql_resolve
    THEN
        -- Update public wrapper to pass all arguments through to the pg_graphql resolve func
        DROP FUNCTION IF EXISTS graphql_public.graphql;
        create or replace function graphql_public.graphql(
            "operationName" text default null,
            query text default null,
            variables jsonb default null,
            extensions jsonb default null
        )
            returns jsonb
            language sql
        as $$
            select graphql.resolve(
                query := query,
                variables := coalesce(variables, '{}'),
                "operationName" := "operationName",
                extensions := extensions
            );
        $$;

        -- This hook executes when `graphql.resolve` is created. That is not necessarily the last
        -- function in the extension so we need to grant permissions on existing entities AND
        -- update default permissions to any others that are created after `graphql.resolve`
        grant usage on schema graphql to postgres, anon, authenticated, service_role;
        grant select on all tables in schema graphql to postgres, anon, authenticated, service_role;
        grant execute on all functions in schema graphql to postgres, anon, authenticated, service_role;
        grant all on all sequences in schema graphql to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on tables to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on functions to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on sequences to postgres, anon, authenticated, service_role;

        -- Allow postgres role to allow granting usage on graphql and graphql_public schemas to custom roles
        grant usage on schema graphql_public to postgres with grant option;
        grant usage on schema graphql to postgres with grant option;
    END IF;

END;
$_$;


ALTER FUNCTION extensions.grant_pg_graphql_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_graphql_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_graphql_access() IS 'Grants access to pg_graphql';


--
-- Name: grant_pg_net_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_net_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  IF EXISTS (
    SELECT 1
    FROM pg_event_trigger_ddl_commands() AS ev
    JOIN pg_extension AS ext
    ON ev.objid = ext.oid
    WHERE ext.extname = 'pg_net'
  )
  THEN
    IF NOT EXISTS (
      SELECT 1
      FROM pg_roles
      WHERE rolname = 'supabase_functions_admin'
    )
    THEN
      CREATE USER supabase_functions_admin NOINHERIT CREATEROLE LOGIN NOREPLICATION;
    END IF;

    GRANT USAGE ON SCHEMA net TO supabase_functions_admin, postgres, anon, authenticated, service_role;

    IF EXISTS (
      SELECT FROM pg_extension
      WHERE extname = 'pg_net'
      -- all versions in use on existing projects as of 2025-02-20
      -- version 0.12.0 onwards don't need these applied
      AND extversion IN ('0.2', '0.6', '0.7', '0.7.1', '0.8', '0.10.0', '0.11.0')
    ) THEN
      ALTER function net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) SECURITY DEFINER;
      ALTER function net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) SECURITY DEFINER;

      ALTER function net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) SET search_path = net;
      ALTER function net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) SET search_path = net;

      REVOKE ALL ON FUNCTION net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) FROM PUBLIC;
      REVOKE ALL ON FUNCTION net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) FROM PUBLIC;

      GRANT EXECUTE ON FUNCTION net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) TO supabase_functions_admin, postgres, anon, authenticated, service_role;
      GRANT EXECUTE ON FUNCTION net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) TO supabase_functions_admin, postgres, anon, authenticated, service_role;
    END IF;
  END IF;
END;
$$;


ALTER FUNCTION extensions.grant_pg_net_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_net_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_net_access() IS 'Grants access to pg_net';


--
-- Name: pgrst_ddl_watch(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.pgrst_ddl_watch() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  cmd record;
BEGIN
  FOR cmd IN SELECT * FROM pg_event_trigger_ddl_commands()
  LOOP
    IF cmd.command_tag IN (
      'CREATE SCHEMA', 'ALTER SCHEMA'
    , 'CREATE TABLE', 'CREATE TABLE AS', 'SELECT INTO', 'ALTER TABLE'
    , 'CREATE FOREIGN TABLE', 'ALTER FOREIGN TABLE'
    , 'CREATE VIEW', 'ALTER VIEW'
    , 'CREATE MATERIALIZED VIEW', 'ALTER MATERIALIZED VIEW'
    , 'CREATE FUNCTION', 'ALTER FUNCTION'
    , 'CREATE TRIGGER'
    , 'CREATE TYPE', 'ALTER TYPE'
    , 'CREATE RULE'
    , 'COMMENT'
    )
    -- don't notify in case of CREATE TEMP table or other objects created on pg_temp
    AND cmd.schema_name is distinct from 'pg_temp'
    THEN
      NOTIFY pgrst, 'reload schema';
    END IF;
  END LOOP;
END; $$;


ALTER FUNCTION extensions.pgrst_ddl_watch() OWNER TO supabase_admin;

--
-- Name: pgrst_drop_watch(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.pgrst_drop_watch() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  obj record;
BEGIN
  FOR obj IN SELECT * FROM pg_event_trigger_dropped_objects()
  LOOP
    IF obj.object_type IN (
      'schema'
    , 'table'
    , 'foreign table'
    , 'view'
    , 'materialized view'
    , 'function'
    , 'trigger'
    , 'type'
    , 'rule'
    )
    AND obj.is_temporary IS false -- no pg_temp objects
    THEN
      NOTIFY pgrst, 'reload schema';
    END IF;
  END LOOP;
END; $$;


ALTER FUNCTION extensions.pgrst_drop_watch() OWNER TO supabase_admin;

--
-- Name: set_graphql_placeholder(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.set_graphql_placeholder() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $_$
    DECLARE
    graphql_is_dropped bool;
    BEGIN
    graphql_is_dropped = (
        SELECT ev.schema_name = 'graphql_public'
        FROM pg_event_trigger_dropped_objects() AS ev
        WHERE ev.schema_name = 'graphql_public'
    );

    IF graphql_is_dropped
    THEN
        create or replace function graphql_public.graphql(
            "operationName" text default null,
            query text default null,
            variables jsonb default null,
            extensions jsonb default null
        )
            returns jsonb
            language plpgsql
        as $$
            DECLARE
                server_version float;
            BEGIN
                server_version = (SELECT (SPLIT_PART((select version()), ' ', 2))::float);

                IF server_version >= 14 THEN
                    RETURN jsonb_build_object(
                        'errors', jsonb_build_array(
                            jsonb_build_object(
                                'message', 'pg_graphql extension is not enabled.'
                            )
                        )
                    );
                ELSE
                    RETURN jsonb_build_object(
                        'errors', jsonb_build_array(
                            jsonb_build_object(
                                'message', 'pg_graphql is only available on projects running Postgres 14 onwards.'
                            )
                        )
                    );
                END IF;
            END;
        $$;
    END IF;

    END;
$_$;


ALTER FUNCTION extensions.set_graphql_placeholder() OWNER TO supabase_admin;

--
-- Name: FUNCTION set_graphql_placeholder(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.set_graphql_placeholder() IS 'Reintroduces placeholder function for graphql_public.graphql';


--
-- Name: set_updated_at(); Type: FUNCTION; Schema: menuca_v3; Owner: postgres
--

CREATE FUNCTION menuca_v3.set_updated_at() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END $$;


ALTER FUNCTION menuca_v3.set_updated_at() OWNER TO postgres;

--
-- Name: get_auth(text); Type: FUNCTION; Schema: pgbouncer; Owner: supabase_admin
--

CREATE FUNCTION pgbouncer.get_auth(p_usename text) RETURNS TABLE(username text, password text)
    LANGUAGE plpgsql SECURITY DEFINER
    AS $_$
begin
    raise debug 'PgBouncer auth request: %', p_usename;

    return query
    select 
        rolname::text, 
        case when rolvaliduntil < now() 
            then null 
            else rolpassword::text 
        end 
    from pg_authid 
    where rolname=$1 and rolcanlogin;
end;
$_$;


ALTER FUNCTION pgbouncer.get_auth(p_usename text) OWNER TO supabase_admin;

--
-- Name: _ensure_item_and_link(uuid, text, text, numeric); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public._ensure_item_and_link(p_category_id uuid, p_item_name text, p_item_desc text, p_item_price numeric) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare v_section_id uuid; v_tenant text; v_item_id uuid;
begin
  select map.section_id into v_section_id from public._legacy_category_to_section map where map.category_id = p_category_id;
  if v_section_id is null then
    insert into public.menu_sections (menu_id, name, display_order)
    select mc.menu_id, mc.name, coalesce(mc.display_order,0)
    from public.menu_categories mc
    where mc.id = p_category_id
    returning id into v_section_id;
    insert into public._legacy_category_to_section(category_id, section_id)
    values(p_category_id, v_section_id)
    on conflict (category_id) do update set section_id = excluded.section_id;
  end if;

  select rm.tenant_id into v_tenant
  from public.menu_categories mc
  join public.restaurant_menus rm on rm.id = mc.menu_id
  where mc.id = p_category_id;

  select i.id into v_item_id from public.items i
  where (i.tenant_id is not distinct from v_tenant)
    and i.base_name = p_item_name
    and coalesce(i.base_price,0) = coalesce(p_item_price,0)
  limit 1;
  if v_item_id is null then
    insert into public.items(tenant_id, base_name, base_desc, base_price)
    values (v_tenant, p_item_name, coalesce(p_item_desc,''), p_item_price)
    returning id into v_item_id;
  end if;

  insert into public.menu_section_items(menu_section_id, item_id, position)
  select v_section_id, v_item_id, 0
  where not exists (
    select 1 from public.menu_section_items msi where msi.menu_section_id = v_section_id and msi.item_id = v_item_id
  );
end;$$;


ALTER FUNCTION public._ensure_item_and_link(p_category_id uuid, p_item_name text, p_item_desc text, p_item_price numeric) OWNER TO postgres;

--
-- Name: _on_menu_categories_ai(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public._on_menu_categories_ai() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
  insert into public.menu_sections(menu_id, name, display_order)
  values (new.menu_id, new.name, coalesce(new.display_order,0));
  insert into public._legacy_category_to_section(category_id, section_id)
  select new.id, ms.id from public.menu_sections ms
  where ms.menu_id = new.menu_id and ms.name = new.name
  on conflict (category_id) do nothing;
  return new;
end;$$;


ALTER FUNCTION public._on_menu_categories_ai() OWNER TO postgres;

--
-- Name: _on_menu_items_ai(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public._on_menu_items_ai() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
  perform public._ensure_item_and_link(new.category_id, new.name, coalesce(new.description,''), new.price::numeric);
  return new;
end;$$;


ALTER FUNCTION public._on_menu_items_ai() OWNER TO postgres;

--
-- Name: delete_unused_modifier_options(uuid, text[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_unused_modifier_options(p_group_id uuid, p_keep_names text[]) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  DELETE FROM public.modifier_options 
  WHERE modifier_group_id = p_group_id 
  AND name != ALL(p_keep_names);
END;
$$;


ALTER FUNCTION public.delete_unused_modifier_options(p_group_id uuid, p_keep_names text[]) OWNER TO postgres;

--
-- Name: has_role(uuid, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.has_role(r_id uuid, role text) RETURNS boolean
    LANGUAGE sql STABLE
    AS $$
  select exists (
    select 1 from public.user_restaurant_roles urr
    where urr.user_id = auth.uid()
      and (urr.restaurant_id = r_id or urr.restaurant_id is null)
      and urr.role = role
  )
$$;


ALTER FUNCTION public.has_role(r_id uuid, role text) OWNER TO postgres;

--
-- Name: is_admin(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_admin() RETURNS boolean
    LANGUAGE sql STABLE
    AS $$
  select exists (
    select 1 from public.user_restaurant_roles urr
    where urr.user_id = auth.uid() and urr.role = 'admin'
  )
$$;


ALTER FUNCTION public.is_admin() OWNER TO postgres;

--
-- Name: set_item_tenant_from_category(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_item_tenant_from_category() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare v_tenant text;
begin
  if new.tenant_id is null then
    select rm.tenant_id into v_tenant
    from public.menu_categories mc
    join public.restaurant_menus rm on rm.id = mc.menu_id
    where mc.id = new.category_id;
    new.tenant_id := coalesce(v_tenant, 'default-tenant');
  end if;
  return new;
end; $$;


ALTER FUNCTION public.set_item_tenant_from_category() OWNER TO postgres;

--
-- Name: set_menu_tenant_from_restaurant(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_menu_tenant_from_restaurant() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
  if new.tenant_id is null then
    select r.tenant_id into new.tenant_id from public.restaurants r where r.id = new.restaurant_id;
    if new.tenant_id is null then
      new.tenant_id := 'default-tenant';
    end if;
  end if;
  return new;
end; $$;


ALTER FUNCTION public.set_menu_tenant_from_restaurant() OWNER TO postgres;

--
-- Name: set_updated_at(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_updated_at() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
  new.updated_at = now();
  return new;
end;
$$;


ALTER FUNCTION public.set_updated_at() OWNER TO postgres;

--
-- Name: update_updated_at_column(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_updated_at_column() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.update_updated_at_column() OWNER TO postgres;

--
-- Name: apply_rls(jsonb, integer); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer DEFAULT (1024 * 1024)) RETURNS SETOF realtime.wal_rls
    LANGUAGE plpgsql
    AS $$
declare
-- Regclass of the table e.g. public.notes
entity_ regclass = (quote_ident(wal ->> 'schema') || '.' || quote_ident(wal ->> 'table'))::regclass;

-- I, U, D, T: insert, update ...
action realtime.action = (
    case wal ->> 'action'
        when 'I' then 'INSERT'
        when 'U' then 'UPDATE'
        when 'D' then 'DELETE'
        else 'ERROR'
    end
);

-- Is row level security enabled for the table
is_rls_enabled bool = relrowsecurity from pg_class where oid = entity_;

subscriptions realtime.subscription[] = array_agg(subs)
    from
        realtime.subscription subs
    where
        subs.entity = entity_;

-- Subscription vars
roles regrole[] = array_agg(distinct us.claims_role::text)
    from
        unnest(subscriptions) us;

working_role regrole;
claimed_role regrole;
claims jsonb;

subscription_id uuid;
subscription_has_access bool;
visible_to_subscription_ids uuid[] = '{}';

-- structured info for wal's columns
columns realtime.wal_column[];
-- previous identity values for update/delete
old_columns realtime.wal_column[];

error_record_exceeds_max_size boolean = octet_length(wal::text) > max_record_bytes;

-- Primary jsonb output for record
output jsonb;

begin
perform set_config('role', null, true);

columns =
    array_agg(
        (
            x->>'name',
            x->>'type',
            x->>'typeoid',
            realtime.cast(
                (x->'value') #>> '{}',
                coalesce(
                    (x->>'typeoid')::regtype, -- null when wal2json version <= 2.4
                    (x->>'type')::regtype
                )
            ),
            (pks ->> 'name') is not null,
            true
        )::realtime.wal_column
    )
    from
        jsonb_array_elements(wal -> 'columns') x
        left join jsonb_array_elements(wal -> 'pk') pks
            on (x ->> 'name') = (pks ->> 'name');

old_columns =
    array_agg(
        (
            x->>'name',
            x->>'type',
            x->>'typeoid',
            realtime.cast(
                (x->'value') #>> '{}',
                coalesce(
                    (x->>'typeoid')::regtype, -- null when wal2json version <= 2.4
                    (x->>'type')::regtype
                )
            ),
            (pks ->> 'name') is not null,
            true
        )::realtime.wal_column
    )
    from
        jsonb_array_elements(wal -> 'identity') x
        left join jsonb_array_elements(wal -> 'pk') pks
            on (x ->> 'name') = (pks ->> 'name');

for working_role in select * from unnest(roles) loop

    -- Update `is_selectable` for columns and old_columns
    columns =
        array_agg(
            (
                c.name,
                c.type_name,
                c.type_oid,
                c.value,
                c.is_pkey,
                pg_catalog.has_column_privilege(working_role, entity_, c.name, 'SELECT')
            )::realtime.wal_column
        )
        from
            unnest(columns) c;

    old_columns =
            array_agg(
                (
                    c.name,
                    c.type_name,
                    c.type_oid,
                    c.value,
                    c.is_pkey,
                    pg_catalog.has_column_privilege(working_role, entity_, c.name, 'SELECT')
                )::realtime.wal_column
            )
            from
                unnest(old_columns) c;

    if action <> 'DELETE' and count(1) = 0 from unnest(columns) c where c.is_pkey then
        return next (
            jsonb_build_object(
                'schema', wal ->> 'schema',
                'table', wal ->> 'table',
                'type', action
            ),
            is_rls_enabled,
            -- subscriptions is already filtered by entity
            (select array_agg(s.subscription_id) from unnest(subscriptions) as s where claims_role = working_role),
            array['Error 400: Bad Request, no primary key']
        )::realtime.wal_rls;

    -- The claims role does not have SELECT permission to the primary key of entity
    elsif action <> 'DELETE' and sum(c.is_selectable::int) <> count(1) from unnest(columns) c where c.is_pkey then
        return next (
            jsonb_build_object(
                'schema', wal ->> 'schema',
                'table', wal ->> 'table',
                'type', action
            ),
            is_rls_enabled,
            (select array_agg(s.subscription_id) from unnest(subscriptions) as s where claims_role = working_role),
            array['Error 401: Unauthorized']
        )::realtime.wal_rls;

    else
        output = jsonb_build_object(
            'schema', wal ->> 'schema',
            'table', wal ->> 'table',
            'type', action,
            'commit_timestamp', to_char(
                ((wal ->> 'timestamp')::timestamptz at time zone 'utc'),
                'YYYY-MM-DD"T"HH24:MI:SS.MS"Z"'
            ),
            'columns', (
                select
                    jsonb_agg(
                        jsonb_build_object(
                            'name', pa.attname,
                            'type', pt.typname
                        )
                        order by pa.attnum asc
                    )
                from
                    pg_attribute pa
                    join pg_type pt
                        on pa.atttypid = pt.oid
                where
                    attrelid = entity_
                    and attnum > 0
                    and pg_catalog.has_column_privilege(working_role, entity_, pa.attname, 'SELECT')
            )
        )
        -- Add "record" key for insert and update
        || case
            when action in ('INSERT', 'UPDATE') then
                jsonb_build_object(
                    'record',
                    (
                        select
                            jsonb_object_agg(
                                -- if unchanged toast, get column name and value from old record
                                coalesce((c).name, (oc).name),
                                case
                                    when (c).name is null then (oc).value
                                    else (c).value
                                end
                            )
                        from
                            unnest(columns) c
                            full outer join unnest(old_columns) oc
                                on (c).name = (oc).name
                        where
                            coalesce((c).is_selectable, (oc).is_selectable)
                            and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                    )
                )
            else '{}'::jsonb
        end
        -- Add "old_record" key for update and delete
        || case
            when action = 'UPDATE' then
                jsonb_build_object(
                        'old_record',
                        (
                            select jsonb_object_agg((c).name, (c).value)
                            from unnest(old_columns) c
                            where
                                (c).is_selectable
                                and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                        )
                    )
            when action = 'DELETE' then
                jsonb_build_object(
                    'old_record',
                    (
                        select jsonb_object_agg((c).name, (c).value)
                        from unnest(old_columns) c
                        where
                            (c).is_selectable
                            and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                            and ( not is_rls_enabled or (c).is_pkey ) -- if RLS enabled, we can't secure deletes so filter to pkey
                    )
                )
            else '{}'::jsonb
        end;

        -- Create the prepared statement
        if is_rls_enabled and action <> 'DELETE' then
            if (select 1 from pg_prepared_statements where name = 'walrus_rls_stmt' limit 1) > 0 then
                deallocate walrus_rls_stmt;
            end if;
            execute realtime.build_prepared_statement_sql('walrus_rls_stmt', entity_, columns);
        end if;

        visible_to_subscription_ids = '{}';

        for subscription_id, claims in (
                select
                    subs.subscription_id,
                    subs.claims
                from
                    unnest(subscriptions) subs
                where
                    subs.entity = entity_
                    and subs.claims_role = working_role
                    and (
                        realtime.is_visible_through_filters(columns, subs.filters)
                        or (
                          action = 'DELETE'
                          and realtime.is_visible_through_filters(old_columns, subs.filters)
                        )
                    )
        ) loop

            if not is_rls_enabled or action = 'DELETE' then
                visible_to_subscription_ids = visible_to_subscription_ids || subscription_id;
            else
                -- Check if RLS allows the role to see the record
                perform
                    -- Trim leading and trailing quotes from working_role because set_config
                    -- doesn't recognize the role as valid if they are included
                    set_config('role', trim(both '"' from working_role::text), true),
                    set_config('request.jwt.claims', claims::text, true);

                execute 'execute walrus_rls_stmt' into subscription_has_access;

                if subscription_has_access then
                    visible_to_subscription_ids = visible_to_subscription_ids || subscription_id;
                end if;
            end if;
        end loop;

        perform set_config('role', null, true);

        return next (
            output,
            is_rls_enabled,
            visible_to_subscription_ids,
            case
                when error_record_exceeds_max_size then array['Error 413: Payload Too Large']
                else '{}'
            end
        )::realtime.wal_rls;

    end if;
end loop;

perform set_config('role', null, true);
end;
$$;


ALTER FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) OWNER TO supabase_admin;

--
-- Name: broadcast_changes(text, text, text, text, text, record, record, text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text DEFAULT 'ROW'::text) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    -- Declare a variable to hold the JSONB representation of the row
    row_data jsonb := '{}'::jsonb;
BEGIN
    IF level = 'STATEMENT' THEN
        RAISE EXCEPTION 'function can only be triggered for each row, not for each statement';
    END IF;
    -- Check the operation type and handle accordingly
    IF operation = 'INSERT' OR operation = 'UPDATE' OR operation = 'DELETE' THEN
        row_data := jsonb_build_object('old_record', OLD, 'record', NEW, 'operation', operation, 'table', table_name, 'schema', table_schema);
        PERFORM realtime.send (row_data, event_name, topic_name);
    ELSE
        RAISE EXCEPTION 'Unexpected operation type: %', operation;
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        RAISE EXCEPTION 'Failed to process the row: %', SQLERRM;
END;

$$;


ALTER FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) OWNER TO supabase_admin;

--
-- Name: build_prepared_statement_sql(text, regclass, realtime.wal_column[]); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) RETURNS text
    LANGUAGE sql
    AS $$
      /*
      Builds a sql string that, if executed, creates a prepared statement to
      tests retrive a row from *entity* by its primary key columns.
      Example
          select realtime.build_prepared_statement_sql('public.notes', '{"id"}'::text[], '{"bigint"}'::text[])
      */
          select
      'prepare ' || prepared_statement_name || ' as
          select
              exists(
                  select
                      1
                  from
                      ' || entity || '
                  where
                      ' || string_agg(quote_ident(pkc.name) || '=' || quote_nullable(pkc.value #>> '{}') , ' and ') || '
              )'
          from
              unnest(columns) pkc
          where
              pkc.is_pkey
          group by
              entity
      $$;


ALTER FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) OWNER TO supabase_admin;

--
-- Name: cast(text, regtype); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime."cast"(val text, type_ regtype) RETURNS jsonb
    LANGUAGE plpgsql IMMUTABLE
    AS $$
    declare
      res jsonb;
    begin
      execute format('select to_jsonb(%L::'|| type_::text || ')', val)  into res;
      return res;
    end
    $$;


ALTER FUNCTION realtime."cast"(val text, type_ regtype) OWNER TO supabase_admin;

--
-- Name: check_equality_op(realtime.equality_op, regtype, text, text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) RETURNS boolean
    LANGUAGE plpgsql IMMUTABLE
    AS $$
      /*
      Casts *val_1* and *val_2* as type *type_* and check the *op* condition for truthiness
      */
      declare
          op_symbol text = (
              case
                  when op = 'eq' then '='
                  when op = 'neq' then '!='
                  when op = 'lt' then '<'
                  when op = 'lte' then '<='
                  when op = 'gt' then '>'
                  when op = 'gte' then '>='
                  when op = 'in' then '= any'
                  else 'UNKNOWN OP'
              end
          );
          res boolean;
      begin
          execute format(
              'select %L::'|| type_::text || ' ' || op_symbol
              || ' ( %L::'
              || (
                  case
                      when op = 'in' then type_::text || '[]'
                      else type_::text end
              )
              || ')', val_1, val_2) into res;
          return res;
      end;
      $$;


ALTER FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) OWNER TO supabase_admin;

--
-- Name: is_visible_through_filters(realtime.wal_column[], realtime.user_defined_filter[]); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$
    /*
    Should the record be visible (true) or filtered out (false) after *filters* are applied
    */
        select
            -- Default to allowed when no filters present
            $2 is null -- no filters. this should not happen because subscriptions has a default
            or array_length($2, 1) is null -- array length of an empty array is null
            or bool_and(
                coalesce(
                    realtime.check_equality_op(
                        op:=f.op,
                        type_:=coalesce(
                            col.type_oid::regtype, -- null when wal2json version <= 2.4
                            col.type_name::regtype
                        ),
                        -- cast jsonb to text
                        val_1:=col.value #>> '{}',
                        val_2:=f.value
                    ),
                    false -- if null, filter does not match
                )
            )
        from
            unnest(filters) f
            join unnest(columns) col
                on f.column_name = col.name;
    $_$;


ALTER FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) OWNER TO supabase_admin;

--
-- Name: list_changes(name, name, integer, integer); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) RETURNS SETOF realtime.wal_rls
    LANGUAGE sql
    SET log_min_messages TO 'fatal'
    AS $$
      with pub as (
        select
          concat_ws(
            ',',
            case when bool_or(pubinsert) then 'insert' else null end,
            case when bool_or(pubupdate) then 'update' else null end,
            case when bool_or(pubdelete) then 'delete' else null end
          ) as w2j_actions,
          coalesce(
            string_agg(
              realtime.quote_wal2json(format('%I.%I', schemaname, tablename)::regclass),
              ','
            ) filter (where ppt.tablename is not null and ppt.tablename not like '% %'),
            ''
          ) w2j_add_tables
        from
          pg_publication pp
          left join pg_publication_tables ppt
            on pp.pubname = ppt.pubname
        where
          pp.pubname = publication
        group by
          pp.pubname
        limit 1
      ),
      w2j as (
        select
          x.*, pub.w2j_add_tables
        from
          pub,
          pg_logical_slot_get_changes(
            slot_name, null, max_changes,
            'include-pk', 'true',
            'include-transaction', 'false',
            'include-timestamp', 'true',
            'include-type-oids', 'true',
            'format-version', '2',
            'actions', pub.w2j_actions,
            'add-tables', pub.w2j_add_tables
          ) x
      )
      select
        xyz.wal,
        xyz.is_rls_enabled,
        xyz.subscription_ids,
        xyz.errors
      from
        w2j,
        realtime.apply_rls(
          wal := w2j.data::jsonb,
          max_record_bytes := max_record_bytes
        ) xyz(wal, is_rls_enabled, subscription_ids, errors)
      where
        w2j.w2j_add_tables <> ''
        and xyz.subscription_ids[1] is not null
    $$;


ALTER FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) OWNER TO supabase_admin;

--
-- Name: quote_wal2json(regclass); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.quote_wal2json(entity regclass) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $$
      select
        (
          select string_agg('' || ch,'')
          from unnest(string_to_array(nsp.nspname::text, null)) with ordinality x(ch, idx)
          where
            not (x.idx = 1 and x.ch = '"')
            and not (
              x.idx = array_length(string_to_array(nsp.nspname::text, null), 1)
              and x.ch = '"'
            )
        )
        || '.'
        || (
          select string_agg('' || ch,'')
          from unnest(string_to_array(pc.relname::text, null)) with ordinality x(ch, idx)
          where
            not (x.idx = 1 and x.ch = '"')
            and not (
              x.idx = array_length(string_to_array(nsp.nspname::text, null), 1)
              and x.ch = '"'
            )
          )
      from
        pg_class pc
        join pg_namespace nsp
          on pc.relnamespace = nsp.oid
      where
        pc.oid = entity
    $$;


ALTER FUNCTION realtime.quote_wal2json(entity regclass) OWNER TO supabase_admin;

--
-- Name: send(jsonb, text, text, boolean); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean DEFAULT true) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  BEGIN
    -- Set the topic configuration
    EXECUTE format('SET LOCAL realtime.topic TO %L', topic);

    -- Attempt to insert the message
    INSERT INTO realtime.messages (payload, event, topic, private, extension)
    VALUES (payload, event, topic, private, 'broadcast');
  EXCEPTION
    WHEN OTHERS THEN
      -- Capture and notify the error
      RAISE WARNING 'ErrorSendingBroadcastMessage: %', SQLERRM;
  END;
END;
$$;


ALTER FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) OWNER TO supabase_admin;

--
-- Name: subscription_check_filters(); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.subscription_check_filters() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    /*
    Validates that the user defined filters for a subscription:
    - refer to valid columns that the claimed role may access
    - values are coercable to the correct column type
    */
    declare
        col_names text[] = coalesce(
                array_agg(c.column_name order by c.ordinal_position),
                '{}'::text[]
            )
            from
                information_schema.columns c
            where
                format('%I.%I', c.table_schema, c.table_name)::regclass = new.entity
                and pg_catalog.has_column_privilege(
                    (new.claims ->> 'role'),
                    format('%I.%I', c.table_schema, c.table_name)::regclass,
                    c.column_name,
                    'SELECT'
                );
        filter realtime.user_defined_filter;
        col_type regtype;

        in_val jsonb;
    begin
        for filter in select * from unnest(new.filters) loop
            -- Filtered column is valid
            if not filter.column_name = any(col_names) then
                raise exception 'invalid column for filter %', filter.column_name;
            end if;

            -- Type is sanitized and safe for string interpolation
            col_type = (
                select atttypid::regtype
                from pg_catalog.pg_attribute
                where attrelid = new.entity
                      and attname = filter.column_name
            );
            if col_type is null then
                raise exception 'failed to lookup type for column %', filter.column_name;
            end if;

            -- Set maximum number of entries for in filter
            if filter.op = 'in'::realtime.equality_op then
                in_val = realtime.cast(filter.value, (col_type::text || '[]')::regtype);
                if coalesce(jsonb_array_length(in_val), 0) > 100 then
                    raise exception 'too many values for `in` filter. Maximum 100';
                end if;
            else
                -- raises an exception if value is not coercable to type
                perform realtime.cast(filter.value, col_type);
            end if;

        end loop;

        -- Apply consistent order to filters so the unique constraint on
        -- (subscription_id, entity, filters) can't be tricked by a different filter order
        new.filters = coalesce(
            array_agg(f order by f.column_name, f.op, f.value),
            '{}'
        ) from unnest(new.filters) f;

        return new;
    end;
    $$;


ALTER FUNCTION realtime.subscription_check_filters() OWNER TO supabase_admin;

--
-- Name: to_regrole(text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.to_regrole(role_name text) RETURNS regrole
    LANGUAGE sql IMMUTABLE
    AS $$ select role_name::regrole $$;


ALTER FUNCTION realtime.to_regrole(role_name text) OWNER TO supabase_admin;

--
-- Name: topic(); Type: FUNCTION; Schema: realtime; Owner: supabase_realtime_admin
--

CREATE FUNCTION realtime.topic() RETURNS text
    LANGUAGE sql STABLE
    AS $$
select nullif(current_setting('realtime.topic', true), '')::text;
$$;


ALTER FUNCTION realtime.topic() OWNER TO supabase_realtime_admin;

--
-- Name: add_prefixes(text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.add_prefixes(_bucket_id text, _name text) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
    prefixes text[];
BEGIN
    prefixes := "storage"."get_prefixes"("_name");

    IF array_length(prefixes, 1) > 0 THEN
        INSERT INTO storage.prefixes (name, bucket_id)
        SELECT UNNEST(prefixes) as name, "_bucket_id" ON CONFLICT DO NOTHING;
    END IF;
END;
$$;


ALTER FUNCTION storage.add_prefixes(_bucket_id text, _name text) OWNER TO supabase_storage_admin;

--
-- Name: can_insert_object(text, text, uuid, jsonb); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.can_insert_object(bucketid text, name text, owner uuid, metadata jsonb) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  INSERT INTO "storage"."objects" ("bucket_id", "name", "owner", "metadata") VALUES (bucketid, name, owner, metadata);
  -- hack to rollback the successful insert
  RAISE sqlstate 'PT200' using
  message = 'ROLLBACK',
  detail = 'rollback successful insert';
END
$$;


ALTER FUNCTION storage.can_insert_object(bucketid text, name text, owner uuid, metadata jsonb) OWNER TO supabase_storage_admin;

--
-- Name: delete_prefix(text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.delete_prefix(_bucket_id text, _name text) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
    -- Check if we can delete the prefix
    IF EXISTS(
        SELECT FROM "storage"."prefixes"
        WHERE "prefixes"."bucket_id" = "_bucket_id"
          AND level = "storage"."get_level"("_name") + 1
          AND "prefixes"."name" COLLATE "C" LIKE "_name" || '/%'
        LIMIT 1
    )
    OR EXISTS(
        SELECT FROM "storage"."objects"
        WHERE "objects"."bucket_id" = "_bucket_id"
          AND "storage"."get_level"("objects"."name") = "storage"."get_level"("_name") + 1
          AND "objects"."name" COLLATE "C" LIKE "_name" || '/%'
        LIMIT 1
    ) THEN
    -- There are sub-objects, skip deletion
    RETURN false;
    ELSE
        DELETE FROM "storage"."prefixes"
        WHERE "prefixes"."bucket_id" = "_bucket_id"
          AND level = "storage"."get_level"("_name")
          AND "prefixes"."name" = "_name";
        RETURN true;
    END IF;
END;
$$;


ALTER FUNCTION storage.delete_prefix(_bucket_id text, _name text) OWNER TO supabase_storage_admin;

--
-- Name: delete_prefix_hierarchy_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.delete_prefix_hierarchy_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    prefix text;
BEGIN
    prefix := "storage"."get_prefix"(OLD."name");

    IF coalesce(prefix, '') != '' THEN
        PERFORM "storage"."delete_prefix"(OLD."bucket_id", prefix);
    END IF;

    RETURN OLD;
END;
$$;


ALTER FUNCTION storage.delete_prefix_hierarchy_trigger() OWNER TO supabase_storage_admin;

--
-- Name: enforce_bucket_name_length(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.enforce_bucket_name_length() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
    if length(new.name) > 100 then
        raise exception 'bucket name "%" is too long (% characters). Max is 100.', new.name, length(new.name);
    end if;
    return new;
end;
$$;


ALTER FUNCTION storage.enforce_bucket_name_length() OWNER TO supabase_storage_admin;

--
-- Name: extension(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.extension(name text) RETURNS text
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    _parts text[];
    _filename text;
BEGIN
    SELECT string_to_array(name, '/') INTO _parts;
    SELECT _parts[array_length(_parts,1)] INTO _filename;
    RETURN reverse(split_part(reverse(_filename), '.', 1));
END
$$;


ALTER FUNCTION storage.extension(name text) OWNER TO supabase_storage_admin;

--
-- Name: filename(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.filename(name text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
_parts text[];
BEGIN
	select string_to_array(name, '/') into _parts;
	return _parts[array_length(_parts,1)];
END
$$;


ALTER FUNCTION storage.filename(name text) OWNER TO supabase_storage_admin;

--
-- Name: foldername(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.foldername(name text) RETURNS text[]
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    _parts text[];
BEGIN
    -- Split on "/" to get path segments
    SELECT string_to_array(name, '/') INTO _parts;
    -- Return everything except the last segment
    RETURN _parts[1 : array_length(_parts,1) - 1];
END
$$;


ALTER FUNCTION storage.foldername(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_level(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_level(name text) RETURNS integer
    LANGUAGE sql IMMUTABLE STRICT
    AS $$
SELECT array_length(string_to_array("name", '/'), 1);
$$;


ALTER FUNCTION storage.get_level(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_prefix(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_prefix(name text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
SELECT
    CASE WHEN strpos("name", '/') > 0 THEN
             regexp_replace("name", '[\/]{1}[^\/]+\/?$', '')
         ELSE
             ''
        END;
$_$;


ALTER FUNCTION storage.get_prefix(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_prefixes(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_prefixes(name text) RETURNS text[]
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $$
DECLARE
    parts text[];
    prefixes text[];
    prefix text;
BEGIN
    -- Split the name into parts by '/'
    parts := string_to_array("name", '/');
    prefixes := '{}';

    -- Construct the prefixes, stopping one level below the last part
    FOR i IN 1..array_length(parts, 1) - 1 LOOP
            prefix := array_to_string(parts[1:i], '/');
            prefixes := array_append(prefixes, prefix);
    END LOOP;

    RETURN prefixes;
END;
$$;


ALTER FUNCTION storage.get_prefixes(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_size_by_bucket(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_size_by_bucket() RETURNS TABLE(size bigint, bucket_id text)
    LANGUAGE plpgsql STABLE
    AS $$
BEGIN
    return query
        select sum((metadata->>'size')::bigint) as size, obj.bucket_id
        from "storage".objects as obj
        group by obj.bucket_id;
END
$$;


ALTER FUNCTION storage.get_size_by_bucket() OWNER TO supabase_storage_admin;

--
-- Name: list_multipart_uploads_with_delimiter(text, text, text, integer, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.list_multipart_uploads_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, next_key_token text DEFAULT ''::text, next_upload_token text DEFAULT ''::text) RETURNS TABLE(key text, id text, created_at timestamp with time zone)
    LANGUAGE plpgsql
    AS $_$
BEGIN
    RETURN QUERY EXECUTE
        'SELECT DISTINCT ON(key COLLATE "C") * from (
            SELECT
                CASE
                    WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN
                        substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1)))
                    ELSE
                        key
                END AS key, id, created_at
            FROM
                storage.s3_multipart_uploads
            WHERE
                bucket_id = $5 AND
                key ILIKE $1 || ''%'' AND
                CASE
                    WHEN $4 != '''' AND $6 = '''' THEN
                        CASE
                            WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN
                                substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1))) COLLATE "C" > $4
                            ELSE
                                key COLLATE "C" > $4
                            END
                    ELSE
                        true
                END AND
                CASE
                    WHEN $6 != '''' THEN
                        id COLLATE "C" > $6
                    ELSE
                        true
                    END
            ORDER BY
                key COLLATE "C" ASC, created_at ASC) as e order by key COLLATE "C" LIMIT $3'
        USING prefix_param, delimiter_param, max_keys, next_key_token, bucket_id, next_upload_token;
END;
$_$;


ALTER FUNCTION storage.list_multipart_uploads_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer, next_key_token text, next_upload_token text) OWNER TO supabase_storage_admin;

--
-- Name: list_objects_with_delimiter(text, text, text, integer, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.list_objects_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, start_after text DEFAULT ''::text, next_token text DEFAULT ''::text) RETURNS TABLE(name text, id uuid, metadata jsonb, updated_at timestamp with time zone)
    LANGUAGE plpgsql
    AS $_$
BEGIN
    RETURN QUERY EXECUTE
        'SELECT DISTINCT ON(name COLLATE "C") * from (
            SELECT
                CASE
                    WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN
                        substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1)))
                    ELSE
                        name
                END AS name, id, metadata, updated_at
            FROM
                storage.objects
            WHERE
                bucket_id = $5 AND
                name ILIKE $1 || ''%'' AND
                CASE
                    WHEN $6 != '''' THEN
                    name COLLATE "C" > $6
                ELSE true END
                AND CASE
                    WHEN $4 != '''' THEN
                        CASE
                            WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN
                                substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1))) COLLATE "C" > $4
                            ELSE
                                name COLLATE "C" > $4
                            END
                    ELSE
                        true
                END
            ORDER BY
                name COLLATE "C" ASC) as e order by name COLLATE "C" LIMIT $3'
        USING prefix_param, delimiter_param, max_keys, next_token, bucket_id, start_after;
END;
$_$;


ALTER FUNCTION storage.list_objects_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer, start_after text, next_token text) OWNER TO supabase_storage_admin;

--
-- Name: objects_insert_prefix_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.objects_insert_prefix_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    NEW.level := "storage"."get_level"(NEW."name");

    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.objects_insert_prefix_trigger() OWNER TO supabase_storage_admin;

--
-- Name: objects_update_prefix_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.objects_update_prefix_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    old_prefixes TEXT[];
BEGIN
    -- Ensure this is an update operation and the name has changed
    IF TG_OP = 'UPDATE' AND (NEW."name" <> OLD."name" OR NEW."bucket_id" <> OLD."bucket_id") THEN
        -- Retrieve old prefixes
        old_prefixes := "storage"."get_prefixes"(OLD."name");

        -- Remove old prefixes that are only used by this object
        WITH all_prefixes as (
            SELECT unnest(old_prefixes) as prefix
        ),
        can_delete_prefixes as (
             SELECT prefix
             FROM all_prefixes
             WHERE NOT EXISTS (
                 SELECT 1 FROM "storage"."objects"
                 WHERE "bucket_id" = OLD."bucket_id"
                   AND "name" <> OLD."name"
                   AND "name" LIKE (prefix || '%')
             )
         )
        DELETE FROM "storage"."prefixes" WHERE name IN (SELECT prefix FROM can_delete_prefixes);

        -- Add new prefixes
        PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    END IF;
    -- Set the new level
    NEW."level" := "storage"."get_level"(NEW."name");

    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.objects_update_prefix_trigger() OWNER TO supabase_storage_admin;

--
-- Name: operation(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.operation() RETURNS text
    LANGUAGE plpgsql STABLE
    AS $$
BEGIN
    RETURN current_setting('storage.operation', true);
END;
$$;


ALTER FUNCTION storage.operation() OWNER TO supabase_storage_admin;

--
-- Name: prefixes_insert_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.prefixes_insert_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.prefixes_insert_trigger() OWNER TO supabase_storage_admin;

--
-- Name: search(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql
    AS $$
declare
    can_bypass_rls BOOLEAN;
begin
    SELECT rolbypassrls
    INTO can_bypass_rls
    FROM pg_roles
    WHERE rolname = coalesce(nullif(current_setting('role', true), 'none'), current_user);

    IF can_bypass_rls THEN
        RETURN QUERY SELECT * FROM storage.search_v1_optimised(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);
    ELSE
        RETURN QUERY SELECT * FROM storage.search_legacy_v1(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);
    END IF;
end;
$$;


ALTER FUNCTION storage.search(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_legacy_v1(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_legacy_v1(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
declare
    v_order_by text;
    v_sort_order text;
begin
    case
        when sortcolumn = 'name' then
            v_order_by = 'name';
        when sortcolumn = 'updated_at' then
            v_order_by = 'updated_at';
        when sortcolumn = 'created_at' then
            v_order_by = 'created_at';
        when sortcolumn = 'last_accessed_at' then
            v_order_by = 'last_accessed_at';
        else
            v_order_by = 'name';
        end case;

    case
        when sortorder = 'asc' then
            v_sort_order = 'asc';
        when sortorder = 'desc' then
            v_sort_order = 'desc';
        else
            v_sort_order = 'asc';
        end case;

    v_order_by = v_order_by || ' ' || v_sort_order;

    return query execute
        'with folders as (
           select path_tokens[$1] as folder
           from storage.objects
             where objects.name ilike $2 || $3 || ''%''
               and bucket_id = $4
               and array_length(objects.path_tokens, 1) <> $1
           group by folder
           order by folder ' || v_sort_order || '
     )
     (select folder as "name",
            null as id,
            null as updated_at,
            null as created_at,
            null as last_accessed_at,
            null as metadata from folders)
     union all
     (select path_tokens[$1] as "name",
            id,
            updated_at,
            created_at,
            last_accessed_at,
            metadata
     from storage.objects
     where objects.name ilike $2 || $3 || ''%''
       and bucket_id = $4
       and array_length(objects.path_tokens, 1) = $1
     order by ' || v_order_by || ')
     limit $5
     offset $6' using levels, prefix, search, bucketname, limits, offsets;
end;
$_$;


ALTER FUNCTION storage.search_legacy_v1(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_v1_optimised(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_v1_optimised(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
declare
    v_order_by text;
    v_sort_order text;
begin
    case
        when sortcolumn = 'name' then
            v_order_by = 'name';
        when sortcolumn = 'updated_at' then
            v_order_by = 'updated_at';
        when sortcolumn = 'created_at' then
            v_order_by = 'created_at';
        when sortcolumn = 'last_accessed_at' then
            v_order_by = 'last_accessed_at';
        else
            v_order_by = 'name';
        end case;

    case
        when sortorder = 'asc' then
            v_sort_order = 'asc';
        when sortorder = 'desc' then
            v_sort_order = 'desc';
        else
            v_sort_order = 'asc';
        end case;

    v_order_by = v_order_by || ' ' || v_sort_order;

    return query execute
        'with folders as (
           select (string_to_array(name, ''/''))[level] as name
           from storage.prefixes
             where lower(prefixes.name) like lower($2 || $3) || ''%''
               and bucket_id = $4
               and level = $1
           order by name ' || v_sort_order || '
     )
     (select name,
            null as id,
            null as updated_at,
            null as created_at,
            null as last_accessed_at,
            null as metadata from folders)
     union all
     (select path_tokens[level] as "name",
            id,
            updated_at,
            created_at,
            last_accessed_at,
            metadata
     from storage.objects
     where lower(objects.name) like lower($2 || $3) || ''%''
       and bucket_id = $4
       and level = $1
     order by ' || v_order_by || ')
     limit $5
     offset $6' using levels, prefix, search, bucketname, limits, offsets;
end;
$_$;


ALTER FUNCTION storage.search_v1_optimised(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_v2(text, text, integer, integer, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_v2(prefix text, bucket_name text, limits integer DEFAULT 100, levels integer DEFAULT 1, start_after text DEFAULT ''::text) RETURNS TABLE(key text, name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
BEGIN
    RETURN query EXECUTE
        $sql$
        SELECT * FROM (
            (
                SELECT
                    split_part(name, '/', $4) AS key,
                    name || '/' AS name,
                    NULL::uuid AS id,
                    NULL::timestamptz AS updated_at,
                    NULL::timestamptz AS created_at,
                    NULL::jsonb AS metadata
                FROM storage.prefixes
                WHERE name COLLATE "C" LIKE $1 || '%'
                AND bucket_id = $2
                AND level = $4
                AND name COLLATE "C" > $5
                ORDER BY prefixes.name COLLATE "C" LIMIT $3
            )
            UNION ALL
            (SELECT split_part(name, '/', $4) AS key,
                name,
                id,
                updated_at,
                created_at,
                metadata
            FROM storage.objects
            WHERE name COLLATE "C" LIKE $1 || '%'
                AND bucket_id = $2
                AND level = $4
                AND name COLLATE "C" > $5
            ORDER BY name COLLATE "C" LIMIT $3)
        ) obj
        ORDER BY name COLLATE "C" LIMIT $3;
        $sql$
        USING prefix, bucket_name, limits, levels, start_after;
END;
$_$;


ALTER FUNCTION storage.search_v2(prefix text, bucket_name text, limits integer, levels integer, start_after text) OWNER TO supabase_storage_admin;

--
-- Name: update_updated_at_column(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.update_updated_at_column() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.updated_at = now();
    RETURN NEW; 
END;
$$;


ALTER FUNCTION storage.update_updated_at_column() OWNER TO supabase_storage_admin;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: audit_log_entries; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.audit_log_entries (
    instance_id uuid,
    id uuid NOT NULL,
    payload json,
    created_at timestamp with time zone,
    ip_address character varying(64) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE auth.audit_log_entries OWNER TO supabase_auth_admin;

--
-- Name: TABLE audit_log_entries; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.audit_log_entries IS 'Auth: Audit trail for user actions.';


--
-- Name: flow_state; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.flow_state (
    id uuid NOT NULL,
    user_id uuid,
    auth_code text NOT NULL,
    code_challenge_method auth.code_challenge_method NOT NULL,
    code_challenge text NOT NULL,
    provider_type text NOT NULL,
    provider_access_token text,
    provider_refresh_token text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    authentication_method text NOT NULL,
    auth_code_issued_at timestamp with time zone
);


ALTER TABLE auth.flow_state OWNER TO supabase_auth_admin;

--
-- Name: TABLE flow_state; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.flow_state IS 'stores metadata for pkce logins';


--
-- Name: identities; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.identities (
    provider_id text NOT NULL,
    user_id uuid NOT NULL,
    identity_data jsonb NOT NULL,
    provider text NOT NULL,
    last_sign_in_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    email text GENERATED ALWAYS AS (lower((identity_data ->> 'email'::text))) STORED,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE auth.identities OWNER TO supabase_auth_admin;

--
-- Name: TABLE identities; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.identities IS 'Auth: Stores identities associated to a user.';


--
-- Name: COLUMN identities.email; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.identities.email IS 'Auth: Email is a generated column that references the optional email property in the identity_data';


--
-- Name: instances; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.instances (
    id uuid NOT NULL,
    uuid uuid,
    raw_base_config text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);


ALTER TABLE auth.instances OWNER TO supabase_auth_admin;

--
-- Name: TABLE instances; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.instances IS 'Auth: Manages users across multiple sites.';


--
-- Name: mfa_amr_claims; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_amr_claims (
    session_id uuid NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    authentication_method text NOT NULL,
    id uuid NOT NULL
);


ALTER TABLE auth.mfa_amr_claims OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_amr_claims; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_amr_claims IS 'auth: stores authenticator method reference claims for multi factor authentication';


--
-- Name: mfa_challenges; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_challenges (
    id uuid NOT NULL,
    factor_id uuid NOT NULL,
    created_at timestamp with time zone NOT NULL,
    verified_at timestamp with time zone,
    ip_address inet NOT NULL,
    otp_code text,
    web_authn_session_data jsonb
);


ALTER TABLE auth.mfa_challenges OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_challenges; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_challenges IS 'auth: stores metadata about challenge requests made';


--
-- Name: mfa_factors; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_factors (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    friendly_name text,
    factor_type auth.factor_type NOT NULL,
    status auth.factor_status NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    secret text,
    phone text,
    last_challenged_at timestamp with time zone,
    web_authn_credential jsonb,
    web_authn_aaguid uuid
);


ALTER TABLE auth.mfa_factors OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_factors; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_factors IS 'auth: stores metadata about factors';


--
-- Name: oauth_clients; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.oauth_clients (
    id uuid NOT NULL,
    client_id text NOT NULL,
    client_secret_hash text NOT NULL,
    registration_type auth.oauth_registration_type NOT NULL,
    redirect_uris text NOT NULL,
    grant_types text NOT NULL,
    client_name text,
    client_uri text,
    logo_uri text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    deleted_at timestamp with time zone,
    CONSTRAINT oauth_clients_client_name_length CHECK ((char_length(client_name) <= 1024)),
    CONSTRAINT oauth_clients_client_uri_length CHECK ((char_length(client_uri) <= 2048)),
    CONSTRAINT oauth_clients_logo_uri_length CHECK ((char_length(logo_uri) <= 2048))
);


ALTER TABLE auth.oauth_clients OWNER TO supabase_auth_admin;

--
-- Name: one_time_tokens; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.one_time_tokens (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    token_type auth.one_time_token_type NOT NULL,
    token_hash text NOT NULL,
    relates_to text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    CONSTRAINT one_time_tokens_token_hash_check CHECK ((char_length(token_hash) > 0))
);


ALTER TABLE auth.one_time_tokens OWNER TO supabase_auth_admin;

--
-- Name: refresh_tokens; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.refresh_tokens (
    instance_id uuid,
    id bigint NOT NULL,
    token character varying(255),
    user_id character varying(255),
    revoked boolean,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    parent character varying(255),
    session_id uuid
);


ALTER TABLE auth.refresh_tokens OWNER TO supabase_auth_admin;

--
-- Name: TABLE refresh_tokens; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.refresh_tokens IS 'Auth: Store of tokens used to refresh JWT tokens once they expire.';


--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE; Schema: auth; Owner: supabase_auth_admin
--

CREATE SEQUENCE auth.refresh_tokens_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE auth.refresh_tokens_id_seq OWNER TO supabase_auth_admin;

--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE OWNED BY; Schema: auth; Owner: supabase_auth_admin
--

ALTER SEQUENCE auth.refresh_tokens_id_seq OWNED BY auth.refresh_tokens.id;


--
-- Name: saml_providers; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.saml_providers (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    entity_id text NOT NULL,
    metadata_xml text NOT NULL,
    metadata_url text,
    attribute_mapping jsonb,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    name_id_format text,
    CONSTRAINT "entity_id not empty" CHECK ((char_length(entity_id) > 0)),
    CONSTRAINT "metadata_url not empty" CHECK (((metadata_url = NULL::text) OR (char_length(metadata_url) > 0))),
    CONSTRAINT "metadata_xml not empty" CHECK ((char_length(metadata_xml) > 0))
);


ALTER TABLE auth.saml_providers OWNER TO supabase_auth_admin;

--
-- Name: TABLE saml_providers; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.saml_providers IS 'Auth: Manages SAML Identity Provider connections.';


--
-- Name: saml_relay_states; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.saml_relay_states (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    request_id text NOT NULL,
    for_email text,
    redirect_to text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    flow_state_id uuid,
    CONSTRAINT "request_id not empty" CHECK ((char_length(request_id) > 0))
);


ALTER TABLE auth.saml_relay_states OWNER TO supabase_auth_admin;

--
-- Name: TABLE saml_relay_states; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.saml_relay_states IS 'Auth: Contains SAML Relay State information for each Service Provider initiated login.';


--
-- Name: schema_migrations; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.schema_migrations (
    version character varying(255) NOT NULL
);


ALTER TABLE auth.schema_migrations OWNER TO supabase_auth_admin;

--
-- Name: TABLE schema_migrations; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.schema_migrations IS 'Auth: Manages updates to the auth system.';


--
-- Name: sessions; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sessions (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    factor_id uuid,
    aal auth.aal_level,
    not_after timestamp with time zone,
    refreshed_at timestamp without time zone,
    user_agent text,
    ip inet,
    tag text
);


ALTER TABLE auth.sessions OWNER TO supabase_auth_admin;

--
-- Name: TABLE sessions; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sessions IS 'Auth: Stores session data associated to a user.';


--
-- Name: COLUMN sessions.not_after; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.sessions.not_after IS 'Auth: Not after is a nullable column that contains a timestamp after which the session should be regarded as expired.';


--
-- Name: sso_domains; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sso_domains (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    domain text NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    CONSTRAINT "domain not empty" CHECK ((char_length(domain) > 0))
);


ALTER TABLE auth.sso_domains OWNER TO supabase_auth_admin;

--
-- Name: TABLE sso_domains; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sso_domains IS 'Auth: Manages SSO email address domain mapping to an SSO Identity Provider.';


--
-- Name: sso_providers; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sso_providers (
    id uuid NOT NULL,
    resource_id text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    disabled boolean,
    CONSTRAINT "resource_id not empty" CHECK (((resource_id = NULL::text) OR (char_length(resource_id) > 0)))
);


ALTER TABLE auth.sso_providers OWNER TO supabase_auth_admin;

--
-- Name: TABLE sso_providers; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sso_providers IS 'Auth: Manages SSO identity provider information; see saml_providers for SAML.';


--
-- Name: COLUMN sso_providers.resource_id; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.sso_providers.resource_id IS 'Auth: Uniquely identifies a SSO provider according to a user-chosen resource ID (case insensitive), useful in infrastructure as code.';


--
-- Name: users; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.users (
    instance_id uuid,
    id uuid NOT NULL,
    aud character varying(255),
    role character varying(255),
    email character varying(255),
    encrypted_password character varying(255),
    email_confirmed_at timestamp with time zone,
    invited_at timestamp with time zone,
    confirmation_token character varying(255),
    confirmation_sent_at timestamp with time zone,
    recovery_token character varying(255),
    recovery_sent_at timestamp with time zone,
    email_change_token_new character varying(255),
    email_change character varying(255),
    email_change_sent_at timestamp with time zone,
    last_sign_in_at timestamp with time zone,
    raw_app_meta_data jsonb,
    raw_user_meta_data jsonb,
    is_super_admin boolean,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    phone text DEFAULT NULL::character varying,
    phone_confirmed_at timestamp with time zone,
    phone_change text DEFAULT ''::character varying,
    phone_change_token character varying(255) DEFAULT ''::character varying,
    phone_change_sent_at timestamp with time zone,
    confirmed_at timestamp with time zone GENERATED ALWAYS AS (LEAST(email_confirmed_at, phone_confirmed_at)) STORED,
    email_change_token_current character varying(255) DEFAULT ''::character varying,
    email_change_confirm_status smallint DEFAULT 0,
    banned_until timestamp with time zone,
    reauthentication_token character varying(255) DEFAULT ''::character varying,
    reauthentication_sent_at timestamp with time zone,
    is_sso_user boolean DEFAULT false NOT NULL,
    deleted_at timestamp with time zone,
    is_anonymous boolean DEFAULT false NOT NULL,
    CONSTRAINT users_email_change_confirm_status_check CHECK (((email_change_confirm_status >= 0) AND (email_change_confirm_status <= 2)))
);


ALTER TABLE auth.users OWNER TO supabase_auth_admin;

--
-- Name: TABLE users; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.users IS 'Auth: Stores user login data within a secure schema.';


--
-- Name: COLUMN users.is_sso_user; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.users.is_sso_user IS 'Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails.';


--
-- Name: cities; Type: TABLE; Schema: menuca_v3; Owner: postgres
--

CREATE TABLE menuca_v3.cities (
    id integer NOT NULL,
    name character varying(125) NOT NULL,
    display_name character varying(125),
    province_id smallint,
    lat numeric(13,10),
    lng numeric(13,10),
    timezone character varying(50)
);


ALTER TABLE menuca_v3.cities OWNER TO postgres;

--
-- Name: cities_id_seq; Type: SEQUENCE; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE menuca_v3.cities ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME menuca_v3.cities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: provinces; Type: TABLE; Schema: menuca_v3; Owner: postgres
--

CREATE TABLE menuca_v3.provinces (
    id smallint NOT NULL,
    name character varying(125) NOT NULL,
    nom_francaise character varying(125),
    short_name character(3) NOT NULL
);


ALTER TABLE menuca_v3.provinces OWNER TO postgres;

--
-- Name: restaurant_admin_users; Type: TABLE; Schema: menuca_v3; Owner: postgres
--

CREATE TABLE menuca_v3.restaurant_admin_users (
    id bigint NOT NULL,
    uuid uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    restaurant_id bigint NOT NULL,
    user_type character varying(1) DEFAULT 'r'::character varying,
    first_name character varying(50),
    last_name character varying(50),
    email character varying(255) NOT NULL,
    password_hash character varying(255),
    last_login timestamp with time zone,
    login_count integer DEFAULT 0,
    is_active boolean DEFAULT true NOT NULL,
    send_statement boolean DEFAULT false,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE menuca_v3.restaurant_admin_users OWNER TO postgres;

--
-- Name: restaurant_admin_users_id_seq; Type: SEQUENCE; Schema: menuca_v3; Owner: postgres
--

CREATE SEQUENCE menuca_v3.restaurant_admin_users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE menuca_v3.restaurant_admin_users_id_seq OWNER TO postgres;

--
-- Name: restaurant_admin_users_id_seq; Type: SEQUENCE OWNED BY; Schema: menuca_v3; Owner: postgres
--

ALTER SEQUENCE menuca_v3.restaurant_admin_users_id_seq OWNED BY menuca_v3.restaurant_admin_users.id;


--
-- Name: restaurant_contacts; Type: TABLE; Schema: menuca_v3; Owner: postgres
--

CREATE TABLE menuca_v3.restaurant_contacts (
    id bigint NOT NULL,
    uuid uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    restaurant_id bigint NOT NULL,
    title character varying(100),
    first_name character varying(100),
    last_name character varying(100),
    email character varying(255),
    phone character varying(20),
    receives_orders boolean DEFAULT false,
    receives_statements boolean DEFAULT false,
    receives_marketing boolean DEFAULT false,
    preferred_language character(2) DEFAULT 'en'::bpchar,
    is_active boolean DEFAULT true NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE menuca_v3.restaurant_contacts OWNER TO postgres;

--
-- Name: restaurant_contacts_id_seq; Type: SEQUENCE; Schema: menuca_v3; Owner: postgres
--

CREATE SEQUENCE menuca_v3.restaurant_contacts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE menuca_v3.restaurant_contacts_id_seq OWNER TO postgres;

--
-- Name: restaurant_contacts_id_seq; Type: SEQUENCE OWNED BY; Schema: menuca_v3; Owner: postgres
--

ALTER SEQUENCE menuca_v3.restaurant_contacts_id_seq OWNED BY menuca_v3.restaurant_contacts.id;


--
-- Name: restaurant_domains; Type: TABLE; Schema: menuca_v3; Owner: postgres
--

CREATE TABLE menuca_v3.restaurant_domains (
    id bigint NOT NULL,
    uuid uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    restaurant_id bigint NOT NULL,
    domain character varying(255) NOT NULL,
    domain_type text,
    is_enabled boolean DEFAULT true NOT NULL,
    added_by integer,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    disabled_by integer,
    disabled_at timestamp with time zone,
    updated_at timestamp with time zone
);


ALTER TABLE menuca_v3.restaurant_domains OWNER TO postgres;

--
-- Name: restaurant_domains_id_seq; Type: SEQUENCE; Schema: menuca_v3; Owner: postgres
--

CREATE SEQUENCE menuca_v3.restaurant_domains_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE menuca_v3.restaurant_domains_id_seq OWNER TO postgres;

--
-- Name: restaurant_domains_id_seq; Type: SEQUENCE OWNED BY; Schema: menuca_v3; Owner: postgres
--

ALTER SEQUENCE menuca_v3.restaurant_domains_id_seq OWNED BY menuca_v3.restaurant_domains.id;


--
-- Name: restaurant_locations; Type: TABLE; Schema: menuca_v3; Owner: postgres
--

CREATE TABLE menuca_v3.restaurant_locations (
    id bigint NOT NULL,
    uuid uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    restaurant_id bigint NOT NULL,
    is_primary boolean DEFAULT true NOT NULL,
    street_address character varying(255),
    city_id integer,
    province_id integer,
    postal_code character varying(15),
    latitude numeric(13,10),
    longitude numeric(13,10),
    phone character varying(30),
    email character varying(255),
    is_active boolean DEFAULT true NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE menuca_v3.restaurant_locations OWNER TO postgres;

--
-- Name: restaurant_locations_id_seq; Type: SEQUENCE; Schema: menuca_v3; Owner: postgres
--

CREATE SEQUENCE menuca_v3.restaurant_locations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE menuca_v3.restaurant_locations_id_seq OWNER TO postgres;

--
-- Name: restaurant_locations_id_seq; Type: SEQUENCE OWNED BY; Schema: menuca_v3; Owner: postgres
--

ALTER SEQUENCE menuca_v3.restaurant_locations_id_seq OWNED BY menuca_v3.restaurant_locations.id;


--
-- Name: restaurant_schedules; Type: TABLE; Schema: menuca_v3; Owner: postgres
--

CREATE TABLE menuca_v3.restaurant_schedules (
    id bigint NOT NULL,
    uuid uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    restaurant_id bigint NOT NULL,
    type public.service_type NOT NULL,
    day_start smallint NOT NULL,
    time_start time without time zone NOT NULL,
    time_stop time without time zone NOT NULL,
    is_enabled boolean DEFAULT true NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone,
    day_stop smallint NOT NULL,
    CONSTRAINT restaurant_schedules_day_start_check CHECK (((day_start >= 1) AND (day_start <= 7))),
    CONSTRAINT restaurant_schedules_day_stop_check CHECK (((day_stop >= 1) AND (day_stop <= 7)))
);


ALTER TABLE menuca_v3.restaurant_schedules OWNER TO postgres;

--
-- Name: restaurant_schedules_id_seq; Type: SEQUENCE; Schema: menuca_v3; Owner: postgres
--

CREATE SEQUENCE menuca_v3.restaurant_schedules_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE menuca_v3.restaurant_schedules_id_seq OWNER TO postgres;

--
-- Name: restaurant_schedules_id_seq; Type: SEQUENCE OWNED BY; Schema: menuca_v3; Owner: postgres
--

ALTER SEQUENCE menuca_v3.restaurant_schedules_id_seq OWNED BY menuca_v3.restaurant_schedules.id;


--
-- Name: restaurants; Type: TABLE; Schema: menuca_v3; Owner: postgres
--

CREATE TABLE menuca_v3.restaurants (
    id bigint NOT NULL,
    uuid uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    legacy_v1_id integer,
    legacy_v2_id integer,
    name character varying(255) NOT NULL,
    status public.restaurant_status DEFAULT 'pending'::public.restaurant_status NOT NULL,
    activated_at timestamp with time zone,
    suspended_at timestamp with time zone,
    closed_at timestamp with time zone,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    created_by integer,
    updated_at timestamp with time zone,
    updated_by integer
);


ALTER TABLE menuca_v3.restaurants OWNER TO postgres;

--
-- Name: restaurants_id_seq; Type: SEQUENCE; Schema: menuca_v3; Owner: postgres
--

CREATE SEQUENCE menuca_v3.restaurants_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE menuca_v3.restaurants_id_seq OWNER TO postgres;

--
-- Name: restaurants_id_seq; Type: SEQUENCE OWNED BY; Schema: menuca_v3; Owner: postgres
--

ALTER SEQUENCE menuca_v3.restaurants_id_seq OWNED BY menuca_v3.restaurants.id;


--
-- Name: messages; Type: TABLE; Schema: realtime; Owner: supabase_realtime_admin
--

CREATE TABLE realtime.messages (
    topic text NOT NULL,
    extension text NOT NULL,
    payload jsonb,
    event text,
    private boolean DEFAULT false,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    inserted_at timestamp without time zone DEFAULT now() NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
)
PARTITION BY RANGE (inserted_at);


ALTER TABLE realtime.messages OWNER TO supabase_realtime_admin;

--
-- Name: schema_migrations; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.schema_migrations (
    version bigint NOT NULL,
    inserted_at timestamp(0) without time zone
);


ALTER TABLE realtime.schema_migrations OWNER TO supabase_admin;

--
-- Name: subscription; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.subscription (
    id bigint NOT NULL,
    subscription_id uuid NOT NULL,
    entity regclass NOT NULL,
    filters realtime.user_defined_filter[] DEFAULT '{}'::realtime.user_defined_filter[] NOT NULL,
    claims jsonb NOT NULL,
    claims_role regrole GENERATED ALWAYS AS (realtime.to_regrole((claims ->> 'role'::text))) STORED NOT NULL,
    created_at timestamp without time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);


ALTER TABLE realtime.subscription OWNER TO supabase_admin;

--
-- Name: subscription_id_seq; Type: SEQUENCE; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE realtime.subscription ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME realtime.subscription_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: cities_v1; Type: TABLE; Schema: staging; Owner: postgres
--

CREATE TABLE staging.cities_v1 (
    id integer NOT NULL,
    name character varying(50),
    display_name character varying(125),
    lat character varying(45),
    lng character varying(45),
    timezone character varying(45),
    province_id smallint DEFAULT '0'::smallint
);


ALTER TABLE staging.cities_v1 OWNER TO postgres;

--
-- Name: cities_v1_id_seq; Type: SEQUENCE; Schema: staging; Owner: postgres
--

ALTER TABLE staging.cities_v1 ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME staging.cities_v1_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: cities_v2; Type: TABLE; Schema: staging; Owner: postgres
--

CREATE TABLE staging.cities_v2 (
    id integer NOT NULL,
    name character varying(50),
    province_id smallint DEFAULT 0,
    lat numeric(13,10),
    lng numeric(13,10),
    timezone character varying(45)
);


ALTER TABLE staging.cities_v2 OWNER TO postgres;

--
-- Name: cities_v2_id_seq; Type: SEQUENCE; Schema: staging; Owner: postgres
--

ALTER TABLE staging.cities_v2 ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME staging.cities_v2_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: provinces_v2; Type: TABLE; Schema: staging; Owner: postgres
--

CREATE TABLE staging.provinces_v2 (
    id smallint NOT NULL,
    "name (english)" character varying(125) NOT NULL,
    "nom(francais)" character varying(125),
    short_name character(3)
);


ALTER TABLE staging.provinces_v2 OWNER TO postgres;

--
-- Name: v1_restaurant_domains; Type: TABLE; Schema: staging; Owner: postgres
--

CREATE TABLE staging.v1_restaurant_domains (
    id integer NOT NULL,
    restaurant integer,
    domain text
);


ALTER TABLE staging.v1_restaurant_domains OWNER TO postgres;

--
-- Name: v1_restaurants; Type: TABLE; Schema: staging; Owner: postgres
--

CREATE TABLE staging.v1_restaurants (
    id integer NOT NULL,
    name text,
    pending text,
    active text,
    suspend_operation text,
    suspended_at bigint,
    added_on timestamp with time zone,
    updated_at timestamp with time zone,
    added_by integer,
    updated_by integer
);


ALTER TABLE staging.v1_restaurants OWNER TO postgres;

--
-- Name: v1_restaurants_locations; Type: TABLE; Schema: staging; Owner: postgres
--

CREATE TABLE staging.v1_restaurants_locations (
    id integer NOT NULL,
    address text,
    city text,
    province text,
    zip text,
    latitude text,
    longitude text,
    phone text,
    main_email text,
    active text,
    updated_at timestamp with time zone
);


ALTER TABLE staging.v1_restaurants_locations OWNER TO postgres;

--
-- Name: v2_restaurants; Type: TABLE; Schema: staging; Owner: postgres
--

CREATE TABLE staging.v2_restaurants (
    id integer NOT NULL,
    v1_id integer,
    name text NOT NULL,
    pending text,
    active text,
    suspend_operation text,
    suspended_at bigint,
    added_at timestamp with time zone,
    updated_at timestamp with time zone,
    added_by integer,
    updated_by integer
);


ALTER TABLE staging.v2_restaurants OWNER TO postgres;

--
-- Name: v2_restaurants_domain; Type: TABLE; Schema: staging; Owner: postgres
--

CREATE TABLE staging.v2_restaurants_domain (
    id integer NOT NULL,
    restaurant_id integer,
    domain text NOT NULL,
    type text,
    enabled text,
    added_by integer,
    added_at timestamp with time zone,
    disabled_by integer,
    disabled_at timestamp with time zone
);


ALTER TABLE staging.v2_restaurants_domain OWNER TO postgres;

--
-- Name: v2_restaurants_locations; Type: TABLE; Schema: staging; Owner: postgres
--

CREATE TABLE staging.v2_restaurants_locations (
    id integer NOT NULL,
    v1_id integer,
    address text,
    city_id integer,
    province_id integer,
    zip text,
    lat numeric(13,10),
    lng numeric(13,10),
    phone text,
    email text,
    active text,
    updated_at timestamp with time zone
);


ALTER TABLE staging.v2_restaurants_locations OWNER TO postgres;

--
-- Name: buckets; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.buckets (
    id text NOT NULL,
    name text NOT NULL,
    owner uuid,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    public boolean DEFAULT false,
    avif_autodetection boolean DEFAULT false,
    file_size_limit bigint,
    allowed_mime_types text[],
    owner_id text,
    type storage.buckettype DEFAULT 'STANDARD'::storage.buckettype NOT NULL
);


ALTER TABLE storage.buckets OWNER TO supabase_storage_admin;

--
-- Name: COLUMN buckets.owner; Type: COMMENT; Schema: storage; Owner: supabase_storage_admin
--

COMMENT ON COLUMN storage.buckets.owner IS 'Field is deprecated, use owner_id instead';


--
-- Name: buckets_analytics; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.buckets_analytics (
    id text NOT NULL,
    type storage.buckettype DEFAULT 'ANALYTICS'::storage.buckettype NOT NULL,
    format text DEFAULT 'ICEBERG'::text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE storage.buckets_analytics OWNER TO supabase_storage_admin;

--
-- Name: migrations; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.migrations (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    hash character varying(40) NOT NULL,
    executed_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE storage.migrations OWNER TO supabase_storage_admin;

--
-- Name: objects; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.objects (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    bucket_id text,
    name text,
    owner uuid,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    last_accessed_at timestamp with time zone DEFAULT now(),
    metadata jsonb,
    path_tokens text[] GENERATED ALWAYS AS (string_to_array(name, '/'::text)) STORED,
    version text,
    owner_id text,
    user_metadata jsonb,
    level integer
);


ALTER TABLE storage.objects OWNER TO supabase_storage_admin;

--
-- Name: COLUMN objects.owner; Type: COMMENT; Schema: storage; Owner: supabase_storage_admin
--

COMMENT ON COLUMN storage.objects.owner IS 'Field is deprecated, use owner_id instead';


--
-- Name: prefixes; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.prefixes (
    bucket_id text NOT NULL,
    name text NOT NULL COLLATE pg_catalog."C",
    level integer GENERATED ALWAYS AS (storage.get_level(name)) STORED NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now()
);


ALTER TABLE storage.prefixes OWNER TO supabase_storage_admin;

--
-- Name: s3_multipart_uploads; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.s3_multipart_uploads (
    id text NOT NULL,
    in_progress_size bigint DEFAULT 0 NOT NULL,
    upload_signature text NOT NULL,
    bucket_id text NOT NULL,
    key text NOT NULL COLLATE pg_catalog."C",
    version text NOT NULL,
    owner_id text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    user_metadata jsonb
);


ALTER TABLE storage.s3_multipart_uploads OWNER TO supabase_storage_admin;

--
-- Name: s3_multipart_uploads_parts; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.s3_multipart_uploads_parts (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    upload_id text NOT NULL,
    size bigint DEFAULT 0 NOT NULL,
    part_number integer NOT NULL,
    bucket_id text NOT NULL,
    key text NOT NULL COLLATE pg_catalog."C",
    etag text NOT NULL,
    owner_id text,
    version text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE storage.s3_multipart_uploads_parts OWNER TO supabase_storage_admin;

--
-- Name: schema_migrations; Type: TABLE; Schema: supabase_migrations; Owner: postgres
--

CREATE TABLE supabase_migrations.schema_migrations (
    version text NOT NULL,
    statements text[],
    name text,
    created_by text,
    idempotency_key text
);


ALTER TABLE supabase_migrations.schema_migrations OWNER TO postgres;

--
-- Name: refresh_tokens id; Type: DEFAULT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens ALTER COLUMN id SET DEFAULT nextval('auth.refresh_tokens_id_seq'::regclass);


--
-- Name: restaurant_admin_users id; Type: DEFAULT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_admin_users ALTER COLUMN id SET DEFAULT nextval('menuca_v3.restaurant_admin_users_id_seq'::regclass);


--
-- Name: restaurant_contacts id; Type: DEFAULT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_contacts ALTER COLUMN id SET DEFAULT nextval('menuca_v3.restaurant_contacts_id_seq'::regclass);


--
-- Name: restaurant_domains id; Type: DEFAULT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_domains ALTER COLUMN id SET DEFAULT nextval('menuca_v3.restaurant_domains_id_seq'::regclass);


--
-- Name: restaurant_locations id; Type: DEFAULT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_locations ALTER COLUMN id SET DEFAULT nextval('menuca_v3.restaurant_locations_id_seq'::regclass);


--
-- Name: restaurant_schedules id; Type: DEFAULT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_schedules ALTER COLUMN id SET DEFAULT nextval('menuca_v3.restaurant_schedules_id_seq'::regclass);


--
-- Name: restaurants id; Type: DEFAULT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurants ALTER COLUMN id SET DEFAULT nextval('menuca_v3.restaurants_id_seq'::regclass);


--
-- Data for Name: audit_log_entries; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.audit_log_entries (instance_id, id, payload, created_at, ip_address) FROM stdin;
00000000-0000-0000-0000-000000000000	b0a42cd5-400d-4c9c-9bd6-b35ef6a5d66f	{"action":"user_confirmation_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-08-27 18:54:47.441698+00	
00000000-0000-0000-0000-000000000000	56914309-0b13-4ce0-b9aa-8b010e7a0929	{"action":"user_signedup","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"team","traits":{"provider":"email"}}	2025-08-27 18:54:55.799493+00	
00000000-0000-0000-0000-000000000000	213fc270-04ec-4950-9c60-a3aebab52291	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-08-27 19:05:52.606801+00	
00000000-0000-0000-0000-000000000000	d8b15b29-db81-4ece-ac98-4fd56d4e1f12	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-08-27 19:06:02.527669+00	
00000000-0000-0000-0000-000000000000	d69f458e-8513-4ac1-ac43-4161b00ed10c	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-08-27 19:26:17.393491+00	
00000000-0000-0000-0000-000000000000	3581af2e-f46a-4e11-b512-6bd6dc7ca666	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-08-27 19:26:37.185782+00	
00000000-0000-0000-0000-000000000000	6029baa6-827f-433f-85bc-a568327092ba	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-08-27 19:31:34.734083+00	
00000000-0000-0000-0000-000000000000	55aadd0d-92c1-41ca-a36a-0a81e6a9e9a2	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-08-27 19:31:42.666025+00	
00000000-0000-0000-0000-000000000000	0c99f007-8395-4b11-b231-b262f8cf74ef	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-08-28 17:39:19.953636+00	
00000000-0000-0000-0000-000000000000	cd1e991c-1e06-4675-bf6a-61b2e59d0023	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-08-28 17:39:26.728111+00	
00000000-0000-0000-0000-000000000000	2b870b89-d03c-4c28-bc69-785c49bbd667	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-08-28 17:55:08.963987+00	
00000000-0000-0000-0000-000000000000	b61099d9-d495-4df9-a5a6-3ed7ea941bb0	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-08-28 17:55:19.931245+00	
00000000-0000-0000-0000-000000000000	2443c30a-050b-4a91-95c0-c7b77a0d4f08	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-08-28 19:28:32.602915+00	
00000000-0000-0000-0000-000000000000	37c76727-7e7f-42df-a0e6-526810f46230	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-08-28 19:28:56.814772+00	
00000000-0000-0000-0000-000000000000	d7cb9a0b-c0c9-41aa-a039-3f1e0304e5ed	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-08-28 19:51:16.69579+00	
00000000-0000-0000-0000-000000000000	16b2dd17-0f5b-49bc-aeaa-a56c5995ef87	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-08-28 19:51:37.446652+00	
00000000-0000-0000-0000-000000000000	eb226d1a-6f22-497b-bbb9-6852472569dd	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-28 20:50:10.819579+00	
00000000-0000-0000-0000-000000000000	1919b1ab-98bb-44b3-8430-c7945e91ed24	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-28 20:50:10.836386+00	
00000000-0000-0000-0000-000000000000	f7cf106f-06f6-4c8b-b705-bbae28a968f2	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 01:14:53.652519+00	
00000000-0000-0000-0000-000000000000	b9687715-b98d-4971-8727-ffcbecd0cc24	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 01:14:53.676807+00	
00000000-0000-0000-0000-000000000000	51446cf7-ceaf-4568-8508-aa29d03e61c1	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 12:57:07.381315+00	
00000000-0000-0000-0000-000000000000	00051d0d-5b79-4ab5-ac54-cd638831a405	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 12:57:07.402792+00	
00000000-0000-0000-0000-000000000000	94de9613-3ed7-49e8-9545-428e625ff086	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 13:55:14.254847+00	
00000000-0000-0000-0000-000000000000	b3133c9e-e2d2-4685-86ea-76424914c017	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 13:55:14.267849+00	
00000000-0000-0000-0000-000000000000	a3529d4e-7298-43b7-8cff-be6dd58907de	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 15:03:38.391312+00	
00000000-0000-0000-0000-000000000000	2832cb42-8d48-45a5-a472-304e6fc99e1a	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 15:03:38.404189+00	
00000000-0000-0000-0000-000000000000	aa6c6a2d-5e11-45c1-b5f7-18ae2df8eeda	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 16:02:03.76719+00	
00000000-0000-0000-0000-000000000000	ff05aa51-5e1e-41f8-8d5b-c9ab2e0e9fd8	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 16:02:03.775778+00	
00000000-0000-0000-0000-000000000000	9c7c340b-044f-4a95-8ccd-5be20fee5906	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 17:00:12.28888+00	
00000000-0000-0000-0000-000000000000	bed2bdb8-eda4-443c-a0f4-2f7261e090e7	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 17:00:12.307841+00	
00000000-0000-0000-0000-000000000000	2875c75c-d5a2-44af-ba66-ad90bd86bff2	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-08-29 17:46:04.873184+00	
00000000-0000-0000-0000-000000000000	2e471093-a7cd-41e8-8b71-fd63271d0a3c	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 17:58:45.641725+00	
00000000-0000-0000-0000-000000000000	2b82acf6-bcb9-4627-b20b-564ced821325	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-08-29 17:58:45.643504+00	
00000000-0000-0000-0000-000000000000	f42ea908-83d2-4ab4-b016-5113b085b615	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-08-29 18:47:57.828358+00	
00000000-0000-0000-0000-000000000000	d2d6e83a-3878-4094-aab7-8dc459782817	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-03 17:27:13.002733+00	
00000000-0000-0000-0000-000000000000	720a2a6d-0cf1-40a9-bc78-bd10f130408c	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-09-03 17:27:28.92118+00	
00000000-0000-0000-0000-000000000000	dbb90686-82ca-44dd-ab20-5d78121f0dac	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-03 17:51:57.810245+00	
00000000-0000-0000-0000-000000000000	bdcc2ac9-feca-43ef-b5fb-5ade7f421b31	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-09-03 17:52:06.462264+00	
00000000-0000-0000-0000-000000000000	b40404cc-86c7-4b21-824d-b78ed589ab49	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-03 18:38:20.101649+00	
00000000-0000-0000-0000-000000000000	5937290b-5807-415e-aaf1-fc4f98cdc5f9	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-03 19:53:42.856202+00	
00000000-0000-0000-0000-000000000000	9835afb3-de21-4e16-9489-74bfa40066f4	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-03 19:53:42.869277+00	
00000000-0000-0000-0000-000000000000	5422a89a-bf24-4e8f-a4da-73b11ae172e4	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-03 20:08:06.830155+00	
00000000-0000-0000-0000-000000000000	2b60d38d-1877-4b17-978c-0a3453e558eb	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-09-03 20:08:25.023537+00	
00000000-0000-0000-0000-000000000000	7c0662ae-6282-4b71-a238-25d552afb8a3	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 12:20:18.233383+00	
00000000-0000-0000-0000-000000000000	dfc25e1c-318a-4ada-9db9-ebff29da65bf	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 12:20:18.260966+00	
00000000-0000-0000-0000-000000000000	0549338b-ac82-4575-849c-fc94b8819168	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 12:21:17.220892+00	
00000000-0000-0000-0000-000000000000	18b4d83d-475c-4780-8dee-59246517cf68	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 12:21:17.224365+00	
00000000-0000-0000-0000-000000000000	0ee4a398-7056-4b7e-9515-b98ddeee7a7c	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-04 13:03:49.754326+00	
00000000-0000-0000-0000-000000000000	3367ca1f-6f17-4450-851d-a5a202b23318	{"action":"user_confirmation_requested","actor_id":"b61bd1a9-ab87-4598-8064-e79e4883e60f","actor_username":"brian@pureconcepts.com","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-09-04 13:47:50.414129+00	
00000000-0000-0000-0000-000000000000	71c3733d-d761-437f-b81b-8a4fd89a4a7a	{"action":"user_signedup","actor_id":"b61bd1a9-ab87-4598-8064-e79e4883e60f","actor_username":"brian@pureconcepts.com","actor_via_sso":false,"log_type":"team","traits":{"provider":"email"}}	2025-09-04 13:48:44.021323+00	
00000000-0000-0000-0000-000000000000	73c07c4a-ad3f-40a1-b163-e6b4e4e93d82	{"action":"user_modified","actor_id":"b61bd1a9-ab87-4598-8064-e79e4883e60f","actor_username":"brian@pureconcepts.com","actor_via_sso":false,"log_type":"user"}	2025-09-04 13:48:45.333723+00	
00000000-0000-0000-0000-000000000000	ae17f5f0-8469-4ad4-b5c9-7a73a7e7d22c	{"action":"user_confirmation_requested","actor_id":"0fbdf14f-0a52-4731-8638-25cad2efc7c2","actor_username":"tim@worklocal.ca","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-09-04 13:59:45.438398+00	
00000000-0000-0000-0000-000000000000	8c94f753-1781-4f41-8ed1-eb9d6e7fb3ff	{"action":"user_signedup","actor_id":"0fbdf14f-0a52-4731-8638-25cad2efc7c2","actor_username":"tim@worklocal.ca","actor_via_sso":false,"log_type":"team","traits":{"provider":"email"}}	2025-09-04 14:00:05.840275+00	
00000000-0000-0000-0000-000000000000	022e4fc7-0d72-44c9-8f4a-9d4503998d3a	{"action":"user_modified","actor_id":"0fbdf14f-0a52-4731-8638-25cad2efc7c2","actor_username":"tim@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-04 14:00:06.651323+00	
00000000-0000-0000-0000-000000000000	0871ce9e-0223-4250-82ed-793942514a21	{"action":"user_confirmation_requested","actor_id":"7f9a88f5-dd1d-492c-ab0b-bcab1f3baa70","actor_username":"james@worklocal.ca","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-09-04 14:07:33.313651+00	
00000000-0000-0000-0000-000000000000	6da2e216-1061-429d-82d0-c22cb705def1	{"action":"user_signedup","actor_id":"7f9a88f5-dd1d-492c-ab0b-bcab1f3baa70","actor_username":"james@worklocal.ca","actor_via_sso":false,"log_type":"team","traits":{"provider":"email"}}	2025-09-04 14:08:05.645455+00	
00000000-0000-0000-0000-000000000000	10f56a1d-f247-447d-9aea-a8042e07a59c	{"action":"user_modified","actor_id":"7f9a88f5-dd1d-492c-ab0b-bcab1f3baa70","actor_username":"james@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-04 14:08:06.616809+00	
00000000-0000-0000-0000-000000000000	2cf51f00-64f0-4226-b36f-827486e6bb89	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 14:51:33.148842+00	
00000000-0000-0000-0000-000000000000	04fe6105-090c-42ce-96f1-1089bd163ab2	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 14:51:33.171165+00	
00000000-0000-0000-0000-000000000000	24b4c565-e610-4358-a5f7-b8e5ec0b1dbb	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 16:37:21.406925+00	
00000000-0000-0000-0000-000000000000	5d0e6cd7-0a2e-4f32-a8e0-b06dd04f09e9	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 16:37:21.426907+00	
00000000-0000-0000-0000-000000000000	ce88ca08-767d-4511-a5af-3eca47d0acf6	{"action":"token_refreshed","actor_id":"b61bd1a9-ab87-4598-8064-e79e4883e60f","actor_username":"brian@pureconcepts.com","actor_via_sso":false,"log_type":"token"}	2025-09-04 17:16:22.254882+00	
00000000-0000-0000-0000-000000000000	f29c88bf-8193-4b10-a673-2bdc8506f8aa	{"action":"token_revoked","actor_id":"b61bd1a9-ab87-4598-8064-e79e4883e60f","actor_username":"brian@pureconcepts.com","actor_via_sso":false,"log_type":"token"}	2025-09-04 17:16:22.266664+00	
00000000-0000-0000-0000-000000000000	d8a33921-1ff9-4d9a-b91b-0ee43e33dc0d	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 19:15:16.113712+00	
00000000-0000-0000-0000-000000000000	889ede14-487f-49fc-8119-d0d2be1bcf6a	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 19:15:16.139917+00	
00000000-0000-0000-0000-000000000000	116b5b0b-7e28-4609-b0ec-c991cd0b039a	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-04 19:26:52.28361+00	
00000000-0000-0000-0000-000000000000	5980af0d-605f-49ce-9763-cb974724d76a	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-04 19:34:10.970891+00	
00000000-0000-0000-0000-000000000000	dde4de5e-025a-4479-b424-a70db41fb28c	{"action":"token_refreshed","actor_id":"b61bd1a9-ab87-4598-8064-e79e4883e60f","actor_username":"brian@pureconcepts.com","actor_via_sso":false,"log_type":"token"}	2025-09-04 19:44:07.099594+00	
00000000-0000-0000-0000-000000000000	20c493c0-d30f-4655-887e-1117cd7195ef	{"action":"token_revoked","actor_id":"b61bd1a9-ab87-4598-8064-e79e4883e60f","actor_username":"brian@pureconcepts.com","actor_via_sso":false,"log_type":"token"}	2025-09-04 19:44:07.116107+00	
00000000-0000-0000-0000-000000000000	6b901af2-8dca-47e4-8d4a-1210273e8667	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-04 19:48:32.664287+00	
00000000-0000-0000-0000-000000000000	c34bdadb-93f0-425c-babf-e4586e816b96	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-04 20:12:55.223676+00	
00000000-0000-0000-0000-000000000000	6eb1095d-8ff6-447c-bd87-07755051c9ba	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 20:13:24.819224+00	
00000000-0000-0000-0000-000000000000	b1ef40ca-0e56-441a-becb-275926e72dac	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 20:13:24.821122+00	
00000000-0000-0000-0000-000000000000	1e6ae9ca-6e1d-40bf-9c75-90618ee6839c	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 21:40:48.279109+00	
00000000-0000-0000-0000-000000000000	3a30f75c-88b8-45d7-a35b-319383479a3f	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 21:40:48.307948+00	
00000000-0000-0000-0000-000000000000	d351e665-a33e-43a5-bd5c-b28b16b1c046	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 22:57:48.442863+00	
00000000-0000-0000-0000-000000000000	97a90f59-0ea4-4df1-9705-ec02fab4797b	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-04 22:57:48.463553+00	
00000000-0000-0000-0000-000000000000	85131b24-6ee5-4cf5-bbc8-5f39b2e964f4	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 00:43:42.931208+00	
00000000-0000-0000-0000-000000000000	5cbde274-4572-4846-a366-7d5ee0afdcec	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 00:43:42.953228+00	
00000000-0000-0000-0000-000000000000	3fcc1b6a-a9fd-4dac-852a-a11d2c4c93cd	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 02:00:41.195862+00	
00000000-0000-0000-0000-000000000000	943b29c7-73f9-4117-a2b0-155a4f730a8c	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 02:00:41.211081+00	
00000000-0000-0000-0000-000000000000	3d3caf16-1488-4c86-aad0-7c664daabdb2	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 03:00:42.470142+00	
00000000-0000-0000-0000-000000000000	42ebbb68-2a4a-4b63-a5a0-1955f78bdd6b	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 03:00:42.484803+00	
00000000-0000-0000-0000-000000000000	75ba93a9-c6a4-409c-823a-6a4106534609	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 04:30:00.589291+00	
00000000-0000-0000-0000-000000000000	c9982525-2418-488f-ad59-7cfe33c6c196	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 04:30:00.617479+00	
00000000-0000-0000-0000-000000000000	a9d03e17-de53-4ba7-9b9d-62534dad111a	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 06:41:41.499469+00	
00000000-0000-0000-0000-000000000000	3238a5a7-e8b7-482f-963c-fd750283d8ba	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 06:41:41.516972+00	
00000000-0000-0000-0000-000000000000	dcebe13c-0379-4389-9b03-8a1190aea3c4	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 09:13:41.767523+00	
00000000-0000-0000-0000-000000000000	e29eda4e-db1b-4a69-926d-2baf647e749f	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 09:13:41.794563+00	
00000000-0000-0000-0000-000000000000	88dc4977-d247-47d2-9c85-dd586a262de6	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 10:43:40.508741+00	
00000000-0000-0000-0000-000000000000	7718a5bc-9e74-4a51-8e58-b0473c8f849e	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 10:43:40.527267+00	
00000000-0000-0000-0000-000000000000	31f06ade-d87e-48d7-9a90-f2600c08bd9d	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 12:00:56.206093+00	
00000000-0000-0000-0000-000000000000	100b6729-b370-4c77-9173-b3fe51571adf	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 12:00:56.231065+00	
00000000-0000-0000-0000-000000000000	d61fc258-8448-4746-b81c-d79a6c0ec991	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 12:59:39.076452+00	
00000000-0000-0000-0000-000000000000	d20fed39-bc17-4b09-b8b5-94ae5da5c4ec	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 12:59:39.094892+00	
00000000-0000-0000-0000-000000000000	947ff787-b18b-464a-8af8-b7be2ec84ca9	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 13:58:39.312034+00	
00000000-0000-0000-0000-000000000000	42adcf02-ab69-4055-a546-1b7c9b6ad220	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 13:58:39.343889+00	
00000000-0000-0000-0000-000000000000	e81072c5-3f03-43f1-a26e-a9b1ec18bd17	{"action":"token_refreshed","actor_id":"b61bd1a9-ab87-4598-8064-e79e4883e60f","actor_username":"brian@pureconcepts.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 14:20:54.560799+00	
00000000-0000-0000-0000-000000000000	c39d8bd2-fd74-4483-8876-c76be5500a91	{"action":"token_revoked","actor_id":"b61bd1a9-ab87-4598-8064-e79e4883e60f","actor_username":"brian@pureconcepts.com","actor_via_sso":false,"log_type":"token"}	2025-09-05 14:20:54.572112+00	
00000000-0000-0000-0000-000000000000	23ee4dee-988f-4034-af24-2f6173a27a9c	{"action":"user_modified","actor_id":"b61bd1a9-ab87-4598-8064-e79e4883e60f","actor_username":"brian@pureconcepts.com","actor_via_sso":false,"log_type":"user"}	2025-09-05 14:20:55.055735+00	
00000000-0000-0000-0000-000000000000	30500aee-bd97-47a9-b119-a3acfc537f77	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 14:57:39.414661+00	
00000000-0000-0000-0000-000000000000	d2f5673f-e663-401c-ab55-5f4601098480	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 14:57:39.436+00	
00000000-0000-0000-0000-000000000000	96c33a6f-bfd1-4c0c-84ff-b1bdcb3c4616	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-05 15:03:25.883731+00	
00000000-0000-0000-0000-000000000000	d8f0cccb-d78c-452b-9f62-b4e2c8756c1f	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-09-05 15:03:37.534406+00	
00000000-0000-0000-0000-000000000000	9ec98022-0177-4e03-a050-b8e969d387e9	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-05 15:08:10.291467+00	
00000000-0000-0000-0000-000000000000	b0651c09-9596-4945-92e0-ef6a296afc9e	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 17:31:16.590627+00	
00000000-0000-0000-0000-000000000000	e3e0e252-4962-4217-95dc-73a30ad53a83	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-05 17:31:16.616111+00	
00000000-0000-0000-0000-000000000000	7d1a3655-9452-4ba0-a9d4-e2da7cf99ae5	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-06 13:25:29.165723+00	
00000000-0000-0000-0000-000000000000	4870dfe1-a3f1-4994-97af-34f938e05c03	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-06 13:25:29.198403+00	
00000000-0000-0000-0000-000000000000	02bdeaf8-c3bf-4f24-93af-31ec41f1c6ab	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-06 14:34:39.327782+00	
00000000-0000-0000-0000-000000000000	4c87f3a8-5c16-4faf-8d78-4578a0238113	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-06 14:34:39.354366+00	
00000000-0000-0000-0000-000000000000	b4256d8e-1c70-4921-9ef1-939f4cd1640d	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-06 15:32:45.149323+00	
00000000-0000-0000-0000-000000000000	c0505ba0-b63f-4bb8-a7fd-2dcb869c55cb	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-06 15:32:45.159094+00	
00000000-0000-0000-0000-000000000000	12155c67-c915-4b06-a147-57afbcdaf430	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-07 13:57:26.081819+00	
00000000-0000-0000-0000-000000000000	5ff1cd32-6130-4dd8-bb0c-efdf778b4f74	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-07 13:57:26.110337+00	
00000000-0000-0000-0000-000000000000	5317657f-ef1a-4cac-829f-50e79bfef2bb	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-07 14:55:40.910949+00	
00000000-0000-0000-0000-000000000000	1fbe35b4-029c-42b0-a676-777e46edee0b	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-07 14:55:40.930938+00	
00000000-0000-0000-0000-000000000000	aec99a18-98bd-4b7b-8970-073c30dbeb2d	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 12:15:35.406475+00	
00000000-0000-0000-0000-000000000000	552a8dc9-9060-493f-ac58-9a223edacf88	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 12:15:35.435967+00	
00000000-0000-0000-0000-000000000000	c42b901d-87df-4961-a6b2-a788fa003b24	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 13:42:13.835034+00	
00000000-0000-0000-0000-000000000000	0beefcd0-cf67-45cc-aaa9-9d29e480534c	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 13:42:13.866237+00	
00000000-0000-0000-0000-000000000000	c176ef8a-892c-45b7-b813-f736daf7ca2f	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 14:19:46.543039+00	
00000000-0000-0000-0000-000000000000	cd87a6e4-00e4-467d-9a49-1411f8196b73	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 14:19:46.552841+00	
00000000-0000-0000-0000-000000000000	ac2efdd3-8e4a-466f-9d5c-bfd4c41a12df	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 15:18:26.70397+00	
00000000-0000-0000-0000-000000000000	81a63a46-6711-4d3d-a840-3eb7bfbc3110	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 15:18:26.717433+00	
00000000-0000-0000-0000-000000000000	b6dd071b-e0f4-4f80-9aec-781ed878c782	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 16:36:48.067175+00	
00000000-0000-0000-0000-000000000000	f2ef675c-c137-4f1c-912d-9857ed30de71	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 16:36:48.097952+00	
00000000-0000-0000-0000-000000000000	2ec78873-1d99-4bbe-9372-885c7a25a1dc	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 17:33:25.094515+00	
00000000-0000-0000-0000-000000000000	186063e1-e330-45ff-a127-7d44f6bd5cb8	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 17:33:25.108268+00	
00000000-0000-0000-0000-000000000000	fbfcb3e5-386a-43c2-9315-881dbc2799e6	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 20:04:30.285236+00	
00000000-0000-0000-0000-000000000000	c62cb029-9ef7-40eb-9509-6a7a944694a6	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-08 20:04:30.311571+00	
00000000-0000-0000-0000-000000000000	42a5cf8a-b4f1-4805-ac03-aec1ac6a3312	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-08 20:08:11.428523+00	
00000000-0000-0000-0000-000000000000	57b1572b-8fda-484f-aba7-ce29c9551fae	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-08 20:08:15.547251+00	
00000000-0000-0000-0000-000000000000	3fd6024f-ac79-483e-9d71-b15a262d6bb4	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 13:05:42.608674+00	
00000000-0000-0000-0000-000000000000	24c0f2bd-fc58-49b8-b179-f17abd1afa59	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 13:05:42.630086+00	
00000000-0000-0000-0000-000000000000	d11c88fa-9a4f-4393-849a-fb2061e31285	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 14:25:08.085129+00	
00000000-0000-0000-0000-000000000000	f5e6613f-b368-4314-8178-05c9d97200ab	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 14:25:08.098551+00	
00000000-0000-0000-0000-000000000000	d3a64642-ca34-41da-b849-7a168ca63178	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-09 14:28:32.443946+00	
00000000-0000-0000-0000-000000000000	eacbfcaf-6dc4-4806-912d-890fbec1a142	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-09 14:41:17.034265+00	
00000000-0000-0000-0000-000000000000	9af8394c-3e6c-4a67-b5f7-59cf5fa9fd7f	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-09 14:57:54.75987+00	
00000000-0000-0000-0000-000000000000	91deab6b-fb62-44d6-8fc9-646ee9009bc0	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 15:30:32.36981+00	
00000000-0000-0000-0000-000000000000	0de846b1-a2fe-4a3f-a39a-e21e4b70b8ae	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 15:30:32.383267+00	
00000000-0000-0000-0000-000000000000	d23ae7b5-6f90-4e3d-8c2e-0ee1cb1b0748	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 16:28:54.933044+00	
00000000-0000-0000-0000-000000000000	0e1de4ae-ced9-48e9-a4a7-dce16af4991c	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 16:28:54.949033+00	
00000000-0000-0000-0000-000000000000	5bd4caad-142d-4fdd-9390-fb59fc9abce1	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 17:27:11.002367+00	
00000000-0000-0000-0000-000000000000	29654ab4-1456-413b-afca-544b50ac8cd1	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 17:27:11.027645+00	
00000000-0000-0000-0000-000000000000	bf85ef53-1cef-433a-b306-75985eb0d041	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 20:27:03.362329+00	
00000000-0000-0000-0000-000000000000	a3e155d9-c990-48db-8e39-e7dbdcc9ede4	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-09 20:27:03.389906+00	
00000000-0000-0000-0000-000000000000	515c8fa6-3ddf-4456-83ed-1e0f5392f19c	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 12:18:04.370392+00	
00000000-0000-0000-0000-000000000000	45bc6320-07de-4e65-b39f-b97621ed3829	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 12:18:04.385457+00	
00000000-0000-0000-0000-000000000000	13a874d4-d317-4cb1-b0dc-aae38f3cba49	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 14:17:30.857487+00	
00000000-0000-0000-0000-000000000000	3be9620d-2f00-4ac3-ada8-ed8b9056448d	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 14:17:30.882647+00	
00000000-0000-0000-0000-000000000000	e8460668-fd90-491d-b687-bd27f39ea58d	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-10 14:30:44.418049+00	
00000000-0000-0000-0000-000000000000	0bce057b-b9ac-4fc8-9b0f-3b623606edc7	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 15:40:22.162597+00	
00000000-0000-0000-0000-000000000000	e4446e92-e126-47ee-bc33-2f8f6b096b05	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 15:40:22.194054+00	
00000000-0000-0000-0000-000000000000	73d724b7-2663-4888-a0d4-f034e5dfef61	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 16:56:43.081786+00	
00000000-0000-0000-0000-000000000000	b7a0ea2d-a3da-4fcf-967d-9c0ec192a6af	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 16:56:43.089015+00	
00000000-0000-0000-0000-000000000000	d1fdf7a2-c06c-48ab-8a3e-ea2f70d63637	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-10 17:32:40.669386+00	
00000000-0000-0000-0000-000000000000	6bffe9b7-dea4-4b27-befb-6c052d9c085c	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-10 17:32:46.925283+00	
00000000-0000-0000-0000-000000000000	9ed71c7e-0577-4573-82cb-024b0acabd6a	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 18:29:58.914681+00	
00000000-0000-0000-0000-000000000000	fbc4c5b3-1df2-4b67-a7da-caf86a17f62d	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 18:29:58.943885+00	
00000000-0000-0000-0000-000000000000	5c2b247d-e5b4-4faa-be15-2b9cd92131c4	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-10 18:57:47.230667+00	
00000000-0000-0000-0000-000000000000	2089bb07-6480-4c96-a1b1-1de7cd8fd199	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-10 18:57:52.896125+00	
00000000-0000-0000-0000-000000000000	e386a0e5-769f-4bfb-bd39-c8b95f8d8795	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 19:28:15.589207+00	
00000000-0000-0000-0000-000000000000	534f25c9-398a-4107-8c7d-4efa1f9bc08a	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-10 19:28:15.620718+00	
00000000-0000-0000-0000-000000000000	e0e2ab0d-b3d4-4823-80c9-339e0024b4a1	{"action":"user_modified","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-10 19:31:31.546824+00	
00000000-0000-0000-0000-000000000000	82514069-ef2f-47ea-a091-4286a1b90328	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-11 13:51:47.33234+00	
00000000-0000-0000-0000-000000000000	c5a11645-95be-43d8-8763-3ccd67f48819	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-11 13:51:47.35533+00	
00000000-0000-0000-0000-000000000000	e2eee994-94f5-43af-b770-0af8748c810a	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-11 15:04:26.482324+00	
00000000-0000-0000-0000-000000000000	68d36853-0467-48dc-9f2a-eb266b97b31e	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-11 15:04:26.500524+00	
00000000-0000-0000-0000-000000000000	23c8a31a-17aa-4ae8-80fa-10c872f667b9	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-11 16:04:16.136368+00	
00000000-0000-0000-0000-000000000000	6a115611-3c57-4a0c-a46e-2df1471c9d82	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-11 16:04:16.147342+00	
00000000-0000-0000-0000-000000000000	92fa0c17-7ee5-4dfe-87a6-05863851bea1	{"action":"user_recovery_requested","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"user"}	2025-09-11 19:42:52.687676+00	
00000000-0000-0000-0000-000000000000	f9a4be60-fb6c-4893-aaab-70507887e404	{"action":"login","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"account"}	2025-09-11 19:43:09.400119+00	
00000000-0000-0000-0000-000000000000	c6a87e12-6e16-4c9e-9d82-46adc83b4be9	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-12 12:28:42.266671+00	
00000000-0000-0000-0000-000000000000	591ef470-6c5c-4754-a0aa-4a9d83815d0f	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-12 12:28:42.276269+00	
00000000-0000-0000-0000-000000000000	48365655-f3f2-4cdf-9fa8-2d8c2a9cb35d	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-12 13:46:03.196104+00	
00000000-0000-0000-0000-000000000000	3bee1fef-9fd1-4f0b-b2d9-bfe529a26dfe	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-12 13:46:03.217873+00	
00000000-0000-0000-0000-000000000000	bc0d150c-c534-4f88-b1d1-a94fbd2f9649	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-12 15:55:48.211395+00	
00000000-0000-0000-0000-000000000000	179f7601-650f-4040-94ae-f680006d1ac1	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-12 15:55:48.228009+00	
00000000-0000-0000-0000-000000000000	93efbf96-6fdb-42c7-8a17-45684a12eb12	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-15 13:14:14.436071+00	
00000000-0000-0000-0000-000000000000	8dca4b02-30ea-4238-93ef-c3a74226d257	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-15 13:14:14.457596+00	
00000000-0000-0000-0000-000000000000	799d8c04-1ad8-429c-bfb6-83101cda8bcf	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-15 19:18:56.819687+00	
00000000-0000-0000-0000-000000000000	1bd01c12-1dca-4cf0-8d19-a4f78b2f3279	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-15 19:18:56.850309+00	
00000000-0000-0000-0000-000000000000	d6b36382-c38c-4f3d-baa4-aabb1cfcd5e7	{"action":"token_refreshed","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-19 12:10:30.275996+00	
00000000-0000-0000-0000-000000000000	dd65ee75-29a4-4e23-86c8-63fdbe45ebd7	{"action":"token_revoked","actor_id":"f0803a11-0fa1-45e1-b6c9-846651863467","actor_username":"brian@worklocal.ca","actor_via_sso":false,"log_type":"token"}	2025-09-19 12:10:30.284619+00	
\.


--
-- Data for Name: flow_state; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.flow_state (id, user_id, auth_code, code_challenge_method, code_challenge, provider_type, provider_access_token, provider_refresh_token, created_at, updated_at, authentication_method, auth_code_issued_at) FROM stdin;
\.


--
-- Data for Name: identities; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.identities (provider_id, user_id, identity_data, provider, last_sign_in_at, created_at, updated_at, id) FROM stdin;
f0803a11-0fa1-45e1-b6c9-846651863467	f0803a11-0fa1-45e1-b6c9-846651863467	{"sub": "f0803a11-0fa1-45e1-b6c9-846651863467", "email": "brian@worklocal.ca", "email_verified": true, "phone_verified": false}	email	2025-08-27 18:54:47.435417+00	2025-08-27 18:54:47.435466+00	2025-08-27 18:54:47.435466+00	fb0ad711-271e-4870-a2b5-66831be33808
b61bd1a9-ab87-4598-8064-e79e4883e60f	b61bd1a9-ab87-4598-8064-e79e4883e60f	{"sub": "b61bd1a9-ab87-4598-8064-e79e4883e60f", "email": "brian@pureconcepts.com", "email_verified": true, "phone_verified": false}	email	2025-09-04 13:47:50.399509+00	2025-09-04 13:47:50.399597+00	2025-09-04 13:47:50.399597+00	41bdd3f0-7b14-4158-b46e-c17ea1a821b4
0fbdf14f-0a52-4731-8638-25cad2efc7c2	0fbdf14f-0a52-4731-8638-25cad2efc7c2	{"sub": "0fbdf14f-0a52-4731-8638-25cad2efc7c2", "email": "tim@worklocal.ca", "email_verified": true, "phone_verified": false}	email	2025-09-04 13:59:45.430447+00	2025-09-04 13:59:45.430505+00	2025-09-04 13:59:45.430505+00	ceb533a8-662c-4bb5-9af9-c9bb63f2dca5
7f9a88f5-dd1d-492c-ab0b-bcab1f3baa70	7f9a88f5-dd1d-492c-ab0b-bcab1f3baa70	{"sub": "7f9a88f5-dd1d-492c-ab0b-bcab1f3baa70", "email": "james@worklocal.ca", "email_verified": true, "phone_verified": false}	email	2025-09-04 14:07:33.307642+00	2025-09-04 14:07:33.307705+00	2025-09-04 14:07:33.307705+00	b7b25f65-d3ad-4c5e-be94-c8a1e5e061db
\.


--
-- Data for Name: instances; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.instances (id, uuid, raw_base_config, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: mfa_amr_claims; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_amr_claims (session_id, created_at, updated_at, authentication_method, id) FROM stdin;
182b1a01-daeb-4760-a6ed-aaa73d0f16f5	2025-08-27 18:54:55.818259+00	2025-08-27 18:54:55.818259+00	otp	5c5ca425-a622-42ea-96e9-45957891fa68
8605309b-879f-4a6b-a117-67b0635137d6	2025-08-27 19:06:02.544251+00	2025-08-27 19:06:02.544251+00	otp	d7a3fe48-45ad-4808-88aa-12f690467afe
f728dbac-ce91-43dc-9e51-0b98dcac2aa4	2025-08-27 19:26:37.206092+00	2025-08-27 19:26:37.206092+00	otp	e7cda26b-a459-48e1-8dda-2dfbcc897d6a
0a2bb7e0-519c-431b-a21d-96ca67246f99	2025-08-27 19:31:42.680106+00	2025-08-27 19:31:42.680106+00	otp	9a550ca8-f701-4146-ac99-ed47a3653a37
0164d838-a81c-4007-8c6b-39a64d49bd5c	2025-08-28 17:39:26.765556+00	2025-08-28 17:39:26.765556+00	otp	a51cd3a8-dbc7-4aaf-a614-9571e0f81938
5451be13-05aa-4179-b31b-bafd97184621	2025-08-28 17:55:19.965845+00	2025-08-28 17:55:19.965845+00	otp	f4ef2e20-09af-41e1-a514-72698077e487
2b63a254-40ac-4318-b841-35bf61f1d3e6	2025-08-28 19:28:56.844773+00	2025-08-28 19:28:56.844773+00	otp	96f62d16-6ab6-4ecd-9b8f-e54646c6a303
ef11a9bc-b60c-4d1d-8c47-0454c20236e2	2025-08-28 19:51:37.469728+00	2025-08-28 19:51:37.469728+00	otp	88bdc867-4a70-4faa-ba82-6f7890addca9
d0925aa2-839d-45dd-b75b-d1220e831bbb	2025-08-29 18:47:57.8678+00	2025-08-29 18:47:57.8678+00	otp	5f50e0d3-aeba-431c-85a4-c7798aa246d4
a4db848f-8d32-498b-accc-41bcac696bbe	2025-09-03 17:27:28.95119+00	2025-09-03 17:27:28.95119+00	otp	6ec0a1d7-cd5d-4935-80aa-5d8972388459
a04f240f-c716-41a3-a328-17ed0121b19c	2025-09-03 17:52:06.501404+00	2025-09-03 17:52:06.501404+00	otp	c76db074-b98e-4380-97b5-e640a32f307b
b28ed8b1-eddc-4ba9-9f39-0c73b42e313a	2025-09-03 20:08:25.050045+00	2025-09-03 20:08:25.050045+00	otp	b4fd456d-9e41-4d16-ae76-9a49cf1667b5
e1096036-128f-4a90-84b0-d3e76242dd2b	2025-09-04 13:48:44.049743+00	2025-09-04 13:48:44.049743+00	otp	154559d0-2d2e-433b-93ee-75e4db10a8fc
b5b4b329-595e-4bcb-b21f-49a3a0d6aac2	2025-09-04 14:00:05.853844+00	2025-09-04 14:00:05.853844+00	otp	5a36d2ef-5536-4003-8f1f-a8f607337ea9
1323f068-92ef-4785-83f6-6f2d5aab2d61	2025-09-04 14:08:05.666061+00	2025-09-04 14:08:05.666061+00	otp	cf66add6-3591-4cf1-a7e7-af44ecc99447
1677f831-0a7b-4f12-bf2f-770fbce790e0	2025-09-05 15:03:37.552524+00	2025-09-05 15:03:37.552524+00	otp	ebe86c57-1b61-439e-84c7-3155c3ea4611
8471f1a6-6027-42c1-b892-01511bb8713e	2025-09-11 19:43:09.448783+00	2025-09-11 19:43:09.448783+00	otp	a01883d3-2cf1-41fd-9779-39e720fc457d
\.


--
-- Data for Name: mfa_challenges; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_challenges (id, factor_id, created_at, verified_at, ip_address, otp_code, web_authn_session_data) FROM stdin;
\.


--
-- Data for Name: mfa_factors; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_factors (id, user_id, friendly_name, factor_type, status, created_at, updated_at, secret, phone, last_challenged_at, web_authn_credential, web_authn_aaguid) FROM stdin;
\.


--
-- Data for Name: oauth_clients; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.oauth_clients (id, client_id, client_secret_hash, registration_type, redirect_uris, grant_types, client_name, client_uri, logo_uri, created_at, updated_at, deleted_at) FROM stdin;
\.


--
-- Data for Name: one_time_tokens; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.one_time_tokens (id, user_id, token_type, token_hash, relates_to, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: refresh_tokens; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.refresh_tokens (instance_id, id, token, user_id, revoked, created_at, updated_at, parent, session_id) FROM stdin;
00000000-0000-0000-0000-000000000000	1	op6vdwizg2r7	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-08-27 18:54:55.809303+00	2025-08-27 18:54:55.809303+00	\N	182b1a01-daeb-4760-a6ed-aaa73d0f16f5
00000000-0000-0000-0000-000000000000	2	dbzlub2trlab	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-08-27 19:06:02.539201+00	2025-08-27 19:06:02.539201+00	\N	8605309b-879f-4a6b-a117-67b0635137d6
00000000-0000-0000-0000-000000000000	3	bgndw5ir7xp5	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-08-27 19:26:37.197405+00	2025-08-27 19:26:37.197405+00	\N	f728dbac-ce91-43dc-9e51-0b98dcac2aa4
00000000-0000-0000-0000-000000000000	4	cj4h4vj4ut73	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-08-27 19:31:42.672081+00	2025-08-27 19:31:42.672081+00	\N	0a2bb7e0-519c-431b-a21d-96ca67246f99
00000000-0000-0000-0000-000000000000	5	yw64utagxupf	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-08-28 17:39:26.74677+00	2025-08-28 17:39:26.74677+00	\N	0164d838-a81c-4007-8c6b-39a64d49bd5c
00000000-0000-0000-0000-000000000000	6	4xcbmoc6jjpm	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-08-28 17:55:19.948548+00	2025-08-28 17:55:19.948548+00	\N	5451be13-05aa-4179-b31b-bafd97184621
00000000-0000-0000-0000-000000000000	7	bqjphb2pp4eg	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-08-28 19:28:56.826625+00	2025-08-28 19:28:56.826625+00	\N	2b63a254-40ac-4318-b841-35bf61f1d3e6
00000000-0000-0000-0000-000000000000	8	u2bsgaakwnjv	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-08-28 19:51:37.455542+00	2025-08-28 20:50:10.838536+00	\N	ef11a9bc-b60c-4d1d-8c47-0454c20236e2
00000000-0000-0000-0000-000000000000	9	fuzphax357li	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-08-28 20:50:10.847124+00	2025-08-29 01:14:53.678281+00	u2bsgaakwnjv	ef11a9bc-b60c-4d1d-8c47-0454c20236e2
00000000-0000-0000-0000-000000000000	10	k6llklterofa	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-08-29 01:14:53.698356+00	2025-08-29 12:57:07.403577+00	fuzphax357li	ef11a9bc-b60c-4d1d-8c47-0454c20236e2
00000000-0000-0000-0000-000000000000	11	7pcg2tanzccc	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-08-29 12:57:07.429081+00	2025-08-29 13:55:14.268601+00	k6llklterofa	ef11a9bc-b60c-4d1d-8c47-0454c20236e2
00000000-0000-0000-0000-000000000000	12	5i3n2mnuoi2w	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-08-29 13:55:14.283299+00	2025-08-29 15:03:38.405514+00	7pcg2tanzccc	ef11a9bc-b60c-4d1d-8c47-0454c20236e2
00000000-0000-0000-0000-000000000000	13	ei6l2u4dbdug	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-08-29 15:03:38.416122+00	2025-08-29 16:02:03.777237+00	5i3n2mnuoi2w	ef11a9bc-b60c-4d1d-8c47-0454c20236e2
00000000-0000-0000-0000-000000000000	14	xr6ki3rdrofx	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-08-29 16:02:03.788612+00	2025-08-29 17:00:12.308578+00	ei6l2u4dbdug	ef11a9bc-b60c-4d1d-8c47-0454c20236e2
00000000-0000-0000-0000-000000000000	15	prbs2ej5p7yd	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-08-29 17:00:12.32492+00	2025-08-29 17:58:45.650394+00	xr6ki3rdrofx	ef11a9bc-b60c-4d1d-8c47-0454c20236e2
00000000-0000-0000-0000-000000000000	16	qn56g67rf2pa	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-08-29 17:58:45.654873+00	2025-08-29 17:58:45.654873+00	prbs2ej5p7yd	ef11a9bc-b60c-4d1d-8c47-0454c20236e2
00000000-0000-0000-0000-000000000000	17	drxsajrzgflq	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-08-29 18:47:57.8562+00	2025-08-29 18:47:57.8562+00	\N	d0925aa2-839d-45dd-b75b-d1220e831bbb
00000000-0000-0000-0000-000000000000	18	bsp5jaaeyisi	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-09-03 17:27:28.933745+00	2025-09-03 17:27:28.933745+00	\N	a4db848f-8d32-498b-accc-41bcac696bbe
00000000-0000-0000-0000-000000000000	19	u6ghw7nbraxp	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-03 17:52:06.482867+00	2025-09-03 19:53:42.87053+00	\N	a04f240f-c716-41a3-a328-17ed0121b19c
00000000-0000-0000-0000-000000000000	21	bcnanct3aowx	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-03 20:08:25.032587+00	2025-09-04 12:20:18.261821+00	\N	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	20	4hipjv3quelu	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-03 19:53:42.88432+00	2025-09-04 12:21:17.22573+00	u6ghw7nbraxp	a04f240f-c716-41a3-a328-17ed0121b19c
00000000-0000-0000-0000-000000000000	23	oj2unn6pzkpy	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-09-04 12:21:17.227608+00	2025-09-04 12:21:17.227608+00	4hipjv3quelu	a04f240f-c716-41a3-a328-17ed0121b19c
00000000-0000-0000-0000-000000000000	25	hxoi4mzevr6z	0fbdf14f-0a52-4731-8638-25cad2efc7c2	f	2025-09-04 14:00:05.848835+00	2025-09-04 14:00:05.848835+00	\N	b5b4b329-595e-4bcb-b21f-49a3a0d6aac2
00000000-0000-0000-0000-000000000000	26	i2kfs7x33cyg	7f9a88f5-dd1d-492c-ab0b-bcab1f3baa70	f	2025-09-04 14:08:05.656323+00	2025-09-04 14:08:05.656323+00	\N	1323f068-92ef-4785-83f6-6f2d5aab2d61
00000000-0000-0000-0000-000000000000	22	lppramwenuyt	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-04 12:20:18.284579+00	2025-09-04 14:51:33.171958+00	bcnanct3aowx	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	27	c22fl67hza5w	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-04 14:51:33.186435+00	2025-09-04 16:37:21.427708+00	lppramwenuyt	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	24	dugnclvei4rl	b61bd1a9-ab87-4598-8064-e79e4883e60f	t	2025-09-04 13:48:44.034805+00	2025-09-04 17:16:22.268678+00	\N	e1096036-128f-4a90-84b0-d3e76242dd2b
00000000-0000-0000-0000-000000000000	28	ftzxziuif7qp	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-04 16:37:21.443417+00	2025-09-04 19:15:16.141809+00	c22fl67hza5w	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	29	eutae7oafiun	b61bd1a9-ab87-4598-8064-e79e4883e60f	t	2025-09-04 17:16:22.278331+00	2025-09-04 19:44:07.116929+00	dugnclvei4rl	e1096036-128f-4a90-84b0-d3e76242dd2b
00000000-0000-0000-0000-000000000000	30	clts76ku5ji7	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-04 19:15:16.163565+00	2025-09-04 20:13:24.821808+00	ftzxziuif7qp	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	32	einlekmmsj2f	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-04 20:13:24.830716+00	2025-09-04 21:40:48.309925+00	clts76ku5ji7	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	33	h54gmtxqqhvn	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-04 21:40:48.334707+00	2025-09-04 22:57:48.465256+00	einlekmmsj2f	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	34	zygpud2oqche	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-04 22:57:48.494413+00	2025-09-05 00:43:42.956315+00	h54gmtxqqhvn	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	35	lrmtls4zqq6x	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 00:43:42.96931+00	2025-09-05 02:00:41.215303+00	zygpud2oqche	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	36	6segtutu6ka6	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 02:00:41.223692+00	2025-09-05 03:00:42.485579+00	lrmtls4zqq6x	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	37	gvkdynxlqn5t	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 03:00:42.497834+00	2025-09-05 04:30:00.619165+00	6segtutu6ka6	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	38	xtmvqqp3vb2x	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 04:30:00.639151+00	2025-09-05 06:41:41.520087+00	gvkdynxlqn5t	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	39	st5yzxhxo6gu	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 06:41:41.530468+00	2025-09-05 09:13:41.796938+00	xtmvqqp3vb2x	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	40	z3v24cbmm2a6	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 09:13:41.825771+00	2025-09-05 10:43:40.528712+00	st5yzxhxo6gu	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	41	unettxtdbk4d	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 10:43:40.545725+00	2025-09-05 12:00:56.236408+00	z3v24cbmm2a6	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	42	u43zbf6iwgsn	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 12:00:56.259383+00	2025-09-05 12:59:39.095682+00	unettxtdbk4d	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	43	dcas556akrnb	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 12:59:39.112202+00	2025-09-05 13:58:39.344658+00	u43zbf6iwgsn	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	31	kv757oi3c4yr	b61bd1a9-ab87-4598-8064-e79e4883e60f	t	2025-09-04 19:44:07.139907+00	2025-09-05 14:20:54.572815+00	eutae7oafiun	e1096036-128f-4a90-84b0-d3e76242dd2b
00000000-0000-0000-0000-000000000000	45	vmozrh3jbpaz	b61bd1a9-ab87-4598-8064-e79e4883e60f	f	2025-09-05 14:20:54.583356+00	2025-09-05 14:20:54.583356+00	kv757oi3c4yr	e1096036-128f-4a90-84b0-d3e76242dd2b
00000000-0000-0000-0000-000000000000	44	jf6qiatydybf	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 13:58:39.372919+00	2025-09-05 14:57:39.436776+00	dcas556akrnb	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	46	5ogvzvizgq2a	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 14:57:39.461059+00	2025-09-05 17:31:16.61697+00	jf6qiatydybf	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	48	j7wvruovyxkf	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 17:31:16.636928+00	2025-09-06 13:25:29.200423+00	5ogvzvizgq2a	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	49	k4wh3bznfioi	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-06 13:25:29.23112+00	2025-09-06 14:34:39.357079+00	j7wvruovyxkf	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	50	gq5k3sayrjsb	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-06 14:34:39.372352+00	2025-09-06 15:32:45.161072+00	k4wh3bznfioi	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	51	c74wapptr2j7	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-06 15:32:45.174029+00	2025-09-07 13:57:26.112204+00	gq5k3sayrjsb	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	47	mmmr3ag5hwin	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-05 15:03:37.545594+00	2025-09-08 13:42:13.867049+00	\N	1677f831-0a7b-4f12-bf2f-770fbce790e0
00000000-0000-0000-0000-000000000000	80	6shr7ydsuqd5	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-15 13:14:14.471075+00	2025-09-15 19:18:56.853235+00	owozczlc2ebj	8471f1a6-6027-42c1-b892-01511bb8713e
00000000-0000-0000-0000-000000000000	52	ejtxy2tgz2rv	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-07 13:57:26.136863+00	2025-09-07 14:55:40.933431+00	c74wapptr2j7	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	81	4h2r3oyfzbjt	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-15 19:18:56.883268+00	2025-09-19 12:10:30.28632+00	6shr7ydsuqd5	8471f1a6-6027-42c1-b892-01511bb8713e
00000000-0000-0000-0000-000000000000	53	ofmecj32xobd	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-07 14:55:40.956412+00	2025-09-08 12:15:35.437303+00	ejtxy2tgz2rv	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	82	pycnadnskznc	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-09-19 12:10:30.297399+00	2025-09-19 12:10:30.297399+00	4h2r3oyfzbjt	8471f1a6-6027-42c1-b892-01511bb8713e
00000000-0000-0000-0000-000000000000	54	5ysmpwl226eo	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-08 12:15:35.465651+00	2025-09-08 14:19:46.555383+00	ofmecj32xobd	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	56	oymx2vwaalja	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-08 14:19:46.56512+00	2025-09-08 15:18:26.718125+00	5ysmpwl226eo	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	57	4evzfi2i4x3j	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-08 15:18:26.740726+00	2025-09-08 16:36:48.099354+00	oymx2vwaalja	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	55	pltqqitku3gc	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-08 13:42:13.894298+00	2025-09-08 17:33:25.111068+00	mmmr3ag5hwin	1677f831-0a7b-4f12-bf2f-770fbce790e0
00000000-0000-0000-0000-000000000000	58	kn4wj2jy2xng	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-08 16:36:48.125719+00	2025-09-08 20:04:30.313041+00	4evzfi2i4x3j	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	59	fs27nem6p7qr	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-08 17:33:25.124077+00	2025-09-09 13:05:42.630898+00	pltqqitku3gc	1677f831-0a7b-4f12-bf2f-770fbce790e0
00000000-0000-0000-0000-000000000000	61	llxssmjeomor	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-09-09 13:05:42.647097+00	2025-09-09 13:05:42.647097+00	fs27nem6p7qr	1677f831-0a7b-4f12-bf2f-770fbce790e0
00000000-0000-0000-0000-000000000000	60	spemlqzih2ev	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-08 20:04:30.330119+00	2025-09-09 14:25:08.099466+00	kn4wj2jy2xng	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	62	r2l3w2qa7oaa	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-09 14:25:08.113721+00	2025-09-09 15:30:32.384052+00	spemlqzih2ev	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	63	xbdcwyyr2jsf	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-09 15:30:32.400216+00	2025-09-09 16:28:54.949737+00	r2l3w2qa7oaa	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	64	e47b25w7bkav	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-09 16:28:54.965238+00	2025-09-09 17:27:11.02902+00	xbdcwyyr2jsf	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	65	adv7zchvz5xv	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-09 17:27:11.047209+00	2025-09-09 20:27:03.392245+00	e47b25w7bkav	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	66	zh3vch6fsske	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-09 20:27:03.418139+00	2025-09-10 12:18:04.387381+00	adv7zchvz5xv	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	67	7mk6jz6cazrg	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-10 12:18:04.399822+00	2025-09-10 14:17:30.884941+00	zh3vch6fsske	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	68	z3hx63bydfco	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-10 14:17:30.905454+00	2025-09-10 15:40:22.195192+00	7mk6jz6cazrg	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	69	vk4d7msgfy27	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-10 15:40:22.212231+00	2025-09-10 16:56:43.09032+00	z3hx63bydfco	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	70	byruqsx3jvtd	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-10 16:56:43.096602+00	2025-09-10 18:29:58.947061+00	vk4d7msgfy27	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	71	an4x6x67rrrx	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-10 18:29:58.970527+00	2025-09-10 19:28:15.621566+00	byruqsx3jvtd	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	72	2ytihdiw4ly2	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-10 19:28:15.644035+00	2025-09-11 13:51:47.362654+00	an4x6x67rrrx	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	73	xm7pk7e6cpae	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-11 13:51:47.390204+00	2025-09-11 15:04:26.501433+00	2ytihdiw4ly2	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	74	jme3juphr4k4	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-11 15:04:26.518614+00	2025-09-11 16:04:16.148503+00	xm7pk7e6cpae	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	75	gj2zxb4cxlbp	f0803a11-0fa1-45e1-b6c9-846651863467	f	2025-09-11 16:04:16.156008+00	2025-09-11 16:04:16.156008+00	jme3juphr4k4	b28ed8b1-eddc-4ba9-9f39-0c73b42e313a
00000000-0000-0000-0000-000000000000	76	c546vvgo7h7g	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-11 19:43:09.419113+00	2025-09-12 12:28:42.277077+00	\N	8471f1a6-6027-42c1-b892-01511bb8713e
00000000-0000-0000-0000-000000000000	77	yjkdldyk3hkp	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-12 12:28:42.286871+00	2025-09-12 13:46:03.218705+00	c546vvgo7h7g	8471f1a6-6027-42c1-b892-01511bb8713e
00000000-0000-0000-0000-000000000000	78	unjoldolo3ze	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-12 13:46:03.233696+00	2025-09-12 15:55:48.229573+00	yjkdldyk3hkp	8471f1a6-6027-42c1-b892-01511bb8713e
00000000-0000-0000-0000-000000000000	79	owozczlc2ebj	f0803a11-0fa1-45e1-b6c9-846651863467	t	2025-09-12 15:55:48.242602+00	2025-09-15 13:14:14.458421+00	unjoldolo3ze	8471f1a6-6027-42c1-b892-01511bb8713e
\.


--
-- Data for Name: saml_providers; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.saml_providers (id, sso_provider_id, entity_id, metadata_xml, metadata_url, attribute_mapping, created_at, updated_at, name_id_format) FROM stdin;
\.


--
-- Data for Name: saml_relay_states; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.saml_relay_states (id, sso_provider_id, request_id, for_email, redirect_to, created_at, updated_at, flow_state_id) FROM stdin;
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.schema_migrations (version) FROM stdin;
20171026211738
20171026211808
20171026211834
20180103212743
20180108183307
20180119214651
20180125194653
00
20210710035447
20210722035447
20210730183235
20210909172000
20210927181326
20211122151130
20211124214934
20211202183645
20220114185221
20220114185340
20220224000811
20220323170000
20220429102000
20220531120530
20220614074223
20220811173540
20221003041349
20221003041400
20221011041400
20221020193600
20221021073300
20221021082433
20221027105023
20221114143122
20221114143410
20221125140132
20221208132122
20221215195500
20221215195800
20221215195900
20230116124310
20230116124412
20230131181311
20230322519590
20230402418590
20230411005111
20230508135423
20230523124323
20230818113222
20230914180801
20231027141322
20231114161723
20231117164230
20240115144230
20240214120130
20240306115329
20240314092811
20240427152123
20240612123726
20240729123726
20240802193726
20240806073726
20241009103726
20250717082212
20250731150234
\.


--
-- Data for Name: sessions; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sessions (id, user_id, created_at, updated_at, factor_id, aal, not_after, refreshed_at, user_agent, ip, tag) FROM stdin;
182b1a01-daeb-4760-a6ed-aaa73d0f16f5	f0803a11-0fa1-45e1-b6c9-846651863467	2025-08-27 18:54:55.803913+00	2025-08-27 18:54:55.803913+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
8605309b-879f-4a6b-a117-67b0635137d6	f0803a11-0fa1-45e1-b6c9-846651863467	2025-08-27 19:06:02.531513+00	2025-08-27 19:06:02.531513+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
f728dbac-ce91-43dc-9e51-0b98dcac2aa4	f0803a11-0fa1-45e1-b6c9-846651863467	2025-08-27 19:26:37.191299+00	2025-08-27 19:26:37.191299+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
0a2bb7e0-519c-431b-a21d-96ca67246f99	f0803a11-0fa1-45e1-b6c9-846651863467	2025-08-27 19:31:42.670401+00	2025-08-27 19:31:42.670401+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
0164d838-a81c-4007-8c6b-39a64d49bd5c	f0803a11-0fa1-45e1-b6c9-846651863467	2025-08-28 17:39:26.734565+00	2025-08-28 17:39:26.734565+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
5451be13-05aa-4179-b31b-bafd97184621	f0803a11-0fa1-45e1-b6c9-846651863467	2025-08-28 17:55:19.936578+00	2025-08-28 17:55:19.936578+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
2b63a254-40ac-4318-b841-35bf61f1d3e6	f0803a11-0fa1-45e1-b6c9-846651863467	2025-08-28 19:28:56.818209+00	2025-08-28 19:28:56.818209+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
ef11a9bc-b60c-4d1d-8c47-0454c20236e2	f0803a11-0fa1-45e1-b6c9-846651863467	2025-08-28 19:51:37.449683+00	2025-08-29 17:58:45.671341+00	\N	aal1	\N	2025-08-29 17:58:45.67126	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
d0925aa2-839d-45dd-b75b-d1220e831bbb	f0803a11-0fa1-45e1-b6c9-846651863467	2025-08-29 18:47:57.844445+00	2025-08-29 18:47:57.844445+00	\N	aal1	\N	\N	got (https://github.com/sindresorhus/got)	3.235.50.140	\N
a4db848f-8d32-498b-accc-41bcac696bbe	f0803a11-0fa1-45e1-b6c9-846651863467	2025-09-03 17:27:28.92417+00	2025-09-03 17:27:28.92417+00	\N	aal1	\N	\N	got (https://github.com/sindresorhus/got)	13.222.141.12	\N
b28ed8b1-eddc-4ba9-9f39-0c73b42e313a	f0803a11-0fa1-45e1-b6c9-846651863467	2025-09-03 20:08:25.02775+00	2025-09-11 16:04:16.169439+00	\N	aal1	\N	2025-09-11 16:04:16.168219	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.150.221.219	\N
a04f240f-c716-41a3-a328-17ed0121b19c	f0803a11-0fa1-45e1-b6c9-846651863467	2025-09-03 17:52:06.47111+00	2025-09-04 12:21:17.235329+00	\N	aal1	\N	2025-09-04 12:21:17.235252	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
b5b4b329-595e-4bcb-b21f-49a3a0d6aac2	0fbdf14f-0a52-4731-8638-25cad2efc7c2	2025-09-04 14:00:05.845519+00	2025-09-04 14:00:05.845519+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
1323f068-92ef-4785-83f6-6f2d5aab2d61	7f9a88f5-dd1d-492c-ab0b-bcab1f3baa70	2025-09-04 14:08:05.651642+00	2025-09-04 14:08:05.651642+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.150.221.219	\N
1677f831-0a7b-4f12-bf2f-770fbce790e0	f0803a11-0fa1-45e1-b6c9-846651863467	2025-09-05 15:03:37.539637+00	2025-09-09 13:05:42.660444+00	\N	aal1	\N	2025-09-09 13:05:42.660345	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
e1096036-128f-4a90-84b0-d3e76242dd2b	b61bd1a9-ab87-4598-8064-e79e4883e60f	2025-09-04 13:48:44.028902+00	2025-09-05 14:20:54.592475+00	\N	aal1	\N	2025-09-05 14:20:54.5924	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	24.150.221.219	\N
8471f1a6-6027-42c1-b892-01511bb8713e	f0803a11-0fa1-45e1-b6c9-846651863467	2025-09-11 19:43:09.406929+00	2025-09-19 12:10:30.317075+00	\N	aal1	\N	2025-09-19 12:10:30.315213	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	24.150.221.219	\N
\.


--
-- Data for Name: sso_domains; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sso_domains (id, sso_provider_id, domain, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: sso_providers; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sso_providers (id, resource_id, created_at, updated_at, disabled) FROM stdin;
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.users (instance_id, id, aud, role, email, encrypted_password, email_confirmed_at, invited_at, confirmation_token, confirmation_sent_at, recovery_token, recovery_sent_at, email_change_token_new, email_change, email_change_sent_at, last_sign_in_at, raw_app_meta_data, raw_user_meta_data, is_super_admin, created_at, updated_at, phone, phone_confirmed_at, phone_change, phone_change_token, phone_change_sent_at, email_change_token_current, email_change_confirm_status, banned_until, reauthentication_token, reauthentication_sent_at, is_sso_user, deleted_at, is_anonymous) FROM stdin;
00000000-0000-0000-0000-000000000000	7f9a88f5-dd1d-492c-ab0b-bcab1f3baa70	authenticated	authenticated	james@worklocal.ca	$2a$10$aEHSbbTcoDVug6JUiuXvDezfdO9Wt16yaYL28GBlXxvQMzT4FsMiS	2025-09-04 14:08:05.646458+00	\N		2025-09-04 14:07:33.317964+00		\N			\N	2025-09-04 14:08:05.651564+00	{"provider": "email", "providers": ["email"]}	{"sub": "7f9a88f5-dd1d-492c-ab0b-bcab1f3baa70", "email": "james@worklocal.ca", "email_verified": true, "phone_verified": false, "last_restaurant_id": "b27edbce-2a89-4f25-b23a-1f336f59db80"}	\N	2025-09-04 14:07:33.290914+00	2025-09-04 14:08:06.616292+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	0fbdf14f-0a52-4731-8638-25cad2efc7c2	authenticated	authenticated	tim@worklocal.ca	$2a$10$JdVVjk.mxcrDBCxcmUM.c.3Sn0s0KrgOug8URr8kWCApTRCmL0/6S	2025-09-04 14:00:05.84101+00	\N		2025-09-04 13:59:45.441318+00		\N			\N	2025-09-04 14:00:05.845434+00	{"provider": "email", "providers": ["email"]}	{"sub": "0fbdf14f-0a52-4731-8638-25cad2efc7c2", "email": "tim@worklocal.ca", "email_verified": true, "phone_verified": false, "last_restaurant_id": "34ccadf6-656b-4a08-a2eb-3f29e098b06b"}	\N	2025-09-04 13:59:45.417144+00	2025-09-04 14:00:06.650791+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	f0803a11-0fa1-45e1-b6c9-846651863467	authenticated	authenticated	brian@worklocal.ca	$2a$10$P8Ct4EJWcVrF5lIvLLpYgu6dXy3ePeQgtfAGQcqNwVjCqqAmvc9b6	2025-08-27 18:54:55.800298+00	\N		2025-08-27 18:54:47.442318+00		2025-09-11 19:42:52.716436+00			\N	2025-09-11 19:43:09.406837+00	{"provider": "email", "providers": ["email"]}	{"sub": "f0803a11-0fa1-45e1-b6c9-846651863467", "email": "brian@worklocal.ca", "email_verified": true, "phone_verified": false, "last_restaurant_id": "6361333b-5365-474f-833b-ab8fde1be5a6"}	\N	2025-08-27 18:54:47.432833+00	2025-09-19 12:10:30.307302+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	b61bd1a9-ab87-4598-8064-e79e4883e60f	authenticated	authenticated	brian@pureconcepts.com	$2a$10$hoP8ukNg9/piT0/R56mYneLW6quuqQLrhvk6IJw4no1m3rj4HO45u	2025-09-04 13:48:44.022449+00	\N		2025-09-04 13:47:50.424907+00		\N			\N	2025-09-04 13:48:44.02882+00	{"provider": "email", "providers": ["email"]}	{"sub": "b61bd1a9-ab87-4598-8064-e79e4883e60f", "email": "brian@pureconcepts.com", "email_verified": true, "phone_verified": false, "last_restaurant_id": "c0dc6672-ca79-43a2-b533-4278c209e3e6"}	\N	2025-09-04 13:47:50.364553+00	2025-09-05 14:20:55.054131+00	\N	\N			\N		0	\N		\N	f	\N	f
\.


--
-- Data for Name: cities; Type: TABLE DATA; Schema: menuca_v3; Owner: postgres
--

COPY menuca_v3.cities (id, name, display_name, province_id, lat, lng, timezone) FROM stdin;
2	Downtown Ottawa	\N	1	45.4115720000	-75.6981940000	America/Toronto
3	Salaberry-de-Valleyfield	\N	2	45.2500909000	-74.1330862000	America/Montreal
4	Kitchener	\N	1	43.4343110000	-80.4777469000	America/Toronto
5	Toronto	\N	1	43.6535240000	-79.3839069000	America/Toronto
6	LaSalle	\N	2	45.4288669000	-73.6312520000	America/Montreal
7	Vanier	\N	1	46.8250320000	-71.2664820000	America/Toronto
8	Nepean	\N	1	45.3349046000	-75.7241006000	America/Toronto
9	Kingston	\N	1	44.2311717000	-76.4859544000	America/Toronto
10	Saint Lazare	\N	2	45.3998130000	-74.1377650000	America/Montreal
11	Hunt Club Woods - Quinterra - Revelstoke - Riversi	\N	1	45.3475714000	-75.6923711000	\N
12	Smiths Falls	\N	1	44.9001000000	-76.0210000000	America/Toronto
13	Greely	\N	1	45.2592867000	-75.5686438000	America/Toronto
14	La Prairie	\N	2	45.4168890000	-73.4884870000	America/Montreal
15	Greenfield Park	\N	2	45.4857070000	-73.4620880000	America/Montreal
16	Vaughan	\N	1	43.8372079000	-79.5082760000	America/Toronto
17	Manotick	\N	1	45.2264220000	-75.6863550000	America/Toronto
18	Blossom Park - Blossom Park West - Sawmill Creek/ 	\N	\N	45.3507346000	-75.6233913000	\N
19	Cobden	\N	1	45.6273519000	-76.8823605000	America/Toronto
20	Alexandria	\N	1	45.3111798000	-74.6367158000	America/Toronto
21	Saint-Constant	\N	2	45.3791810000	-73.5644913000	America/Montreal
22	Pierrefonds	\N	2	45.4848710000	-73.8531090000	America/Montreal
23	Peterborough	\N	1	44.3090580000	-78.3197470000	America/Toronto
24	District des Riverains	\N	2	45.4641413000	-75.7035561000	\N
25	Osgoode	\N	1	45.1482547000	-75.6017780000	America/Toronto
26	Burlington	\N	1	43.3255196000	-79.7990319000	America/Toronto
27	Metcalfe	\N	1	45.2203397000	-75.4659944000	America/Toronto
28	Montreal	\N	2	45.5086699000	-73.5539925000	America/Montreal
29	Renfrew	\N	1	45.4749199000	-76.6877186000	America/Toronto
30	North Bay	\N	1	46.3091152000	-79.4608204000	America/Toronto
31	Saint-Hyacinthe	\N	2	45.6306875000	-72.9563391000	America/Montreal
32	Gatineau	\N	2	45.4765446000	-75.7012723000	America/Montreal
33	Lachine	\N	2	45.4448540000	-73.6849200000	America/Montreal
34	Vancouver	\N	6	49.2612260000	-123.1139268000	America/Vancouver
35	Etobicoke	\N	1	43.6204946000	-79.5131983000	America/Toronto
36	Cobourg	\N	1	43.9593373000	-78.1677363000	America/Toronto
37	Val-des-Monts	\N	2	45.6919640000	-75.6806430000	America/Montreal
38	Barrie	\N	1	44.3893556000	-79.6903316000	America/Toronto
39	LÃ©vis	\N	2	46.7382265000	-71.2464592000	America/Montreal
40	Richmond	\N	6	49.1665898000	-123.1335690000	America/Vancouver
41	Alfred	\N	1	45.5586094000	-74.8803744000	America/Toronto
42	Stittsville	\N	1	45.2585131000	-75.9207767000	America/Toronto
43	District du Versant	\N	2	45.4921297000	-75.6890730000	\N
44	Aylmer	\N	2	42.7729381000	-80.9828842000	America/Montreal
45	District de DeschÃªnes	\N	2	45.4001754000	-75.8063301000	\N
46	Saint-Luc	\N	2	45.3449610000	-73.3098540000	America/Montreal
47	Bourget	\N	1	45.4349429000	-75.1580340000	America/Toronto
48	Laval	\N	2	45.6066487000	-73.7124090000	America/Montreal
49	Charny	\N	2	46.7146359000	-71.2604518000	America/Montreal
50	Kemptville	\N	1	45.0163884000	-75.6459470000	America/Toronto
51	Beachburg	\N	1	45.7357254000	-76.8631085000	America/Toronto
52	Calgary	\N	9	51.0453246000	-114.0581012000	America/Edmonton
53	Sudbury	\N	1	46.5513927000	-81.0354982000	America/Toronto
54	Saint Philippe	\N	2	45.3569439000	-73.4767279000	America/Montreal
55	Winchester	\N	1	45.0918057000	-75.3527847000	America/Toronto
56	Longueuil	\N	2	45.5369442000	-73.5107131000	America/Montreal
57	Sainte-Julie	\N	2	45.5924997000	-73.3426988000	America/Montreal
58	Whitehorse	\N	11	60.7211871000	-135.0568449000	America/Whitehorse
59	Arnprior	\N	1	45.4347445000	-76.3518469000	America/Toronto
60	Cantley	\N	2	45.5661759000	-75.7824590000	America/Montreal
61	Boucherville	\N	2	45.5913698000	-73.4364097000	America/Montreal
62	Cornwall	\N	1	45.0212762000	-74.7303450000	America/Toronto
63	London	\N	1	42.9793980000	-81.2461380000	America/Toronto
64	Saint-Hubert	\N	2	45.4983322000	-73.4065074000	America/Montreal
65	Ottawa	\N	1	45.4115720000	-75.6981940000	America/Toronto
66	Scarborough	\N	1	43.7764258000	-79.2317521000	America/Toronto
67	Boisbriand	\N	2	45.6126338000	-73.8383733000	America/Montreal
68	Buckingham	\N	2	45.5864086000	-75.4168654000	America/Montreal
69	Almonte	\N	1	45.2255655000	-76.1940598000	America/Toronto
70	Beloeil	\N	2	45.5679246000	-73.2039469000	America/Montreal
71	North York	\N	1	43.7615377000	-79.4110794000	America/Toronto
72	Casselman	\N	1	45.3107048000	-75.0893653000	America/Toronto
73	Kanata	\N	1	45.3016650000	-75.9073410000	America/Toronto
74	Oshawa	\N	1	43.8970929000	-78.8657912000	America/Toronto
75	Vaudreuil-Dorion	\N	2	45.4042360000	-74.0379599000	America/Montreal
76	Saint-Jean-sur-Richelieu	\N	2	45.3057710000	-73.2544903000	America/Montreal
77	Moncton	\N	4	46.0878165000	-64.7782313000	America/Moncton
78	Mont-Saint-Hilaire	\N	2	45.5620000000	-73.1890000000	America/Montreal
79	Brockville	\N	1	44.5895244000	-75.6842858000	America/Toronto
80	Carleton Place	\N	1	45.1373000000	-76.1399000000	America/Toronto
81	Les Coteaux	\N	2	45.2593027000	-74.2067290000	America/Montreal
82	Guelph	\N	1	43.5448048000	-80.2481666000	America/Toronto
83	Inuvik	\N	12	68.3607437000	-133.7230177000	America/Inuvik
84	Dorval	\N	2	45.4500000000	-73.7500000000	America/Montreal
85	Ville de QuÃ©bec	\N	2	46.8138780000	-71.2079810000	America/Montreal
86	Trillium Industrial Park	\N	1	43.4126530000	-80.4498304000	\N
87	Port Hope	\N	1	43.9491640000	-78.2934616000	America/Toronto
88	Terrebonne	\N	2	45.6929818000	-73.6331102000	America/Montreal
89	Mississauga	\N	1	43.5890452000	-79.6441198000	America/Toronto
90	ChÃ¢teauguay	\N	2	45.3601589000	-73.7494033000	America/Montreal
91	Magog	\N	2	45.2664863000	-72.1479889000	America/Montreal
92	Lakefield	\N	1	44.4227814000	-78.2721967000	America/Toronto
93	Carlsbad Springs	\N	1	45.3690740000	-75.4560970000	America/Toronto
94	Morrisburg	\N	1	44.8978757516	-75.1840992031	America/Toronto
95	Orleans	\N	1	45.4662080000	-75.5424929000	America/Toronto
96	Edmonton	\N	9	53.5443890000	-113.4909267000	America/Edmonton
97	Brossard	\N	2	45.4547060000	-73.4706610000	America/Montreal
98	Gloucester	\N	1	45.4473421000	-75.5942867000	America/Toronto
99	Orillia	\N	1	44.6082465000	-79.4196783000	America/Toronto
100	RosemÃ¨re	\N	2	45.6389740000	-73.7850080000	America/Montreal
101	Chesterville	\N	1	45.9628790000	-71.8216360000	America/Toronto
102	Baicoi	Baicoi	\N	\N	\N	\N
105	Bucharest	Bucharest	\N	\N	\N	\N
114	Ploiesti	Ploiesti	\N	\N	\N	\N
103	Barrhaven	Barrhaven	1	45.2751549000	-75.7498460000	America/Toronto
104	Breslau	Breslau	1	43.4691726000	-80.4094164000	America/Toronto
106	Cambridge	Cambridge	1	43.3616211000	-80.3144276000	America/Toronto
107	Embrun	Embrun	1	45.2756460000	-75.2754110000	America/Toronto
109	Merrickville	Merrickville	1	44.8455906000	-75.8105866000	America/Toronto
110	North Gower	North-Gower	1	45.1314849000	-75.7161333000	America/Toronto
111	Pembroke	Pembroke	1	45.8266513000	-77.1108826000	America/Toronto
112	Perth	Perth	1	44.8988097000	-76.2485592000	America/Toronto
113	Petawawa	Petawawa	1	45.8982631000	-77.2828772000	America/Toronto
115	Prescott	Prescott	1	44.7092940000	-75.5189720000	America/Toronto
116	Rockland	Rockland	1	45.5483729000	-75.2916118000	America/Toronto
117	Russell	Russell	1	45.2593424000	-75.3595538000	America/Toronto
118	Saint Catharines	Saint-Catharines	1	43.1593745000	-79.2468626000	America/Montreal
119	Westport	Westport	1	44.6776761000	-76.3996659000	America/Toronto
108	Hull	Hull	2	45.4285550000	-75.7131930000	America/Montreal
\.


--
-- Data for Name: provinces; Type: TABLE DATA; Schema: menuca_v3; Owner: postgres
--

COPY menuca_v3.provinces (id, name, nom_francaise, short_name) FROM stdin;
1	Ontario	Ontario	on 
2	Quebec	Qu�bec	qc 
3	Nova Scotia	Nouvelle-�cosse	ns 
4	New Brunswick	Nouveau-Brunswick	nb 
5	Manitoba	Manitoba	mb 
6	British Columbia	Colombie-Britannique	bc 
7	Prince Edward Island	�le-du-Prince-�douard	pe 
8	Saskatchewan	Saskatchewan	sk 
9	Alberta	Alberta	ab 
10	Newfoundland and Labrador	Terre-Neuve-et-Labrador	nl 
11	Yukon	Yukon	yt 
12	Northwest Territories	Les Territoires du Nord-Ouest	nt 
13	Nunavut	Nunavut	nu 
\.


--
-- Data for Name: restaurant_admin_users; Type: TABLE DATA; Schema: menuca_v3; Owner: postgres
--

COPY menuca_v3.restaurant_admin_users (id, uuid, restaurant_id, user_type, first_name, last_name, email, password_hash, last_login, login_count, is_active, send_statement, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: restaurant_contacts; Type: TABLE DATA; Schema: menuca_v3; Owner: postgres
--

COPY menuca_v3.restaurant_contacts (id, uuid, restaurant_id, title, first_name, last_name, email, phone, receives_orders, receives_statements, receives_marketing, preferred_language, is_active, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: restaurant_domains; Type: TABLE DATA; Schema: menuca_v3; Owner: postgres
--

COPY menuca_v3.restaurant_domains (id, uuid, restaurant_id, domain, domain_type, is_enabled, added_by, created_at, disabled_by, disabled_at, updated_at) FROM stdin;
2115	4ad6185e-550c-41a3-877c-0a091d6e0b5e	1	lou.servehttp.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2116	8c8237a2-ebb4-4ca0-a171-7612d0cafce7	1	wokbistro.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2117	9a29a145-1c33-4025-a680-0de90a40cedb	1	wokbistro.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2118	a37f291a-3b22-4dc6-b607-a5cf9c02ce53	2	sushihelp.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2119	e204c660-274c-473d-ad61-127e3dc44d47	2	sushihelp.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2120	9c4a5aad-9edc-485e-a6ea-ce08aebc2b5d	4	pizzashark.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2121	2845cc10-5148-4a75-84cb-b28a95424845	4	pizzashark.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2122	eaf6ebb3-73f2-4779-ae34-9ef15e2371c1	5	cedarvalley.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2123	8a25a584-f44f-433a-b433-a4080262bcb7	7	imiliospizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2124	515d3a0f-faef-4760-a029-936ae00a2506	7	imiliospizzeria.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2125	b3f5e5e7-f4f3-4106-adef-bd24305b4fcc	8	luckystar.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2126	bced0104-7ca6-442b-b741-ad78cf05e139	8	luckystarchinesefoods.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2127	b4563980-0c5e-485e-ab2f-36a5e73d115e	10	salitogourmetpizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2128	88542647-d0ac-4503-82ec-32d10709a267	10	salitogourmetpizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2129	280629cc-3c28-4ba0-92c8-babf708ccc28	12	mamarosa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2130	cc102e66-6d7f-48b9-91f2-a249479f64cf	12	mamarosa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2131	67475611-9751-47f2-bcdd-773c444c6789	13	bronson.papajoespizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2132	b2ed2dce-1b4a-464d-a8a8-1e3846b7a09b	15	newmeefung.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2133	8b831cb2-c54a-4c20-a43f-9fbc80a67371	15	newmeefung.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2134	2d40fa6a-66b7-47b9-a51a-667dd58cbcff	15	newmeefung.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2135	50540ce6-2dcc-4a0c-b743-b0daf78686c5	21	lou.hopto.orgg	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2136	e97e25ef-c8f9-47fe-997a-b05cb8403a10	21	menu	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2137	23c1d17f-a547-4728-827e-1904ae9e7f80	21	pizzalime.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2138	c6ef21f6-ffee-4d76-9dea-7f7568bcec3b	22	houseoflasagna.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2139	931de4cb-9928-4e4a-a05f-e3434279fcdb	22	houseoflasagna.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2140	30ff06a3-1d83-4c76-881f-6cc5f44f7171	23	pitapit.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2141	4529658a-6f2d-4a0a-a1f3-d1db25913de6	25	mandarincourtottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2142	d9c94945-0c1b-4789-8de4-28855f4cd466	25	mandarincourtottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2143	a8730ce8-720b-4736-9298-6b62c0c57938	26	hungrysammys.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2144	81e6d5bf-9b7f-4086-b7cf-fa2f99b997a5	26	hungrysammys.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2145	ce0df9fe-6b61-4045-9cfc-8d97826667af	28	eastviewpizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2146	bf2a2f05-da3b-4967-bd6e-d3397710114c	28	eastviewpizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2147	c6dfa412-4613-446c-b1c4-d35fe532d8c2	29	pizzapalaceottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2148	32b703e2-99b4-4723-8000-415ea5a1c031	29	pizzapalaceottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2149	2638db38-1ed9-49ea-b9c6-afd2545f50c3	31	milanomontrealroad.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2150	24d05a5f-fa72-4ed3-aba3-e26507c2b654	31	montreal.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2151	7cfce485-1cec-4249-8e0d-f28a8aca9f54	33	bienphoorleans.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2152	66070d3f-9c45-4ffb-a090-abb8eecd45ba	33	bienphoorleans.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2153	cf6f40ab-f7fa-410e-a3f9-d417c8063727	35	mozzapizzagatineau.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2154	56bb2801-4d14-48f3-9313-d7f2ce9952a8	37	houseofpizzaorleans.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2155	1414902a-533f-487e-8cb1-1e55896d2252	37	houseofpizzaorleans.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2156	8ce53733-89b3-41e9-8044-a2b4ba5031fa	38	prestonpizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2157	cd3a8d67-435a-4b0b-a08c-8b23443cd01f	38	prestonpizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2158	c959df7e-3f9e-4ab5-ab2b-769c9e709c40	42	cypressgarden.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2159	49e77edf-e892-449d-b290-1c7284851214	44	pineviewkiki.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2160	e99cb1ef-0f20-4092-b162-49c3b1c5b5a8	44	pineviewkiki.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2161	72ac9a0c-e38f-4fad-b87f-1e4a105208b2	45	originalbobbies.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2162	bdb6d7af-846c-40b3-9dec-2562ee93608f	45	originalbobbies.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2163	6798a01d-5426-458b-9f05-956a5c69b068	46	koiasiarestaurant.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2164	1601ba64-bffe-46d3-8e07-aa5ae93a15ba	46	koiasiarestaurant.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2165	fbf48bb1-7af5-4617-8653-3b5f961a3fcd	47	mrmozzarellanepean.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2166	a13798a4-6321-43b4-807e-79d314564f21	48	merivalepizzaandwings.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2167	5e64b713-a2ef-482d-b4c3-38eb762a4a03	48	merivalepizzaandwings.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2168	386212d0-3ae7-415c-a50c-b80e416daeed	52	winghing.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2169	e4d3fc9e-9427-47e0-a717-aa29961f39e7	52	winghing.menuottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2170	6ae5a1ad-1a60-44fb-8d09-667a683b38af	54	houseofpizzawalkley.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2171	f7acf88a-7f63-4dd1-98ce-b9bdb70f1d93	54	houseofpizzawalkley.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2172	70f6e03f-8fcd-4421-a70d-95eeb494ac46	54	houseofpizzawalkley.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2173	8289b596-ec75-4fbd-9d3e-e67ad63ee446	54	walkley.papajoespizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2174	5304baab-c7b6-4295-b2ae-057adc72ec87	55	merivale.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2175	c489f2d6-c16d-4cb0-8c07-f037e422c6c0	56	houseofpizza.menuottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2176	9e2bd3ad-0dfb-4d7e-8d59-abc40c95702b	56	houseofpizzarichmond.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2177	eb7e8b17-51e9-4137-aa64-b171285a735c	57	innes.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2178	da0860f6-c91b-418f-bb06-98a92d84d641	57	milanoinnes.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2179	4fa6d44e-49a1-4156-a7e6-388fcf020300	58	greekostapiola.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2180	f7777607-6ae5-4d64-837c-5ae19d3baf4d	58	greekostapiola.menuottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2181	fad6b94b-33ae-433f-ad0e-bb5512a5e3ca	59	milanotompkins.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2182	0ac18388-2bbc-48cb-8da3-490736d90b2f	59	tompkins.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2183	c456cbb3-54b0-4966-aa8c-81cc4f79f9ce	60	opasgatineau.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2184	1b9980a2-d575-4d9e-8c55-b1436e9dbe1d	60	opasgatineau.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2185	fde4df7f-142a-418f-b71a-fbca4fba92a6	60	oppas.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2186	39fe4562-43d3-4818-8b0d-42555beddae0	60	roulas.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2187	9af4e271-eb5c-4296-b28e-171163fa79b1	62	vanierpizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2188	0b2f52a2-7bad-4df7-bdec-b7685b17844e	62	vanierpizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2189	410e04bc-b67c-4f39-955a-6430dc4e8316	64	willieschinesetakeout.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2190	8b59b4a8-4631-48e9-9b4f-67be178e9085	64	willieschinesetakeout.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2191	66b9b094-8143-4ecf-bd6e-56966c3a0448	65	no1chinesefood.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2192	da346313-fa5d-48d3-a653-8c8d62a6af2b	65	no1chinesefood.menuottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2193	65fab38f-eeab-42a8-aa6f-7d60753050e8	65	no1chinesefoodottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2194	5bd4b87a-6b3b-487f-8b02-c4b1765a0077	66	elegantpizzaorleans.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2195	0a46998d-b434-432f-b11d-1695e9f498cc	66	elegantpizzaorleans.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2196	82af6f36-cd05-4aa3-9166-a163b70166bd	68	riverview.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2197	2150e25c-759a-4ff1-9d1d-87ca79ce911e	69	aylmerbbq.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2198	5ce9f38f-6c48-448e-9e4c-2181779681c4	69	aylmerbbq.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2199	cd30d25e-da5d-4ec1-b832-6f8c92406024	70	hull.papapizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2200	43ec3159-f8ea-49f4-807a-8b1d77d62be4	70	papapizzahull.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2201	f3e895e8-f0a5-441b-8e10-b1d48e46e746	72	cathayottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2202	f6b24f23-5797-4e2f-ae00-f5bbc4cf993e	72	cathayottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2203	5676c955-84bc-421e-82cc-292bce4b5556	73	nakedfishsushi.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2204	a41069de-4025-4f3d-b20c-a4a5b9f97147	73	order.nakedfishsushi.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2205	f869c20d-65e2-49cb-a67a-97b63f90778a	74	andiamopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2206	9582c259-56e3-4c2f-8e04-744ec3a9e8ae	75	bank.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2207	ce734eff-f866-42e9-bccf-a463541026fb	77	lorenzos.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2208	abf38c9d-1b1a-45f5-a89e-b9d8886c72eb	77	lorenzosdelivery.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2209	89b8c5c3-b97c-47ec-b33a-8f5cc59b5966	77	lorenzosdelivery.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2210	1578567f-e421-4201-9d49-2c5c0339c1e0	77	lorenzosottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2211	3b7a438b-2ab7-4837-8f43-90359b654411	78	houseofgeorgie.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2212	77c8f64d-4e54-429f-9e30-4e268192b499	78	menuottawa.houseofgeorgie.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2213	3696f044-94db-42c1-a36a-f401ad68aff0	81	order.lunasole.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2214	3e4d892e-bb0c-46c8-a2cd-be0e35b538fa	83	seasonspizzaottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2215	7f0eecb7-4f94-4056-a992-503085be1126	83	seasonspizzaottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2216	787b2661-5831-4df0-bbae-575fed56f6f5	84	originalgeorgies.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2217	df745de8-5cf3-4d4c-bd2a-c4eaacac0165	84	originalgeorgies.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2218	1d11ce80-c7cd-448a-845d-d2d9cbc520db	85	festivaljapan.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2219	6d498b54-6041-44a1-9842-18a2987bb7e7	85	order.festivaljapan.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2220	ba1b459c-62ab-4eea-9a3d-35ea85b332bf	86	popeyethechef.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2221	dc1a12f6-a0d2-470e-b471-5e969e6c700f	86	popeyethechef.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2222	a71d8770-1ada-4385-b824-f7fd3de89efc	87	champathai.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2223	b760dcaf-9c75-423c-8b91-90562cb1a709	87	champathai.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2224	f1ea6d25-4f61-42e5-b92a-1d377d7dcf94	88	smithsfalls.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2225	12b21420-abb2-4e19-93ba-c482ac6ba42c	89	casselman.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2226	c845c8c6-05bc-408d-87be-c5cae42aa29d	89	casselman.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2227	3074b574-e52a-4015-a9e7-60a25a3038a6	90	bourget.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2228	95e90f27-c6bf-4b13-ac14-2da590786040	91	dalhousie.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2229	f08c4682-ad51-41df-9360-435499f776ef	91	milanodalhousie.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2230	544af347-4bbe-46b6-916d-a059ae55fc81	92	stlaurent.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2231	f670651d-13c8-4779-b78e-a69d9205fda3	92	stlaurent.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2232	33ff5d39-2422-4bb0-a8a1-80ae807a0c96	93	manotick.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2233	f36836cc-4499-45f1-b044-47cc9ba77e71	93	milanomanotick.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2234	c8404e0b-5b1f-44d8-81b4-4a85e6f9cc8c	95	barrhaven.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2235	ac101833-e12e-4b90-b8b5-8de5c4fbe575	95	milanobarrhaven.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2236	9a774b5c-50a7-4fef-b8aa-1065b003475a	96	phothudo.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2237	d11d86e4-9748-43fa-a666-74b93c63ec38	96	phothudo.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2238	3eb2b3a5-dfe8-4f92-ae3e-5a8856095c09	97	kemptville.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2239	1b89e809-e58f-410d-b50a-78721f58df0b	99	constantine.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2240	fec8c9ec-63fa-4395-9568-8897a8038b02	102	ottawalemongrass.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2241	40a3fb43-aede-44f7-8dc6-273e61d9d749	102	ottawalemongrass.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2242	135bcd09-a61b-42ea-ab2e-590d4af6261d	104	spicexpress.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2243	060d55f8-6ca2-4462-92dd-fc3503e7db6f	105	ginkgogarden.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2244	03c1fb06-feea-49ad-83d6-f0ffa3e94183	105	ginkgogarden.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2245	736db08a-64c5-423a-aa06-b9b89bd9f096	106	lechoixaylmer.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2246	366410db-5549-47a7-9e4b-6bb7b8df94a4	109	chezgerry.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2247	bacb2367-2980-4419-b745-1094c774ca4e	109	chezgerry.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2248	6e9019c3-4025-44ef-acf4-1c9b2211d366	112	commande.papapizzagatineau.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2249	142c08e5-ace8-4b48-8177-73d90385c815	112	gatineau-ouest.papapizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2250	1affb602-82cf-4c5f-a81e-281c5fd6a3a0	117	shawarmasking.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2251	930dc5fd-9b1b-4389-9233-cd0f533b4505	118	manocitypizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2252	7248051e-1a5c-4fc7-bfb2-9dbe47e5c67a	118	manotickpizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2253	0d2d0bc5-e44a-4aff-a813-fb326b095f5f	118	manotickpizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2254	581b99fc-ed5e-4c1b-ae91-ab2ebfecc0cb	119	hungmein.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2255	3cb68a3f-355b-4b4c-92fe-b1ddd79e43f8	119	hungmein.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2256	1f6f5f2a-e453-4412-9933-91b4fa358a6f	121	shawarmarosanaottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2257	e4b1f1a2-f08f-4955-ae42-3b5a24a28593	121	shawarmarosanaottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2258	0b48aedb-f4cd-40ac-8d23-2078714fae71	122	chezgastonshawarma.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2259	409d4600-00ba-437d-aa6c-aab36c5a7f36	122	chezgastonshawarma.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2260	4c3984c7-310b-491e-aceb-d8240d8f4db6	123	carletonplace.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2261	a718703a-09c4-4798-8f83-fb20238b237c	124	carlospizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2262	882a0ca4-10eb-46c3-89af-1e3fdc1ffaf8	124	carlospizzeria.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2263	b3dc28da-7428-4cc2-b3b4-f3ca4a5ec2df	125	romapizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2264	799ca4ae-f7e3-46bf-a83f-754234f168a9	125	romapizzeria.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2265	83d035c1-aa10-4a02-91f1-7717de32b883	126	hazeldean.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2266	f9e6941c-2d08-4a56-a556-2fa3a6d280d1	126	milanohazeldean.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2267	0977a735-3aff-4a41-8172-6d80ab06636e	131	centertowndonair.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2268	3cb45f43-46c0-4278-82e2-cae3c276587a	131	centertowndonair.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2269	c4a5971a-1e15-4d8c-8b0e-5be76eb519b0	133	riversidepizzeriaottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2270	a057b71f-13a4-4bbd-90a0-7e72d12c666d	134	order.sawasushi.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2271	ffbe6fe1-798e-4515-b726-69d1072ef2b2	134	sawasushi.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2272	6239960f-6b61-49d7-a52d-a743def7f651	137	northyork.phodaubo.net	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2273	bd9fc959-35e3-4223-baa2-779c8e8936ec	139	pizzabravogatineau.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2274	7d31a995-81a0-49a9-ab38-6a3464a89b52	139	pizzabravogatineau.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2275	ad0835bd-51a1-4596-941e-dfca322de9bb	143	order.tonys-pizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2276	ecda3070-3aec-411b-ad51-e928b325476e	143	tonyspizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2277	0ca39dba-c448-43c8-98df-b2249271df67	145	phoviet24.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2278	341f583c-d361-4dea-a5e1-29f3caefc9e8	145	phoviet24.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2279	634a4fe0-472c-4f59-9b57-e2a77aa38d25	147	kitchener.phodaubo.net	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2280	d31691be-9084-41f2-9c1c-2509562c26c8	147	phodaubo.net	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2281	472cf65e-3a05-40cc-a13f-5c2a177bab79	148	lorenzoottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2282	11be8bcd-f143-4e8b-920f-432161f42be8	148	lorenzoottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2283	976c44a9-f0dd-4156-949e-94cef9a4345d	150	mikispizzeria.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2284	e502b8c1-bbb8-46ae-b88d-b4e558b341b0	150	mikispizzeria.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2285	759c815f-5032-401c-96b5-dbb727f730fd	152	phoxua.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2286	1a236176-7712-443f-908a-341fd42b1097	152	phoxua.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2287	3af9559b-7081-4799-ae14-bb21a1a4d19f	153	cafedelishottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2288	3619c3a1-37c4-4455-9185-bf0aa148d4a5	154	habaybna.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2289	87849ba1-cf4c-4df3-8447-86f6b4360e56	154	habaybna.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2290	89078a4d-8bc2-4a84-9dc9-f1ac71d7698a	156	nhulan.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2291	29614a14-047c-47a2-be58-dafa8eef213b	156	nhulan.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2292	f725dec4-5ba2-4e53-b8c8-4ff079500d2b	158	carling.silkroadkabobhouse.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2293	4c4c2b49-651e-44ef-aa15-fa81cad42a1d	159	arianakababhouse.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2294	0258aa09-a29e-4fec-b7f2-035b83b20891	159	arianakababhouse.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2295	7667f7d3-2b62-4a20-9dd3-5ea927a8c1d3	160	hongkongottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2296	b97a803b-24d5-4f30-be80-0e10afafdedb	160	hongkongottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2297	b0ccf833-de72-4158-85c2-6f826976f6ec	166	totopizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2298	84335302-9ccd-4e19-9375-fc0e7a32033a	166	totopizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2299	b002027b-7c0e-4234-b751-c0aa314d25dc	168	hockeysushi.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2300	3bbd09ca-b2ec-4489-baf3-8d8bc50ba9bf	168	orderkanata.hockeysushi.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2301	5221fcf7-9143-4bd5-906f-e9e21c3214ba	169	urbanturbanrestaurant.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2302	7a7bf739-62f3-43cb-b5db-fbaf15957aea	169	urbanturbanrestaurant.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2303	12778ad5-421c-403d-8267-6dfc5e9745cc	172	phocom.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2304	6f95d5fa-a162-423c-b73a-c6a00a86fe91	172	phocom.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2305	c77d6940-6323-4953-8ff5-2f96265043aa	172	phocomvietnam.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2306	c3a7447f-bebd-496d-9b2b-bf701d13fe06	174	luckykingtakeout.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2307	d3ad2a2a-5cb1-4b71-abd3-c82a8840adbf	174	luckykingtakeout.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2308	ee0d6587-0bfa-447a-b8a4-9d9af93d88f2	177	restaurantjwaya.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2309	7eeeaf68-c80d-40c0-a744-39b65e05fd62	180	indianclayoven.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2310	ef81531f-21ff-4e32-b49a-d8d7cc635500	180	indianclayoven.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2311	c0ed0869-5845-46f2-884e-68c8f5d1bed6	181	al-amine.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2312	25abb30b-e316-4aa8-b151-c371fd0a73ab	181	al-amine.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2313	c8f43dfe-0990-424c-9538-38c688007148	182	metropizzarestaurant.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2314	f8299a2f-1905-4a62-9be1-4cb3d8deac3c	182	metropizzarestaurant.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2315	31942dda-3f01-4159-a3e3-e76f776078b9	183	fornospizzeria.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2316	b8eaf103-be2c-4738-ad92-e304a0d4493e	183	fornospizzeria.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2317	1a740276-c04f-4f3e-a041-77aba3f2a57b	184	easterncity.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2318	98e56b73-d737-467e-8c12-fb5e805bd783	184	easterncity.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2319	4b39e100-9a3c-46cf-a178-50995110c696	185	charmthaicuisineottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2320	609d1ff7-9d44-4af4-9f1a-da347a40ccff	190	milanoperth.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2321	61b427ab-ec38-41c4-b884-fdbdc5ec4c66	190	richmond.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2322	038e1be7-fa7d-4a06-bcc7-fc688f309da9	191	jardin-thai.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2323	330e2441-afb3-4929-a722-448a328ed7e8	191	jardinthai.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2324	e84a969c-ee42-453f-8846-eb8f9eca067a	192	pizzadorvalexpress.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2325	3b48d3c0-7127-49ac-bb2f-68db81117ece	192	pizzadorvalexpress.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2326	94010ddf-7043-464f-a627-c7cab03b0bd4	195	chezantonio.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2327	720082a5-ec2a-45eb-951c-b7187dbee900	195	chezantonio.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2328	b91b079a-24aa-4812-a2e8-196ec7610b2c	196	colonnade280metcalfe.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2329	ea5232a9-e813-4d50-a5ca-52773bb3b0d0	198	wingwah.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2330	d85bd22b-14ec-470f-917b-5634c3dde34a	199	phobogakingottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2331	daf56a14-b6fc-4bf4-a41d-bc04a73ddd95	199	somerset.phobogakingottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2332	7de7b7df-93ae-489c-a1fe-9913009b84a4	200	elindio.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2333	5b9f6c73-f115-4007-8679-d4baefb7117f	200	elindio.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2334	92cc41a3-7e91-4102-9103-8baa66e3cec8	203	chezraffino.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2335	5df04c8c-ddbd-44a7-b4c3-3f040ae6be31	203	chezraffino.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2336	b411cc63-c41b-4cc0-8f92-d6aa74e42f54	204	dubarry.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2337	321729a9-99b5-43f8-b7ee-af2931302d37	204	order.dubarry.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2338	db05efb1-69ad-4eee-8534-9efd782d517a	205	montliban.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2339	d2d5988f-de13-481b-8633-89ce05256c8f	205	montliban.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2340	0f517975-96f9-4c55-b766-afbdcc9d744e	206	maximospizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2341	086c2978-8781-4df8-9913-4af48b808cf5	206	maximospizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2342	7f63b4d5-a4e9-444e-a9c4-f80edf0797fd	207	gatineau-est.papapizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2343	74755d13-bc5c-4bac-8db7-729c947cb141	207	maloney.papapizzagatineau.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2344	f0787870-6fae-40d3-83c3-e656e6d7e15d	208	buffalobillqueenmary.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2345	8f4f77b6-1951-4bce-be96-12358bf6a134	208	buffalobillqueenmary.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2346	bd0cf791-df80-44bb-b35b-e23c7cc32712	210	pizz-ami.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2347	385f5dd0-fe1a-48f7-97b4-c09ad08705d3	210	pizza-ami.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2348	da1c1cb2-bf2f-43fe-96ef-1b6b7e286e12	210	pizzaami.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2349	424805a1-799e-4a0d-bfcc-2b1ad670acc7	211	erman-pizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2350	b4ca1c99-a85a-4f74-9503-41f0be6b2eb8	211	ermanpizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2351	975bc5e8-d7e6-439c-b1ee-f07dd0ee6053	213	poukhamthai.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2352	b9411914-84f6-4754-9f32-f6978b450bd4	217	pizza-welat.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2353	ca460159-ce0d-4c7f-8aab-a63e9a3fa4b6	217	pizzawelat.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2354	83ad4e17-ee58-4691-af7e-4305cca41584	219	grecoonbank.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2355	82413595-15fe-4ce6-a511-049d9e97d3a3	221	carlsbadpizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2356	54f6c584-8361-4aac-af10-dc213bd71bcf	221	carlsbadpizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2357	6b459ec5-55e8-42ea-ae8b-97eb0a6b3ffc	222	expressasianfood.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2358	c5d8e0d4-ec81-45f8-9e5a-496440335c7f	223	ottawa-pizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2359	05fd7f75-0ca9-4592-ad79-4d3b4f746eb1	223	ottawa2for1pizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2360	5744a660-1d99-4876-9197-361a9a43a322	223	ottawapizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2361	f3e55648-6656-440f-bf26-0c101eebb3f8	224	lafamigliaonthedanforth.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2362	d5aedcd4-4d72-48d6-9f93-12ad83853721	226	oldmanspizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2363	03ecb3a0-bf87-45db-9c26-378550a47f5a	226	oldmanspizzeria.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2364	772bbe33-2fa3-4f97-92cd-ed5063ea0ac1	232	rideau.barburritoottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2365	24f8f6a6-c21d-4e60-92ab-11035fe1b2a6	233	everaftersottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2366	ffeb8490-ee63-4aca-b7c8-25b724cae61f	233	everaftersottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2367	e3422d0a-8dd0-436b-969d-925db8c8e021	234	mukutorleans.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2368	73a6ad2f-77ef-481f-b6bf-2bcabc492960	234	mukutorleans.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2369	67a3a613-73de-4aee-a1ae-1e25f29088b7	235	pitapizzaplus.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2370	25220c61-107b-4dbf-8728-9b9c309773a0	235	pittapizzaplus.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2371	dfccafdd-210e-4ce3-afe6-eae4adf5ee57	236	bangkokthaigarden.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2372	44fa04f3-5738-49ec-a4f4-890668ea45c4	236	bangkokthaigarden.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2373	616fb697-d002-43e0-be1d-ae18f3755f53	240	tassotcreole.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2374	19be9436-9c61-4fe6-8597-dcc892ba6825	240	tassotcreole.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2375	024e6118-05f6-488c-96e1-59519d42ca68	241	benecipizzeria.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2376	3a7f96c1-fd46-4901-88d9-d53417ccdcbf	244	wontonmamaottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2377	f7548e61-b25e-48d0-b263-b9314346fc83	244	wontonmamaottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2378	bbe33b47-8f08-4b6b-9c94-b374f25df411	245	orchidsushiottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2379	6361b40d-87fe-4d56-8ab8-c31685333fb4	245	orchidsushiottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2380	0de29559-3554-4f66-bb7d-43a535977799	247	stjean.marios.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2381	321199a4-6e28-4e6d-bef5-2b76fd9288e4	248	restaurantletandoor.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2382	6c134cc4-a5cf-415e-adf9-862e7003ce4b	248	restaurantletandoor.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2383	b0e2d812-04c8-4b65-8b1c-ffa152472c74	249	larumeur.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2384	203f55bb-cd43-44aa-ac74-b2c82167b2e7	251	alexandria.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2385	10f13dc4-8450-463f-9d15-5c03ae785255	251	milanoalexandria.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2386	daa95a55-73fd-4ff5-b0dd-e6e3b0e164f2	253	pappassouvlaki.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2387	beb2d581-4e57-4f30-91dd-81e4618a6545	253	pappassouvlaki.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2388	e05b3bf8-3abd-47c6-a9d4-f7ba64dda656	254	grandtandooristhubert.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2389	e50ba15f-8fd7-4a89-9baa-fe6f58f5d1e5	254	grandtandooristhubert.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2390	dbd1928e-e9be-44a0-aa9a-3b4e5f82f987	255	bashalaprairie.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2391	89e67c69-b227-4932-a4fd-f0c2921e5869	255	bashalaprairie.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2392	246b3a44-b5d0-45db-bd39-4e4e8c0d9d5a	256	greekexpress.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2393	275026cb-fce8-48f0-8326-cb2f1bd59779	256	greekexpress.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2394	cdab03de-c7b0-4fdd-a8fd-137161cb9d64	259	3for1pizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2395	a87079ff-08ac-4743-a8d0-7c0ca07be5ec	262	casalunapizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2396	140e1b9f-524f-40e4-bb1d-7d58e575fe6c	262	casalunapizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2397	fafedc99-c96d-4310-b66a-2b44223d5349	265	cobden.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2398	b65d9864-e8bb-49e8-8d91-947609830d91	267	luckyfortune.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2399	23bb6854-dc75-4f7d-bd07-4260e1ac75b5	267	luckyfortune.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2400	3c0e5837-3791-4a91-a336-831ca2cadc5c	269	shaantandooribrossard.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2401	9768ccc8-5d00-4903-9690-0c8b977e585a	269	shaantandooribrossard.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2402	6c21b207-93e9-4739-addd-85dd4d0efba0	271	sushipresselasalle.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2403	7b2def3c-41c7-48f6-81b6-06c94e46b0d5	271	sushipresselasalle.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2404	080e5217-115b-4e63-b71a-eb064469ca04	272	bashasthilaire.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2405	c8915a66-d2fb-4205-bb6b-f10660657e19	272	bashasthilaire.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2406	1b4949e3-57b3-433e-b760-41fffe430af4	273	souslepalmier.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2407	68e9f07a-a266-41ca-87e1-e714b38246fc	273	souslepalmier.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2408	6c404069-7f2a-4b30-a5cb-a2532e263132	274	michellebbq.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2409	1ff14e5a-5bba-4e24-b67c-1ee3506e80f6	274	michellebbq.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2410	f7f6c46d-d573-4e9a-8cf7-cd6cb7feea27	276	bashadeslaurentides.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2411	9314e8ad-13b8-4f2c-8fc6-af4b467e34b4	276	bashadeslaurentides.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2412	ba47d77d-3f89-4b20-a8bd-dbd66126bf3c	279	mrchopsticks.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2413	630390cf-1026-4aa1-be95-7ccad8c32263	279	order.mrchopsticks.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2414	62e2ed7b-fef1-43c0-9061-460e39af770d	280	order.eatloco.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2415	991b1093-a218-4508-a33e-1be09ade5581	280	order.eatloco.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2416	43968b1f-6cb4-4790-ac12-2d3833a96806	284	brossard.mysore.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2417	dc5a036d-cbd7-4c3d-a7ee-1a39e28e23aa	290	misorestaurant.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2418	c95522ac-91c0-4890-9cfe-3926d1b6b542	290	misorestaurant.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2419	0b6060a8-ac7f-44f2-a449-75fbb9668011	295	phoebepizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2420	ca88ac98-6833-4e49-a73a-f2a791df87ca	300	fatalbertsrussel.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2421	5ddcca17-a3fc-459e-ad31-7b5123b4999c	300	fatalbertsrussell.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2422	9b2c1abd-9bd9-41f6-a714-9f04525432ea	300	russell.fatalberts.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2423	422492f9-f07b-4b02-a8e9-2a5411dbe2e1	301	ramigab.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2424	c4be2585-9ed4-4ef3-98c1-5d036c4980d9	301	ramigab.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2425	0f2a2d72-19dc-4d79-8720-0d1d4633e756	302	portedelinde.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2426	ae57ba4c-bb43-49cd-a28a-fd58292e96b1	302	portedelinde.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2427	0259ded1-cf25-44c4-81f2-6abb60ce7874	305	indirascaribbeanspot.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2428	11b0da4f-7f95-4ea3-9da1-448e4492b96b	307	graziekitchen.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2429	c6b1d8b8-beda-44f5-9a32-7d48308e4968	307	graziepizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2430	64c18bad-3ecb-451d-bb2f-7bcfabfc9231	308	mysore.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2431	0a7b8474-29d9-4cf9-b32d-75bd5128f86e	308	mysore.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2432	7b992342-b609-453e-b19b-aca3660b823e	308	plateau.mysore.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2433	ed5ee07f-cf55-4996-84a2-d151dadd2063	309	sababagrill.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2434	81636c0f-b971-47a2-be7f-eb18a7e908ed	310	yumyumrestaurant.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2435	30b604c6-2d45-4c2e-96ad-2e560a66f895	312	madinapizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2436	009357b8-2af7-4b1f-9d0b-2c8b292883a4	313	bigslicepizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2437	6fd0de7f-fcbe-498c-96e0-ccd72eff4afc	313	bigslicepizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2438	9a698322-3b43-4114-ba72-b552b2d05fb1	314	labellamanagua.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2439	21492e2b-02f5-4ff1-98de-87826fd95ce2	314	labellamanagua.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2440	91b76f8a-dc8a-44d9-89db-56e215635a61	314	order.labellamanagua.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2441	4dd088f1-c77b-43ba-95ef-aeb0fbfb21b6	315	dolmadesgreek.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2442	0a3ce977-5e94-4a46-8608-e34ec2f7911f	318	chicken-licious.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2443	de01682d-3a02-4b26-bd2c-94bb026cae4f	318	chicken-licious.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2444	a4f0b8d3-d43b-4aa3-b48e-30070526d9aa	319	restaurantlittlesaigon.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2445	17937f83-37ad-410d-a32f-4cbdf0197ad5	319	restaurantlittlesaigon.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2446	f48105dc-e773-4b17-9a23-842a581b7037	320	amatorestaurant.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2447	f156bf8d-2a93-48b5-a691-80f7121c1f17	320	amatorestaurant.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2448	20abee88-653b-4340-9771-27c32e5ab08a	321	fatalbertstrim.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2449	527d3956-505b-46f0-a129-2ba44f3c5576	321	trim.fatalberts.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2450	5aeb35e0-a893-405a-bf1b-d8a27fbbed90	322	canotek.fatalberts.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2451	3bbc35e1-b360-4389-95de-cf5ad83ca22d	322	fatalbertscanotek.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2452	26c80fd1-940c-48e8-8c77-b7cd1070b094	323	corrados.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2453	9e9519f9-f958-489e-a44a-1da1e250b817	323	order.corrados.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2454	de50d463-cd98-4cc8-a1d8-ef7cddb57bed	324	mackiesburgerottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2455	ec46805a-9ee4-47bd-bfaa-2359cc47eb60	325	newyorkpizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2456	f7867e0a-af73-4d6e-b13c-344f50ea0298	325	newyorkpizzeria.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2457	754c0d89-7c85-47ab-9dbb-259b23f9951d	327	mekong.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2458	5ada8849-b463-4a57-a376-cf175ab936da	327	mekongottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2459	9931c5f9-d582-40f6-a90a-c9c75b536852	327	order.mekong.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2460	dc4e5ef2-3391-4e6d-902b-6395e6215b02	328	jnpizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2461	b2c48983-e226-4df8-b6cd-f2331aeeed57	328	order.jnpizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2462	b7a31043-daa7-4792-93de-e44fe75445f4	329	louissteakhouse.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2463	01b494ae-ec68-4226-9209-215b2fde1d63	333	portuguesechickenguys.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2464	d6b1b8a4-e7e2-436c-b7d8-e791cd78f220	333	portuguesechickenguys.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2465	f4f241ae-5249-46c1-b246-02544ba81bc2	335	sushi930toronto.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2466	4d160acb-c6c2-4367-a838-db0ae6607271	336	sushixtratoronto.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2467	423b3e55-bb81-404b-a4f9-5b7c72ac4773	339	baidusushi.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2468	69fc9abd-7a83-417c-bdc1-821bc87f5b0a	339	baidusushi.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2469	6bf0b5bd-e0d9-4790-927d-30ab98be1ac5	342	ricardospizzaottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2470	f60e8605-afda-47b6-85cc-9fc1a6a15296	347	restaurantanne.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2471	f40b7fe6-b609-4f4a-9863-abb890ad64c6	347	restaurantanne.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2472	f66e29f2-4be1-49aa-8cf8-278d4d317338	348	sushiexpressfantasia.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2473	b7cd4769-148a-4144-b1a1-1ba0b4fc620e	348	sushiexpressfantasia.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2474	7bb2fb38-9da8-4869-89c9-ed4327a272e8	348	sushilongueuil.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2475	7e6ba480-b068-4810-979c-c43e971f2760	349	osgoode.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2476	a6d2da22-9676-41c4-b1cf-7a8a29e3b4e5	350	winchester.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2477	b305faad-195b-4d40-add9-16eca9ef8f19	352	papaceotoronto.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2478	6c83c542-25f3-4d38-9ad5-ca202b343a24	353	newsushiisland.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2479	3549d4a3-826d-4e8d-afcf-0c3824454910	353	newsushiisland.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2480	634c53c2-9a58-4686-b2d4-f806033f8861	355	order.sushiya.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2481	486a09dc-52d4-46c3-9200-76f067235a7e	356	wowsushimontreal.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2482	35e91b0d-dd41-4016-a780-191510bb2166	356	wowsushimontreal.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2483	2986c788-d521-41bd-a963-d4fbba80774b	357	taptapexpress.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2484	63d69d62-2f99-45f5-a2c9-1209e4e360f4	357	taptapexpress.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2485	b5fce818-e926-49e5-be43-ce6944b843f9	361	restomiramar.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2486	a3ede392-4c46-45ee-ba38-11a0d2ef5741	361	restomiramar.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2487	23536cc8-4534-41bd-9de3-e8f7b09aa2fa	363	cafeohayo.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2488	f9566817-976d-43ae-af47-cf3ea1a43de6	366	iciexpress.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2489	5d17b136-a822-4b03-866a-090ef3673174	367	ottawa.xtremepizzaottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2490	8b500c96-b609-4806-af9f-ef0d0bb7c321	368	bajagrill.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2491	cf6a79f6-b3cc-4c2b-a0c6-eb212939611c	368	order.bajagrill.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2492	c406748b-e9c0-4347-ab89-7553f80c969c	373	reecespizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2493	35f0c3ff-2d99-4dfb-a5f4-33bd34881417	373	reecespizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2494	ad4b979c-88b3-48fb-9809-ff0cb9eb8db4	375	owok.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2495	acaa9465-c543-440d-9732-dc560c0b9ee9	376	sachisushimontreal.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2496	b114b6fe-9b12-4fe8-8ad8-e721924608f5	376	sachisushimontreal.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2497	63c96995-2959-4af8-b905-16f228292153	377	minatomontreal.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2498	52aeccf2-0569-43fc-ba02-b70a8f9da7a1	377	minatomontreal.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2499	ac32c524-1ff9-4405-aef6-cfd210871b14	378	westernstylechickenandpizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2500	00379661-5948-4f3e-984b-fb08828ba5d5	378	westernstylechickenandpizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2501	2ae95004-7758-48bd-b693-a69efd568da4	379	cassecroutequebec.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2502	d9a30e09-f8ad-4464-b666-d70793c6e085	379	cassecroutequebec.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2503	d214f65b-a66f-4b13-b44a-bb26bab1653d	380	restaurantmazaj.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2504	b883f9fd-be07-40e5-ac59-42ebca86b5db	380	restaurantmazaj.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2505	af65c16f-a2ca-44da-ba8e-67ad858dd3a2	381	nepean.yorgo.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2506	b51afc3d-96ff-46f4-a1cf-4e48c64fa9fe	381	nepean.yorgo.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2507	9c881fd1-4325-4177-93d4-5df4be7335c3	382	capitalcitysmokehouse.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2508	c6a5957b-eefa-4b16-9efb-e48dccf18974	387	pizzaloversl.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2509	7db59cab-3920-4952-8539-b88e6238b093	389	chateauvenus.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2510	bc73edae-0749-45dc-be09-c401ea984b9c	389	chateauvenus.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2511	a32efeaa-d632-4b9d-96ff-47f852abbd0f	390	macksrestaurant.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2512	35e6e6a1-adca-4cab-abc7-3c0107cc05c6	390	restaurantmacks.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2513	80c62a93-2c08-4cae-a94c-10f37643bf6e	395	pizzalandstluc.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2514	4018efbc-3b5c-4611-b5cc-2e591ab1d1ad	395	pizzalandstluc.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2515	506bdbc5-142b-4bd6-8d15-bbe1d4abbee6	396	zoneshishtaouk.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2516	a091c3bf-3974-4dd2-bfdd-f1e7047b58f7	402	goodtastefusion.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2517	7c86d89b-0531-4cbe-95ad-6572056cbfb0	402	goodtastefusion.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2518	60d58749-ffeb-4e04-bcfa-deae2633b9be	405	catalinapizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2519	2c522de7-2fca-46ad-8058-5be339a3415a	405	catalinapizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2520	01ad4035-8ac3-419f-911e-ec462c1ae9a4	406	order.restaurantbravi.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2521	9c99641f-796e-455e-81d8-e64aa99d535e	406	restaurantbravi.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2522	4a9cf5c3-af9a-468e-9395-4e94600a5c64	408	coinmechoui.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2523	0bd229c6-6b29-4644-afd4-81de44c7a3f8	408	coinmechoui.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2524	c6fd3718-5254-45ce-a27c-79d964f51bc9	409	order.platorestaurant.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2525	6b46e558-d471-4301-8d36-21b42ae93b43	409	platorestaurant.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2526	a0c52398-af62-4f37-9bb0-4a1d190ad001	411	mazaya.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2527	54011867-bd89-4916-8cce-6aacbad4d9a2	411	order.mazaya.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2528	74341a5e-bef0-4b4e-9cb0-9a504253dd1f	414	massagrill.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2529	446385dc-6091-450e-830c-531596d5a8a7	414	massagrill.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2530	bab5bbcc-6401-49a7-bce7-5e09a1c19d3b	420	fiazza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2531	4a56a696-7433-4bd1-858c-deb76a07c1be	420	order.fiazza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2532	c2cd02bb-4630-4959-b4ac-8550fc62459f	422	hardstonesgrillnepean.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2533	ef9ddbf9-f9f5-41c1-a695-d29ede4e5b9b	423	greenchili.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2534	ff2bd39c-02f3-47e4-a4a1-f1928402b4ac	423	order.greenchili.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2535	d395fb88-9239-4436-a4e0-21baa8e9642c	424	greatcanadianpizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2536	d2e93417-0cd5-442d-bdf6-f60803ca6c28	424	order.greatcanadianpizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2537	7cde0b2c-43ea-4038-8c1e-283fa877f3dd	425	butterchickenhut.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2538	869a11e0-d96f-47b5-8cf3-23002070189e	425	order.butterchickenhut.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2539	7d308ccc-9446-4cb6-9e75-bb2e590d1140	426	nikospizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2540	5cfbd0d6-0f29-4b6b-bc7a-5dcf504e5f06	426	order.nikospizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2542	5be5796b-abd0-49f7-b481-f85278bd5e3a	428	restodelice.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2543	615231e8-a0f8-463e-83df-b20f393a67ec	428	restodelice.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2544	92aa3dab-881b-4784-8609-953a53ccc222	429	leroyaumedangkor.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2545	b956ea6d-2404-4231-8498-08a729f57fd6	429	leroyaumedangkor.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2546	6389348a-8a25-4a02-965e-a14580106cca	429	leroyaumedangkorasianfusion.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2547	88df26d9-5ce3-4a60-9349-76c2590eb048	432	newdlebar.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2548	31c2b2f4-b411-4f93-923a-e94d97214648	432	newdlebar.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2549	76d5d1d2-2c0d-47a9-b4b3-f615d5239f70	435	order.realthai-cuisine.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2550	dcdc233d-13ba-42a3-a6c5-7caeb093ef84	435	realthaicuisine.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2551	9f1e74d0-426d-4bb8-9bdb-d9c793f02eb7	437	bronson.papajoesfriedchicken.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2552	7e921437-3741-4750-a818-1aa154592191	438	walkley.papajoesfriedchicken.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2553	30059a65-f936-410a-94d3-c3416860f8ed	439	poutinerie.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2554	9a235eb4-c48e-4cff-837c-c1a03714a437	439	poutinerie.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2555	6d1e682b-8347-4c8f-befd-a4fa5df6807d	440	order.ladolcevitapreston.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2556	f61ed096-31ad-4098-8180-6cb4e215ce84	442	cobourg.originalspaghettihouse.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2557	0d2b7732-16af-41a7-b0a7-a263baac4feb	442	cobourgoriginalspaghettihouse.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2558	73dd7b5d-93b2-4067-9492-8e518c6db5ac	443	bridlepath.papajoesfriedchicken.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2559	88abd6a4-e44c-4cc7-a82e-1db1c7d199f5	443	papajoesfriedchicken.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2560	9c068879-1063-4d82-bad7-0b590388c17c	444	chezvilla.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2561	bc16470f-774f-4635-9bf9-ed8973669b96	444	order.chezvilla.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2562	a97e3ce0-4eac-4c94-83d8-dc31d585ba1f	446	lakefield.originalspaghettihouse.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2563	cdc4e5c1-2437-4567-a90b-9129a6687200	447	peterborough.originalspaghettihouse.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2564	1e0d63c0-e991-4a24-9b77-d5c240ed8f18	450	etoiledechambly.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2565	92e0ed91-1a2c-4c77-995e-738e46cdec7a	450	etoiledechambly.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2566	78594d56-2320-4ceb-9419-d3d57c81d7a6	451	papaspizzalandporthope.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2567	6da8516d-4002-469b-9c45-4a3e675e5d37	451	papaspizzalandporthope.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2568	0df53a97-e7f0-4779-9fb3-22081141d35f	454	spiceforme.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2569	6452e3a0-6d11-4a5a-9cb4-187e24eda195	454	spiceindiannepalesecuisine.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2570	2b4b2146-a05d-4800-bec0-e39ef984f3b1	454	spiceindiannepalesecuisine.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2571	87883841-80c5-4c6a-90a4-0b5887ee07b7	456	17avegreatcanadianpizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2572	113b513d-0206-42b6-9f2b-fde313b7e76f	457	papaspizzalandpeterborough.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2573	5a7cfb87-5fd3-4841-8444-bb6d65535599	457	papaspizzalandpeterborough.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2574	71569950-b9b4-47f4-a864-90ca7e30ddf1	459	galopiripiri.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2575	e68edb2e-0ef8-4891-9361-59fdb9bd16a3	459	order.galopiripiri.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2576	add596c9-6e9c-4682-a890-eadf3694c3e3	463	ogilvieprincegourmet.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2577	214c2a53-2231-4097-b91f-07ed6e0f2208	464	blairprincegourmet.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2578	bad9c6e4-fdee-4025-ab6a-3e15437e1281	465	royalthai.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2579	6ae2bebf-bf44-4fc6-b9e8-3e0cbd519cf1	468	justwok.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2580	97abcdf8-fc7c-4f0a-b080-c7f8a3191f7c	468	order.justwok.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2581	1fb9dfa3-a681-4352-ab3e-135afc0a1830	476	mackenzieinuvik.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2582	64b99600-2481-4fa7-aaba-5dc875ab8cbd	479	icookphoyou.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2583	3ff56654-b950-4f93-a06c-81fa23034779	479	icookphoyou.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2584	188fec9f-f1e9-47f1-be50-a082adcbac89	482	thewokottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2585	af2ffbb5-ce4d-43ec-acb9-831db75f84fa	482	thewokottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2586	0d86e581-56e9-40d9-9e10-8cf937e10ef3	483	chezvilla.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2587	77ac8fbb-443c-4e93-8356-37904c23475e	483	chezvillabuckingham.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2588	89560e13-4ea5-4732-9a5a-13f885cae0bf	489	sopranospizzaottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2589	9df7002f-a958-4f51-9ae3-d667e93fba0a	489	sopranospizzaottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2590	7dfd5d0b-e1d0-480f-866c-066709aeb060	489	sopranospizzaottawa.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2591	150bfb31-eb6c-418f-89e3-2d14fded0f9a	490	tingskitchen.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2592	4785a027-ee24-4e63-8217-10a1e805083e	491	lightofindia.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2593	098bf876-07cc-4361-999e-0b4a2179e52b	492	hometownsportsbar.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2594	ef28bfab-c152-4b83-bf23-f10124685195	494	falafoulgourmet.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2595	bc522811-cdc3-423e-aac3-5010cad923df	494	order.falafoulgourmet.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2596	beaa764f-f556-4c6b-86ea-254b6c6d7d52	497	rangoli.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2597	eaf7b62c-eee9-44ce-92ed-b068df7e20a9	498	papapizzavaldesmonts.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2598	d5376bb7-4992-4f8f-81a2-9950d45e28c7	498	val-des-monts.papapizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2599	842f2126-33ce-48ac-bb40-a53ced66f322	502	newhongkongchinese.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2600	65550ac8-5e48-42ea-8d47-a4a4f2497426	506	ottawabeerman.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2601	b44c2a83-12fd-46bd-9a93-2876ec41dde6	506	thebeerman.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2602	07972043-d398-4248-b5ce-9ad4f067e872	507	pizzalovershc.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2603	3f34e7a5-aabb-491b-808c-3cbd35e1fb6b	508	fusionhousebank.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2604	d425d33a-53a7-4ba6-84dd-daaa8e25d627	511	eggrollfactory.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2605	b184e4dc-1791-4109-a283-8688b4a53159	511	eggrollfactory.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2606	2f6afb86-a46c-4867-9ef1-856854e81bff	515	napoliswestboro.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2607	26fde193-1f65-477c-9d1c-fb1d2ab4d941	516	beneci.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2608	33cdaa24-c153-4df1-9e55-5c0e5b134e33	516	order.beneci.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2609	bd233569-6f51-422e-879f-e0eb77168347	519	hanoi-pho.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2610	286dd278-9e02-4338-95e8-64c92aa800c2	521	palermopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2611	5a256e33-95c6-46a0-aee9-d1c9903e84ad	522	kouzzina.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2612	72bd4735-f497-4575-bd57-0199eb559e58	523	mpizza2go.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2613	4097d54e-1735-4765-af11-2bbd17acd8a7	523	mpizza2go.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2614	8dfa4a20-a5bb-4b16-9c5e-a12fb6048f89	527	shawarmahousewalkley.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2615	6d8f7cd6-f571-415d-8d19-e15927aaa16e	527	shawarmahousewalkley.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2616	6ec8ca1f-df5b-45c5-ab74-12b3199c6ee1	528	papazpizza.net	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2617	a21b93ab-dc0d-4917-982b-87251aa12564	531	pitabell.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2618	27603714-2572-4a4b-ba5c-5bc5a48c3db7	531	pitabell.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2619	3c238855-f7b3-4004-8157-c03f0f7fdf8e	535	donald.palermopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2620	a545b12d-c1e5-4e06-8290-5441b2de6d8b	538	pizzaladifferenceaylmer.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2621	4b53c7bb-6a04-48bf-bf27-fb188f958bc0	539	mtlprincegourmet.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2622	d4a20bda-5a21-4c8d-acf7-827c59c1d26f	540	desflandres.papagrecque.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2623	6ef42c2d-26f0-4056-9d32-1c4c91c5e92e	541	jumbochinesefoods.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2624	cb2b0f16-5539-445a-a269-75f9d3690242	543	prestongreenpapaya.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2625	caedd04b-2721-4470-8503-2d332c4be0f0	546	burgerlovers.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2626	1e282e9d-f797-412d-9f32-24c252781588	547	possimplicity.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2627	5a1c677b-529a-434c-b8c1-add7b27640fa	548	order.pizzaboyzshawarma.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2628	a901d30e-f2d9-469a-bbc4-b4ce900d1215	548	pizzaboyzshawarma.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2629	a3fcd71d-c06c-405d-80ae-89f6ff5e16e2	550	originalburger.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2630	5a43ab78-4dbe-497c-9b30-59c6075e514f	555	ottawa.petitperu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2631	bcb5debb-53a3-43d8-9bef-ab12308034d3	555	petitperu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2632	5afcb76a-4d4e-4a1e-bdf1-005224c42360	561	aaharaltavista.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2633	dcb68e0a-a069-454b-8a0f-ed137f2a4baf	562	pizzadeshautesplaines.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2634	1f820275-43ff-4a44-bb8d-4bdbfa0442cb	565	spratt.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2635	79557492-8633-4f3c-b5d8-a3cb489a2582	566	hull.petitperu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2636	5c8108dc-e512-442c-94c1-20bb4c0bc307	569	baseline.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2637	090157c4-df20-4ddf-9720-29df8f70dbb9	570	pizza9.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2638	903c605d-8380-4f5d-887a-79ca54d92c45	573	goldenfries.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2639	13a94e43-28fa-40d4-a03b-c163eb0a241b	574	lenewyorkais.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2640	4b4af384-d1fd-4df8-9b79-eddc1fec48de	576	elginstreetdiner.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2641	c6b4f23f-4036-4bb7-84fd-3c0fe87e4693	577	clocktowerwestboro.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2642	4137f226-ebb2-4361-a995-c9308149709e	578	mltdwn.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2643	e801f13d-f571-40f9-aa79-cec0e1655b09	579	corianderthai.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2644	74fcaa8e-6dae-413f-8320-10aba2323fd2	580	my_domain.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2645	d089ce42-965f-4728-b637-2578d496ec75	581	andaloselgin.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2646	35342ad5-d654-4676-b9e6-b4b5f02b0431	584	crispyswoodroofe.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2647	e494cfe3-edcb-43c6-9a60-87217a839d6f	586	arnprior.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2648	7f68eb0b-b65f-4059-a885-c598f36921e5	587	wylie.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2649	c4386985-4338-4c5f-8d67-46e9c68a1286	591	tastyburgergrill.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2650	1dd3bfb5-ac57-41b3-bdbe-4944a1c55513	592	phosaigonexpress.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2651	60648473-4835-476d-8f66-9ac540631fdf	593	beachburg.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2652	57379404-ecb0-46b1-9743-1d02fbc14ce9	595	supremepizzeriadonald.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2653	215cc4b4-6592-452b-a690-fa06418bd199	596	sushifleury.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2654	d0feccd3-4a2d-44b0-96b8-219b0877717e	598	karunacafeottawa.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2655	51b9a0f6-ef78-48e7-9e0b-0b91785bb205	601	stittsville.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2656	afb5a7c3-2871-412f-973f-25c48db23eac	602	cantley.papapizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2657	d5b17354-231d-4743-9e9f-2c44f02fa748	602	cantley.papapizzagatineau.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2658	69907a4f-375d-4d3f-904c-64ed4ccfeb86	603	centrepizzaottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2659	f2a7d6c5-d9b4-4bc8-a895-38a1ae72ec97	605	!phovanvan.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2660	d5f0ce9b-c5e0-462c-9614-4b16496b0bbd	606	annathai.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2661	babeb7e5-8ac8-489d-af79-07354863b7aa	607	aroythaibarrhaven.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2662	c0189231-ec4a-4fa9-afa6-65489ab1f5dd	610	renfrew.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2663	328935ed-d587-4ece-8b17-64981b38482c	612	restaurantbambou.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2664	d4f3a515-fcec-4fff-820d-4c82c9e9adf1	614	desflandres.pizzamarina.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2665	5b5e0923-081b-4412-9773-b5ae1ae1e525	615	maloney.pizzamarina.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2666	a284f4dd-8bfd-4518-8c2b-9fea80220646	616	maloney.papagrecque.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2667	e0b9b070-0e65-4a6a-963a-352e48314d94	622	prodelapizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2668	81e42d4d-b2ae-41d5-80f8-fc25fc8112f1	624	alfred.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2669	d0019ca3-9897-4184-badf-ad5b5f12c4f7	630	asiagarden.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2670	96f286de-39c9-44ae-b16f-002b3b5de5cf	634	order.lorenzos.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2671	816001d2-96fa-4c24-9919-7892a709cf6a	636	joesfamilypizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2672	c98de1e9-4e92-4617-a639-59fa6d6aec89	637	masalamama.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2673	25d918c6-dcde-4086-bce1-a3c81011c694	638	digbysrestaurant.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2674	8a50338f-9e1c-46bf-a6bc-c8c14c04e3d8	639	andalos.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2675	248128ee-8aec-4127-8eb3-6a7992b9aa20	641	chinamoongatineau.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2676	81270347-3b26-4bb8-8867-b850134cf3c6	644	mozzapizzahull.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2677	e94bc218-6507-4e7c-9bd4-93d5e2f5320b	646	order.jcroyalthai.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2678	eadd8f2c-452b-43b2-8505-f105aea71d26	647	papayevertecc.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2679	8afb568b-f402-47cf-93e4-98d580339d4a	649	pubhouse.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2680	1a155f7f-f06a-4a98-9f75-41aa11f7dd29	650	pizzarun.run	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2681	2472509b-59a8-422a-89e8-bebd68edb75d	651	woodfield.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2682	99bd987e-af9c-4c77-ada7-5912a58623ee	652	pilos.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2683	fc2c32b9-0751-4f56-9b17-07bb253b53e4	655	1741stlaurent.1for1pizzaottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2684	777394eb-0a4b-46ce-aff8-04c4c9ecb600	659	johnjuancc.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2685	49793c41-6955-42ae-9eea-ebead0cb6ff7	659	order.johnjuan.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2686	e0ea8a47-a525-4167-acdf-be15aa42aabb	660	wilsonstperth.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2687	761cdc08-cdb2-4bf7-8cf4-862cdeec369e	662	szechuan.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2688	dc7e9970-44a5-453b-8d82-318f2ff70b31	664	lorenzobarandgrill.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2689	e74b6c9f-a051-4f27-adab-f500b97eafb7	677	ottawabeerman2.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2690	390f2716-725b-4fc7-97e8-253b0388d340	679	thepizzacorner.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2691	c53ae846-b975-4399-81a2-fde390f40093	680	3boulstrene.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2692	ebbc900a-6813-4265-9467-bf8476ea4c2f	680	gatineau.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2693	e3b8cdbe-7062-4265-a9f7-600c1445bfa8	681	okashull.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2694	8b182225-655f-4502-9f7e-4bdbbd85919a	681	opas-hull.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2695	4baab674-ddaf-4422-9019-a5b449aca930	682	order.lulushawarmaandgrill.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2696	5fc10c0c-20f3-4fd9-bbbe-372392ef23d7	686	3brothersrideau.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2697	5d4395c6-6d97-4fc9-8225-31a343112ebc	686	order.3brothersshawarma.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2698	dd461384-1726-4edb-ac7c-37e939795794	687	twistedpita.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2699	cc1fa5b5-1f85-41f8-80c3-646274603a49	688	pizzariverview.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2700	945a8424-98c4-4c7e-8160-db8140792cd6	692	order.phonha.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2701	6094d53c-54ab-4ed5-8655-8384da8bc6dc	696	pizzamaisonneuve.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2702	10083d50-d868-403c-b7c3-7a0612eb37ae	696	pizzamaisonneuve.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2703	fad1227b-3031-45ba-9151-af09e56a44e1	701	morrisburg.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2704	b7990dac-9f36-4611-a1de-b51f8ce6e869	704	chilithai.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2705	20224b69-936f-4766-98ca-cad87cc0dde9	711	pizzeriasupreme.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2706	f75da879-8918-4c3f-9dfd-98e34015cf94	712	patateloulouaylmer.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2707	558af723-848b-4333-9e20-8c7d7c55948c	714	ogilviepizzaottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2708	a0fa7769-b1c8-4ced-8402-c6c80a6df874	715	lapoutinerieogilvie.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2709	e809457d-25c9-47f3-b03d-67451ef3fdce	716	pizzaramagatineau.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2710	1219c0fa-1627-43ce-ba56-d57a93603cb5	721	lamaisonpho.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2711	8dcb961a-34cb-4eed-9151-35a337f07f87	725	thegreekflameandpizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2712	bd25a98c-5a9f-424c-bce6-77ed27bbf8bd	726	pizzajoanna.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2713	bf30987b-95df-47e6-acf0-888c5a16a9ba	727	commande.lamaisonduburger.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2714	b8f88009-3a0f-4162-9292-8ed544693c04	730	order.friendlypizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2715	7d8425c5-8ac8-4963-b6ce-f3eda595a719	732	lamaisongrillee.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2716	f4e7f54e-1e30-4ce6-86ad-b8362e36459b	735	amiccipizza.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2717	3307a95f-3253-4e8a-b162-6e2685623695	736	greberpizzaetshawarma.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2718	d2b4b418-34e4-4668-ad1d-d7a270d0df2f	740	petawawa.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2719	6d835850-0a83-441a-973a-bd260de48265	745	salathaicuisine.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2720	f57ae87a-fff4-4f8f-ad99-1ca792fff306	747	fullhouseasiancuisine.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2721	a6ab1f9c-64ef-4106-ab95-b3a92109253b	748	rinag.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2722	b99593bc-4a83-4f26-add1-599655a3b8de	749	merrickville.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2723	c692bb52-449f-4d0f-a473-644c9aba3b86	750	pizzabob.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2724	25089bcb-b862-4abb-86b9-5838b5429260	751	hull.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2725	cefb2c4e-cc17-49a4-bd6d-718a0f2a0f27	756	breslau.littlegyrosgreek.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2726	6efb866d-e8d1-4565-9d0f-137b91dacae0	760	benecipizzavanier.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2727	2c3bfcc6-a110-4a93-981a-c587c0220e13	762	barrhaven.vietnamesephohouse.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2728	63405316-cd9e-4e19-b4d3-3c3b50e56149	763	kanata.vietnamesephohouse.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2729	ed029a2f-2963-4537-8a16-1d950c669114	765	order.hanahana.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2730	ebfdfd21-2c0b-47f6-83de-58ba0928fb96	767	phobogaexpress.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2731	fa5f6929-dc8d-46c6-bda4-7fe36dd5f798	768	phoboga2.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2732	90e04af0-5643-4b8f-b737-e412787b7b63	771	2560bank.alloutburger.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2733	7c6bce94-80bd-48d5-9726-8498095cd119	774	argosgreek.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2734	eff727fc-3db7-48dc-9ccd-d7ac751003d9	774	order.argosgreek.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2735	15631149-a615-4976-87ed-1e3e9d8fd237	775	montako.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2736	3da0a32e-4972-4dbe-9afb-1f2dd3a17ebf	776	bankshawarmaandpoutine.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2737	3af28494-597e-42b4-b31c-4edcb2dbd2ab	777	roulasjusetgelato.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2738	76ac7e5d-a7e2-4cfc-893a-9a22a5ad0ae1	778	westborosubs.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2739	82a46dbc-705f-4c6b-9c9d-f148881ef59d	780	eddylebanese.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2740	0ccd5132-83ae-4893-b029-8f6784c19df9	781	order.golden-crust.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2741	8fc7698e-4e35-4009-840b-d0fd919eaeda	783	colonnade1500bank.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2742	e16acab0-d2fc-4f2c-b45b-3a0e129b7420	784	colonnade2140carling.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2743	116b471f-b2d3-4f95-a1a7-dce6e8e7f21a	785	colonnadebarrhaven.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2744	502bfec1-4897-46aa-ba83-79d515050eae	786	cousinvinnyspizzeria.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2745	91235d61-579c-47bb-8de2-f89e8104f219	787	yotisrestaurant.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2746	6b78feff-7089-4c61-b291-81f27cfb5048	789	hull.poutineriequebecurds.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2747	877a9fe3-6170-470d-b2f9-1c4b3d2c334c	790	hull.nachosloco.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2748	215a8e10-6e08-4e3f-ba5f-5254672d7738	791	samosgreek.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2749	95846055-1d66-4dec-9f3a-8e002043ec87	792	dumplingbowl.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2750	d40bf638-1a6b-41fa-a6e3-33c422334381	793	stacked.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2751	d520c94d-f4ea-4f74-bf6f-953d477302dc	794	gladstone.alloutburger.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2752	bf738b70-3ac6-440c-8b78-72901dc6ca82	795	masson.papapizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2753	a40acd2c-d150-484b-990d-2b9514bf6093	796	pareaorleans.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2754	c3740a08-3f76-42ea-8b95-bbbe3fa972a4	797	papaburger.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2755	95e01736-febe-447e-acad-6e2d787d7d4a	798	kabyliepizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2756	29f05fe4-c4d9-483e-9dc6-7021c186fba1	800	thecupboardarnprior.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2757	3e8b9a49-2c2e-4cf5-87a8-41e1f7073e87	801	gatineau.nachosloco.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2758	8ca6206a-a0ce-46b1-b4de-4cae0feafe62	802	gatineau.poutineriequebecurds.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2759	48bdb2b1-b5f6-408b-b1e0-84145e4871bf	806	crispysbank.menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2760	359c8e02-8a28-443a-99f2-6aefdb623be7	807	169york.ohmygrill.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2761	92ea1112-b468-491f-8a7d-e08c5b01f92a	810	cantley.papagrecque.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2762	3d18656c-d0c6-4635-a94b-ea45d7471aa1	814	ottawaliquorservice.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2763	a8761278-3611-4a49-a886-88620cee6df2	815	goldencenterpizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2764	6529bc1a-defc-4dc4-8dfa-581286dcf5c4	816	depanneurgenereux.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2765	72b4b9db-ae69-4051-81e1-2d2c1a9491df	818	rockland.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2766	310d727a-ddaa-4773-9f1b-178777c2f78c	819	northgower.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2767	68cc7af5-8172-4f95-b863-4340ce7edc99	820	vieuxhullpizza.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2768	56aac632-2f2d-4882-9262-a479dda03e26	821	russell.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2769	0103d69e-e156-4294-bfe2-94de07a84bf9	822	257maloney.papaburger.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2770	043d56f8-b0bb-4b38-8c83-993e88921aff	824	primapizza.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2771	4f31cd5e-867f-4487-abe5-a2bb99437f3f	826	585mtlroad.alloutburger.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2772	21c36a0e-8e74-4eaf-bf26-3b4a82953258	827	luckykeychinesefood.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2773	36f6f1d0-f76d-4801-93f3-fea318e7c0b3	828	ottawakababongladstone.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2774	44f677c4-bbbc-4bb9-884e-313c44dfc0ff	829	pizzaliciousottawa.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2775	97fbe5ad-bbec-4d6c-ad83-78e4be5609c8	832	menu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2776	04af49b6-44ab-43bb-8160-f55fc9e8c33d	833	embrun.alloutburger.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2777	7bd6785e-85f7-484b-886d-04e5986122c7	834	westport.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2778	9cdaea4b-6fe1-4ca5-81a0-9e9388c1c070	835	glebe.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2779	10a406d1-c836-4c38-bce4-a5eddf5d5c75	836	souvlakisouvlaki.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2780	4882282b-e2c0-4ac7-9496-7afd3b43c679	837	carlsbadsprings.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2781	aec08bc4-1157-4986-9e0e-9662088ca8ba	838	lhibouquirit.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2782	bc9c58b8-1233-4a99-bf4d-e78844b5bab9	840	princeofwales.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2783	7b922f13-1c21-4ff1-af0c-7862668e6f49	841	barrhaven.alloutburger.com	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2784	c08527f8-459b-4c67-92b6-755648a21c08	842	prescott.milanopizzeria.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2785	f688e086-cfe9-491e-aadd-595fcbf4e4a7	843	gatineau.ohmygrill.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2786	58ef6d4f-d9c8-473e-a2a4-f7ea0ccf3407	845	northgower.mykonosgreekgrill.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2787	c190bb8d-3073-412f-b21b-7bbc5ea3a0cb	846	kemptville.mykonosgreekgrill.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2788	a77a069a-10e4-4866-a59e-91014dffaf3e	847	sushiyanamontbleu.ca	\N	t	\N	2025-09-27 22:32:24.601655+00	\N	\N	\N
2789	444f72d3-0317-4c05-bfd9-c89d4996bebb	15	new-mee-fung.menu.ca	main	t	1	2022-06-01 14:53:13+00	0	\N	\N
2790	ed67e55a-feba-410d-b603-ecdaa683ed43	21	aggregator-landing.menu.ca	main	t	1	2024-01-18 16:25:54+00	0	\N	\N
2791	a0644ea7-c4d6-4c82-b93b-cc4982d1aeae	21	aggregator-landing.menu1.ca	main	f	1	2024-01-09 08:15:38+00	1	2024-01-09 08:17:46+00	\N
2792	4b580459-e17c-4c36-b7ec-e0e8eed600ae	21	aggregator-landing1.menu.ca	main	f	24	2022-11-22 12:13:52+00	45	2023-04-27 11:09:20+00	\N
2793	0324c0ce-193f-4a6c-b5b0-ad3b0d2471b6	21	aggregator.menu.ca/index.php/restaurant/all-out-burger-gladstone	main	f	45	2023-04-27 11:09:20+00	1	2023-08-14 08:42:27+00	\N
2794	b5f705f0-8ce0-40f8-ac8e-766b9e005934	21	aggregator1-landing.menu.ca	main	f	1	2022-01-27 14:35:01+00	1	2022-02-03 10:16:02+00	\N
2795	bf658d65-4980-4b58-b61e-98468a58edd9	21	landing.first-pizza-restaurant	main	f	1	2019-05-01 00:46:00+00	36	2019-07-04 06:32:00+00	\N
2796	d6b76851-a682-46ac-aca4-48e693ffd43f	21	landing.linkpc.net:8080	other	f	1	2021-06-21 10:22:35+00	1	2021-11-29 06:13:47+00	\N
2797	908a6d6b-1b04-4f69-939c-76b9e93ef5e9	21	landing.linkpc.net:8081	other	f	1	2020-06-10 08:12:47+00	1	2020-06-10 08:17:06+00	\N
2798	67f8d96f-5df6-4476-8593-fda6d27ab3b3	21	landing.menu	main	f	1	2020-03-09 10:39:04+00	1	2020-03-09 10:39:24+00	\N
2799	6367c249-1113-4b38-8f90-1d53a3344301	21	landing.menu1	main	f	1	2020-06-10 08:12:43+00	1	2020-06-10 08:12:47+00	\N
2800	df57c75e-304a-48bf-bae2-ca3e754bc5b5	21	landing.menu12	main	f	1	2020-06-10 08:17:06+00	1	2021-03-30 14:22:57+00	\N
2801	5157e899-6221-4c21-b10c-99a947a90bcc	21	landing1.menu	main	f	1	2019-07-10 11:50:42+00	1	2019-07-10 11:52:01+00	\N
2802	d6d690f5-72a6-43ca-bc1e-35d7df46968b	21	lou.hopto.org:8080	other	f	1	2020-03-25 12:27:58+00	1	2020-04-28 07:49:58+00	\N
2803	b0e586cc-7cb2-4522-949c-2730a6542f7d	21	order.pizzalime.com	main	f	1	2019-07-10 08:37:38+00	1	2019-07-10 08:46:43+00	\N
2804	2898a866-a1d6-4d6e-bcec-b81d050052d9	21	pizzalime.com	main	f	36	2019-07-04 06:32:00+00	1	2019-07-10 08:37:38+00	\N
2805	0ae5adea-d942-49eb-a711-bb9bb24d1894	147	pho-dau-bo.menu.ca	main	t	1	2023-02-01 15:34:58+00	0	\N	\N
2806	58b46dff-1839-421b-99c1-6b16220285d3	260	sushipressebeaubien.com	main	t	45	2024-08-01 07:32:44+00	0	\N	\N
2541	99583ca0-a278-4878-90f3-aab8c92abbd4	427	bridlepath.papajoespizza.ca	main	t	40	2025-09-27 22:32:24.601655+00	0	\N	\N
2808	730c45bc-f7d9-4648-bbaf-a9f223402160	486	wandeethai.com	main	f	40	2022-09-14 05:48:28+00	40	2025-03-16 11:23:21+00	\N
2809	d658910f-e98a-45db-9069-dcdc8c6b9f04	918	landing.menu	main	f	1	2020-03-09 10:39:28+00	1	2023-02-03 16:01:39+00	\N
2810	cff3b996-8e08-4b02-b719-5e42522c71fe	918	landing.menu.ca	main	f	40	2023-04-05 11:43:56+00	40	2023-04-05 11:44:09+00	\N
2811	f954ada7-1d21-4071-b1cc-fd0ed6ba8143	918	landing.menu1	main	t	40	2023-04-05 11:44:09+00	0	\N	\N
2812	31beb7ed-f0d4-4111-b751-48bf4cc1c938	918	landing1.menu	main	f	1	2020-03-09 10:38:59+00	1	2020-03-09 10:39:28+00	\N
2813	9d70b81f-d9ea-481e-ab3e-759e2b3a2cef	919	landing	main	t	1	2020-06-10 08:16:45+00	0	\N	\N
2814	1f6efcdf-3eb2-4d1f-9037-edbaa16828b4	919	landing.linkpc.net:8080	other	f	1	2020-06-10 08:12:18+00	1	2020-06-10 08:16:45+00	\N
2815	e591157d-14dc-4c09-ae43-e9c7d0c3fe60	919	landing.linkpc.net:8081	other	t	1	2020-06-10 08:16:45+00	0	\N	\N
2816	cf359f1f-3119-4dd2-a7af-c8f08ca6fbf4	920	mclanding.ydns.eu:8080	main	t	1	2020-09-22 07:43:56+00	0	\N	\N
2817	f41542ba-9fd0-44a0-9911-61adf00cd7bb	924	aggregator-landing.menu.ca	main	f	1	2021-06-21 10:22:51+00	1	2021-11-29 06:13:26+00	\N
2818	aa402ce0-b499-4499-902c-5a244eead665	924	bank-alloutburger.menu.ca	main	t	45	2023-05-17 02:06:54+00	0	\N	\N
2819	03049b2e-a926-41d2-b6e4-818c5119f3a3	924	m.order.alloutburger.com	mobile	f	1	2021-06-21 10:22:51+00	1	2021-11-29 06:13:26+00	\N
2820	e36f24d0-5634-4c99-ab91-910bec61b86d	924	order.alloutburger.com	main	f	24	2021-06-03 10:15:47+00	1	2021-06-21 10:22:51+00	\N
2821	c146334d-08b5-4053-8052-023fc97b8c50	928	aggregator-landing.menu.ca	main	f	1	2022-01-27 14:35:19+00	1	2022-02-03 10:15:59+00	\N
2822	64d31297-73b6-4d77-9b63-156843e5aabf	928	aggregator12-landing.menu.ca	main	t	1	2022-02-03 10:15:59+00	0	\N	\N
2823	ea1f121f-7b6f-46ec-9998-9cfcc42d83c8	928	george.menu.ca	main	f	40	2022-01-10 15:47:59+00	1	2022-01-27 14:35:19+00	\N
2824	6c69265b-7420-46ad-b244-dd6ff0ccc5a4	945	princeofwales.papajoespizza.ca	main	t	40	2022-09-21 04:56:35+00	0	\N	\N
2825	9e9ccfc0-546d-42cc-9491-099f7f48a78c	947	aggregator-landing.menu.ca	main	f	1	2022-12-20 02:22:54+00	1	2023-04-27 13:12:02+00	\N
2826	c4e61cf0-2b39-486d-b7b8-c22177199a13	947	aggregator1-landing.menu.ca	main	t	1	2023-04-27 13:12:02+00	0	\N	\N
2827	58f44391-2834-4619-8013-50f899c567c4	947	mthaicoconut.menu.ca	mobile	f	24	2022-10-12 05:48:26+00	1	2022-10-13 10:59:51+00	\N
2828	a4dafa9e-9f10-4074-bda3-4c3804bd2897	947	order.thaicoconut.ca	main	f	24	2022-10-12 05:48:26+00	1	2022-10-13 10:59:51+00	\N
2829	a4e6281b-98d2-4ec4-9bc8-f024ebd8e515	947	thai-coconut.menu.ca	main	f	1	2022-12-12 08:28:47+00	1	2022-12-20 02:22:54+00	\N
2830	a6608d16-7337-4004-8a86-1a8993286c06	948	aggregator-landing.menu.ca	main	f	1	2023-04-27 13:12:12+00	45	2023-05-17 02:12:29+00	\N
2831	2feca7af-707c-4f66-9c85-07b677b4ee43	948	gladstone-alloutburger.menu.ca	main	t	45	2023-05-17 02:12:29+00	0	\N	\N
2832	754cde41-99bc-4a6f-a281-2966bbbd4b80	949	montreal-alloutburger.menu.ca	main	t	45	2023-05-17 02:13:44+00	0	\N	\N
2833	cbb97e08-cdf4-4bf9-8bb1-6bcc15e90f80	950	george.menu.ca	main	f	40	2023-08-09 00:35:53+00	45	2023-08-09 08:55:57+00	\N
2834	3d1cba7e-8846-4260-bc7b-b8bc94964924	950	kirkwoodpizza.ca	main	t	45	2025-01-07 02:21:08+00	0	\N	\N
2835	1ac23e1d-89a1-4d04-a2e9-41603a14aaf9	950	order.kirkwoodpizza.ca	main	f	45	2024-12-30 11:49:13+00	45	2025-01-07 02:21:08+00	\N
2836	348a9c4a-9c69-4365-acdc-c058c05092b4	951	shawarma-depot.ca	main	t	45	2023-09-13 08:49:28+00	0	\N	\N
2837	0cd99e7c-6573-4ebc-8e55-5d8b6628d5c0	952	order.riverpizza.ca	main	t	45	2023-11-16 15:07:54+00	0	\N	\N
2838	e9ba5fa9-21ef-4462-9b40-f501ec2c18b3	953	genki-sushi.ca	main	t	45	2024-01-16 07:49:08+00	0	\N	\N
2839	d84c2ccb-9959-407b-b0cd-04c0b480e73c	954	testv2.menu.ca	main	f	45	2025-02-24 11:33:36+00	40	2025-03-16 11:23:59+00	\N
2840	a7893d67-b9cc-4d39-9745-8d9bccd800e5	954	wandeethai.com	main	t	40	2025-03-16 11:23:59+00	0	\N	\N
2841	7759eb8f-864d-43ca-b7e7-f7eebb40651b	955	aggregator-landing.menu.ca	main	f	1	2024-01-18 16:25:52+00	45	2024-02-13 09:24:59+00	\N
2842	e2f127df-f6ed-4bde-b64b-7b1348b8289d	955	lanawab.com	main	t	45	2024-02-13 09:24:59+00	0	\N	\N
2843	f8d2202b-815d-426b-a415-06d4b700e1b2	957	cosenzapizzancalzones.ca	main	t	45	2024-02-06 10:15:37+00	0	\N	\N
2844	eee6fda4-5a51-4ad2-8c8c-db12f461caae	959	order.shawarmashish.ca	main	f	45	2024-02-20 08:21:23+00	45	2024-02-26 03:18:46+00	\N
2845	7ad093cb-8345-467c-b305-2cd53f25a730	959	shawarmashish.menu.ca	main	f	45	2024-02-26 03:18:46+00	2	2024-05-29 13:59:28+00	\N
2846	69a1dd2e-7623-4c9a-9474-32402b25d0f6	959	shawarmashish1.menu.ca	main	t	2	2024-05-29 13:59:28+00	0	\N	\N
2847	5d922c37-d271-49bc-bb30-8d9dae94a4c6	960	bombayindienne.ca	main	t	45	2024-03-14 14:52:31+00	0	\N	\N
2848	a642f9db-13a0-4ca1-a785-e80359e508a8	961	435monteedelasource.chiccopizzashawarma.com	main	t	45	2024-03-21 07:01:28+00	0	\N	\N
2849	cf17b0ee-6b01-49b3-bd23-c7aec06bfbe2	962	1009chemdemasson.chiccopizzashawarma.com	main	t	45	2024-03-21 10:10:58+00	0	\N	\N
2850	70bc0bac-56fd-4bbc-a8c8-1e5b7283bd7c	963	1096chemindemontrealo.chiccopizzashawarma.com	main	t	45	2024-03-21 10:07:15+00	0	\N	\N
2851	978e52d4-d015-4e55-9dbb-7803522fec4b	964	842boulevardmaloneyest.chiccopizzashawarma.com	main	t	45	2024-03-21 10:18:36+00	0	\N	\N
2852	dca541e2-47c6-40e2-ad11-f753bd4cf064	965	992boulevardmaloneyest.chiccopizzashawarma.com	main	t	45	2024-03-21 07:15:16+00	0	\N	\N
2853	c257f24f-8bf4-4d5b-9f76-b85977d32560	966	405bouldelhopital.chiccopizzashawarma.com	main	t	45	2024-03-21 10:15:23+00	0	\N	\N
2854	9778f04d-c232-4507-9b67-6f6a5c3294d5	967	1783ruesaint-louis.chiccopizzashawarma.com	main	t	45	2024-03-21 10:21:05+00	0	\N	\N
2855	320208b6-1801-4bad-b5c9-676ff0cd2e7b	968	matt.menu.ca	other	f	2	2024-04-24 14:57:43+00	2	2024-04-24 14:58:06+00	\N
2856	f681718b-9e83-4092-9799-48b0abd1510a	968	zaitandzaatar.ca	main	t	2	2024-04-24 14:58:11+00	0	\N	\N
2857	6e0ad1eb-4837-4c97-b5d9-edb06bf20f3b	969	matt.menu.ca	main	t	2	2025-02-25 11:48:46+00	0	\N	\N
2858	c80c0ce0-178f-40db-a94e-ea9360504f0f	969	miapizzagrec.com	main	f	45	2024-06-05 04:55:12+00	2	2025-02-25 11:48:46+00	\N
2859	469a398d-1ac5-4bc4-bf79-9796a33f48a9	971	kitchener.littlegyrosgreek.ca	main	t	45	2024-07-17 14:22:03+00	0	\N	\N
2860	e6aef915-fbbe-43d0-81b6-46cb9e18636e	972	bistro548.com	main	t	45	2024-08-21 11:29:11+00	0	\N	\N
2861	7048af57-7ec2-4f2a-a288-2b5647350a94	972	matt.menu.ca	main	f	2	2024-08-13 08:59:52+00	45	2024-08-21 11:27:49+00	\N
2862	c8f39a8c-305f-429b-b765-56f4eb3faa40	973	capitalbites.ca	mobile	t	45	2024-11-07 11:07:16+00	0	\N	\N
2863	f0741a3d-ace7-418d-84c3-b256db95e76b	973	capitalbitespizza.ca	main	t	45	2024-11-07 11:07:16+00	0	\N	\N
2864	8eed017c-41bb-44b6-944c-e767aa045b7b	974	order.pachinopizza.ca	main	t	2	2025-02-10 16:06:09+00	0	\N	\N
2865	975d3c63-7c12-4c88-9586-4734c7da5e47	974	pachinopizza.ca	main	f	2	2024-10-10 06:48:05+00	2	2025-02-10 16:06:09+00	\N
2866	d0f04ee2-446c-4f53-9615-87fdcae5c951	974	pacinopizza.ca	main	f	45	2024-10-09 15:34:53+00	2	2024-10-10 06:48:05+00	\N
2867	99242eda-b9f6-40ca-8b14-b53bb6746eb4	976	pizzamarie.ca	main	t	45	2024-11-18 07:15:50+00	0	\N	\N
2868	3f4e3bc8-56bd-43df-99cb-aeb1d2058445	977	capripizzaottawa.com	main	t	45	2025-02-03 12:54:36+00	0	\N	\N
2869	4b9bc114-30c8-4318-b921-ff39a9413799	977	testv2.menu.ca	main	f	45	2025-02-03 02:41:36+00	45	2025-02-03 12:54:36+00	\N
2870	0e139a72-5a3d-4f9a-bc01-2370b739068b	978	testv2.menu.ca	main	f	45	2025-02-20 08:58:30+00	45	2025-02-24 11:32:43+00	\N
2871	318726ae-e0d1-45f7-afa6-c31312946d2e	980	chefradpizza.ca	main	t	0	2025-05-08 12:51:53+00	0	\N	\N
2872	de62541e-eb4d-4128-854e-98c17d793c2f	980	testv2.menu.ca	main	f	45	2025-05-08 06:42:26+00	45	2025-05-08 10:10:11+00	\N
2873	b8d90f5f-4558-403f-b28e-a0bc03df6571	981	alsdrivein.ca	main	t	45	2025-06-10 09:06:50+00	0	\N	\N
\.


--
-- Data for Name: restaurant_locations; Type: TABLE DATA; Schema: menuca_v3; Owner: postgres
--

COPY menuca_v3.restaurant_locations (id, uuid, restaurant_id, is_primary, street_address, city_id, province_id, postal_code, latitude, longitude, phone, email, is_active, created_at, updated_at) FROM stdin;
4122	2bccb98f-9c8a-430f-853b-de38335a625b	608	t	1682 Cyrville Rd	65	1	K1B 3L8	45.4170335000	-75.6074261000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4232	175b6bfb-e934-49d8-847f-548642177133	718	t	\N	65	1	\N	45.4215296000	-75.6971931000	(519) 538-6805	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4864	e333dcc7-4282-4d5c-aa80-50bf275216fd	849	t	110 Bearbrook Road	98	3	K1B 5R2	45.4319000000	-75.5654984000	(072) 045-6789	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4874	ad050c75-d1a3-4b7c-9d3a-38c893c669f1	850	t	1574 Walkley Rd	65	3	\N	45.3768997000	-75.6471024000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4876	0775d7e7-e5f6-4ce4-93bc-0fe43bc4e7bc	851	t	1143 Baxter Rd	65	3	\N	45.3503990000	-75.7819977000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4878	725d5ef7-ef45-4514-924e-1b96f4012a78	852	t	277  Bank St. Ottawa	65	3	\N	45.3503990000	-75.7819977000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4900	c141a4b2-605b-484c-991a-25178577dd67	853	t	3570 Strandherd Dr	65	3	\N	45.2747993000	-75.7368011000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4906	f05e2699-26ca-44bc-b3e5-1203bb857219	854	t	2795 St. Joseph Blvd	95	3	\N	45.4734001000	-75.5205994000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4924	d6f60e74-225b-4095-a5d6-cd4f27bdf3ae	855	t	2 Woodfield Dr	65	3	\N	45.3375015000	-75.7263031000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4925	3d380d19-e6fa-49a8-9963-bc0438a0db1f	68	t	117 Rue Front	85	4	J9H 5S9	45.4043007000	-75.8546982000	(819) 682-2222	menu@riverviewpizza.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4940	249bd6b9-b532-422a-9687-a551a69e0758	856	t	826 Somerset St W	65	3	\N	45.4090996000	-75.7116013000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4957	7e79ffed-c00a-495c-93e0-12ea10912fa7	857	t	606 Rideau St	65	3	\N	45.4329987000	-75.6752014000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4963	01caf35c-005d-4f9c-94d9-fc1673b4d4e8	868	t	834 Clyde Ave	65	3	\N	45.3778000000	-75.7494965000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4969	982471cb-3304-46e0-ac05-99021a8be2f7	858	t	500 Old St Patrick St	65	3	\N	45.4347992000	-75.6837006000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4975	9541a966-756f-4aa3-8f5c-362db4220968	859	t	395 Bank St	65	3	\N	45.4132996000	-75.6945038000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4976	432d5447-4131-455f-b44d-75b1b7428d40	860	t	5511 Manotick Main St	65	3	\N	45.2271004000	-75.6862030000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4978	eb8020c6-f5fe-4081-8fdb-c8bfd64e27be	861	t	1133 St Laurent Blvd	65	3	\N	45.4245987000	-75.6372986000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4987	cdf4573f-fc7b-4219-a6a2-1bae41c12354	862	t	1671 Carling Ave	2	3	\N	45.3796997000	-75.7492981000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5020	00c79436-eff1-4727-bc50-acd4162489ca	863	t	3891 Innes Rd	95	3	\N	45.4343987000	-75.5586014000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5026	4a7757ea-0a3c-428a-9b41-d5d02ca2c621	864	t	4055 Carling Ave	73	3	\N	45.3381004000	-75.9076996000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5030	fa5c8fb3-2b41-454b-920b-dca0bab036ad	865	t	1588 Walkley Rd	65	3	\N	45.3769989000	-75.6470032000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5037	1991d30d-5009-4de6-b97b-6329155e7a76	866	t	178 McArthur Ave	65	3	\N	45.4310989000	-75.6626968000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5045	5f0a9c94-a015-4210-a15e-d909687e75a6	867	t	2916 Carling Ave	65	3	\N	45.3567009000	-75.8010025000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5075	2daf6f86-03cc-4663-8764-3574fa5272bd	217	t	2182 Marie-Victorin	85	4	J3X 1R4	46.7779999000	-71.2601013000	(450) 929-4929	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5081	2f9feb39-d52a-4c82-a5ab-7bf45072cf11	223	t	320 Bank St	65	3	K2P 1Y1	45.4143982000	-75.6957016000	(613) 234-6336	pizzapie241@rogers.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5086	a58ee19f-3c54-4b00-8c0e-2b8df959c5ad	228	t	233, boul. St-Anne	85	4	J0N 1H0	45.8503990000	-73.4947968000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5089	67522440-810f-4993-adc5-79a14a269569	869	t	403 Somerset St W	65	3	\N	45.4150009000	-75.6977005000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5095	999175d6-7afd-435e-8655-a749e5734e44	870	t	309 Dalhousie St	65	3	\N	45.4291992000	-75.6913986000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5096	0bd9dead-6f64-4d55-8339-11f6373825f9	871	t	303 St-Patrick St	65	3	\N	45.4317017000	-75.6912994000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5101	5b402b14-4c03-4431-8c31-91a714689416	243	t	\N	85	4	\N	52.9398994000	-73.5491028000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5106	22ed7f0a-3726-4009-b457-3489aec52bfc	872	t	1555, boul Provencher	97	4	J4W 1Z3	45.4733009000	-73.4748001000	(450) 672-6112	no@no.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5130	4b714cd6-26b7-4f41-96b6-5f783fa44607	874	t	272 boul Sir-Wilfrid-Laurier	78	4	\N	45.5620003000	-73.1904984000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5141	09d8456a-6beb-471f-afbd-13abbfdbc452	875	t	470, boul Harwood	75	4	\N	45.3788986000	-74.0205002000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5159	0965019b-a747-41ac-a1c1-ddcfb55fe373	876	t	3915 Champlain Rd	47	3	\N	45.4315987000	-75.1561966000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5163	e5e81bd4-3289-4557-94f7-a41a93bffef8	877	t	937 Danforth Ave	5	3	\N	43.6800995000	-79.3379974000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5165	44a0900f-48d1-4415-a56b-4df516e8c8a2	878	t	2006 Robertson Rd	65	3	\N	45.3238983000	-75.8271027000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5174	15ef6e24-926b-488e-bd1c-b9c8b0360890	879	t	64 B Queen St E	5	3	\N	43.6531982000	-79.3755035000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5176	53406762-1e44-4a4f-afe9-d47d4867fbf3	880	t	2789 Danforth Ave	5	3	\N	43.6893005000	-79.2963028000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5190	4c1087ac-0eac-4430-8c47-faae6e1ee549	881	t	5751 Av de Monkland	28	4	\N	45.4738998000	-73.6246033000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5191	60433c25-7482-435f-9dca-443d2ff1ccaf	882	t	898 College St	5	3	\N	43.6539001000	-79.4255981000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5197	02288eff-99fb-4d88-933c-af6898eebe6b	883	t	600 Terry Fox Drive	65	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@example.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5213	be96054d-d1ef-4c6b-8615-49c7eac105eb	884	t	1950, ch du Fer � Cheval	57	4	\N	45.5752983000	-73.3279037000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5215	47ed25af-f901-4003-b867-1ad1c85a7a64	885	t	1820, ch de Chambly	56	4	\N	45.5298004000	-73.4824982000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5237	47a71fbd-d3b9-4edf-b78d-bade8b32ae0c	886	t	214, boul Churchill	15	4	\N	45.4930000000	-73.4854965000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5243	5c08656d-a224-4896-a1a4-70dd6711a22d	887	t	1577 Alta Vista Dr	65	3	\N	45.4086990000	-75.6580963000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5249	9b8f2b9a-99a2-4e03-838c-ce067ee8a26e	888	t	1165, boul Monseigneur Langlois	3	4	\N	45.2699013000	-74.1362991000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5256	5862c850-a809-4b9f-92ea-4a658fcfa41f	889	t	5524 Manotick Main St	65	3	\N	45.2260017000	-75.6855011000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5258	24deef2a-8ffd-428a-9321-b8d8b8133eda	890	t	344, Mont�e du Comt�	81	4	\N	45.2654991000	-74.2197037000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5275	42e53779-8e78-49a3-9a20-e61b47870fe3	891	t	1753�Avenue�Rd	71	3	\N	43.7294006000	-79.4181976000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5289	0eec3937-1665-466a-acaf-73aad4bece5b	893	t	223, boul Cartier	70	4	\N	45.5535011000	-73.2152023000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5296	08f69f5b-6895-4fd5-9e4b-4d1eee9b24d2	894	t	1574 Walkley Rd	65	3	\N	45.3765984000	-75.6479034000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5317	3fd3d45b-2a9c-41de-869d-12adca16b271	896	t	40 prom du portage	32	4	\N	45.4249992000	-75.7198029000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5318	4695ce04-1a72-4740-9932-7720e04c517b	897	t	79 Montreal Rd	65	3	\N	45.4338989000	-75.6673965000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5320	c2c7805c-632d-424c-b9e5-3f05bd8beb82	898	t	1750 Innes Rd	65	3	\N	45.4164009000	-75.6006012000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5328	b8432abd-a2f1-4f74-a70f-ad10fb3663e8	900	t	300 Sparks St	65	3	\N	45.4193993000	-75.7045975000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5339	d90533c7-831d-4553-80a8-d887999d8d82	901	t	2920 Carling Ave	65	3	\N	45.3569984000	-75.8006973000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5345	4a8413d5-b652-4eb8-bef3-f92ba3b04160	902	t	1519 Merivale Rd	65	3	\N	45.3566017000	-75.7368011000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5354	de64563f-493d-4dd8-9881-74ef536975bb	903	t	1463 Merivale Rd	65	3	\N	45.3605995000	-75.7330017000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5357	f22a0b7f-129f-4414-b3b2-6d9c8978c542	904	t	250 Centrum Blvd	95	3	\N	45.4803009000	-75.5106964000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5363	83a1da15-041a-4487-9ebf-0173259c2075	905	t	824  Mountain Rd	77	6	\N	46.0758018000	-64.8042984000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5370	c653810c-0fcb-41ea-bac2-3adefa9bf0be	906	t	2525 Carling Ave	65	3	\N	45.3648987000	-75.7861023000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5386	a208bce9-6368-4d7f-90a9-933e1d1f5b6b	907	t	1202 Bank Street	65	3	\N	45.3918991000	-75.6815033000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5387	4a439a1f-ca5f-484e-9768-8d0398d473a5	529	t	291 Queen Mary St	65	3	K1K 1X1	45.4252014000	-75.6521988000	(613) 741-2220	mohamed_tfaili@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5391	17b0f6e5-eb61-465d-9bf9-e93e225f9d7e	908	t	1385 Wellington St W	65	3	\N	45.3981018000	-75.7396011000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5398	b8714351-d745-4a84-a0bc-ab6e2dd1d087	909	t	22 rue des flandres #7	32	4	\N	45.4710007000	-75.7182007000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5399	bd1d4d13-2eee-4da5-8df3-8bf3a2e84af2	910	t	2672 Innes road	65	3	\N	45.4325981000	-75.5622025000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5413	ce0d5caf-b6c9-4c2c-91cf-1fdfeb46b39e	912	t	792 Somerset St W	65	3	\N	45.4095993000	-75.7099991000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5415	61f018a8-45df-47f5-8d64-e2826ffeec16	913	t	\N	65	3	\N	45.4215012000	-75.6971970000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5417	a6955645-b61a-4478-b108-f7142662ca82	914	t	600 Terry Fox Drive	65	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	example@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5420	56bbc957-d59e-47ab-815c-cc557267cfb5	916	t	600 Terry Fox Drive	73	1	K2L 4B6	45.3003900000	-75.9069158000	(123) 456-7890	example@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5422	ee1a0067-e3ee-4d10-a455-3b4588737855	918	t	600 Terry Fox Drive	73	3	K2L 4B6	45.3003900000	-75.9069158000	(613) 680-2050	root@example.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5423	6d2f89a0-831d-446f-ad59-def4661d017d	919	t	600 Terry Fox Drive	65	1	K2L 4B6	45.3003900000	-75.9069158000	(613) 123-4567	george.nicolae85@yahoo.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5424	3087795f-1913-4d97-a8f0-23c2ae885b51	920	t	600 Terry Fox Drive	73	3	K2L 4B6	45.3003900000	-75.9069158000	(613) 123-4567	george.nicolae85@yahoo.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5425	98e3a80a-84be-4819-946b-efac74690fe9	921	t	600 Terry Fox Drive	73	3	K2L 4B6	45.3003900000	-75.9069158000	(613) 123-4567	george@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5426	cc8c305a-8252-43b5-89a8-05bf78c84e61	922	t	727 Churchill Avenue	65	3	P3A 3Z7	46.5125390000	-80.9345621000	(613) 688-4444	rupinder.pal@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5428	947b1847-1093-4c36-ba85-c73952c8fdf6	924	t	2560 Bank Street	65	3	K1T 1M9	45.3535830000	-75.6411234000	(613) 733-4444	george@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5429	9f0a451c-5783-4e60-9975-ce5a321f57e2	925	t	2529 Baseline Road	65	3	K2C 0E3	45.3423601000	-75.7854845000	(613) 829-5777	george@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5432	65665d7e-f3b9-432d-94ac-f2de9fe73318	928	t	201 Marier Avenue	7	3	K1L 5R6	45.4391141000	-75.6632652000	(613) 742-4411	samir1boulos@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5435	1794be76-77e8-44d8-a64d-5d6a26afcacf	931	t	1536 Clyde Avenue	65	3	K2C 3Z4	45.3619189000	-75.7406477000	(613) 123-4567	george@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5439	760ed931-0d61-4a4e-8624-0f904ef1e762	935	t	2126 Apple Leaf Way	65	4	K1W 1J7	45.4845380000	-75.6467570000	(613) 413-2250	yanni.bouziotas@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5441	1b03bc6b-278a-4fc8-a6f8-40abec2fde20	937	t	2126 Apple Leaf Way	65	3	K1W 1J7	0.0000000000	0.0000000000	(161) 341-3225	yanni.bouziotas@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5442	67f3d295-c537-4bd1-9e1a-dab65cced10c	938	t	1 Rideaucrest Drive, Barrhaven, ON	65	3	K2G 6A4	0.0000000000	0.0000000000	(613) 823-2224	noemail@noemail.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5443	b7ce5cff-63dc-42f9-9c93-f90ff853c96a	939	t	4 Rue Belmont	44	4	J9H 6J5	45.3950698000	-75.8303042000	(819) 682-8494	noname@noname.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5444	d3025b36-c668-473d-b320-8cb2a438bf0f	940	t	2666 Alta Vista Dr, Ottawa, ON	65	3	K1V 7T4	0.0000000000	0.0000000000	(613) 521-1102	noemail@noemail.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5445	c142740b-4796-4344-ad1a-d8f1f773ad1e	941	t	3-701 Eagleson Road	73	3	K2M 2G1	45.2874392000	-75.8668453000	(613) 592-7888	no@no.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5446	8d164132-2f3f-4560-b233-17d828faa1f1	942	t	886 Dynes Road, Ottawa, On	65	3	K2C 0G8	0.0000000000	0.0000000000	(613) 224-7343	no@no.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5447	1c9a2536-2606-4fad-9d06-61d21804047d	943	t	121 Preston Street	65	3	K1R 7P3	45.4081470000	-75.7137981000	(613) 421-1777	no@no.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5448	e423c38e-6ee3-4695-b499-f49596036c76	944	t	273 Boulevard Saint-Ren� Ouest	32	4	J8P 2V7	45.4919059000	-75.6580371000	(819) 663-7710	no@no.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5449	b50da9f1-a87b-4737-803b-0bf5abf146e7	945	t	1896 Prince of Wales Drive	65	3	K2C 1P5	45.3538415000	-75.7048504000	(613) 224-7700	No@no.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5450	eba1bc0b-530d-46a6-97e9-e59d65be6db3	946	t	792 Somerset Street West	2	3	K1R 6R2	45.4096257000	-75.7101526000	(613) 366-2356	no@no.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5451	a778fe40-7177-41d1-9283-94a55d4ed2a5	947	t	1390 Prince of Wales Drive	65	3	K2C 3N2	45.3692644000	-75.7033982000	(613) 225-1238	jayjaylu34@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5452	891ca22b-1ea5-4eb0-90f2-d94cdfccb3e1	948	t	714 Gladstone Avenue	65	3	K1R 6X3	45.4073655000	-75.7044226000	(613) 233-1000	george@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5453	45112c23-bcca-4640-86ab-9da96a5f45c0	949	t	585 Montr�al Road	65	3	K1K 4K3	45.4422399000	-75.6447219000	(613) 745-5555	mahde_ghandour@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5454	b4b57799-9543-4d21-ae98-3aef8980c526	950	t	1078 Merivale Road	65	3	K1Z 6A8	45.3775136000	-75.7335912000	(613) 722-7777	kirkwoodottawapizza@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5455	03482b29-2024-4d48-9c12-8ad85c8e8f10	951	t	87 Main Street	94	3	K0C 1X0	44.9009657000	-75.1819458000	(343) 483-0143	Shawarma_depot@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5471	419242f6-8ede-4c2c-b1e7-456fb54991fb	967	t	1783 Rue Saint-Louis	32	4	J8T 4H2	45.4678122000	-75.7247304000	(819) 568-0000	alexandra@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5472	41545e87-f21d-4745-a69f-5069bcee0821	968	t	3515 Albion Road South	65	3	K1T 1P1	45.3543030000	-75.6427761000	(613) 248-1111	albionzwz@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5473	fa070fce-e3e3-4680-b150-a12788ec68b4	969	t	250 Boulevard Maisonneuve	32	4	J8X 3N8	45.4352647000	-75.7119544000	(819) 243-8181	george@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5474	0986f964-b25b-459d-896c-8c405e4cc890	970	t	95 Rue Saint-�tienne	32	4	J8X 1J7	45.4338677000	-75.7157922000	(819) 772-9883	alexandra@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5475	d3b92414-f02d-46ce-9b8e-c72a409818b7	971	t	1606 Battler Road	4	3	N2R 1J6	43.3964233000	-80.4625586000	(519) 894-0002	farid0823@yahoo.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5476	ae3de74b-56cf-4435-85b6-474ec346fa79	972	t	548 Chemin d'Aylmer	32	4	J9H 1B1	45.3981499000	-75.8114176000	(819) 684-2289	tony_geara@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5477	26ea38c1-3520-46cc-9dc0-e1258b3bb34c	973	t	34 Grenfell Crescent	65	3	K2G 0G2	45.3222117000	-75.7212497000	(613) 225-2224	capitalbites2@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5478	24ef107c-d9dc-4576-b14a-2ea7df403764	974	t	3515 Albion Road South	65	3	K1T 1P1	45.3542895000	-75.6427696000	(613) 248-1111	yassernazar@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5479	fdff6994-8217-4505-9091-57949085bced	975	t	4 Rue d'Orl�ans	43	2	J8T 5V1	45.4811876000	-75.7009465000	(819) 568-8333	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5480	bb8c0d71-aff1-4376-a4bb-828ead7b0d44	976	t	4 Rue d'Orl�ans	32	4	J8T 5V1	45.4811876000	-75.7009465000	(819) 568-8333	michel_sabbagh63@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5481	d6c5c3fe-2a9d-4d50-bb5f-0b9140836670	977	t	4000 Bridle Path Drive	65	3	K1T 2C4	45.3484472000	-75.6453447000	(613) 680-8484	callamer@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5482	ed6d1460-8315-4ddb-b9af-59c71e816b14	978	t	3679 Riverside Drive	65	3	K1V 0K8	45.3435952000	-75.6904654000	(613) 260-8555	riversidepizzathebest@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5483	b12fb9b4-31af-4338-a19e-121e91de4d9f	979	t	4000 Bridle Path Drive, Gloucester, ON, Canada	98	3	K1T 2C4	0.0000000000	0.0000000000	(613) 680-8484	george@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5484	22d2f7c3-10d6-41cb-82d9-862a5deaadf5	980	t	1730 Montr�al Road	98	3	K1J 6N3	45.4456163000	-75.6097334000	(613) 695-9966	raficwz@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5485	a61ae89b-27c7-4840-8597-c9d105477810	981	t	5474 Osgoode Main Street	25	3	K0A 2W0	45.1433906000	-75.6117300000	(613) 878-9898	callamer@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5436	b051bd0f-62dd-4208-970d-b798eca5dfa7	932	t	1105 Cobden Road	19	3	K2C 2Z1	45.3529962000	-75.7779981000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4357	b67b15bb-b8e4-417f-827c-18b64b6ddd04	843	t	105 Rue Bellehumeur	32	2	J8T 6K5	45.4764305000	-75.6915334000	(819) 246-4420	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4359	45e2a37a-4d0e-43de-940c-ea16f2e78459	845	t	6594 Fourth Line Rd	65	1	K0A 2T0	45.1319739000	-75.7169360000	(613) 489-1444	mykonosgreekgrill@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4360	bd952d3f-1ec2-47bb-b823-38f12765a8e9	846	t	2600 County Rd 43	50	1	K0G 1J0	45.0186570000	-75.6565067000	(613) 258-4050	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4361	24568496-04b2-48d8-90f3-811b4fcfacf5	847	t	34 boul mont bleu	32	2	J8Z 1J1	45.4623457000	-75.7465247000	(819) 955-7777	sushiyanagatineau@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4363	5d55fb47-2f42-4b8d-b7c0-78e178f47ce4	2	t	1675 Tenth Line, K4A	65	1	\N	45.4699012000	-75.4929865000	(613) 123-4567	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4389	b72817dc-ac33-497e-b559-35110142eef7	32	t	293 St Laurent Blvd	65	1	K1K 2Z3	45.4511597000	-75.6522707000	(613) 741-2323	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4405	9765cfa2-55cf-4323-8d78-713b5dfd0b7c	50	t	3059 Carling Ave	65	1	K2B 7K4	45.3543897000	-75.8071822000	(613) 667-2020	shawarmahouse@hotmail.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4408	65ffd22f-b7be-44df-b57d-f7819d4be4f7	53	t	1234 Merivale Rd.	65	1	K2C 4C3	45.3707010000	-75.7332800000	(613) 728-2424	ivan.masrieh@gmail.com,greekos.ca@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4410	3bb21995-d2de-48a0-a112-c729708d5774	55	t	1234 Merivale Rd Unit 3	65	1	K2C 4A1	45.3772509000	-75.7333366000	(613) 729-9738	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4411	4cb4155d-62b9-45a3-8b4d-888da52e4291	56	t	160 Richmond Rd	65	1	K1Z 6W2	45.3827561000	-75.7698908000	(613) 728-2422	menu@houseofpizza.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4457	a42a41e0-6136-4239-bf42-0ad278338388	105	t	2225 St Laurent Blvd	65	1	K1G 1B1	45.3903342000	-75.6182760000	(613) 737-3198	menu@ginkgogarden.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4458	9e64e651-e96c-4245-8a9b-b1f95cd47252	106	t	139, rue Principale	32	2	J9H 3M6	45.3951129000	-75.8421600000	(819) 685-5555	Ziadkanaan2013@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4459	e8800ba9-c82f-428b-afab-978bc49eca47	107	t	331, rue Laviolette	32	2	J8P 5Z1	45.4887715000	-75.6605704000	(819) 643-3363	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4460	aa3646ab-2a0c-4ec7-96de-583317bf6c94	108	t	511, rue A-Gibeault	32	2	J8R 2V9	45.5063771000	-75.6363898000	(819) 643-0091	e.alkoutsi@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4461	7b72efd7-92a5-403d-a37a-a3bb314fa58f	109	t	9, rue Therien	32	2	J8Y 1H7	45.4544043000	-75.7518740000	(819) 771-4444	restaurantchezgerry@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4462	0396566d-de88-4b61-8ec6-6b828c19960d	110	t	8154 Jeanne D'Arc Blvd N	95	1	K1E 2H5	45.4877765000	-75.5113090000	(613) 834-1110	shawks32@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4532	6d3267b2-a79e-4f00-9416-7921bf9c9929	190	t	6179 Perth St.	40	6	K0A 2Z0	45.1936207000	-75.8395895000	(613) 838-4334	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4538	12597adf-078e-4d10-959b-f604b0cc3ba3	196	t	280 Metcalfe	65	1	K2P 1R7	45.4157708000	-75.6916205000	(613) 237-3179	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4543	af06cf8d-7ae6-4538-80e7-680b989e60d2	201	t	1716 Montreal Rd	65	1	K1J 6N5	45.4459007000	-75.6111489000	(613) 594-3333	cheezypizza@hotmail.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4549	53b5d9ad-86cb-4ba2-82dd-41598f3616ba	207	t	253, boul Maloney	32	2	J8P 1C3	45.4844706000	-75.6467411000	(819) 643-0000	kaled.alkhatib11@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4566	ddcb46d0-05a4-4d34-83bf-e108fc5e3fb7	224	t	2318 Danforth Ave	5	1	M4C 1K7	43.7150770000	-79.3052450000	(416) 551-5758	rozadalipaj@yahoo.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4567	dec49f8d-7877-4fe8-9872-67e2483767ba	225	t	1589 Bank Street	65	1	K1H 7Z3	45.3788366000	-75.6673929000	(613) 565-6666	rifathh@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4603	58c9f14f-3f82-410c-86e0-5ff28fda2fc9	266	t	3887, rue Saint-Denis	28	2	H2W 2M2	45.5199800000	-73.5738481000	(514) 499-0446	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4609	8dc8a9e4-2a2a-426d-9d47-231415e9e75a	273	t	2046, rue Lapierre	6	2	H8N 2S2	45.4368219000	-73.6150237000	(514) 595-3444	info@souslepalmier.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4621	3c372d05-5a05-46cf-a687-f9ea739709c5	286	t	2673, c�te Saint Charles	10	2	J7T 2H8	45.4363253000	-74.1733262000	(450) 458-3232	moe.srour@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4626	dc6ad64e-309a-46f3-9188-5a7e4fcd1468	291	t	4025 Innes Rd	95	1	K1C 1T1	45.4558772000	-75.5061846000	(613) 234-0234	azatahir@1for1pizza.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4632	a2a06688-f494-4ce5-bc2d-e3d0203793f5	297	t	205 Dalhousie St	65	1	K1N 7C9	45.4387051000	-75.6552762000	(613) 695-7404	pilipili@rogers.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4643	2929bd4a-419c-48e3-85c8-aef4b605edda	311	t	1176 Danforth Ave	5	1	M4J 1M3	43.6814009000	-79.3327640000	(416) 405-8877	greenladythaichinese@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4809	eb4e8e22-5037-4f22-94c9-856a67908bf1	503	t	826 Somerset St West	65	1	K1R 6R5	45.4090841000	-75.7114373000	(613) 234-4567	allannguyen79@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4856	20fb2e01-0694-424a-8a38-8c9fc3df18af	21	t	14 Main St E	12	1	K7A 1A2	44.8998751000	-76.0204693000	(613) 663-9348	stefan@menu.ca,chris@menu.ca,razvan@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
5335	1c4cfd05-2843-4944-bf26-b2336bd6efae	477	t	101 Main St	58	11	Y1A 0G5	60.7478981000	-135.1430054000	\N	fearlessleader@tonimoes.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4010	da405557-0084-48d1-b25a-e78d1b9f8708	7	t	110 Bearbrook Rd	98	1	K1B 5R2	45.4316060000	-75.5648368000	(613) 834-0222	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4011	73e3b11b-8661-4fac-8802-9b28b401c862	17	t	1574 Walkley Rd	65	1	K1V 6P5	45.3768817000	-75.6470940000	(613) 260-3456	mike@papajoespizza.ca,support@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4012	721b0be9-2fdf-4500-a339-e7afe6c4cd1e	19	t	2529 Baseline	65	1	K2C 0E3	45.3503526000	-75.7820294000	(613) 829-5777	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4013	b55b6412-3b61-49d1-a1ef-ed09b4a7a577	43	t	3570 Strandherd Dr	65	1	K2J 4H1	45.2747792000	-75.7367579000	(613) 843-0212	menu@liuscuisine.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4014	e697a0b4-f710-4652-a60a-5e122af80928	49	t	3059 Carling Ave	65	1	K2B 7K4	45.3543897000	-75.8071822000	(613) 667-2020	shawarmahouse@hotmail.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4015	cab5ab14-ee8a-4078-ac49-3008a6d7e6da	67	t	2 Woodfield Dr	65	1	K2G 3Y3	45.3422125000	-75.7852812000	(613) 727-0900	daniela1@rogers.com,corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4016	e1695784-6274-43f1-b4a5-2f50b10bbb55	83	t	725 Somerset Street West	65	1	K1R 6P7	45.4091481000	-75.7115610000	(613) 237-8080	georges.labaki@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4017	710d8a4b-8f10-4d88-acfa-ddd4e9520caf	100	t	606 Rideau St	65	1	K1N 6A2	45.4330193000	-75.6751909000	(613) 562-2563	hunku79@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4018	a87c9850-d13f-426e-85f1-0a530960901f	111	t	500 Old St Patrick St	65	1	K1N 9G4	45.4347612000	-75.6836919000	(613) 789-5777	ottawarony@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4019	d9e329cf-ac13-42a3-898a-a057fd210c7c	117	t	395 Bank St	65	1	K2P 1Y3	45.4133316000	-75.6944844000	(613) 233-1282	houseinifadel@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4020	7089f8d8-37ed-4f93-ad57-1349aa5d72b2	118	t	5511 Manotick Main St	65	1	K4M 1B2	45.2271015000	-75.6862354000	(613) 692-7888	Zeintahan@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4021	0d2729b2-14fb-4fb0-b2f4-91ec2a577050	120	t	1133 St Laurent Blvd	65	1	K1K 3B5	45.4246312000	-75.6373138000	(613) 747-3770	raj_chanchlani@yahoo.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4022	32682c9c-17bd-44a0-ba0f-632f7edfebc5	129	t	1671 Carling Ave	2	1	K2A 1C4	45.3796840000	-75.7493245000	(613) 729-6018	ottawashogun@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4023	ddb004f8-4c08-4399-afbe-1b83f840c4f1	162	t	3891 Innes Rd	95	1	K1C 1T1	45.4343755000	-75.5585885000	(613) 824-9999	chun3260@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4024	360bef13-d331-4650-aa29-48884b15362f	168	t	4055 Carling Ave	73	1	K2K 2A4	45.3380829000	-75.9077448000	(613) 270-1122	niyuxing33@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4025	f780c745-c0b7-40c9-88a0-c6cfd58eebd7	178	t	178 McArthur Ave	65	1	K1L 6P9	45.4310620000	-75.6626575000	(613) 695-0868	dubianbozi@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4026	fa8b3ca3-2c02-45de-9217-c67786b60f6c	186	t	2916 Carling Ave	65	1	K2B 7J7	45.3566776000	-75.8009896000	(613) 695-1818	akbariozair@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4027	764de833-8e2a-4b0b-8c86-8cba1bc67a33	188	t	834 Clyde Ave	65	1	K1Z 5A1	45.3778429000	-75.7495354000	(613) 761-7488	alsdiner@on.aibn.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4028	25151831-37f4-4193-bee8-b3833c7252fd	231	t	403 Somerset St W	65	1	K2P 2P5	45.4150075000	-75.6977033000	(613) 237-7812	ranjanthana@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4029	b89146ff-9dbe-4e86-a691-20ada1ea8502	237	t	309 Dalhousie St	65	1	K1N 7E8	45.4291968000	-75.6913944000	(613) 789-8885	khoamedica@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4030	f4684db5-2750-4af4-8ff6-3f53d6b0cb56	238	t	303 St-Patrick St	65	1	K1N 5K4	45.4316588000	-75.6913001000	(613) 860-8888	georgeibrahim500@yahoo.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4051	9f7e6144-a63b-4567-8d51-4ba48ec48174	418	t	436 14 St NW	52	9	T2N 1Z7	51.0564016000	-114.0944841000	(403) 294-1144	amerqazi@shaw.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
4031	d9477f1c-9f77-4726-97ea-29de12396a41	248	t	1555 boul Provencher	97	2	J4W 1Z3	45.4733193000	-73.4748092000	(450) 672-6112	amandeep.singh06@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4032	9469896b-ded6-43ea-8aa1-fa342c17403b	252	t	272 Dalhousie St	65	1	K1N 7E6	45.4299510000	-75.6921707000	(613) 860-9898	corrinachen.chen@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4033	a81f7431-e638-481a-8874-29900e98bc7c	272	t	272 boul Sir-Wilfrid-Laurier	78	2	J3H 3N8	45.5620079000	-73.1905389000	(450) 464-8822	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4034	0d6cdf4b-6cfe-4863-8c85-81b8480ca75a	283	t	470, boul Harwood	75	2	J7V 7H4	45.3788972000	-74.0204543000	(450) 455-4040	ofarawi@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4035	ecc662a9-a61f-4d3d-9a30-bf16909c1464	301	t	3915 Champlain Rd	47	1	K0A 1E0	45.4316482000	-75.1561750000	(613) 487-9989	ramigab.bourget@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4036	712c6fdb-67b9-45df-aa24-4f29874d5ce6	305	t	937 Danforth Ave	5	1	M4J 1L8	43.6801301000	-79.3380133000	(416) 469-3777	support@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4037	89290254-d5a3-43a9-9b4c-5954ff87206e	307	t	2006 Robertson Rd	65	1	K2H 1A5	45.3238718000	-75.8270982000	(613) 422-4122	scottstatham@rogers.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4038	7b2deab4-d97f-4183-a2ce-dd638c1caf22	316	t	64 B Queen St E	5	1	M5C 2T3	43.6532385000	-79.3755135000	(416) 368-9988	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4039	ea332d47-cf03-4e5d-b97f-73eca69ed426	318	t	2789 Danforth Ave	5	1	M4C 1L9	43.6892937000	-79.2963155000	(647) 341-1313	s.mirza1@yahoo.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4040	dc25b66d-9c16-4746-b701-392a2bf62570	332	t	5751 Av de Monkland	28	2	H4A 1E8	45.4738975000	-73.6246084000	(514) 485-9999	basha_monkland@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4041	d5e0bbf5-f4f2-44c0-bd56-4bbab2888912	333	t	898 College St	5	1	M6H 1A4	43.6538897000	-79.4255808000	(416) 537-7133	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4042	026af088-bd42-4d59-b5e5-71444481987b	339	t	1385 Baseline Rd	65	1	K2C 3G1	45.3626309000	-75.7381944000	(613) 225-8889	wang1980_ottawa@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4043	10f748ab-203d-4c22-a132-f288515d19d0	355	t	1950, ch du Fer � Cheval	57	2	J3E 2T6	45.5752707000	-73.3278627000	(450) 922-9494	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4044	5b11d96f-5254-47de-a140-ee174d479c21	357	t	1820, ch de Chambly	56	2	J4J 3X5	45.5297836000	-73.4825337000	(450) 332-9575	bobby6185@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4045	bb43ef31-18cb-4db8-805c-59369d1204da	379	t	214, boul Churchill	15	2	J4V 2M4	45.4929769000	-73.4854862000	(450) 923-0110	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4046	3292e14d-8d9a-4524-a135-6ab23150c24f	385	t	1577 Alta Vista Dr	65	1	K1G 0E9	45.4086694000	-75.6580843000	(613) 248-8111	zeiti.n@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4047	41481dd5-d1e9-4c0c-9ad7-ab772b6a5b7e	391	t	1165, boul Monseigneur Langlois	3	2	J6S 1B9	45.2699180000	-74.1363008000	(450) 747-0311	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4048	f6005d6d-edd4-4e59-a30a-92d5cb4f467b	398	t	5524 Manotick Main St	65	1	K4M 1A4	45.2259821000	-75.6854749000	(613) 692-9999	jptheeban@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4049	e6f70141-4ede-45f0-b99e-b9237fe160ab	400	t	344, Mont�e du Comt�	81	2	J7X 1A8	45.2654982000	-74.2197366000	(450) 267-0004	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4050	15d0b548-6e79-4aea-bc7c-65f0fec711a5	417	t	1753�Avenue�Rd	71	1	M5M 3Y8	43.7293539000	-79.4181893000	(647) 350-8573	info@thekathirollexpress.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4052	41e47bda-354e-493a-a0e3-cd217039d1c4	431	t	223, boul Cartier	70	2	J3G 3R2	45.5535062000	-73.2151881000	(450) 281-1244	xmhassan@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4053	910f1c1b-7331-4fec-97a6-25464c6cbd78	438	t	1574 Walkley Rd	65	1	K1V 6P5	45.3766025000	-75.6479471000	(613) 260-3456	menu@houseofpizzawalkley.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4054	0fd86f06-d371-4ecd-8e55-a3e583a06e03	458	t	5-3780 Fallowfield Rd	65	1	K2J 1A1	45.2870136000	-75.7591156000	(613) 825-5255	weicen@yahoo.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4055	113de192-22cf-4cc6-9c12-22dd0d269120	459	t	40 prom du portage	32	2	K1A 0N9	45.4249737000	-75.7197662000	(819) 771-7474	arthur@maconneriemac.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4058	6084147e-2dc1-4579-82e7-7481cb8a984a	467	t	328 Centre St S #101	52	9	T2G 4X6	51.0379546000	-114.0823960000	(403) 245-3854	FUJIYAMACALGARY@HOTMAIL.COM	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
4056	3506e22b-611b-47cd-9355-d8405882eb1c	460	t	79 Montreal Rd	65	1	K1L 6E8	45.4338992000	-75.6673683000	(613) 747-1111	pholaexpress@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4057	314a1cc4-67dc-40af-b0eb-eb19b669b087	462	t	1750 Innes Rd	65	1	K1B 3K5	45.4163671000	-75.6005583000	(613) 321-1700	kcheatani@sympatico.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4059	e76eb1ad-e45d-4148-a169-18b8cb925403	470	t	300 Sparks St	65	1	K1R 7S3	45.4194248000	-75.7046005000	(613) 563-4349	carmellos.sparks@rogers.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4060	407d6387-7ef4-4f37-9491-218b143c83af	481	t	2920 Carling Ave	65	1	K2B 7J6	45.3569566000	-75.8006618000	(613) 828-7812	meeraranjan@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4061	026a8298-a875-4a3f-b403-c19c14116e30	487	t	1519 Merivale Rd	65	1	K2G 3J3	45.3566437000	-75.7368017000	(613) 226-8812	mochan888888@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4062	ea30bfe7-60b6-44e1-a6ee-195a58d91957	496	t	1463 Merivale Rd	65	1	K2E 5N9	45.3605838000	-75.7330121000	(613) 727-8686	colonnademerivale@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4063	7e17335e-1886-4397-a94f-29589dc893b8	499	t	250 Centrum Blvd	95	1	K1E 3J1	45.4802871000	-75.5106518000	(613) 841-1111	ab.hkarimi@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4064	1719173d-eff5-4308-a0f7-184b931bb19a	505	t	824 Mountain Rd	77	4	E1C 2R8	46.0757655000	-64.8043395000	(506) 855-1700	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4065	fe654fce-597c-45d4-93b0-98bf308112a6	512	t	2525 Carling Ave	65	1	K2B 7Z2	45.3648572000	-75.7861142000	(613) 726-7726	store9.1for1@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4066	b579f454-fca8-4728-8308-1c4fa09fb406	528	t	1202 Bank Street	65	1	K1S 3Y1	45.3918615000	-75.6814618000	(613) 260-9090	papagreeknet@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4067	268efa7a-2255-4d2b-aa2a-bf166fbe0e3a	533	t	1385 Wellington St W	65	1	K1Y 2X2	45.3981294000	-75.7395518000	(613) 798-7800	cauzzinc@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4068	9a969abd-5383-4fb7-8c8a-0abc3cb9b6a4	540	t	22 rue des flandres	32	2	J8T 4R7	45.4710314000	-75.7181754000	(819) 246-3888	osman_moudi@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4069	a185988b-151e-48d4-a0b5-95ef4e7625ad	541	t	2672 Innes road	65	1	K1B 4Z5	45.4326316000	-75.5621600000	(613) 837-3650	leilong@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4070	f897618c-9a92-48b6-84dc-c13584429aea	547	t	250 Greenbank	65	1	K2H 8X4	45.3248566000	-75.7795627000	(613) 596-2888	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4071	04e5883e-5b8f-4d3b-98f5-855e1b201ccb	555	t	152 Rue Montcalm	32	2	J8X 2M2	45.4294250000	-75.7258429000	(819) 205-6231	jbahamonde26@videotron.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4072	f99437f0-a2e4-4497-8fa3-a7f6acdfd1af	557	t	1577 Alta Vista Dr	65	1	K1G 0E9	45.4082760000	-75.6583450000	(613) 248-8111	zeiti.n@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4073	11ba8ae7-a9f8-4ff4-9df6-540b044d74c7	558	t	1993 Robertson Road	65	1	K2H 5B7	45.3239879000	-75.8285624000	(613) 721-3777	anishmehra@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4074	dd400df4-c1a9-43f0-beee-e54025532c81	559	t	6001 Hazeldean Road	42	1	K2S 1B9	45.2750950000	-75.9261829000	(613) 314-9595	bonitascantina@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4075	b97dbf12-91c4-456d-8e2c-973647ea1d2d	560	t	643, boul Saint-Ren� Ouest	32	2	J8T 8M4	45.4915035000	-75.6767672000	(819) 246-5000	khalifejack@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4076	18c81cc1-2752-4445-9aba-793d7df6da9b	561	t	1573 Alta Vista Drive	65	1	K1G 0E9	45.4084149000	-75.6582293000	(613) 422-6644	rupinder.pal@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4077	f3ad9987-3e18-4273-88c8-dd3e6e1d07f3	562	t	760 Boulevard des Hautes-Plaines	32	2	J8Z 3N3	45.4745230000	-75.7719161000	(819) 772-9999	pizzadhp@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4078	8188433d-5e6b-4831-adcd-a27d0ea919dc	563	t	219 Fort York Blvd #8	5	1	M5V 1B1	43.6365914000	-79.4055130000	(647) 344-1155	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4079	430c8ce1-6593-4d88-a873-99350917a663	564	t	129 York Street	65	1	K1N 5T4	45.4294128000	-75.6902066000	(613) 789-4245	smoque.shack@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4080	f770e327-2908-4a60-9984-bec81a44d4be	565	t	4188 Spratt Rd	65	1	K1V 0Z6	45.2830327000	-75.6864199000	(613) 822-6757	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4081	ce32472f-af6c-428c-813c-0bad9e38f5df	566	t	152 Rue Montcalm	32	2	J8X 2M2	45.4294250000	-75.7258429000	(819) 205-6231	jbahamonde26@videotron.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4082	37fcded4-96e6-4fc8-9d33-2e78ffd76248	567	t	62 Main Street	65	1	K1S 1B6	45.4125998000	-75.6802333000	(613) 695-0388	mohammed.bougataya@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4083	58e28425-9baa-4f67-8b5d-3bf17b31d54c	568	t	4188 Spratt	65	1	K1V 0Z6	45.2830327000	-75.6864199000	(613) 822-6757	jrakowski23@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4084	6b69011e-e31e-44c7-aa75-095529c96455	569	t	2529 Baseline	65	1	K2C 0E3	45.3423588000	-75.7854815000	(613) 829-5777	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4085	7045b332-4b33-4739-833d-834cc6308e8b	570	t	250 Boulevard Maisonneuve	32	2	J8X 3N8	45.4351224000	-75.7119651000	(819) 771-9111	marwanchwah@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4086	2e5dfd48-fb50-4bc5-9b3c-1391c5d39e68	571	t	311 Bank Street	65	1	K2P 1X9	45.4148179000	-75.6944168000	(613) 237-3737	hedii_70@yahoo.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4087	d418524d-a798-4bfd-991a-969426bf486d	572	t	314, rue Notre-Dame	32	2	J8P 1L1	45.4812881000	-75.6435616000	(819) 483-3120	francois.perigny@videotron.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4088	8b12b09c-2ec6-4da6-9c01-2f5cf40fdeab	573	t	6505 Jeanne d'Arc Blvd.	65	1	K1C 2R1	45.4799355000	-75.5369293000	(613) 700-7968	goldenfries@icloud.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4089	6c26b1fa-6ae5-4d23-a8a8-30269c59ad2e	574	t	102 rue de l'H�tel de Ville	32	2	J8X 2E6	45.4271870000	-75.7153056000	(819) 600-1617	gynomachine69@live.ca;lineah.groskleg@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4090	f6dafb4f-4f41-4831-bc9e-dc16f79f8069	575	t	250 Centrum Blvd Orleans	65	1	K1E 3J1	45.4801585000	-75.5105908000	(613) 841-1111	bassam200@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4091	ff9358f9-64d3-4633-a795-40ef061e15b6	576	t	374 Elgin Street	65	1	K2P 1N1	45.4149372000	-75.6879939000	(613) 237-9700	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4092	f1de4be9-ef93-45a7-b894-2cd095d095dc	577	t	418 Richmond Road	65	1	K2A 3X9	45.3900779000	-75.7573568000	(613) 680-5983	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4093	db9f9a45-c2fa-477b-8167-c03beef7600a	578	t	50 Rideau St	65	1	K1N 9J7	45.4250977000	-75.6912497000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4094	e66b0197-5ba5-4261-9737-d4eeeab9c7d5	579	t	282 Kent St	65	1	K2P 2A4	45.4149827000	-75.6991552000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4095	be4da25c-fb7d-4f05-b14e-f1822adce7bc	581	t	216 Elgin St Unit 2	65	1	K2P 1L7	45.4189724000	-75.6915062000	(613) 233-2525	fido_issa@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4096	22881111-4160-4d7e-a411-36ac2f531a04	582	t	866 Lakeshore Drive	30	1	P1A 2G7	46.2596520000	-79.4292150000	(705) 477-3100	beermanplus@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4097	d9365226-cd4a-4be7-a80f-dc92fd0611ad	583	t	331, rue Laviolette	32	2	J8P 5Z1	45.4887910000	-75.6608060000	(819) 643-4444	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4098	922eef09-284a-4d74-a2a9-37de23cdfb36	584	t	1433 Woodrofe	65	1	K2G 2V5	45.3419389000	-75.7560492000	(613) 695-7575	m.lezzeik@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4099	0bd153f4-8ff7-4507-889f-b7b4ab8703f8	585	t	73 Boulevard de la Gappe	32	2	J8T 2G1	45.4660120000	-75.7173130000	(819) 437-9191	Mantache.kamel@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4100	cc00640f-ef41-418e-8478-e976efe6c67e	586	t	81 Madawaska Street	59	1	K7S 0G3	45.4352019000	-76.3560942000	(613) 623-2233	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4101	9f96d618-1c77-42a3-8958-4ea5f9399fd6	587	t	68 Wylie Ave	65	1	K2B 6M4	45.3546121000	-75.8065896000	(613) 828-1111	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4102	849d3e66-573b-4bf3-a7a8-48cf4228eda3	588	t	7-385 Tomkins Ave	65	1	K1E 3H4	45.4773384000	-75.4984741000	(613) 834-1444	bandar74@hotmail.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4103	6448f35c-ae24-4b48-98fa-7fa378f04b5d	589	t	779 Boulevard Maloney E	32	2	J8P 1G5	45.4830096000	-75.6161237000	(819) 893-5959	info@funjunction.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4104	431d4715-74a2-4140-b928-91b3abf19fe3	590	t	1580 Chemin de Chambly	56	2	J4J 3X5	45.5304032000	-73.4843722000	(450) 321-4444	zuberi@live.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4105	d04cdb01-e805-4edc-94b9-61767922aacc	591	t	283 Queen Mary	65	1	K1K 1X1	45.4251975000	-75.6521126000	(613) 740-9900	tasty2016burgers@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4106	3c5b960f-19d2-43c0-a911-c7f32ad0283a	592	t	60 Madawaska Street	59	1	K7S 1R9	45.4348693000	-76.3544647000	(613) 663-8399	phosaigonxpress@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4107	0a69c0ff-f6ee-4806-9622-d0822d373e74	593	t	1824 Beachburg	51	1	K0J 1C0	45.7347596000	-76.8582279000	(613) 582-3800	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4108	3ba25b2e-03fe-47d4-81fd-713cde9beac2	594	t	1581 Bank Street	65	1	K1H 7Z3	45.3793430000	-75.6674529000	(613) 695-6999	ibrahim_sam@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4109	62554663-8971-4fc3-90dc-3963bbaa3683	595	t	425 Donald St	65	1	K1K 1L8	45.4284218000	-75.6495936000	(613) 741-7171	supremepizzadonald@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4110	a1e6b38e-dcaf-4d7c-b7d4-d70f1d746a72	596	t	2481 Fleury Est	28	2	H2B 1L4	45.5740770000	-73.6490150000	(514) 382-7953	vutranmanhtuan@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4111	a96f9222-524c-446f-b5d1-bc1d78a95d42	597	t	73 Boulevard de la Gappe #E5	32	2	J8T 0B5	45.4660120000	-75.7173130000	(819) 243-4790	papisd@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4112	cb9a0950-44e5-4abc-9c80-1e0c57591761	598	t	820 Somerset St W	65	1	K1R 6R5	45.4091510000	-75.7112239000	(613) 230-1830	fernandanne@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4113	84805d26-c288-4a26-aec0-bcfcefa81f1f	599	t	8210 Victoria Street	65	1	K0A 2P0	45.2466473000	-75.4474234000	(613) 821-5557	8215557mainstreet@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4114	64cb2765-7af2-4575-8e9a-a5f83cb3d9b4	600	t	1027 Teron Road	73	1	K2K 1R2	45.3304779000	-75.9008929000	(613) 592-2711	jessicaliu85@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4115	708dffb0-caa8-4288-9fca-70368b36756a	601	t	1589 Main St	42	1	K2S 1Y1	45.2557047000	-75.9175323000	(613) 836-9966	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4116	551c943e-e2aa-4e82-b38c-1aab7f4057b3	602	t	393 Mont�e de la Source	32	2	J8V 0J2	45.5375457000	-75.7714149000	(819) 607-1717	nicof1995@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4117	a50bb7ca-14ed-455d-b1c8-e963ab91417e	603	t	2045 Meadowbrook Rd	65	1	K1B 4W7	45.4415670000	-75.6426740000	(613) 744-3300	roger_nemr@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4118	a33c5b24-750e-4634-ad22-244a01b28f70	604	t	714 Gladstone Ave	65	1	K1R 6X3	45.4073618000	-75.7044265000	(613) 230-9090	malnajjar3@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4119	96409bdc-bd52-4255-af4f-92d95bd66d6a	605	t	127 Holland Ave	65	1	K1Y 0Y2	45.3994777000	-75.7314837000	(613) 722-1663	phovanvan@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4120	cebd0dd8-b972-48f7-9380-e1f19bd004e0	606	t	91 Holland Ave	65	1	K1Y 0Y1	45.4006225000	-75.7322866000	(613) 759-8472	phovanvan@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4121	31a58ba8-a812-4b58-a368-8126d87d6874	607	t	1 Rideaucrest Drive	103	1	K2G 6A4	45.2847153000	-75.7227654000	(613) 823-2224	happy_pat29@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4123	c4cd0ab4-0a6f-4452-82ae-36364d4d72e8	609	t	1202 Bank Street	65	1	K1S 3Y1	45.3915776000	-75.6813423000	(613) 731-7777	dhia_alamidi@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4124	47c843f6-a06d-451b-b1fb-01fd5891decd	610	t	49 Raglan St S	29	1	K7V 1P8	45.4742107000	-76.6866045000	(613) 432-9090	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4125	dfb2185b-25fa-4aeb-a7bc-fe74f545bfd6	611	t	195 Rideau St	65	1	K1N 5X8	45.4276793000	-75.6890443000	(613) 234-0234	amastrmind32@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4126	41535415-4a58-489b-8fe4-fda965d66394	612	t	87 Rue Principale	44	2	J9H 3L9	45.3949232000	-75.8463570000	(819) 684-5558	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4127	84754cc4-6b9b-4147-bf14-a2b064984f6c	613	t	300 River Road	65	1	K1V 1H2	45.3203505000	-75.6906247000	(613) 627-0013	angrydragonzottawa@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4128	04c41a5b-8eb1-4e06-b0b8-e2c4c0b0b26f	614	t	22 des Flandres	32	2	J8T 4R7	45.4710314000	-75.7181754000	(819) 561-3377	osman_moudi@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4129	7d3f78be-1268-44f7-b93e-763fa21f032e	615	t	253, boul Maloney	32	2	J8P 1C3	45.4844975000	-75.6467623000	(819) 643-3377	osman_moudi@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4130	045f04e0-c814-447c-87d9-bc283877b73d	616	t	253 Boul Maloney	32	2	J8P 1C3	45.4844975000	-75.6467623000	(819) 663-0000	osman_moudi@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4131	32dac31b-9edd-4947-bf71-938af049f8bc	617	t	701 Eagleson Rd	73	1	K2M 2G1	45.2874392000	-75.8668452000	(613) 435-5453	bigbonebbqkanata@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4132	cfe885da-78ff-4d90-b5bd-9575c75cfc1c	618	t	500 Gladstone Ave	65	1	K1R 5P1	45.4102482000	-75.6979187000	(613) 231-3636	info@threebites.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4133	3580ca81-5f27-4029-afb6-0420306957f6	619	t	178 Rideau Street	65	1	K1N 5XA	45.4329225000	-75.6750746000	(613) 216-2644	graceabide@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4134	91dbc503-3b48-4565-a7a2-2bbeb82037e4	620	t	73 Boulevard de la Gappe	32	2	J8T 2G1	45.4660120000	-75.7173130000	(819) 437-9191	shawarmahouse@hotmail.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
5405	6c80b15e-a81e-40e5-a594-8944a9fec835	911	t	250 Greenbank	65	3	\N	45.3249016000	-75.7796021000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4136	0b3442c1-e30a-4efd-b57c-67124f4e8466	622	t	102 rue de l'H�tel de Ville	32	2	J8X 2E6	45.4271870000	-75.7153056000	(819) 600-1617	gynomachine69@live.ca;lineah.groskleg@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4137	c1c72af5-150f-4081-8435-4caef2c59edf	623	t	1020 St Laurent Blvd	65	1	K1K 4S2	45.4280440000	-75.6395730000	(613) 747-4141	andy_yahia@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4138	ce27696e-6aa1-4580-8a4d-a740baaae411	624	t	350 St-Philippe Street	41	1	K0B 1A0	45.5584180000	-74.8815833000	(613) 679-2929	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4139	94b45b94-2dd8-4b0d-bd50-7068cf67e191	625	t	252 Bank Street	65	1	K2P 1X4	45.4161310000	-75.6971870000	(613) 565-4747	Mybackground1980@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4140	6da3d812-5ce0-436f-b6f7-40080042dc74	626	t	5373 Fernbank Rd.	42	1	K2S 1B6	45.2742530000	-75.8698988000	(613) 836-0404	info@jojospizza.ca,Rkassis@jojospizza.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4141	c9838acb-135e-4eaf-b217-3084fc59c1c4	627	t	1573 Stittsville Main St.	42	1	K2S 1A6	45.2563175000	-75.9180410000	(613) 836-2210	info@jojospizza.ca,Rkassis@jojospizza.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4142	c8b8d0d0-904d-4c7c-b507-837a09106cb1	628	t	284 Pembroke Street West	65	1	K8A 5N2	45.4215296000	-75.6971931000	\N	rkassis0@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4143	ee15ce34-60ca-4faa-9c8d-8c8695196b2c	629	t	4048 Carling Rd.	65	1	K2K 1Y1	45.3368037000	-75.9071769000	(613) 254-5554	info@jojospizza.ca,Rkassis@jojospizza.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4144	0f63f676-d224-4792-be03-eefa208df496	630	t	886 Dynes Road	65	1	K2C 0G8	45.3701829000	-75.7047913000	(613) 224-7343	asiagardenottawa@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4145	4b1fe5d4-f457-4d40-8af5-21ed5c70cc7c	631	t	277 Bank St.	65	1	K2P 1P2	45.3503526000	-75.7820294000	(123) 456-7890	stefan@menu.ca,chris@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4146	98fb5a14-9019-449e-afbd-7e2f5fdb7bdc	632	t	233 Laurier Avenue East	65	1	K1N 6P1	45.4260495000	-75.6815083000	(613) 695-4900	shagy_215@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4147	599581b4-7b45-48cd-b958-e63cd4b5ecaf	633	t	3615 Innes Rd	95	1	K1C 1T1	45.4494297000	-75.5221191000	(613) 841-3847	jcharliechan@yahoo.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4148	a5bbce0e-a759-48a4-bd46-3ae52ef1e561	634	t	2201 Arch Street	65	1	K1G 2H5	45.3891724000	-75.6305941000	(613) 366-1661	maryanelkhatib@hotmail.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4149	e5c91a1c-906d-4340-89ee-4fad6c8f81d7	635	t	5935 Jeanne D'Arc Blvd S	95	1	K1C 2N1	45.4656108000	-75.5421533000	(613) 834-0503	lunasolerestobar@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4150	b5a18a36-7f49-4926-8e33-a9e43dcbbc55	636	t	284 Pembroke St W	111	1	K8A 5N2	45.8241705000	-77.1193147000	(613) 732-9900	joesfamilypizzeria@live.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4151	a66ede7f-c270-4e21-97af-f0b91eb3bff9	637	t	303 Kendall Ave	65	1	K1L 7S2	45.4336387000	-75.6644540000	(613) 413-0183	rahman10113@yahoo.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4152	8b5bf2ac-a991-418a-b068-b7fc9077350c	638	t	300 Earl Grey Dr	73	1	K2T 1B6	45.3117398000	-75.9157882000	(613) 599-9800	almotayam20@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4153	2b788ac9-e3b5-4b06-9be6-a4972c301baa	639	t	527 W Hunt Club Rd	8	1	K2G 5W5	45.3342489000	-75.7262402000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4154	648402fe-1a67-4fbc-b9c8-d8556d2fc3c6	640	t	1980 Ogilvie Rd	65	1	K1J 9L3	45.4325857000	-75.6101651000	(613) 695-9220	alamecobridge@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4155	d97e4a25-b4e5-4986-a437-420dd753d372	641	t	273 boul. St-Ren� Ouest	32	2	J8P 2V7	45.4919059000	-75.6580371000	(819) 663-7710	416100842@qq.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4157	de94e064-e224-4782-ad5d-5b0ac2aab4f3	643	t	103 Rue Frontenac	32	2	J8X 1Z4	45.4291420000	-75.7159156000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4158	cc252e37-524e-4c93-b1ad-15e740bbece6	644	t	214 Boul de la Cit�-des-Jeunes	32	2	J8Y 6S8	45.4500325000	-75.7549038000	(819) 777-6699	mozzapizza@live.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4159	2f440231-d823-4ae6-b987-afc98675d17c	645	t	1030 Adelaide St N Unit 8C	63	1	N5Y 2M9	43.0073097000	-81.2394181000	(519) 667-1828	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4160	30e3bcd5-aa4a-4d39-900e-79ba23423c39	646	t	100 Jamieson Pkwy, Unit 11	106	1	N3C 4B3	43.4170754000	-80.3086932000	(519) 260-2607	johnnyv@sentex.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4161	e3966e79-742c-40ad-b7df-bcb2002114f7	647	t	69 rue Laurier	32	2	J8X 3V7	45.4304150000	-75.7103792000	(819) 777-0404	Vincent.gobuyan@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4162	203e06ca-908b-4b1b-b20e-c0690071adaa	648	t	201 Eddy Street	32	2	J8X 2X5	45.4320163000	-75.7205127000	(819) 778-5225	trungvo120@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4163	142133f8-601b-4938-a1d6-bf2f1d7e35cd	649	t	150 Peter Street	111	1	K8A 0G3	45.8274185000	-77.1057459000	(613) 732-7070	mattlemaybooking@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4164	7b476e32-6d8e-4668-a3ce-4fab34636e12	650	t	19 Simcoe Street S	74	1	L1H 4G1	43.8965305000	-78.8637276000	(905) 240-7000	pizzarun19@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4165	c7c71f6e-59d8-4199-9bdc-ce0a01906568	651	t	2 Woodfield Dr	65	1	K2G 3Y3	45.3375409000	-75.7264832000	(613) 727-0900	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4166	1f8e68ad-74a0-41e5-8124-0f8a5d456a67	652	t	876 Montreal Rd	65	1	K1K 4L3	45.4459066000	-75.6303055000	(613) 741-4657	eidandre@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4167	1b209b51-a3ee-4a5f-a001-c2c81e5f6863	653	t	464 Rideau Street	65	1	K1N 5Z3	45.4309573000	-75.6799020000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4168	7ea48a3a-ffb6-4bb2-bd23-6edeb4a67a5f	654	t	714 Gladstone Ave	65	1	K1R 7B2	45.4073618000	-75.7044265000	(613) 234-7070	alrai1@yahoo.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4169	28de45f9-f7b2-4e84-9955-b774c36020e3	655	t	1741 St Laurent Blvd	95	1	K1G 3V4	45.4558772000	-75.5061846000	(613) 234-0234	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4170	6acb8c9a-0ad1-4c4f-92cb-8427673398c7	656	t	1173 Ogilvie Rd	65	1	K1J 1J9	45.4269867000	-75.6295932000	(613) 749-8838	nshienh@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4171	3b7a965b-5891-4a2e-9c35-c07e20b82ca4	657	t	184 Main Street	65	1	K1S 1C2	45.4089542000	-75.6782259000	(613) 890-7852	andrew@sulawok.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4172	ce10a973-1370-4bba-9441-c4093b8f4ae6	658	t	4049 Carling Ave	73	1	K2K 2A4	45.2939368000	-75.8947037000	(613) 435-8817	ha@kanatanoodlehouse.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4173	309b7b53-6009-4f44-9d34-9d1dd42e71c8	659	t	1091 St Laurent Blvd	65	1	K1K 3B1	45.4264595000	-75.6380786000	(613) 366-2353	tony10452@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4174	8ce06da7-ca0d-4f9e-a1ab-abc7afd7a82f	660	t	54 Wilson St W	112	1	K7H 2N4	44.9028611000	-76.2557604000	(613) 264-8883	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4175	57cb4375-057f-4678-8a05-5f23ff875ab1	661	t	114 Gloucester	65	1	K1P 5Z9	45.4188220000	-75.6961487000	(613) 231-6550	Indiancurryhouseottawa@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4176	3c3f477e-b0b6-41ed-9713-05164bc02859	662	t	1115 Rue Saint-Louis	32	2	J8T 2R8	45.4622939000	-75.6977350000	(819) 205-6766	ilyqq@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4178	6fe8e4cc-a6e7-4a3e-9de0-261216091f24	664	t	911 Richmond Road	65	1	K2A 0G8	45.3784387000	-75.7746555000	(613) 366-1974	gilldan143@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4671	c6732e63-3214-41de-a0aa-17dd945f03a4	344	t	323 Burnhamthorpe Rd	35	1	M9B 2A2	43.6488918000	-79.5495654000	(416) 239-4800	carolinascuisina@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4156	d481db1d-9a9e-46c2-9fee-428c9d57c2b4	642	t	118 Isabella St	65	1	K1S 1V5	45.4098695000	-75.6882645000	(613) 565-0200	vahidkh888@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
4179	f673abac-0085-4c57-9467-1ea053b00f91	665	t	1461 Mountain Road	32	2	J9J 3S5	45.4732855000	-75.8610641000	(819) 827-0330	lucd@bellnet.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4180	d52e9791-a437-4797-a23d-04e1b36a837d	666	t	39 Clarence St	65	1	K1N 5P4	45.4286317000	-75.6943645000	(613) 680-0800	currynkabab5@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4181	1b793142-e2fb-44ee-abc2-ac90212166a1	667	t	300 Eagleason Rd	73	1	K2M 1C9	45.3023709000	-75.8777644000	(613) 599-4393	chickenranchkanata@outlook.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4182	9cd6a5ba-1f49-432a-acc6-9b7c60ea2b32	668	t	420 Boulevard Wilfrid Lavigne	44	2	J9H 6W7	45.3986837000	-75.8361135000	(819) 682-7777	gussader@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4183	95c8ac3e-0319-4403-8527-b6c1b76512f4	669	t	123 Astreet	65	1	\N	43.2460170000	-79.8185340000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4184	1e018854-973a-48b4-a4a9-5812ffb07f3f	670	t	1880 Ogilvie Rd	65	1	K1J 7P4	45.4326372000	-75.6146853000	(613) 742-1818	roy@caseysottawa.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4185	10ff8825-6112-4a71-84b6-f5dfa521f07a	671	t	1482 Merivale Road	8	1	K2E 6Z5	45.3601061000	-75.7359857000	(613) 224-3838	joey_bruins_19@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4186	2e2ec5cb-9195-432e-88d0-c18d9e259531	672	t	4-951 Notre Dame Street	107	1	K0A 1W0	45.2720134000	-75.2827795000	(613) 370-2220	ahmedsaad03@live.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4187	360c505e-cefd-4ba9-bc7d-d2eb061c274a	673	t	200 Kenevale Drive	103	1	K2J 0C3	45.2653836000	-75.7769071000	(613) 825-7599	info@sizzlengrill.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4188	ecf63ce8-d9f4-4340-8230-82b4299314ea	674	t	697 Principale Street	72	1	K0A 1M0	45.3117667000	-75.0855679000	(613) 764-1212	ahmedsaad03@live.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4189	8991d58e-e6b0-4212-ad64-bcc25ecb5659	675	t	425 McArthur Ave	65	1	K1K 1G5	45.4325575000	-75.6468889000	(613) 741-2531	min.chen0@icloud.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4190	300a7454-c86a-4baa-ac92-a9cc204f2a0e	676	t	283 Queen Mary St	65	1	K1K 1X1	45.4253259000	-75.6531014000	(613) 680-1117	hollandspizzeria@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4191	eb00a93d-fb02-4f03-90b0-90da5b49065c	677	t	427 Mcarthur Ave	65	1	K1K 1G5	45.4215296000	-75.6971931000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4192	dba4617a-9797-4036-88d7-eb781e13fc7d	678	t	210 Somerset St W	65	1	K2P 0J4	45.4172328000	-75.6914002000	(613) 567-4634	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4193	b9b85953-41f8-4e93-8369-e2a1cf20c330	679	t	3A - 250 Greenbank Rd	8	1	K2H 8X4	45.3247068000	-75.7797172000	(613) 721-0000	Talal.almezel@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4194	92c9fad5-0355-425d-ba95-15475adcc0a9	680	t	643 Boulevard Saint-Ren� O	32	2	J8T 8M4	45.4909443000	-75.6767606000	(819) 246-5000	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4195	5c42f07d-4f8f-4278-b7de-6baa29484557	681	t	1030 Boulevard Saint-Joseph	108	2	J8Z 1T3	45.4688908000	-75.7370480000	(819) 205-5959	mhamad.ko@live.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4196	edbf27c0-addf-4298-8372-e7e18740afd1	682	t	2910 Woodroffe Ave Unit#3	65	1	K2J 4G3	45.2928505000	-75.7286550000	(343) 488-2323	mrdental@live.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4197	d4d6cbbd-fa3b-4a5f-a8e6-1f9a20cbb540	683	t	48 Avenue	32	2	J8T 4J3	45.4782008000	-75.7262312000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4198	a59b695d-1aa6-4b00-ae00-86fb129d7117	684	t	613 Longfields Dr Unit 107	103	1	K2J 6J2	45.2841460000	-75.7451197000	(613) 440-7770	sales@ncalarm.net	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4199	37c8791a-1fc7-48e4-b21f-c1c322634639	685	t	\N	65	1	\N	45.4215296000	-75.6971931000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4200	1000391f-287a-42ee-b1f9-3104ba9338b1	686	t	530 Rideau Street	65	1	K1N 5Z6	45.4318470000	-75.6778381000	(613) 366-2257	brothers530@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4201	1694ef5a-63eb-46a7-b2fc-439f50e8e3e3	687	t	335 Montreal Rd	62	1	K6H 1B6	45.0183055000	-74.7110672000	(613) 938-9300	khatibali2@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4202	511951f9-57b0-4d96-8431-3e77a56315da	688	t	117 Rue Front	44	2	J9H 5S9	45.4041860000	-75.8554512000	(819) 682-2222	pitaexpress@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4203	1e0d1a08-9480-446f-aa43-f00072b113ef	689	t	389 Gladstone Ave	65	1	K2P 0Y9	45.4120815000	-75.6943824000	(613) 699-5008	eric.p_27@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4204	9be1dd0b-d124-4b5a-b861-2997c7959bc3	690	t	26 Northside Road	65	1	K2H 5Z3	45.3295166000	-75.8138026000	(613) 777-8440	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4205	0eb65992-4767-4f50-9aac-0db170251747	691	t	1588 Walkley Road	65	1	K1V 6P5	45.3770269000	-75.6465522000	(613) 523-6969	bahowansa80@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4206	a26daa61-c76b-4f13-a833-cfc594d7c2ff	692	t	300C Fourth Avenue	118	1	L2S 0E6	43.1549860000	-79.2735490000	(289) 639-9064	phonha2018@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4207	4bf61f1f-9d56-4403-a250-4df066eb6dc9	693	t	1202 Bank Street	65	1	K1S 3Y1	45.3915776000	-75.6813423000	(613) 523-2255	roostandgrills@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4208	146fb6eb-6b19-4376-b153-eb9f675075f6	694	t	53 Rue Bellehumeur	32	2	J8T 1P8	45.4751516000	-75.6926365000	(819) 815-1331	portugalos2015@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4209	d895780d-f886-401e-9859-394045ea5d2d	695	t	320 St Joseph	32	2	J8Y 3Y8	45.4421361000	-75.7328274000	(819) 815-1333	dynapro@videotron.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4210	799c3985-d137-4c30-a8ae-930eab6cd8aa	696	t	574 Boulevard Saint-Joseph	108	2	J8Y 4A6	45.4499725000	-75.7356660000	(819) 777-7732	Rabih2015_01@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4211	097593f0-af0f-48bd-a4a4-9b581e9653c9	697	t	22 Rue des Flandres	32	2	J8T 4R7	45.4711794000	-75.7181553000	(819) 561-8877	l.sonia@videotron.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4212	a9cae08f-776d-4de4-b332-3c3893f07774	698	t	3780 Fallowfield Rd	65	1	K2J 1A1	45.2870136000	-75.7591156000	(613) 825-7755	bkstravel1@live.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4213	6f066f9b-3099-40d8-a149-a5c506005fd9	699	t	48 Avenue Gatineau	32	2	J8T 4J3	45.4782008000	-75.7262312000	(819) 568-4749	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4214	93d743c6-8588-48a2-8b76-43b0579dac54	700	t	780 Baseline Rd	65	1	K2C 3V8	45.4215296000	-75.6971931000	(613) 680-2051	info@primeburgerbar.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4215	d4ab9594-3114-4bed-96d0-190ee860e2c1	701	t	147 Main Street Unit 3	94	1	K0C 1X0	44.9007448000	-75.1821537000	(613) 643-2222	selmonum@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4216	3398d0ea-0c6d-4a1a-9a1d-48f19a066590	702	t	303 St-Patrick St	65	1	K1N 5K4	45.2690632000	-75.6803474000	(613) 241-4444	georgeibrahim500@yahoo.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4217	08d444fc-b3c0-49f7-8c71-8289966a0a30	703	t	250 Centrum Blvd	95	1	K1E 3J1	45.4801585000	-75.5105908000	(613) 841-1111	geospizzaorleans@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4218	cf4e6c7a-4860-4c48-b5f7-f989fce2b522	704	t	3018 St Joseph Blvd	95	1	K1E 1E2	45.4766850000	-75.5135520000	(613) 424-7700	timathamniyom@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4219	bd04be49-f480-4e45-8848-96fe84c7f245	705	t	1225 Kilborn Ave	65	1	K1H 7W8	45.3860369000	-75.6703246000	(613) 521-2222	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4220	12f2bb37-eede-4e41-8576-951ab689b0e9	706	t	1433 Woodroffe Ave	65	1	K2G 1W1	45.3419357000	-75.7560521000	(613) 226-9000	sumudu71@yahoo.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4221	7bf82486-4ebd-422a-b71d-469535d6770b	707	t	569 Gladstone	65	1	K1R 5P2	45.4095237000	-75.7004569000	(613) 680-7774	eljammalali073@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4222	f8de796f-7517-4c17-9c2e-d1e65da68c83	708	t	1 Tartan Drive	103	1	K2J 2W7	45.2699270000	-75.7540420000	(613) 825-6565	mingrong2015@yahoo.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4223	4e91a041-413f-46dd-93f2-b0b7ef01302f	709	t	212 bank street	65	1	K2P 1X1	45.4171473000	-75.6980446000	(613) 680-0886	2828eddie@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4224	e248b237-5f9a-4e56-b463-145061e3e69b	710	t	110 Boulevard Gr�ber	32	2	J8T 6H5	45.4670767000	-75.7008585000	(819) 568-2121	huydo@live.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4225	d84fae38-4e38-47b2-b87f-b77890ae60ca	711	t	380 Chemin Vanier	44	2	J9J 3H8	45.4127014000	-75.8089522000	(819) 682-4749	joeayoub67@outlook.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4226	5a105dc3-3de2-4279-a919-32a68475f9c1	712	t	29 Chemin Eardley	44	2	J9H 4J9	45.3971676000	-75.8476119000	(819) 682-4603	patateloulou@hotmail.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4227	0a4570dc-4efb-45de-8e51-a30391a70141	713	t	68 Rue Main	32	2	J8P 4C8	45.4786901000	-75.6499326000	(819) 663-1266	fsayedd@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4228	6bdb377d-1d3f-4628-8353-9c1af3b4ce72	714	t	631 Montreal Rd	65	1	K1K 0T4	45.4430861000	-75.6420402000	(613) 747-2444	hani_soueid613@live.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4229	e95e44a5-8db8-4347-bfec-2637ce0f4ec6	715	t	1443 Ogilvie Rd	65	1	K1J 7P3	45.3770269000	-75.6465522000	(613) 366-3588	nathaliezaher@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4230	73cd461e-c151-4440-9091-dfa20e4698d4	716	t	253, boul Maloney	32	2	J8P 1C3	45.4852604000	-75.6083258000	(819) 663-3223	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4231	0f6b9361-0b91-4686-b9fc-1c5b6ac51cec	717	t	2208 St Joseph Blvd	95	1	K1C 2E3	45.4671816000	-75.5324357000	(613) 424-2100	mirzarizwansharif@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4233	0221a87a-d258-4789-b80f-2fad8049b06f	719	t	470 Boulevard Gr�ber	32	2	J8T 6C7	45.4711794000	-75.7181553000	(819) 243-2003	l.sonia@videotron.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4234	ec56df2c-f94f-47b3-857a-220272dd3b58	720	t	491 Chemin Vanier	32	2	J9J 3J1	45.4161822000	-75.8070300000	(819) 684-8484	abbas_elarab@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4235	784d57b0-d975-40e3-ae46-9c0e0a5466d0	721	t	4 Rue Belmont	44	2	J9H 6J5	45.3950698000	-75.8303042000	(819) 682-8494	minhkhuu03@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4237	a8819ee9-13b9-46e8-8773-d18ac1c15889	723	t	3621 Innes Rd	95	1	K1C 1T1	47.9029640000	1.9092510000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4238	a2797164-8e91-4fcb-a615-62826fd14084	724	t	1896 Prince of Wales Drive	8	1	K2C 1P5	45.3538415000	-75.7048504000	(613) 224-1100	CALLAMER@GMAIL.COM	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4239	d3f0ca4c-6595-459d-bdeb-6fa075476c55	725	t	1489 Merivale Rd	65	1	K2E 5P3	45.3591022000	-75.7357633000	(613) 723-2323	mohammednawabi711@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4240	48300f4d-10b4-47f2-9229-0677ed78353b	726	t	229 Boulevard Saint-Ren� Ouest	32	2	J8P 2V5	45.4920324000	-75.6557803000	(819) 643-1222	danykanaan@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4241	8bd27d5d-2337-4f78-9aba-da81e125c389	727	t	574 Boulevard Saint-Joseph	108	2	J8Y 4A5	45.4499787000	-75.7356338000	(819) 776-1600	Rabih2015_01@hotmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4242	d15a446f-3993-46d2-b7e2-5cdc6fc9965c	728	t	277 A St Joseph Bl	108	2	J8Y 3Y2	45.4384237000	-75.7330685000	(819) 775-9558	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4243	eb97af6d-960d-43bf-aa9c-a7788c016407	729	t	792 Somerset St W	65	1	K1R 6R2	45.4096350000	-75.7101679000	(613) 366-2356	gaganvirk93@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4244	67fe83dc-b87f-4554-9942-d09900772022	730	t	1756 Laurier St	116	1	K4K 1L5	45.5490150000	-75.2913395000	(613) 446-2867	info@friendlypizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4245	90829032-9bca-4d9f-bdc1-41b18d4f3ca5	731	t	541 Boulevard Saint-Joseph	108	2	J8Y 4A1	45.4489235000	-75.7350789000	(819) 777-4032	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4246	ffefac9e-302e-419d-8c43-fab8739aa426	732	t	425 Chemin Vanier	44	2	J9J 3H9	45.4143342000	-75.8078371000	(819) 557-3868	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4247	7a12fadd-135b-401b-89c8-f12849d93abc	733	t	123 mcarthur	65	1	K1R 6R2	45.4310370000	-75.6650167000	(555) 555-5555	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4248	87c8fd8d-8a6c-4618-9faf-9bef87376e94	734	t	1574 Walkley rd	65	1	K1V 6P5	45.3766289000	-75.6468960000	(819) 921-5111	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4249	19c5954e-45da-4926-b3bf-d37ee02934a5	735	t	2 Boulevard Louise-Campagna	32	2	J9A 2X1	45.4304611000	-75.7630584000	(819) 775-3355	michelkanaan@live.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4250	547a96c7-913d-457e-b883-36a496ff70a6	736	t	761 Boulevard Saint-Joseph	32	2	J8Y 4B7	45.4591246000	-75.7421385000	(819) 771-3333	francoiskharrat@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4251	0f0e9a16-b585-4e06-9397-3bc2560c4c16	737	t	178 Mcarthur ave	7	1	K1L 6P9	45.4309947000	-75.6626770000	(613) 842-8118	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4252	e5d06569-368a-44ac-b601-9eea09238b1f	738	t	956 Merivale Rd	65	1	K1Z 6A2	45.3815640000	-75.7335178000	(613) 722-0888	zrf6479390334@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4253	d5b0f4dd-f43a-4b37-8f4f-c8b86c90fe55	739	t	6004 Voyageur Dr	95	1	K1C 2K1	45.4757279000	-75.5482985000	(613) 824-9400	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4254	2be20893-f7f1-4bb1-b94b-329e83f83914	740	t	3515 Petawawa Blvd	113	1	K8H 1X1	45.9015423000	-77.2839726000	(613) 687-2080	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4255	3dd6591a-c4be-4eb0-a629-6b8e03615ede	741	t	3617 Innes Rd	95	1	K1C 1T1	45.4493734000	-75.5219708000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4256	8917fcd2-dc22-4742-83e8-61778ba7cdb9	742	t	349 Dalhousie St	65	1	K1N 7G1	45.4282415000	-75.6903765000	(613) 315-2220	salimreza196@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4257	415b2f28-d5b0-4f8d-9609-9713a9b728c9	743	t	779 Boulevard Maloney E	32	2	J8P 1G5	45.4830096000	-75.6161237000	(819) 893-5959	info@funjunction.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4258	3f988600-f78b-477f-8721-af1c774088bc	744	t	3256 River Road	17	1	K4M 1B4	45.1328554000	-75.6328994000	(613) 826-0029	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4259	dae3c43e-7ecb-4159-9d88-46baab73497b	745	t	2666 Alta Vista Dr	65	1	K1V 7T4	45.3735154000	-75.6634584000	(613) 521-1102	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4260	b149cadb-ff54-4004-91f9-c4891ad02805	746	t	5370 Canotek road	65	1	K1J 9E8	45.4553761000	-75.5819723000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4261	ff96a23d-b090-4e20-b018-ccc2ad36e6a1	747	t	1766 Carling Ave	65	1	K2A 1E1	45.3773384000	-75.7533970000	(613) 798-5697	fullhouse888168@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4262	180168f0-bc6d-4a8f-8c2e-e9dc50964432	748	t	88 Jamie Avenue	8	1	K2E 6T6	45.3362414000	-75.7156692000	(613) 727-0702	admin@rinag.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4263	7e5b8e0c-f5dc-4d43-96da-122118653cb7	749	t	105 Broadway West	109	1	K0G 1N0	44.9201661000	-75.8397301000	(613) 269-9393	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4264	53019e60-fc5d-41a4-b6de-c2f818eb4131	750	t	203 Chemin d'Aylmer	32	2	J9H 6H4	45.3965312000	-75.8338989000	(819) 684-4646	bayazid.bahramiwand@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4265	977a3f88-e07e-45e5-9a73-0b95d89cff95	751	t	455 Boulevard Riel	108	2	J8Z 3P9	45.4649433000	-75.7724102000	(819) 772-0001	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4266	5288568f-1152-4081-b1f6-3eb7e69743db	752	t	643 Boulevard Saint-Ren� O	32	2	J8T 8M4	45.4909443000	-75.6767606000	(819) 246-5000	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4267	b87dd89a-9255-4eb2-a9f7-ffdca6a99dc1	753	t	85 Rue Bellehumeur	32	2	J8T 6K5	45.4760246000	-75.6913657000	(819) 282-1547	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4268	ae4dc28b-8198-4524-ab39-9ca2a59f12e8	754	t	1209 Wellington St. W	65	1	K1Y 2Z8	45.4004212000	-75.7306536000	(613) 366-1975	info@filsdiner.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4269	09204bd3-56eb-4190-8f3d-c9ea3306a567	755	t	212 Boulevard Saint-Joseph	32	2	J8Y 3X4	45.4347342000	-75.7328138000	(819) 770-0008	ladiffrence212@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4270	424c8546-ed3e-4bf1-a3b2-5eb60821d8f6	756	t	10 Townsend Drive	104	1	N0B 1M0	43.4864092000	-80.4150039000	(519) 648-4976	info@littlegyrosgreek.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4271	1c708981-18d7-4b8e-813b-d087f24d16f0	757	t	48 Avenue Gatineau	32	2	J8T 4J3	45.4782008000	-75.7262312000	(819) 568-4749	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4272	7faa0c7f-d93c-4aa7-b263-7db5cd97ac50	758	t	70 Rue Montcalm	32	2	J8X 2L5	45.4268781000	-75.7241387000	(819) 777-8457	brothers530@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4273	e6b95149-b9c4-4846-a614-5c2b77ab8941	759	t	250 Greenbank Rd Unit 2A	8	1	K2H 8X4	45.3244028000	-75.7795626000	(613) 695-8388	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4274	a83602f5-b898-4634-984d-b0c1a3918430	760	t	55 Montreal Rd	65	1	K1L 6E8	45.3521753000	-75.7778544000	(613) 366-1987	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4275	414b042d-d6fd-4863-8f13-a0c9d6d7eee0	761	t	5055 Innovation Dr	65	1	K2K 1X7	45.3439678000	-75.9306033000	(613) 271-1123	brothers530@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4276	a6c1f16f-efb6-4e6d-87b5-9d1a7876675f	762	t	4235 Strandherd Dr	103	1	K2G 6E5	45.2689556000	-75.7806900000	(343) 547-0865	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4277	5701b579-2cdb-4866-9fd3-8e7a96f91450	763	t	5373 Fernbank Rd Unit C5	42	1	K2S 1B6	45.2735024000	-75.8708989000	(613) 836-8088	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4278	3a2742f6-9fe5-4afe-9d2b-ee7af19c4795	764	t	870 Somerset Street West,	65	1	K1R 6R7	45.4215296000	-75.6971931000	(613) 680-1688	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4279	00296183-217a-467e-8834-946da586f42d	765	t	474 Hazeldean Rd	73	1	K2L 4E5	45.2972911000	-75.8884933000	(613) 831-0525	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4280	abbd0821-a9b2-467f-83b2-80f301477e8e	766	t	137 Principale St	108	2	J9H 3M6	42.3020647000	-70.9078346000	(819) 635-6776	keolapoke@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4281	5787bd19-cbdd-49c0-b632-703f75f6527e	767	t	843 Somerset Street West	65	1	K1R 6R6	45.4090168000	-75.7124275000	(613) 230-6000	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4282	a2bf581d-a0ae-4b39-833c-a7793970e101	768	t	857 Somerset Street west	65	1	K1R 6R6	45.4090349000	-75.7126750000	(613) 695-7089	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4283	ee52f92e-5302-4b14-9a62-cb3d7093032c	769	t	10 Rue Belmont	44	2	J9H 6J5	45.3942300000	-75.8302090000	(819) 684-4331	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4284	69ce779c-761c-4575-9597-2c6dab002121	770	t	862 Merivale Rd	65	1	K1Z 5Z6	45.3846707000	-75.7328310000	(613) 725-5665	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4285	20f5da5e-3f0e-4941-884d-02853f6f2e4b	771	t	2560 Bank Street	65	1	K1T 1M9	45.3535830000	-75.6411234000	(613) 733-4444	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4286	43979f05-466b-44da-9fb6-69c8c9cfa20f	772	t	1588 Walkley Rd	65	1	K1V 6P5	45.3770269000	-75.6465522000	(613) 523-6969	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4287	7c91e82b-bf97-4323-aed6-4821f5b2cae8	773	t	105 Shuttleworth Dr. Unit 3	98	1	K1T 0W7	45.3186807000	-75.5915606000	(343) 546-8189	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4288	d245e638-10da-42f1-aa6b-055ec0ef0501	774	t	34 Highbury Park Dr Unit C5	65	1	K2J 5C6	45.2773898000	-75.7497506000	(613) 825-7755	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4289	e03fab2e-5d0c-4402-9009-dff728f23ace	775	t	1250 Rue Crescent	28	2	H3G 2A9	45.4968784000	-73.5753705000	(514) 543-1522	info@restaurantmontako.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4290	04d71225-fb5e-426a-b753-459149b5289a	776	t	1227 Bank St	65	1	K1S 3X7	45.3914883000	-75.6807424000	(613) 733-6161	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4291	25ebb88b-d107-42eb-b36f-246400c73656	777	t	245, rue de Cannes	32	2	J8T 8C5	45.4894734000	-75.7235629000	(819) 246-5251	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4292	fcb21a79-1a9e-44d4-9c7e-d804c88f1e2b	778	t	1262 Wellington St. W	65	1	K1Y 3A5	45.3991856000	-75.7333303000	(613) 366-3012	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4293	5c233ccf-bb2a-4686-97f0-81db79ad3b8a	779	t	\N	95	1	\N	39.2946989000	-76.5991794000	(613) 733-6161	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4294	9a3698e7-e94c-42f4-985b-ec9725ecd2d3	780	t	\N	65	1	\N	45.4215296000	-75.6971931000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4295	fa2264ad-cbfe-4a6b-b521-88463d04d65d	781	t	1730 Montreal Rd	65	1	K1J 6N3	45.4456921000	-75.6101624000	(613) 695-9955	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4296	a08ce73c-f1b6-433f-bc0a-b84ca0ceda03	782	t	1463 Merivale Rd	65	1	K2E 5N9	45.4157708000	-75.6916205000	(613) 727-8686	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4297	33b8b0e1-9046-409a-b6a6-4ca37c7f4368	783	t	1500 Bank St	65	1	K1H 7Z2	45.4157708000	-75.6916205000	(613) 737-1107	Pulkit@colonnadepizzas.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4298	0441e578-1b98-4f08-aff5-2c02c3f14bd4	784	t	2140 Carling Ave	65	1	K2A 1H1	45.4157708000	-75.6916205000	(613) 729-7000	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4299	5842ef1a-a8da-436e-9e2b-d3df8ad01277	785	t	896 Greenbank Rd	65	1	K2J 0R2	45.4157708000	-75.6916205000	(613) 825-8100	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4300	51d82c1f-f7c9-4fea-9f35-b5c0d6d1e973	786	t	6179 Perth Street	40	6	K0A 2Z0	45.1929633000	-75.8418266000	(613) 838-5112	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4301	f783974e-779e-4812-b03d-2f26ecede68e	787	t	7255 Chambly Rd	64	2	J3Y 8C7	45.4927539000	-73.3948971000	(450) 443-2357	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4302	33a013c4-e387-4420-8402-e182d31592db	788	t	5031 Bank St	98	1	K1X 1G8	45.2974272000	-75.5795613000	(613) 425-6600	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4303	ab514673-13d3-4548-a5b6-4226126997e8	789	t	455 Boulevard Riel	108	2	J8Z 3P9	45.4648975000	-75.7724030000	(819) 815-1345	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4304	da50d6fc-ef22-4f8c-8d4d-8fd1c8a81d10	790	t	455 Boulevard Riel	108	2	J8Z 3P9	45.4648975000	-75.7724030000	(819) 815-1345	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4305	82adf466-3e19-4ad3-a4ef-dd793033b6f8	791	t	911 Richmond Road	65	1	K2A 0G8	45.3784387000	-75.7746555000	(613) 728-0909	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4306	002d06c7-8ae6-436d-ae51-ae9b4ced0bf2	792	t	730 Somerset	65	1	K1R 6P8	45.4215296000	-75.6971931000	(613) 680-8867	xibaoqin@yahoo.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4307	8f612d45-1136-4963-8e00-a85fba4a91b0	793	t	425 McArthur Ave 5	65	1	K1K 1G5	45.4325302000	-75.6470232000	(613) 842-9999	stackedsmokedmeatgrill@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4308	89509876-38d8-4aa9-868a-f3d0e4dcb17a	794	t	714 Gladstone Ave	65	1	K1R 7B2	45.3535830000	-75.6411234000	(613) 233-1000	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4309	9aef5b51-970a-41a9-ba0c-3c19b642b25e	795	t	855 Chem. de Masson	68	2	J8M 1B2	45.5470381000	-75.4217801000	(819) 281-4004	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4310	7f21828f-e13d-47c4-bb92-5764e9d85544	796	t	1675 Tenth Line Rd	65	1	K1E 3P6	45.4685112811	-75.4917121226	(613) 834-1112	Pareaorleans@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4311	3fd1b3c8-4999-4ed8-9e28-bda010f6a5d8	797	t	22, rue des Flandres	32	2	J8T 4R7	45.4711794000	-75.7181553000	(819) 246-0000	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4312	c8eaee2e-77b8-4366-8817-37e2a833ece9	798	t	355 Bd Gr�ber	32	2	J8T 6H8	45.4765446000	-75.7012723000	(819) 246-1010	mohandkacimi@yahoo.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4314	3a66458b-5744-4d4a-ae10-8026b64db0f2	800	t	105 John St N	59	1	K7S 2N5	45.4335091000	-76.3541889000	(613) 622-3000	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4315	e516264e-1534-481f-820c-463c56d18510	801	t	643 Boulevard Saint-Ren� O	32	2	J8T 8M4	45.4909443000	-75.6767606000	(819) 815-9990	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4316	5225c81b-79b7-4f8b-b161-a53b8610d06b	802	t	643 Boulevard Saint-Ren� O	32	2	J8T 8M4	45.4909443000	-75.6767606000	(819) 246-5000	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4317	f0f2c020-4ddb-4686-943f-deb470752437	803	t	411 Saint-Ren�	32	2	J8P 8A5	45.4932738000	-75.6407748000	(819) 663-1717	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4318	f8b17465-e1ef-415d-850f-e87f91d01b42	804	t	6179 Perth St. Unit 40	40	6	K0A 2Z0	45.1929633000	-75.8418266000	(613) 838-4646	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4858	493af1bc-2ad1-4dc4-a7bc-bc895f3b1f07	1	t	1615 Orleans Blvd.	95	3	K1C 7E2	45.4609985000	-75.5239029000	(613) 123-4567	cbouzi7039@rogers.com,james1234577@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4828	957d3660-f052-42da-8f25-1c776a39404a	524	t	280 West Hunt Club Rd, Unit 3	65	1	K2E 0B7	45.3395082000	-75.7120558000	(613) 225-8777	kalamr@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4859	b1ba580d-a214-48e6-b189-975bdf26206e	2	t	600 Terry Fox Drive	65	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	stefan@menu.ca	f	2025-09-25 17:34:13.516778+00	\N
4860	b6c82f24-1cb7-4fe7-9d4e-43f1e84abaee	3	t	691 Somerset St W	65	3	\N	45.4110985000	-75.7069016000	\N	\N	f	2025-09-25 17:34:13.516778+00	\N
4861	68854050-e2a3-4d57-bc57-cf6677438426	4	t	569 Gladstone	65	3	K1R 5P2	45.4094009000	-75.7003021000	(613) 563-9999	support@menu.ca,pizzashark@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4862	1cafbc4b-8f56-4f48-bbcc-ec0e5a7b68e4	5	t	1615 Orleans Blvd.	95	3	K1C 7E2	45.4609985000	-75.5239029000	(613) 590-0372	chris.bouziotas@menu.ca	f	2025-09-25 17:34:13.516778+00	\N
4863	f9fb55a6-4ea7-4928-b32d-4c7cab097820	6	t	500 Hazeldean Rd	73	3	K2L 2B5	45.2938995000	-75.8946991000	(613) 831-1121	ha@kanatanoodlehouse.com	f	2025-09-25 17:34:13.516778+00	\N
4865	19c55560-525d-4266-b4f2-ec83a0c521f8	8	t	1615 Orleans Blvd.	65	3	K1C 7E2	45.4609985000	-75.5239029000	(613) 830-1808	noemail@noemail.com	f	2025-09-25 17:34:13.516778+00	\N
4866	7feb2e5c-5475-49d5-83c6-1915aeb5fd7d	9	t	875 Richmond Rd	65	3	K2A 0G7	45.3792992000	-75.7733994000	(613) 722-9200	tonyho13@sympatico.ca	f	2025-09-25 17:34:13.516778+00	\N
4867	633cf2f1-ff91-4096-88db-7703cce17d0c	10	t	223 Laurier Avenue East	65	3	K1N 6P1	45.4259987000	-75.6817017000	(613) 421-2667	iaragi@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4868	e4bd5fa0-b2eb-4b3e-b3eb-71b3ce6e6798	11	t	3885 Innes Road	95	3	K1C 1T1	45.4530983000	-75.5112000000	(613) 834-9990	\N	f	2025-09-25 17:34:13.516778+00	\N
4869	ddcc192c-a627-42df-af80-794f09810699	12	t	375 Des Epinettes Ave	95	3	K1E 3E6	45.4656982000	-75.4953995000	(613) 841-1001	menu@mamarosa.ca	f	2025-09-25 17:34:13.516778+00	\N
4870	aad38637-c6d1-4c12-91d7-dfef52e16ef2	13	t	527 Bronson Ave	65	3	K1R 6J9	45.4059982000	-75.7025986000	(613) 688-5555	Bartours1982@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4871	c1da0035-d363-417e-9e9d-ae6386074c16	14	t	5517 Hazeldean Rd	42	3	K2S 0P5	45.2863998000	-75.9068985000	(613) 831-8585	kfrap2011@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4872	e5cbc9ce-18c8-45dd-b643-adb817ec7ec6	15	t	350 Booth St	65	3	K1R 7K1	45.4073982000	-75.7098007000	(613) 567-8228	noemail@noemail.ca	f	2025-09-25 17:34:13.516778+00	\N
4873	6455332f-5159-4495-b97e-899133623160	16	t	5669 Bank St	65	3	K4P 1C3	45.2771988000	-75.5682983000	(613) 688-3333	mike@papajoespizza.ca,saad.35@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4875	308c1b7d-7256-43d8-92a4-22bfa1c85434	18	t	127 Bridge St	69	3	K0A 1A0	45.2230988000	-76.1949005000	(613) 256-6000	mike@papajoespizza.ca,support@menu.ca,Alaa.nassar@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4877	b7ed2f9f-8758-4810-abe6-47e925f1b72a	20	t	523 Gladstone Ave	65	3	K1R 5N9	45.4100990000	-75.6987991000	(613) 695-5557	butisi24@yahoo.ca,support@menu.ca,menu@gladstonegoldengrill.com	f	2025-09-25 17:34:13.516778+00	\N
4879	723c8012-0371-46fa-be87-bdcd40e492b2	22	t	984 Merivale Rd	65	3	K1Z 6A4	45.3810005000	-75.7332001000	(613) 728-9700	HouseofLasagna@menu.ca	f	2025-09-25 17:34:13.516778+00	\N
4880	c524ec6a-239c-4966-a58b-c71deb241804	23	t	373 Dalhousie St	65	3	K1N 9L3	45.4276009000	-75.6899033000	(613) 789-2239	andrew.scott@franchise.pitapit.com	f	2025-09-25 17:34:13.516778+00	\N
4881	a4142a73-0f45-4646-a464-b955ba7bdb8e	24	t	1009 Merivale Rd	65	3	K1Z 6A6	45.3793983000	-75.7331009000	(613) 727-1222	Najihitti@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4882	59662817-3a65-4413-aa4f-4ceccf3919a8	25	t	1374 Baseline Rd	65	3	K2C 0A9	45.3624992000	-75.7369995000	(613) 225-8882	chong_lc@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4883	75d021ff-4bbf-474d-bb5f-bd04085c6fa1	26	t	4000 Bridle Path Dr	65	3	K1T 1Z5	45.3487015000	-75.6454010000	(613) 526-4666	menu@hungrysammys.com	f	2025-09-25 17:34:13.516778+00	\N
4884	2bd8256a-964b-4149-a203-8118ab9939a5	27	t	530 Rideau St	65	3	K1N 5Z6	45.4320984000	-75.6778030000	(613) 789-8888	menu@newshawarmaking.com	f	2025-09-25 17:34:13.516778+00	\N
4885	2a663d34-87c5-49d5-87cd-8b0b59f651a1	28	t	251 Montreal Rd	65	3	K1L 6C4	45.4362984000	-75.6613007000	(613) 749-1555	menu@eastviewpizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4886	aeb8eca1-fcd4-43bf-9f09-f542d8159a67	29	t	411 McArthur Ave	65	3	K1K 1G7	45.4322014000	-75.6483002000	(613) 741-3333	menu@pizzapalaceottawa.com	f	2025-09-25 17:34:13.516778+00	\N
4887	9b04055f-9e1c-4699-bede-a3aa4aee138e	30	t	159 Montreal Rd	7	3	K1L 6E8	45.4347992000	-75.6651001000	(613) 746-4843	pierre_sfeir@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4888	664b5b3d-c5ba-4979-9274-cc1fad37f178	31	t	876 Montreal Rd.	65	3	K1K 4L3	45.4462013000	-75.6308975000	(613) 747-4000	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4889	3ad2c67b-aa43-4404-a78c-f656b193b9d4	32	t	353 St Laurent Blvd	65	3	K1K 2Z3	45.4491005000	-75.6511993000	(613) 741-2323	\N	f	2025-09-25 17:34:13.516778+00	\N
4890	f717a499-eed9-4185-94a2-667c4fadc4a5	33	t	5929 Jeanne D'Arc Blvd S	65	3	K1C 6V8	45.4649010000	-75.5409012000	(613) 830-8002	\N	f	2025-09-25 17:34:13.516778+00	\N
4891	ab84e03b-51dc-4d6b-90ea-8a1f834012f8	34	t	175, boul Maloney E	32	4	J8P 1B9	45.4840012000	-75.6494980000	(819) 663-6663	menu@pizzaexpressextra.com	f	2025-09-25 17:34:13.516778+00	\N
4892	ba3f7a12-d5bf-40af-a748-3d13758b9fca	35	t	425, boul La V�rendrye E	32	4	J8R 1N2	45.5009003000	-75.6425018000	(819) 643-6433	mozzapizza@live.ca	f	2025-09-25 17:34:13.516778+00	\N
4893	74447a1b-0d9f-4b70-abbd-4d87561e16f2	36	t	3009 Carling Ave	65	3	K2B 7Y6	45.3552017000	-75.8052979000	(613) 726-6955	tajindiancuisine3009@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4894	554a1158-5602-45e9-9356-a4c1adc97718	37	t	6505 Jeanne D'Arc Blvd. N.	95	3	K1C 2R1	45.4793015000	-75.5361023000	(613) 837-8000	houseofpizzaorleans1@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4895	6b0eb23e-218a-478f-93a1-335e21b87dff	38	t	125 Preston Street	65	3	K1R 7P3	45.4081001000	-75.7138977000	(613) 230-8230	pst_55@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4896	7140fa6a-57f8-4a4b-9361-04dec8575a74	39	t	1055 Somerset St W	65	3	K1Y 3C4	45.4067993000	-75.7199020000	(613) 729-3282	lemongrassthai@msn.com	f	2025-09-25 17:34:13.516778+00	\N
4897	69e94b01-cfd7-4837-b8f3-202c4fda53c1	40	t	662 Somerset St W	65	3	K1R 5K4	45.4114990000	-75.7054977000	(613) 216-1220	no@no.ca	f	2025-09-25 17:34:13.516778+00	\N
4898	3a76497d-1f38-4272-95fa-88992022e706	41	t	210 Somerset St W	65	3	K2P 1P9	45.4171982000	-75.6913986000	(613) 667-4038	anishmehra@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4899	312db4ec-260f-4ac7-8882-66954a52065c	42	t	937 Carling Ave	65	3	K1Y 4E4	45.3953018000	-75.7132034000	(613) 728-3749	noemail@noemail.com	f	2025-09-25 17:34:13.516778+00	\N
4901	ef86f335-f3f8-4840-9448-88df24a36cd7	44	t	2045 Meadowbrook Rd	65	3	K1B 4W7	45.4269981000	-75.6009979000	(613) 741-7662	fadinemr@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4902	cf6b31b0-53c1-4a72-b5ac-75b7424e5745	45	t	1443 Ogilvie Rd	65	3	K1J 7P3	45.4317017000	-75.6183014000	(613) 741-7000	nathaliezaher@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4903	1301e8f8-1536-4076-b092-be24b07fcc33	46	t	2006 Robertson Rd	8	3	K2H 1A5	45.3246002000	-75.8271027000	(613) 596-0760	menu@koiasiarestaurant.com	f	2025-09-25 17:34:13.516778+00	\N
4904	faa43c82-a409-4365-a4a7-40ae72be551b	47	t	1433 Woodroffe Ave	8	3	K2G 1W1	45.3418999000	-75.7559967000	(613) 226-9000	Mrmozz.nepean@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4905	83f3c166-75cd-4824-ab8f-1cb66675e2af	48	t	1610 Merivale Rd	8	3	K2G 4A1	45.3483009000	-75.7322998000	(613) 225-3297	menu@merivalepizzaandwings.com	f	2025-09-25 17:34:13.516778+00	\N
4907	e7b67873-45fd-4087-9b43-861ade340317	50	t	3059 Carling Ave	65	3	K2L 4B6	45.3544006000	-75.8071976000	(072) 045-6789	shawarmahouse@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
4908	d3db265e-f9f2-489d-ad47-d9826b1037b0	51	t	425 Donald St	65	3	K1K 1L8	45.4285011000	-75.6493988000	(613) 741-7171	menu@dinosanddonalds.com	f	2025-09-25 17:34:13.516778+00	\N
4909	5dbe1b49-48f0-4f9f-9973-363a18293cc4	52	t	2 Woodfield Dr	8	3	K2G 3Y3	45.3380013000	-75.7260971000	(613) 723-5511	menu@winghing.ca	f	2025-09-25 17:34:13.516778+00	\N
4910	7f5a99a9-6c15-4283-949f-78f3b8488847	53	t	1224 Shillington Ave	65	3	K2C 4C3	45.3805008000	-75.7283020000	(613) 728-2424	ivan.masrieh@gmail.com,greekos.ca@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4911	36a1b271-e73c-493b-92a9-ba74789cb21b	54	t	1574 Walkley Rd	65	3	K1V 6P5	45.3768997000	-75.6471024000	(613) 523-6666	houseofpizzawalkley@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4912	12c306e0-ecb2-4f08-8aea-9c8da30bd3f7	55	t	1078 Merivale Rd	65	3	K2C 4A1	45.3773003000	-75.7332993000	(613) 729-9738	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4913	45515032-755b-4184-aa29-4573f88884ad	56	t	747 Richmond Rd	65	3	K1Z 6W2	45.3828011000	-75.7698975000	(613) 728-2422	menu@houseofpizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4914	bcd12974-f889-4c2a-ba5d-d558c7b8c754	57	t	3848 Innes Rd	95	3	K1W 0C8	45.4514008000	-75.5152969000	(613) 824-8787	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4915	ff45f7ac-1b8d-4bfa-b633-0c84d409f204	58	t	25 Tapiola Cres	65	3	K1T 2J7	45.3637009000	-75.6471024000	(613) 737-3888	mhajo@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4916	09d3c215-012c-4d24-bfdb-509131136975	59	t	385 Tompkins Ave	95	3	K1E 3H4	45.4771996000	-75.4981995000	(613) 834-7800	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4917	d68cec66-1472-4b0a-867c-36d023840391	60	t	245, rue de Cannes	32	4	J8T 8C5	45.4902992000	-75.7238998000	(819) 246-5252	roulam@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
4918	54a7fc95-1f3b-44ea-a401-66c602af3533	61	t	68 Wylie Ave	65	3	K2B 6M4	45.3545990000	-75.8066025000	(613) 828-1610	\N	f	2025-09-25 17:34:13.516778+00	\N
4919	f28e33c0-2d5f-4e06-a563-2a829c569fe2	62	t	201 Marier Ave	7	3	K1L 5R6	45.4392014000	-75.6632996000	(613) 742-4411	samir1boulos@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4920	1becd91d-7b29-4466-8fd5-f6851ea87f98	63	t	169 York St	65	3	K1N 5T4	45.4299011000	-75.6891022000	(613) 232-3100	funkyimran57@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4921	5f33b15d-8158-4c68-a95a-ed17811d1986	64	t	2908 St. Joseph Blvd	95	3	K1C 1G8	45.4746017000	-75.5179977000	(613) 824-1240	owlying@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4922	54892ff2-d010-4637-a21c-ae118dd1a64d	65	t	988 Wellington St	65	3	K1Y 2X8	45.4056015000	-75.7227020000	(613) 722-5995	n@n.ca	f	2025-09-25 17:34:13.516778+00	\N
4923	384bd5d6-0bd0-474f-9101-bed20707b53b	66	t	250 Centrum Blvd	95	3	K1E 3J1	45.4804001000	-75.5104980000	(613) 590-9777	medfalah132@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4926	516a81dd-c78f-412c-937d-8066c8c1fafb	69	t	134, rue Principale	44	4	J9H 4G8	45.3950005000	-75.8430023000	(819) 684-4372	marwabitar1@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4927	f555ad7a-8dc4-4f05-8169-c3e21d037bd8	70	t	574, boul Saint-Joseph	32	4	J8Y 4A5	45.4499016000	-75.7359009000	(819) 777-1777	Rabih2015_01@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4928	63565387-f223-4399-97fb-9d6d04ee2519	71	t	1730 Montreal Rd	98	3	K1J 6N3	51.8642006000	-2.2381599000	(613) 421-3301	\N	f	2025-09-25 17:34:13.516778+00	\N
4929	c0e1f990-975f-4690-a750-991ce1f9e77a	72	t	1423 Woodroffe Ave	8	3	K2G 1V9	45.3432007000	-75.7570038000	(613) 228-2228	noemail@noemail.com	f	2025-09-25 17:34:13.516778+00	\N
4930	f6f9d4f1-ccc0-4d68-9bca-4e729bd1f488	73	t	342 Richmond Rd	65	3	K2A 0E7	45.3919983000	-75.7540970000	(613) 722-3474	accounts@expeditionshoppe.com	f	2025-09-25 17:34:13.516778+00	\N
4931	3f26da00-07c6-40a4-a051-790099ca7e62	74	t	102B McEwen Ave	65	3	K2B 5K7	45.3711014000	-75.7819977000	(613) 726-0726	\N	f	2025-09-25 17:34:13.516778+00	\N
4932	1b465e90-40f2-480c-a303-2522b29a2f18	75	t	2430 Bank St	65	3	K1V 0T7	45.3540001000	-75.6489029000	(613) 738-1555	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4933	8c7f6b46-4ae4-4ee4-a5cb-73952df6fb9f	76	t	2750-B Iris St	65	3	K2C 1E6	45.3479004000	-75.7872009000	(613) 695-3144	benjis.restaurant@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4934	d8488a7c-5a18-411c-8e9e-66a11d026be4	77	t	94 Montreal Rd	7	3	K1L 6E6	45.4339981000	-75.6668015000	(613) 562-0848	menu@lorenzosottawa.ca	f	2025-09-25 17:34:13.516778+00	\N
4935	0db85c8c-e15b-4e07-95cc-6a54d8a4bae5	78	t	211 Gilmour St	65	3	K2P 0N9	45.4164009000	-75.6897964000	(613) 238-3333	houseofgeorgiepizza@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4936	7119d7ba-0209-48e7-8dfe-6efa4fe3612c	79	t	408, boul La V�rendrye E	32	4	J8P 7T7	45.5009003000	-75.6416016000	(819) 669-6660	andrehawat@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4937	d27622b0-1dcc-4d82-8744-445bd5c7e98f	80	t	455, boul Riel	32	4	J8Z 2J8	45.4650002000	-75.7731018000	(819) 772-0001	najidergham@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4938	70cebab6-be92-4dd6-a8a0-d8b23c8ecd10	81	t	5935 Jeanne D'Arc Blvd S	95	3	K1C 2N1	45.4659004000	-75.5419006000	(613) 834-0503	menu@lunasole.ca	f	2025-09-25 17:34:13.516778+00	\N
4939	d44d622d-273f-411f-a705-6db00fcc247f	82	t	726 Somerset St W	65	3	K1R 6P8	45.4104004000	-75.7079010000	(613) 230-6815	weisnoodlehouse@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4941	331cbbd8-9050-4394-aec2-cf40cc1e3f34	84	t	1661 Carling Ave	65	3	K2A 1C4	45.3797989000	-75.7490005000	(613) 729-5929	GeorgiesOnCarling@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4942	5e173ab7-fcc9-49c2-90e2-3b8c7e3c4809	85	t	149 Kent Street	65	3	K1P 5P3	45.4188995000	-75.7021027000	(613) 234-1224	\N	f	2025-09-25 17:34:13.516778+00	\N
4943	c757640d-75a3-4be7-87b8-16c54c7de4f8	86	t	2241 St Laurent Blvd	65	3	K1G 1B1	45.3889008000	-75.6175003000	(613) 523-0002	hturkie@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4944	5c23998e-b38f-4337-bc29-4f8852c0b755	87	t	193 King Edward Ave	65	3	K1N 7L6	45.4325981000	-75.6889038000	(613) 321-4122	menu@champathai.ca	f	2025-09-25 17:34:13.516778+00	\N
4945	ea868c0a-d3e8-468f-96ef-c8ee83ff5c25	88	t	14 Main St E	12	3	K7A 1A2	44.8997002000	-76.0221024000	(613) 283-3333	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4946	4bf2b6c8-b61c-41ed-8853-3ede0cd7cf93	89	t	777 Principale St	72	3	K0A 1M0	45.3153992000	-75.0894012000	(613) 764-4442	milanocasselman10@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4947	fc6f2189-9c3d-4b05-8c51-4be36d3c2419	90	t	3796 Champlain Rd	47	3	K0A 1E0	45.4351006000	-75.1584015000	(613) 487-2227	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4948	8f046d79-5198-443c-8e57-9d7786b8e953	91	t	339 Dalhousie St	65	3	K1N 7G1	45.4283981000	-75.6905975000	(613) 241-3334	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4949	87c7bee3-e9cd-471c-b27e-2d505d03104c	92	t	2241 St Laurent Blvd	65	3	K1G 1B1	45.3903008000	-75.6183014000	(613) 521-6661	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4950	6ad698ce-2c61-475b-91bf-6ff6ba888411	93	t	990 River Rd	65	3	K4M 1B9	45.2341003000	-75.6772995000	(613) 692-9292	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4951	bc358de7-194c-4f33-8a05-8501277d7fdc	94	t	44 Seneca St	65	3	K1S 4X3	45.3914986000	-75.6900024000	(613) 730-6800	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4952	d504ae3c-082a-4a27-b183-68d05ed562fc	95	t	3050 Woodroffe Ave	8	3	K2J 4G3	45.2845001000	-75.7238007000	(613) 843-8033	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4953	24ee96fd-9a5c-4a75-ae25-34dbee7e0043	96	t	3987 Riverside Dr	65	3	K1V 1C1	45.3330994000	-75.6923981000	(613) 736-5678	menu@phothudo.com	f	2025-09-25 17:34:13.516778+00	\N
4954	9b606f15-9e9a-47c4-8ca0-492a6bbc2008	97	t	2600 County Rd 43	50	3	K0G 1J0	45.0218010000	-75.6261978000	(613) 258-4050	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4955	e9578816-80a8-42dd-b5d6-b764999e4479	98	t	335 Montreal Rd	62	3	K6H 1B6	45.0185013000	-74.7109985000	(613) 938-9300	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4956	59d3f77b-451f-4793-8dfa-e8dd719f8bdc	99	t	600 terry fox drive	73	3	K2L 4B6	45.3008995000	-75.9063034000	\N	stefan@menu.ca	f	2025-09-25 17:34:13.516778+00	\N
4994	43461a08-6b1b-4c2f-9a6f-8298981948d9	136	t	1440 Rue de l'Eglise	28	2	H4L 2H3	0.0000000000	0.0000000000	(514) 519-4372	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
4958	1c3ad7f0-f217-4171-b16c-d5ea9d3690d3	101	t	610 Rideau St	65	3	K1N 6A2	45.4331017000	-75.6750031000	(613) 789-2220	madhubancuisine@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4959	d7376cc4-f926-420a-9149-ed345646f8b1	102	t	331 Elgin St	65	3	K2P 1M5	45.4159012000	-75.6884995000	(613) 233-5000	no@thai.ca	f	2025-09-25 17:34:13.516778+00	\N
4960	260d8c72-f556-4b46-8d09-a44eccab3531	103	t	408 McArthur Ave	65	3	K1K 1G8	45.4319992000	-75.6485977000	(613) 842-9153	subra_deb@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4961	50e507a2-4b47-4de1-bfe0-1b675ecb7fff	104	t	1128 Cadboro Road	65	3	K1J 7R1	45.4306984000	-75.6207962000	(613) 695-6333	\N	f	2025-09-25 17:34:13.516778+00	\N
4962	2ac034cb-383b-4424-9ed5-e6a71cefe175	105	t	600 Terry Fox Drive	65	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	f	2025-09-25 17:34:13.516778+00	\N
4964	e167caae-19ce-4533-ac1f-cc47781dab6e	106	t	600 Terry Fox Drive	32	4	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	f	2025-09-25 17:34:13.516778+00	\N
4965	2d200b40-f344-4ccc-9860-51747db27f1f	107	t	600 Terry Fox Drive	32	4	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	f	2025-09-25 17:34:13.516778+00	\N
4966	df5370f5-8281-4d01-8c03-6e9615bfafaf	108	t	600 Terry Fox Drive	32	4	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	f	2025-09-25 17:34:13.516778+00	\N
4967	08a9a167-658a-4bf0-a2f4-6703b0131692	109	t	600 Terry Fox Drive	32	4	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	f	2025-09-25 17:34:13.516778+00	\N
4968	586a4beb-995b-452e-b802-49dd93b651cd	110	t	600 Terry Fox Drive	95	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	f	2025-09-25 17:34:13.516778+00	\N
4970	3348a7c2-2030-4786-9432-9c0354fb50d7	112	t	22, rue des Flandres	32	4	J8T 4R7	45.4705009000	-75.7186966000	(819) 246-0000	osman_moudi@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4971	11ef989d-e4f4-45ec-80b1-4122ab1ed9d0	113	t	285 Greenbank Rd	65	3	K2H 8K9	45.3241997000	-75.7774963000	(613) 828-2168	davesitu@me.com	f	2025-09-25 17:34:13.516778+00	\N
4972	5148c66b-1594-4d3c-b1be-84fa010beb4a	114	t	147, boul d'Europe	32	4	J9J 0A5	45.4421997000	-75.7954025000	(819) 595-6789	raed.ibrahim@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
4973	8fee9c39-8a0a-4a50-8435-d5e77a734425	115	t	1581 Greenbank Rd	65	3	K2J 4Y6	45.2739983000	-75.7470016000	(613) 843-9559	chilliesindian@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4974	ded6cab1-2944-489a-899e-c28a688ca779	116	t	201 rue Eddy	32	4	J8X 2X5	45.4319992000	-75.7204971000	(819) 525-4449	unclejohnda@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4977	7a39c78d-6b8c-440a-adb4-9e50eb7872a0	119	t	2567 Baseline Rd	65	3	K2H 7B3	45.3414001000	-75.7873001000	(613) 828-7926	no@no.ca	f	2025-09-25 17:34:13.516778+00	\N
4979	30f06df8-0b10-45e6-93ff-4497598bf3cf	121	t	2219 Arch St	65	3	K1G 2H5	45.3891983000	-75.6306000000	(613) 521-8500	moe_335@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4980	50ad097e-af7a-4248-a90e-3969099507b0	122	t	195 Rue Principale	44	4	J9H 6J8	45.3956985000	-75.8343964000	(819) 682-7777	gussader@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4981	25566925-f75e-42ae-9b7f-175c314f46c7	123	t	26 Bridge St	80	3	K7C 2V1	45.1372986000	-76.1429977000	(613) 253-0777	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4982	8d4859cc-a9d5-48ab-aa4b-f9a7b2078631	124	t	60 Harmer Ave	65	3	K1Y 3H9	45.3968010000	-75.7326965000	(613) 722-6002	you.karkache@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4983	b0e5f2fa-9eec-47c0-930d-313f3b8b5020	125	t	1 Rue Hobin Unit 5	65	3	K2S 1C3	45.2645988000	-75.9288025000	(613) 836-5151	sargon2222@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
4984	c9f9fa85-755b-45eb-8e05-469ccf9ce4c3	126	t	471 Hazeldean Rd	73	3	K2L 4B8	45.2981987000	-75.8887024000	(613) 831-3355	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
4985	b8e8011b-fd2f-49ea-81ae-dd9ae1c136d4	127	t	73, boul de la Gappe	32	4	J8T 0B5	45.4654999000	-75.7169037000	(819) 243-0500	\N	f	2025-09-25 17:34:13.516778+00	\N
4986	d435984f-5252-424a-9cd2-2a5a369cedea	128	t	1580 Dundas St	89	3	L4X 1L4	43.6136017000	-79.5786972000	(905) 276-5888	\N	f	2025-09-25 17:34:13.516778+00	\N
4988	ffc4d494-7529-40b4-975a-de38ec486c09	130	t	1896 Prince of Wales Dr	65	3	K2C 1P5	45.3539009000	-75.7040024000	(613) 224-7700	hawjins84@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4989	2eca9ea4-a016-4753-bbad-cddf801c9153	131	t	422 Bronson Ave	65	3	K1R 6J6	45.4086990000	-75.7042007000	(613) 231-1000	scottd.budden@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4990	7620ff79-3b27-4417-bc10-98590db10eaa	132	t	1896 Prince of Wales Dr	65	3	K2C 3W9	45.3539009000	-75.7040024000	(613) 274-0404	yan867297@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4991	1a1946f4-0392-4357-a659-72daa4919569	133	t	3679 Riverside Dr	65	3	K1V 1G8	45.3434982000	-75.6909027000	(613) 260-8555	riversidepizzathebest@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
4992	0d988dc4-7141-4738-93e2-a93b989e912b	134	t	250 Centrum Blvd	65	3	K1E 3J1	45.4803009000	-75.5106964000	(613) 834-0088	jackchung@sawasushi.ca	f	2025-09-25 17:34:13.516778+00	\N
4993	08f40e4a-edbc-495a-8a2f-817d01b3975e	135	t	1001 Queen Elizabeth Drive	65	3	K1S 5K7	45.3963013000	-75.7057037000	(613) 567-2254	\N	f	2025-09-25 17:34:13.516778+00	\N
4995	ce61ce61-167f-4007-adc4-394817d87844	137	t	4-2437 Finch Ave W	71	3	M9M 2E7	43.7503014000	-79.5502014000	(416) 749-9943	\N	f	2025-09-25 17:34:13.516778+00	\N
4996	67d2d6b5-3221-47a6-8043-66e7154708c1	138	t	1009 Merivale Rd	65	3	K1Z 6A6	45.3793983000	-75.7331009000	(613) 224-2242	Najihitti@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4997	37519811-385f-4417-a73f-98c3073af4e6	139	t	108, boul Lorrain	32	4	J8P 2E7	45.4949989000	-75.6073990000	(819) 643-2911	crystal_geinoz@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
4998	b7363cae-8219-42c5-8c4e-ab3acbcd8f61	140	t	650 Woodlawn Rd W	82	3	N1K 1B8	43.5425987000	-80.3076019000	(519) 780-1144	\N	f	2025-09-25 17:34:13.516778+00	\N
4999	08a5b307-2e22-4eab-a73b-9d1e0a973a39	141	t	1598 Cyrville Rd	98	3	K1B 3L8	45.4180984000	-75.6106033000	(613) 744-2865	noemail@noemail.ca	f	2025-09-25 17:34:13.516778+00	\N
5000	eac4d32c-b5bc-4e26-bc3e-2bc2794ab09d	142	t	1200 Prince of Wales	65	3	K2C 3Y4	45.3745003000	-75.7086029000	(613) 521-0800	houseofgreek@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5001	b4d86ff7-3c52-485c-a6ec-d349aad7a284	143	t	7772 Jeanne d'Arc Blvd	65	3	K1C 2R5	45.4822998000	-75.5276031000	(613) 830-3276	pizzatony51@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5002	69627be8-3af2-4b80-bf71-11d714035be7	144	t	1441 Ogilvie Rd.	65	3	K1J 7P3	45.4315987000	-75.6181030000	(613) 740-0001	\N	f	2025-09-25 17:34:13.516778+00	\N
5003	4c749da5-8ef8-4c38-a2e1-5aaf56ccb12c	145	t	3415 Dixie Rd Unit 4A	89	3	L4Y 2B1	43.6178017000	-79.5951996000	(905) 232-3288	\N	f	2025-09-25 17:34:13.516778+00	\N
5004	3e8aa468-f936-46e8-8be6-3cdbb290bb2d	146	t	1300 Finch Ave W	71	3	M3J 3K2	43.7640991000	-79.4897003000	(647) 430-7218	\N	f	2025-09-25 17:34:13.516778+00	\N
5005	1e330aac-73cf-429b-ba43-cd367dde917a	147	t	685 Fischer Hallman Rd, Unit G	4	3	N2E 4E9	43.4155998000	-80.5108032000	(519) 576-9996	noemail@noemial.ca	t	2025-09-25 17:34:13.516778+00	\N
5006	eed8917d-226b-48e5-8f2e-afee3290f0b2	148	t	1105 Cobden Rd	65	3	K2C 2Z1	45.3521996000	-75.7779007000	(613) 820-5040	melindaramadan@sympatico.ca	f	2025-09-25 17:34:13.516778+00	\N
5007	9ed4e897-cd7a-4566-a07e-a52dced448ce	149	t	583 College St.	5	3	M6G 1B2	43.6553001000	-79.4132996000	(416) 532-1250	info@porteree.com	f	2025-09-25 17:34:13.516778+00	\N
5008	9adc2281-3526-4e84-8f84-e6f5c10c2ce2	150	t	26 Northside Rd	65	3	K2H 5Z6	45.3286018000	-75.8167038000	(613) 721-6666	miki_kelman@yahoo.ca	f	2025-09-25 17:34:13.516778+00	\N
5009	5a0ec439-b2ff-42b4-b5e2-7ea4c86a8339	151	t	2895 Bank St	65	3	K1T 1G3	45.3485985000	-75.6268997000	(613) 739-6363	\N	f	2025-09-25 17:34:13.516778+00	\N
5010	e3196650-4015-41f2-9754-61152ad08080	152	t	1768 St. Clair Ave W	5	3	M6N 1J3	43.6739998000	-79.4610977000	(416) 519-9979	jnray3377@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5011	eec55dad-263c-496e-9fd7-d6fb0ac05a38	153	t	373 Somerset St W	65	3	K2P 0K1	45.4152985000	-75.6967010000	(613) 233-3399	linda52580@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5012	a88096f6-82d3-4728-b2cf-f888f9abd75c	154	t	1581 Bank Street	65	3	K1H 7Z3	45.3792000000	-75.6676025000	(613) 244-5775	\N	f	2025-09-25 17:34:13.516778+00	\N
5013	03a5c265-bccd-4441-97f8-f4187085f15d	155	t	1611c Bank Street	65	3	K1V 7Y8	45.3782997000	-75.6668015000	(613) 670-0000	radaideh@ggctgroup.com	f	2025-09-25 17:34:13.516778+00	\N
5014	3b5ca882-0d1a-4ed7-b5f5-e0bccb9a8229	156	t	1949 Finch Ave W. Unit C	71	3	M3N 2V3	43.7615013000	-79.4111023000	(647) 430-5790	\N	f	2025-09-25 17:34:13.516778+00	\N
5015	e7e3a98e-dd83-45ca-b44a-45d1bb81b5fc	157	t	2446 Bank St	65	3	K1V 1A4	45.3526001000	-75.6468964000	(613) 737-2121	bassamnaanoua@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
5016	b49f3ddb-1740-4564-bb4d-8bde53ec7399	158	t	4055 Carling Ave Unit 3	65	3	K2K 2A4	45.3381004000	-75.9076996000	(613) 270-8866	hamidmehdipour@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5017	0078ec7b-66fd-4e2d-a800-b39d497d92d8	159	t	2677 Alta Vista Road	65	3	K1V 7T5	45.3727989000	-75.6641998000	(613) 731-0666	arianakababhouse@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5018	1dbfe6bb-4584-4896-b9b2-0a9acde06530	160	t	800 Hunt Club Rd	65	3	K1V 1C3	45.3443985000	-75.6663971000	(613) 521-1230	hui3820@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5019	3802a1f4-ff21-4dae-9b58-e51d21c007a3	161	t	1755 St Laurent Blvd	65	3	K1G 3V4	45.4048996000	-75.6264038000	(613) 739-8833	\N	f	2025-09-25 17:34:13.516778+00	\N
5028	b17a36e9-d65f-46bd-a3d4-8adc49fc77f2	170	t	1 Tartan Drive	103	1	K2J 2W7	0.0000000000	0.0000000000	(613) 825-6565	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
5021	0a4f4414-ca93-40bd-9666-d2c96ce17c7e	163	t	87 Boulevard des Laurentides	48	4	H7G 1B4	45.5625000000	-73.6834030000	(450) 933-9949	\N	f	2025-09-25 17:34:13.516778+00	\N
5022	83c4c299-b640-47d1-a945-0e7afe11ab6f	164	t	2270 Markham Rd	66	3	M1B 2W4	43.8110008000	-79.2429962000	(416) 754-8188	\N	f	2025-09-25 17:34:13.516778+00	\N
5023	e7a4444e-d9fc-47bd-a280-c6fc2d5980cb	165	t	141 Cartwright Ave	71	3	M6A 1V4	43.7211990000	-79.4684982000	(647) 344-7933	miketran200313@yahoo.ca	f	2025-09-25 17:34:13.516778+00	\N
5024	0895a09f-d900-4759-bcdb-dadceb623c1b	166	t	1380 Notre Dame	33	4	H8S 2C8	45.4348984000	-73.6753998000	(514) 634-1011	restaurantpizzeriatoto@bellnet.ca	f	2025-09-25 17:34:13.516778+00	\N
5025	88de330e-b160-4317-b278-3b919c2702c4	167	t	2564 St. Joseph Blvd	95	3	K1C 1G3	45.4706001000	-75.5257034000	(613) 837-6600	nashs63@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5027	a2553f98-88fe-4dd4-a457-cfab6aa53003	169	t	591 March Rd	73	3	K2K 2M5	45.3475990000	-75.9233017000	(613) 599-0090	tej@urbanturbankanata.ca	f	2025-09-25 17:34:13.516778+00	\N
5029	51ca32e8-a70d-4d49-8a5f-9f2034b17214	171	t	1383 Clyde Ave	65	3	K2G 3H7	45.3596001000	-75.7384033000	(613) 225-5225	\N	f	2025-09-25 17:34:13.516778+00	\N
5031	f3b9cf0b-a149-437e-ae0a-6d87ffab3b64	172	t	1991-A Finch Ave W	5	3	M3N 2V3	43.7570000000	-79.5196991000	(416) 746-8899	phanthai@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5032	ca0a2c99-516c-445b-9486-79d014748b90	173	t	1580 Merivale Rd	65	3	K2G 4B5	45.3512993000	-75.7344971000	\N	\N	f	2025-09-25 17:34:13.516778+00	\N
5033	d636ee87-301b-4115-a2cd-779e0fcf531f	174	t	1134 Cadboro Rd	65	3	K1J 9K4	45.4309998000	-75.6211014000	(613) 564-9888	noemail@noemail.ca	f	2025-09-25 17:34:13.516778+00	\N
5034	9f84d1e1-39dd-4927-97f2-392ad1bbc4b5	175	t	1589 Bank St	65	3	K1H 7Z3	45.3787994000	-75.6675034000	(613) 260-3893	\N	f	2025-09-25 17:34:13.516778+00	\N
5035	99dd19e8-91ab-4304-9038-bab1574973a1	176	t	1060 St Laurent Blvd	65	3	K1K 3B4	45.4268990000	-75.6389008000	(613) 745-1791	brotherwu@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5036	21ac5f4d-6007-4f59-b07f-95528af67553	177	t	5831 Boul. Monk	28	4	H4E 3H2	45.4599991000	-73.5967026000	(514) 762-0001	soufanh@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5038	3d6fdf5c-accd-448f-9775-328b0d9f92c8	179	t	124 Chestnut St	5	3	M5G 1R3	43.6551018000	-79.3861008000	(416) 506-1725	\N	f	2025-09-25 17:34:13.516778+00	\N
5039	1fdaba84-830c-4d9c-ba12-784fa6c0895f	180	t	6-4055 Carling Ave.	73	3	K2K 2A4	45.3381004000	-75.9076996000	(613) 963-0625	no@no.ca	f	2025-09-25 17:34:13.516778+00	\N
5040	3cf32ac8-e29c-4a35-b311-16495d85171d	181	t	3549 Av Lacombe	28	4	H3T 1M2	45.4971008000	-73.6231003000	(514) 739-1817	a_zihri@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5041	7c0fdc1c-816b-40eb-8a63-1d276a861eab	182	t	4886 Boul. Saint Charles	22	4	H9H 3E2	45.4668007000	-73.8744965000	(514) 626-1626	\N	f	2025-09-25 17:34:13.516778+00	\N
5042	3629d5ce-35b3-44c1-9e4d-5754cf7a7009	183	t	683 Bronson Ave	65	3	K1S 2B9	45.4021988000	-75.7003021000	(613) 234-1377	Ja.newton@sympatico.ca	f	2025-09-25 17:34:13.516778+00	\N
5043	8a1616a0-5557-4aab-af14-fd0bc54415c9	184	t	2701 St Joseph Boul	65	3	K1C 1G4	45.4720001000	-75.5231018000	(613) 837-0518	easterncity@sympatico.ca	f	2025-09-25 17:34:13.516778+00	\N
5044	a23218e1-96e4-4a4b-ae9a-fad91bc3d98b	185	t	121 Preston St	65	3	K1R 7P3	45.4082985000	-75.7142029000	(613) 421-1777	charmthaicuisineottawa@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5046	d1de8a1f-43fa-4dad-8a5f-f3c70cec142a	187	t	491 Somerset St W	65	3	K1R 5J7	45.4138985000	-75.7003021000	(613) 233-2320	dvreco@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5047	a5138dcd-4929-4307-9950-a22cdffa2c21	189	t	449 McArthur Ave	65	3	K1K 1G3	45.4325981000	-75.6444016000	(613) 741-4011	lailaichinesefood@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5048	17195e5d-bc3f-4e70-8c0b-760b2c85c112	190	t	5925 Perth St.	40	3	K0A 2Z0	45.1935997000	-75.8395996000	(613) 838-4334	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
5049	fd8e1bf9-b579-4d1d-bed1-90ba406ec12b	191	t	270, boul Labelle	100	4	J7A 2H4	45.6273003000	-73.8075027000	(450) 971-5749	jardinthai@videotron.ca	f	2025-09-25 17:34:13.516778+00	\N
5050	b7c98f9b-f2f2-42a1-b567-0748cad7215e	192	t	208, ave Dorval	84	4	H9S 3H3	45.4417992000	-73.7403030000	(514) 631-0631	\N	f	2025-09-25 17:34:13.516778+00	\N
5052	189ff12e-da36-4ffc-a901-582debb4b136	194	t	1021 Cyrville Rd	65	3	K1J 7S4	45.4257011000	-75.6380005000	(613) 741-7888	rostamp@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5053	5d21dba8-85e0-4f5b-960f-97a2e8dc718a	195	t	30, rue de Valcourt, unit� 30	32	4	J8T 8G8	45.4924011000	-75.7074966000	(819) 815-1577	tonimontana630@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5054	f97a1b63-19e0-461f-a566-8920cb34fa6f	196	t	461 Hazeldean Rd	65	3	K2P 1R7	45.2994995000	-75.8865967000	(613) 237-3179	\N	f	2025-09-25 17:34:13.516778+00	\N
5055	4cf0ddea-01a5-4e15-8c65-c7c8b9de4509	197	t	727 Churchill Ave	65	3	K1Z 5G7	45.3810997000	-75.7470016000	(613) 688-4444	rupinder.pal@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5056	dc454591-b775-4f03-aa52-f3eddb3fad1d	198	t	261 Centrepointe Dr	65	3	K2G 6E8	45.3390999000	-75.7711029000	(613) 727-1898	wingwahottawa@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5057	4f3a351c-6739-4da1-8cd3-5200b0e223bf	199	t	778 Somerset St W	65	3	K1R 6R1	45.4099007000	-75.7097015000	(613) 237-3002	allannguyen79@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5058	9e787fb9-55ae-4852-b609-4103d102318e	200	t	1 Rideaucrest Drive	8	3	K2G 6A4	45.2848015000	-75.7225037000	(613) 843-7220	gtracey@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5059	92d832ea-ebdb-4fbc-9222-05593e45138b	201	t	111 Albert St	65	3	K1J 6N5	45.4215012000	-75.6971970000	(613) 594-3333	cheezypizza@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
5060	961d889d-9482-42b3-a042-fcb9a884d2ae	202	t	2130 Robertson Rd	65	3	\N	45.3213005000	-75.8351974000	\N	\N	f	2025-09-25 17:34:13.516778+00	\N
5061	4e8c1310-fd77-4e7c-be6a-96fc686551cc	203	t	4742, ch de la Cote-des-Neiges	28	4	H3V 1G2	45.4956017000	-73.6107025000	(514) 341-1222	vanessalambert1978@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5062	5cb17c53-2733-4018-ba4f-677d33f17eb6	204	t	343, boul Greber	32	4	J8T 5R3	45.4788017000	-75.7009964000	(819) 568-2088	zhiyesitu@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5063	04ab82ec-d9a3-4439-9516-b2d158b96ee3	205	t	351 Montreal Rd	7	3	K1L 6B1	45.4380989000	-75.6559982000	(613) 288-1333	\N	f	2025-09-25 17:34:13.516778+00	\N
5064	bc97f260-0b93-48ef-a278-cb5bd9b091d2	206	t	11729 Jasper Ave	96	11	T5K 0N4	53.5407982000	-113.5240021000	(780) 705-7555	aliyapici@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5065	4d8dd70a-e29e-4f5e-b018-462f7e6a316b	207	t	257, boul Maloney	32	4	J8P 1C3	45.4845009000	-75.6466980000	(819) 643-0000	kaled.alkhatib11@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5066	e0358686-31b3-4047-a85c-d021d3797b73	208	t	5248 ch Queen Mary	28	4	H3W 1X5	45.5625000000	-73.6832962000	(514) 486-5479	\N	f	2025-09-25 17:34:13.516778+00	\N
5067	ba00f115-5876-48d2-8ad2-e4033e1e3419	209	t	232 Rue Jean Talon Ouest	28	4	H2R 2X5	45.5625000000	-73.6832962000	(514) 342-4443	\N	f	2025-09-25 17:34:13.516778+00	\N
5068	f3a2981e-4163-46c4-9242-aae5a62c2d95	210	t	2266, ch de Chambly	56	4	J4J 3Z3	45.5262985000	-73.4741974000	(450) 646-0007	\N	f	2025-09-25 17:34:13.516778+00	\N
5069	c2cd1325-2112-4643-a5c2-3cb18a39de01	211	t	3628, av des �glises	49	4	G6X 1X2	46.7181015000	-71.2683029000	(418) 832-4000	\N	f	2025-09-25 17:34:13.516778+00	\N
5071	240cd2da-f4eb-4c92-ab54-ba77803c55d8	213	t	110 rue Eddy	32	4	J8X 2W5	45.4285011000	-75.7201004000	(819) 770-1111	epiceriepoukham@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5072	8f688cb1-af62-4707-80b4-4819a661be55	214	t	123 rue Saint Pas-Vrais	88	4	J6Y 1K8	45.6991997000	-73.8118973000	(450) 456-4567	\N	f	2025-09-25 17:34:13.516778+00	\N
5073	3be6cfb0-ef3b-44ba-902b-3ac8f0fc9fed	215	t	81 Holland Ave	65	3	K1Y 0Y1	45.4010010000	-75.7324982000	(613) 722-4800	alsbeiti@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5074	4ceca4a7-4d95-4fcc-a04d-e86dfddc8630	216	t	1315 Richmond Road	65	3	K2B 8J7	45.3680000000	-75.7860031000	(613) 596-6661	\N	f	2025-09-25 17:34:13.516778+00	\N
5076	db5f8b98-e34d-40e1-a677-8f370ef380d5	218	t	106 - 180 Lees Ave	65	3	K1S 5J6	45.4155006000	-75.6712036000	(613) 569-6969	leesgreekandpizza@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5077	53b97cbe-67b7-4346-80c4-7d02ece3cc1e	219	t	212 Bank St	65	3	K2P 1X1	45.4170990000	-75.6979980000	(613) 695-4372	omid_shno@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5078	279b24d9-aaa7-4e9a-93ae-57bd47cb2b39	220	t	2133 Jane St	71	3	M3M 1A2	43.7197990000	-79.5083008000	(416) 240-7738	greenpower68@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5079	cd338180-b0d5-4af7-b7a5-70b6c0fe4f0c	221	t	6500 Russell Rd	93	3	K0A 1K0	45.3692017000	-75.4559021000	(613) 822-0893	joe.carlsbadpizza@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5080	d017696d-401e-406e-83b4-1f1794ac272d	222	t	202 Bank St	65	3	K2P 2H6	45.4175987000	-75.6983032000	(613) 234-0888	wei-zhong150@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5082	6eac1af1-bf82-474a-9fc6-dc08fcf034e3	224	t	1555 O'Connor Dr	5	3	M4C 1K7	43.7150993000	-79.3051987000	(416) 551-5758	rozadalipaj@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5083	0a25c341-e64a-4f69-ac6d-ede8f15cdfc9	225	t	101 - 340 Queen St	65	3	K1H 7Z3	45.4184990000	-75.7053986000	(613) 565-6666	rifathh@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5084	cb2996aa-45f5-437d-93b0-2ae091dfb00a	226	t	223 Jameson Ave.	5	3	M6K 2Y3	43.6403999000	-79.4372025000	(416) 588-7555	\N	f	2025-09-25 17:34:13.516778+00	\N
5085	8bbac6e5-ab55-46aa-b79e-3e1387350004	227	t	3023 Cedarview Rd	8	3	K2J 4A8	45.2659988000	-75.7714005000	(613) 825-9444	husseinelahmar@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5087	70f59dcc-5542-481f-b71e-30e3166fb51b	229	t	689 E65th Avenue	34	8	V5X 2P7	49.2120018000	-123.0920029000	(604) 325-1301	\N	f	2025-09-25 17:34:13.516778+00	\N
5088	538a9187-1df9-4399-884c-eae21b6e3a95	230	t	244, 70 Shawville Blvd	65	3	T2Y 2Z3	45.4215012000	-75.6971970000	\N	\N	f	2025-09-25 17:34:13.516778+00	\N
5090	6aa8122b-3420-4035-9a98-ca8a94b43cc8	232	t	176 Rideau St	65	3	K1N 9P1	45.4272003000	-75.6893997000	(613) 241-1234	stonexzhang@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5091	28cc960d-f710-48b7-ad2c-895d7e93387d	233	t	319 Rideau St	65	3	K1N 5Y4	45.4292984000	-75.6847992000	(613) 218-0984	eaottawa@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5092	fbe6a764-ddc2-4dfb-9e98-ac424a6a47f2	234	t	1968 Portobello Blvd	95	3	K4A 4A7	45.4669991000	-75.4667969000	(613) 841-2223	rezamusa18@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5093	b92113c5-48ac-4f63-8277-bad7ac605818	235	t	291 Queen Mary St	65	3	K1K 1X1	45.4252014000	-75.6521988000	(613) 741-2220	moussa0452@yahoo.ca	f	2025-09-25 17:34:13.516778+00	\N
5094	d8e45cba-d5bc-4c19-b339-1b3a1af57928	236	t	370 Dalhousie St	65	3	K1N 7G2	45.4275017000	-75.6900024000	(613) 789-1888	bangkokthai.garden@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5097	26e3cca9-2f94-46f3-9637-76bb35838d96	239	t	1025, boul du Seminaire N	76	4	J3A 1R7	45.3372993000	-73.2677002000	(450) 515-9494	ali.hallani@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5098	46a6507a-f3da-4ddf-a031-db4d94dd866b	240	t	3005, boul Taschereau	15	4	J4P 2W3	45.4982986000	-73.4858017000	(450) 466-1100	restotassot@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5099	b2e79adb-0865-4561-9fd6-d88a0465ac81	241	t	4 Lorry Greenberg Dr	65	3	K1G 5H6	45.3698006000	-75.6211014000	(613) 739-7777	benecipizzeria@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5100	834dc788-ec15-4e9c-88a7-0a78b0c650ff	242	t	912 St Laurent Blvd	65	3	K1K 3B3	45.4313011000	-75.6414032000	(613) 749-1010	chadi_hage10@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5102	03195a74-92eb-42c5-8c0f-e5585b138162	244	t	109 Clarence St	65	3	K1N 5P5	45.4295998000	-75.6918030000	(613) 241-0990	wontonmama@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5103	6ef66260-fbd0-40ad-a729-a532b6e6b9b3	245	t	445 Laurier Ave W	65	3	K1R 0A2	45.4169006000	-75.7034988000	(613) 695-5588	noemail@noemail.ca	f	2025-09-25 17:34:13.516778+00	\N
5104	a375819e-344a-46eb-a299-d6977bbd402a	246	t	2630, rue Dessaulles	31	4	J2S 2V4	45.6221008000	-72.9564972000	(450) 773-8533	khanhamyal91@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5105	aad493a2-8c6e-4471-8663-046841b7ffd4	247	t	157, rue Saint-Jacques	76	4	J3B 2K2	45.3060989000	-73.2561035000	(450) 358-1118	marios157@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
5107	6a5b0132-5d52-4930-a446-1368b388ac44	249	t	3140, ch de Chambly	56	4	J4L 1N5	45.5368996000	-73.5106964000	(450) 670-4342	\N	f	2025-09-25 17:34:13.516778+00	\N
5108	bdf99f41-32cd-45db-bbe9-da6e3a1956d1	250	t	2860, rue de lyon	56	4	J4L 2V4	45.5144005000	-73.4634018000	(450) 670-4088	\N	f	2025-09-25 17:34:13.516778+00	\N
5109	40a5c9be-3f17-40f6-bd72-26b29baca210	251	t	50 Main Street S	20	3	K0C 1A0	45.3092003000	-74.6352005000	(613) 642-7492	mikeatmilanos@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5111	a7be7896-f584-4019-a514-5835eb080597	253	t	380, Route 132, St-Constant Suite 220	28	4	J5A 2L5	45.3919983000	-73.5791016000	(450) 635-4433	pshorros@yahoo.ca	f	2025-09-25 17:34:13.516778+00	\N
5112	ed419f8a-1f50-4207-a935-3c6e29700901	254	t	Grande Allee	64	4	J4T 2V5	45.4682007000	-73.4332962000	(450) 321-2352	hussain56@live.ca	f	2025-09-25 17:34:13.516778+00	\N
5113	0e4870a7-9346-466d-b771-098f3cf1988d	255	t	1016 Boulevard Taschereau	14	4	J5R 2E4	45.4132004000	-73.4921036000	(450) 286-1917	\N	f	2025-09-25 17:34:13.516778+00	\N
5114	dea0143d-2424-47ad-be48-5633421cd88f	256	t	3018 St Joseph Boulevard	95	3	K1E 1E1	45.4767990000	-75.5139008000	(613) 841-8181	greekexpress@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
5115	a4d4b037-5cfe-4546-96bd-8e18839d2fcc	257	t	868 Eglington Ave W.	5	3	M6C 2B6	43.7010002000	-79.4262009000	(416) 528-3535	foresthillpizza@yahoo.ca	f	2025-09-25 17:34:13.516778+00	\N
5116	441e62c9-2ae5-41df-be5a-a5c123341a38	258	t	2900 Woodroffe Ave	8	3	K2J 4P7	45.2924995000	-75.7279968000	(613) 440-5788	nenn646@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5117	cc3a806e-36e0-4d90-8bb6-11e352bd3dfe	259	t	62 Main St	65	3	K1S 1B6	45.4126015000	-75.6800995000	(613) 565-0341	orxanmahammad@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5118	305655b9-5d58-48c9-be5a-2078868e2773	260	t	6497, rue Beaubien Est	28	4	H1M 1B1	45.5872002000	-73.5614014000	(514) 313-6291	laura_paniagua513@hotmail.com	t	2025-09-25 17:34:13.516778+00	\N
5119	c6211d4a-2589-4716-a636-d0c04293f539	261	t	170 Lees Ave	65	3	K1S 5G5	45.4145012000	-75.6715012000	(613) 321-3111	cosmomartt@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5120	63563e42-bdc2-4bba-85c2-e1586f72f82b	262	t	173 Hinchey Ave	65	3	K1Y 1L7	45.4071999000	-75.7306976000	(613) 729-4405	nbentivoglio@sympatico.ca	f	2025-09-25 17:34:13.516778+00	\N
5121	09b03c03-3716-4969-bb1a-6d32d4ee863e	263	t	2010 Trim Rd	95	3	K4A 0G4	45.4705009000	-75.4542999000	(613) 837-7777	ademh1129@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5122	d91539a2-b659-4e03-9ed3-4f8f62f94654	264	t	49 Raglan S	29	3	K7V 1P8	45.4747009000	-76.6875992000	(613) 432-2020	michelle.burgess@renfrewkoa.com	f	2025-09-25 17:34:13.516778+00	\N
5123	47c75c23-caa8-446c-9d9a-ffb968fae59d	265	t	2 Pembroke St ( Highway 17 )	19	3	K0J 1K0	45.6258011000	-76.8768005000	(613) 646-7200	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
5124	cd4705cc-b4a7-4abd-b49e-43b370e2f3c1	266	t	600 Terry Fox Drive	28	4	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	example@example.com	f	2025-09-25 17:34:13.516778+00	\N
5125	528b9b62-d851-4956-8ca6-8eace34704b4	267	t	1970 Trim Rd	95	3	K4A 3P8	45.4715004000	-75.4549026000	(613) 830-8811	elita0303@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5126	8a688641-c10b-420b-973c-b104118cfb47	268	t	8200, boul tashereau	97	4	J4X 2S6	45.4491997000	-73.4697037000	(450) 465-8388	info@resto-mingchuan.com	f	2025-09-25 17:34:13.516778+00	\N
5127	a78f43a7-f7c2-4202-9ddc-b994a35db53f	269	t	2550, boul Lapini�re	97	4	J4Z 2M2	45.4682999000	-73.4625015000	(450) 678-9322	no@no.ca	f	2025-09-25 17:34:13.516778+00	\N
5128	319ad9ae-714d-4913-85aa-4fa2e8fda82d	270	t	245 Laurier Ave	65	3	K1P 5J6	45.4194984000	-75.6968994000	(613) 695-6966	rgt@fatalberts.ca;kanishkaw@fatalbertsralphs.com	f	2025-09-25 17:34:13.516778+00	\N
5129	5839e5fb-e128-45e7-a112-6981f140d5fe	271	t	7763, boul Newman	6	4	H8N 1X7	45.4375992000	-73.6242981000	(514) 363-8888	\N	f	2025-09-25 17:34:13.516778+00	\N
5131	f00f7519-2551-49ad-a199-01a2f290bb6c	273	t	2038, rue Lapierre	6	4	H8N 2S2	45.4367981000	-73.6149979000	(514) 595-3444	info@souslepalmier.ca	f	2025-09-25 17:34:13.516778+00	\N
5132	9c557cd6-e988-4619-8737-7b2e058d6d22	274	t	3753, rue Ontario E	28	4	H1W 1S2	45.5467987000	-73.5439987000	(514) 521-2779	\N	f	2025-09-25 17:34:13.516778+00	\N
5133	5bde69d9-acbb-47c3-ad03-ecd6aa4f9ce1	275	t	2685, avenue Van Horne	28	4	H3S 1P6	45.5088005000	-73.6248016000	(514) 344-5151	erikeli313@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5134	76ab4460-2626-4605-a33d-fc4abc18166e	276	t	1040, boulevard des Laurentides	48	4	H7G 2W1	45.5747986000	-73.6974030000	(450) 933-6999	\N	f	2025-09-25 17:34:13.516778+00	\N
5135	85c9681e-dfcf-4a76-853f-8fd8e82c31d6	277	t	\N	2	3	\N	45.4215012000	-75.6971970000	\N	\N	f	2025-09-25 17:34:13.516778+00	\N
5136	8c73556d-7b61-4ed6-8620-aeff3491c2d1	278	t	267 Greenbank Rd	65	3	K2H 8K9	45.3238983000	-75.7779007000	(613) 828-2874	zeyad.kassis.ca@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5137	5b9e4af4-9bb6-4dcd-8593-4529e795e26d	279	t	9-4055 Carling Ave	73	3	K2K 2A4	45.3381004000	-75.9076996000	(613) 270-8999	leo801020@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5138	a6b7dca4-ccee-4a97-a83d-7f3f81b8f817	280	t	173, rue Saint Hubert	48	4	H7G 2Y3	45.5643005000	-73.6835022000	(450) 668-8787	\N	f	2025-09-25 17:34:13.516778+00	\N
5139	ba0cfb94-bfee-4853-abd7-54f44d7359b0	281	t	4319, rue St-Denis	28	4	H2J 2K8	45.5228004000	-73.5798035000	(514) 678-4430	info@tomatopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
5140	4cc8a1b6-73c1-40b9-b39a-0e731ab6eaaf	282	t	3751, rue Saint Urbain	28	4	H2W 1T4	45.5139008000	-73.5762024000	(514) 227-1246	haiau_lam@yahoo.ca	f	2025-09-25 17:34:13.516778+00	\N
5142	2a7b4270-4419-4c1c-beca-e97a804bdbec	284	t	8200, boulevard Taschereau	97	4	J4X 2S6	45.4491997000	-73.4697037000	(450) 904-0660	\N	f	2025-09-25 17:34:13.516778+00	\N
5143	669f216a-b71b-418d-a651-b9e302547510	285	t	161, rue Ontario Est	28	4	H2X 1H5	45.5130997000	-73.5662994000	(514) 657-7707	ahmed360@live.ca	f	2025-09-25 17:34:13.516778+00	\N
5144	efcf5e0d-a41a-4f1e-84ca-aed10c57a67c	286	t	2673, c�te Saint Charles local 204	10	4	J7T 2H8	45.4362984000	-74.1733017000	(450) 458-3232	moe.srour@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5145	b1996721-969c-4c67-af08-df5269a5d47f	287	t	48, boul de la Cit�-des-Jeunes	28	4	J7V 8B9	45.4152985000	-74.0220032000	(450) 510-2647	moe.srour69@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5146	c677ce04-45a5-4351-b81b-20d493900392	288	t	2157, boul des Laurentides	48	4	H7M 4M2	45.6105995000	-73.7361984000	(450) 669-4111	alielkerdi@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5147	3d429454-5518-4870-8b67-fc37ae7726f2	289	t	30 Byward Market	65	3	K1N 7A2	45.4277000000	-75.6930008000	(613) 789-0944	a.karim@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
5148	5a39c5bc-9e1d-42b0-bb83-b57c6b318c5b	290	t	132 Bank St	65	3	K1P 5N8	45.4193001000	-75.6996994000	(613) 286-6138	austinchen@live.ca	f	2025-09-25 17:34:13.516778+00	\N
5149	705ab5e6-067d-40ca-bcff-2a99e17996ac	291	t	4025 Innes Rd	95	3	K2L 4B6	45.4558983000	-75.5062027000	(123) 456-7890	s@example.com	f	2025-09-25 17:34:13.516778+00	\N
5150	64443429-f857-4115-a198-bf5490fb5bba	292	t	1574 Walkley Rd	65	3	K1V 6P5	45.3765984000	-75.6479034000	(613) 260-3456	menu@houseofpizzawalkley.com	f	2025-09-25 17:34:13.516778+00	\N
5151	0cee301c-2e71-403c-92a5-ceb9b822ed1a	293	t	527 Bronson Ave	65	3	K1R 6J9	45.4059982000	-75.7025986000	(613) 688-5555	mike@papajoespizza.ca,support@menu.ca	f	2025-09-25 17:34:13.516778+00	\N
5152	9869ee32-1447-4dea-a8f6-bde8841f8cd9	294	t	1828 ave du Mont-Royal E	28	4	H2H 1J1	45.5331993000	-73.5742035000	(514) 522-3811	bugsad@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5153	bc61b7ff-a879-4424-a55e-d7768857dcf0	295	t	2895 Bank St	65	3	K1T 3M8	45.3608017000	-75.6569977000	(613) 739-6363	nhatnguyen1975@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5154	f5a39eee-5cb8-49ce-a515-4656da8463a9	296	t	773 Bank St	65	3	K1S 3V5	45.4037018000	-75.6886978000	(613) 421-6690	dheeraj.achra@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5110	9ebd9386-7af5-4c5f-87fe-a226803045f4	873	t	272 Dalhousie St	65	3	\N	45.4300003000	-75.6921997000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5155	7db274e3-2829-49d7-8bbd-9992bcc686f4	297	t	355 Montreal Rd	65	3	K1N 7C9	45.4387016000	-75.6552963000	(613) 695-7404	pilipili@rogers.com	f	2025-09-25 17:34:13.516778+00	\N
5156	62a90bcc-59d3-4efa-872b-9c56886651ec	298	t	1571 Bank St	65	3	K1H 7Z3	45.3796997000	-75.6673965000	(613) 247-8766	\N	f	2025-09-25 17:34:13.516778+00	\N
5157	f70e9aaf-d3f7-450a-bf6d-e4bd89b23097	299	t	2946 Baseline Rd	65	3	K2H 8T5	45.3356018000	-75.8001022000	(613) 820-9805	edm@fatalberts.ca	f	2025-09-25 17:34:13.516778+00	\N
5158	012c9a1e-facb-4f80-8b93-f76797e488d9	300	t	1990 Russell Rd	65	3	K1G 4J6	45.4007988000	-75.6240997000	(613) 733-5995	\N	f	2025-09-25 17:34:13.516778+00	\N
5160	7e60ca89-9941-4545-b62f-028471b84684	302	t	5195, boul Saint-Laurent	28	4	H2T 1R9	45.5237999000	-73.5944977000	(514) 277-1515	mohsinchw123@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5161	d93b157d-ca50-4d1e-a6f8-b1b776c9b9d6	303	t	2143 Danforth Ave	5	3	M4C 1K1	43.6860008000	-79.3113022000	(416) 916-6438	tontonyton@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5162	81081c42-a057-4b52-be99-5ee5164ec60e	304	t	2549 Yonge St	5	3	M4P 2H9	43.7132988000	-79.3995972000	(416) 322-3267	l.carvalho@bell.net	f	2025-09-25 17:34:13.516778+00	\N
5164	16be9b5b-ffa1-4ec2-893d-597d3755d290	306	t	408 Dalhousie Street	65	3	K1N 9J9	45.4264984000	-75.6893997000	\N	\N	f	2025-09-25 17:34:13.516778+00	\N
5166	62317f33-0477-4920-8fd3-ff857e960f4f	308	t	4216, boul Saint-Laurent	28	4	H2W 1Z3	45.5180016000	-73.5817032000	(514) 844-4733	\N	f	2025-09-25 17:34:13.516778+00	\N
5167	e3339bc2-3b29-4c09-90ce-136012ceac9a	309	t	4403, boul St-Laurent	28	4	H2W 1Z8	45.5195999000	-73.5848999000	(514) 670-6770	arie_benhacoun@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5168	f547fe57-f0f3-477e-b79a-bd5c2ac0034e	310	t	2754 Danforth Street	5	3	M4C 1L7	43.6531982000	-79.3832016000	(416) 913-1742	\N	f	2025-09-25 17:34:13.516778+00	\N
5169	358cab77-65be-432c-8fd9-f6e1a40c6b8d	311	t	1176 Danforth Ave	5	3	K2L 4B6	43.6814003000	-79.3328018000	(072) 045-6789	greenladythaichinese@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5170	b6dba99d-7eef-4134-ac6d-1ac06dff31c7	312	t	1078 Danforth Ave	5	3	M4J 1M2	43.6531982000	-79.3832016000	(416) 462-9000	\N	f	2025-09-25 17:34:13.516778+00	\N
5171	6aace63d-4695-4620-b06e-382e787fedfc	313	t	385 Yonge St	5	3	M5B 1S1	43.6589012000	-79.3818970000	(416) 977-8451	thebigslicepizza@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5172	72a17b54-cc1e-473f-94c9-563b23061bca	314	t	872 Bloor St W	5	3	M6G 1M5	43.6622009000	-79.4250031000	(416) 913-4227	labellamanagua@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5173	5731af25-7794-4b23-a558-3e85ac41d968	315	t	460 Bronson Ave	65	3	K1R 6J6	45.4080009000	-75.7039032000	(613) 565-5554	i_mackie@hotmail.com; alimackie74@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5175	a34c986c-3550-4f30-a3b5-7f639bb59fc6	317	t	6-461 Park Rd S	74	3	L1J 8R3	43.8834991000	-78.8676987000	(905) 240-5700	fawad_mohammad@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
5177	6ec57fdc-d654-459c-8159-46eb7954b605	319	t	7163, rue Saint-Hubert	28	4	H2R 2N2	45.5407982000	-73.6134033000	(514) 276-8188	\N	f	2025-09-25 17:34:13.516778+00	\N
5178	60244345-9331-4759-9742-d4f87d0a57bb	320	t	429A Yonge St	71	3	M5B 1T1	43.6604996000	-79.3826981000	(416) 977-8989	\N	f	2025-09-25 17:34:13.516778+00	\N
5179	abd3587d-6bbe-4d12-b5ee-c60c13b80fa6	321	t	915 Watters Rd	65	3	K4A 3K5	45.4840012000	-75.4739990000	(613) 424-2514	rgt@fatalberts.ca	f	2025-09-25 17:34:13.516778+00	\N
5180	bdac3ba5-6fed-4a02-ba9d-9bb375970a28	322	t	5303 Canotek Rd	65	3	K1J 9M1	45.4524002000	-75.5892029000	(613) 749-5269	rgt@fatalberts.ca	f	2025-09-25 17:34:13.516778+00	\N
5181	a5a3b358-a6d9-4061-ae1d-9a134a430a0a	323	t	471 Cosburn Ave	5	3	M4J 2N5	43.6531982000	-79.3832016000	(416) 267-7236	info@corrados.ca	f	2025-09-25 17:34:13.516778+00	\N
5182	d4a23215-591f-4075-889d-bd22b42ff80b	324	t	460 Bronson Ave	65	3	K1R 6J6	45.4080009000	-75.7039032000	(613) 233-5777	i_mackie@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5183	7ca0146e-50fa-49bf-ae80-05ee0b3115dc	325	t	9715 118 Ave	96	11	T5G 0P4	53.5703011000	-113.4929962000	(780) 448-0004	wishah13@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5184	e40e02f5-ac84-4817-844c-982d9d6fbaba	326	t	7610, rue Saint-Hubert	28	4	H2R 2N6	45.5087013000	-73.5540009000	(514) 273-4446	\N	f	2025-09-25 17:34:13.516778+00	\N
5185	6c6d6623-92fb-4cff-9ba6-9390163dbd0e	327	t	637 Somerset St W	65	3	K1R 5K3	45.4119987000	-75.7049026000	(613) 237-7717	Dennis@mekong.ca	f	2025-09-25 17:34:13.516778+00	\N
5186	8d9c1295-5675-44c7-88ea-b5680134eb0e	328	t	1663 Cyrville Rd	65	3	K1B 3L7	45.4179001000	-75.6081009000	(613) 745-3377	vivo555@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5187	3fc94aca-824d-4e7b-9b95-f96d65755419	329	t	1682 Cyrville Rd	65	3	K1B 3L8	45.4175987000	-75.6075974000	(613) 741-2130	louissteakhouse@rogers.com	f	2025-09-25 17:34:13.516778+00	\N
5188	7ab946db-ebeb-4b3d-bdf5-b602fb2a2ae4	330	t	1605, rue Dollard	6	4	H8N 1T7	45.4280014000	-73.6293030000	(514) 564-5449	\N	f	2025-09-25 17:34:13.516778+00	\N
5189	ca25b983-e153-4886-a202-aa5b355110dc	331	t	80 A Dundas St E	5	3	M5B 2P5	43.6563988000	-79.3779984000	(416) 599-7899	sushistyle@live.com	f	2025-09-25 17:34:13.516778+00	\N
5192	adb3268b-7be7-42b4-8d47-1ed71a5c0cd1	334	t	\N	28	4	\N	45.5087013000	-73.5540009000	\N	\N	f	2025-09-25 17:34:13.516778+00	\N
5193	c0f1aecf-0f0a-4538-90b1-2d538dac9fae	335	t	930 King St W	5	3	M5V 1P5	43.6422997000	-79.4112015000	(416) 603-9992	tomasfood@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5194	b63c053a-0544-472c-b9ba-baf1518f3524	336	t	423 Queen Street West	5	3	M5V 1P6	43.6487999000	-79.3952026000	(416) 599-2688	\N	f	2025-09-25 17:34:13.516778+00	\N
5195	b7c2a7c2-c335-4b3a-be66-a775fe548fdc	337	t	746 Queen St W	5	3	M6J 1E9	43.6459999000	-79.4101028000	(416) 203-2229	\N	f	2025-09-25 17:34:13.516778+00	\N
5196	1ac912e2-5db0-4c88-b479-c4e423b9bc17	338	t	641 Somerset St W	65	3	K1R 5K3	45.4118996000	-75.7050018000	(613) 321-3669	andyzeng12302001@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5198	cbe7a56e-ed6e-416b-8069-107ff2a7b9cd	340	t	195 Kent St	65	3	K2P 1Z8	45.4174995000	-75.7008972000	(613) 233-8989	cafesaffron195@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5199	81668dc1-8da0-42f7-b2cd-264db17d0b78	341	t	2194 Robertson Rd	65	3	K2H 9J5	45.3188019000	-75.8402023000	(613) 820-1700	tej@urbanturbankanata.ca	f	2025-09-25 17:34:13.516778+00	\N
5200	047e285d-ecb4-4c94-8453-b3beb5f8f828	342	t	267 Bay St	65	3	K1R 5Z4	45.4150009000	-75.7037964000	(613) 233-1515	m_ost_bouchi@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5201	a9167ab9-b737-416b-adf0-5421753c28b2	343	t	1300 Bank St	65	3	K1S 3Y4	45.3902016000	-75.6793976000	(613) 733-8424	barshadeb7@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5202	ee76ce6a-8d9f-486f-96c2-f49bad7abd0c	344	t	600 Terry Fox Drive	35	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	f	2025-09-25 17:34:13.516778+00	\N
5203	cfaf54b4-8b7a-4a92-b626-93831bdf084c	345	t	4944 Dundas St W	35	3	M9A 1B7	43.6483002000	-79.5294037000	(416) 236-5400	durongjie2@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5204	74b906fa-d3d7-414f-bf7f-547a9a7c5b0a	346	t	354 Rideau St	65	3	K1N 5Y6	45.4295006000	-75.6836014000	(613) 860-1888	kpboyhua338@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5205	7f3408b8-7d22-4806-8c7d-b73c3dda5c0a	347	t	2525, rue Provost	33	4	H8S 1R2	45.4417992000	-73.6867981000	(438) 793-6412	octaviusoctaly@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5206	42773f35-c34a-49f4-8531-85f6afe03744	348	t	886 ch de Chambly	56	4	J4H 3M6	45.5354004000	-73.4963989000	(450) 670-7222	shen_yichao@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5207	5e4567c3-4880-45b6-a9e6-cc67263d5c46	349	t	5516 Osgoode Main S	25	3	K0A 2W0	45.1515999000	-75.5940018000	(613) 826-3333	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
5208	159e154c-1b5e-4647-a860-97b7bf966e0c	350	t	506 Main St W	55	3	K0C 2K0	45.0929985000	-75.3541031000	(613) 774-2727	corporate@milanopizza.ca	f	2025-09-25 17:34:13.516778+00	\N
5209	e77539a6-4357-43c3-ac23-46440dd315cb	351	t	33, rue Gamelin	32	4	J8Y 1V4	45.4328003000	-75.7333984000	(819) 771-4441	aliyaali214@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5210	1eb4768c-3f7e-4f8f-9e32-29fd196bf349	352	t	654 Spadina Ave	5	3	M5S 2H7	43.6633987000	-79.4023972000	(416) 961-2222	sufisayed@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5211	5a162943-638d-45ea-9dad-da489cb751cb	353	t	571 College St	5	3	M6G 1B2	43.6553001000	-79.4129028000	(416) 535-1515	tonywang430@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5212	27e24734-4ce8-47f4-b51a-90cbb21a43a8	354	t	692 Yonge St	5	3	M4Y 2A6	43.6677017000	-79.3859024000	(647) 748-8573	kohli_sumit@rocketmail.com	f	2025-09-25 17:34:13.516778+00	\N
5231	d6316f42-df29-4a13-9b34-50109034f7aa	373	t	1A-5268 Marlborough Dr NE	52	11	T2A 5L5	51.0601006000	-113.9589996000	(403) 264-8488	nataliedaigneault@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
5214	b010ffc2-1197-489f-ab48-99d93b2a20a1	356	t	50, rue Rachel E	28	4	H2W 1C6	45.5185013000	-73.5811996000	(514) 282-8088	angel3417@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5216	6497e717-6216-4f9b-b1a5-a5247e613b36	358	t	5164 Dundas St W	35	3	M9A 1C4	43.6430016000	-79.5342026000	(416) 236-2627	venka83@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
5217	ef80c25b-9b30-4b83-a1aa-484cb12b04e8	359	t	2778, boul Jacques Cartier	56	4	J4N 1P8	45.5657997000	-73.4502029000	(450) 468-9888	miyukisushibar@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5218	42956cd6-c956-41a0-86b6-9cc772b8e51f	360	t	6250, boul Cousineau	64	4	J3Y 8X9	45.4939995000	-73.4065018000	(450) 486-3939	moumen_med@yahoo.fr	f	2025-09-25 17:34:13.516778+00	\N
5219	570048fa-551c-4ea1-a629-71a30b864a31	361	t	5250, rue Jarry E	28	4	H1R 3A9	45.5830002000	-73.5921021000	(514) 374-3833	\N	f	2025-09-25 17:34:13.516778+00	\N
5220	cc5e30e8-21cb-4cba-919c-d04d661eeb14	362	t	5836, ch de Chambly	64	4	J3Y 6W9	45.4996986000	-73.4100037000	(450) 462-2424	amirtorbat@yahoo.ca	f	2025-09-25 17:34:13.516778+00	\N
5221	126ebdca-6668-4b59-817e-ad5fd9d94380	363	t	4905 Boulevard Lapiniere 1700	97	4	J4Z 0G2	45.4497986000	-73.4339981000	(450) 678-8698	ohayo.info@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5222	c45df285-0538-4101-a502-7abc0a093046	364	t	123 fake st	65	3	\N	45.4215012000	-75.6971970000	\N	\N	f	2025-09-25 17:34:13.516778+00	\N
5223	7f90ce96-70b2-4f54-b40b-48cdce3b90a0	365	t	37, route 132	21	4	J5B 1G9	45.3874016000	-73.5692978000	(450) 635-1188	\N	f	2025-09-25 17:34:13.516778+00	\N
5224	8a2d5f67-d3b6-4be9-a019-98b6fe44703c	366	t	5560 boul Grande All�e	64	4	J3Y 2W3	45.4757996000	-73.4443970000	(450) 341-2888	\N	f	2025-09-25 17:34:13.516778+00	\N
5225	00a85fc7-227d-422d-ad13-deea8237c440	367	t	125 Preston St	65	3	K1R 7P3	45.4081001000	-75.7137985000	(613) 230-5555	mahde_ghandour@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5226	b8f5ada4-32ef-418b-9309-2091b0068fbf	368	t	1001 Queen Elizabeth Dr	65	3	K1S 5K7	45.3963013000	-75.7057037000	(613) 234-8156	dimo39@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5227	af50e7f8-d595-4a30-9ad3-13d91db138c2	369	t	1421, ch Gascon	88	4	J6X 4L9	45.7098999000	-73.6521988000	(450) 964-8825	restaurantajisushi@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5228	e19ffcca-30c3-4e13-ac8d-ae986c7116bb	370	t	11 Windsor Dr	79	3	K6B 3H5	44.6029015000	-75.7022018000	(613) 865-8582	\N	f	2025-09-25 17:34:13.516778+00	\N
5232	bfdeb59c-a83b-4cf0-91c0-bb99204cf078	374	t	2641, rue Masson	28	4	H1Y 1W1	45.5457001000	-73.5764008000	(514) 223-5150	vang.lam@live.ca	f	2025-09-25 17:34:13.516778+00	\N
5233	a16bab8f-0c80-4efd-8ce5-cc5629a6f0c0	375	t	6078, ch de Chambly	64	4	J3Y 3R5	45.4980011000	-73.4058990000	(450) 656-6565	yucarriecl@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5234	afe5fc9b-e568-46d8-aca8-8084753b77f4	376	t	4931, rue Beaubien E	28	4	H1T 1V1	45.5708008000	-73.5727005000	(514) 376-8867	sachisushi@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5235	592d619f-576c-4a87-b5ee-29014e41056a	377	t	4260, rue Beaubien E	28	4	H1T 1G7	45.5639992000	-73.5783005000	(514) 508-8798	minatomontreal@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5238	031e4b74-ef8b-427f-b93b-8b36085c5130	380	t	8265, boul Taschereau	97	4	J4Y 1A4	45.4463997000	-73.4702988000	(450) 678-0652	relsamra@live.com	f	2025-09-25 17:34:13.516778+00	\N
5239	30e5b93c-389e-42ac-990d-f266f5993812	381	t	1356 Clyde Ave	65	3	K2C 3Z4	45.3632011000	-75.7408981000	(613) 820-8200	yorgosgreekfood@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5240	9117125d-941a-4ec7-8a8e-855d313fbdb9	382	t	2900 Woodroffe Ave	65	3	K2J 4P7	45.2924004000	-75.7281036000	(613) 627-3227	johndo@capitalcitysmokehouse.com	f	2025-09-25 17:34:13.516778+00	\N
5241	1f775819-0b2b-4d89-b1cb-d4cfb79545de	383	t	3780 Fallowfield Rd	65	3	K2J 1A1	45.2869987000	-75.7591019000	(613) 825-7755	bkstravel1@live.ca	f	2025-09-25 17:34:13.516778+00	\N
5242	b08cf90a-7f31-4829-9869-fcac13ed5690	384	t	1022 Pleasant Park Rd	65	3	K1G 2A1	45.3955002000	-75.6220016000	(613) 731-7421	johnjiang14@outlook.com	f	2025-09-25 17:34:13.516778+00	\N
5244	b8aa4e87-6876-495b-b606-52081714e500	386	t	3018 St Joseph Blvd	65	3	K1E 1E1	45.4767990000	-75.5139008000	(613) 841-8181	dominican.ottawa@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5245	47d175c0-b38d-45e7-b424-57b823f76c1c	387	t	223 Laurier Ave E	65	3	K1N 6P1	45.4258003000	-75.6817017000	(613) 680-5959	safdar.s@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5246	47cba271-4847-4cd7-8d58-564540c3b615	388	t	589 Bank St	65	3	K1S 3T4	45.4077988000	-75.6910019000	(613) 230-4454	rezamusa18@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5247	ec6e7d9c-e74b-498c-8f29-e5449507b924	389	t	120, rue Grande-�le	3	4	J6S 3M6	45.2647018000	-74.1334991000	(450) 747-0822	\N	f	2025-09-25 17:34:13.516778+00	\N
5248	51f4fc3a-ee83-4239-b3a6-6ba975c419e9	390	t	835, boul Yvon L'Heureux	70	4	J3G 6P5	45.5806007000	-73.2145996000	(855) 665-4873	mackssime@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5250	ea605d17-f50a-4d19-97d3-3534f6a8dc9a	392	t	425 McArthur Avenue	65	3	K1K 1G5	45.4323006000	-75.6468964000	\N	\N	f	2025-09-25 17:34:13.516778+00	\N
5251	fe7cbd88-9fb6-4c22-a69b-aeb062e3a64b	393	t	654 Montreal Rd	65	3	K1K 0T3	45.4430008000	-75.6408997000	(613) 695-6060	youssef2009@live.ca	f	2025-09-25 17:34:13.516778+00	\N
5252	8eb8eb9e-f15a-4d4c-bcbc-38b620086bb2	394	t	2108 Montreal Rd	65	3	K1J 6M8	45.4481010000	-75.5923004000	(613) 745-9894	syszeto2002@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5253	16de4e9f-e061-4c8e-b73e-15380176b259	395	t	239, boul St Luc	76	4	J2W 1C6	45.3517990000	-73.2931976000	(450) 348-2020	cjodoin75@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5254	1e944b07-4698-4bf5-8b1b-2e0465efa389	396	t	501, boul du S�minaire N	76	4	J3B 5L7	45.3279991000	-73.2830963000	(450) 376-4004	jihad.tarabay123@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5255	0b6883b9-de51-44ae-85bc-1ec463138a05	397	t	1900 Innes Rd	65	3	K1B 3K5	45.4179993000	-75.5960999000	(613) 746-6111	lazizinc@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5276	2f00782c-2dba-4cc9-9f9e-fd579d50c17f	892	t	436 14 St NW	52	11	\N	51.0564003000	-114.0940018000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
5257	137bfcd2-e753-4ae5-a7de-85cdbea92b00	399	t	1319 Shillington Ave	65	3	K1Z 8A4	45.3792000000	-75.7321014000	(613) 695-7892	suya_spot@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5277	1e62501b-eced-4226-a790-c6137bbba45e	419	t	4715 17 Ave SE	52	11	T2A 0T9	51.0377998000	-113.9660034000	(403) 273-2222	oilamoussa@hotmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
5259	416ae51f-7211-48f0-b50d-1f7922ec0fdc	401	t	1227 Kilborn Ave	65	3	K1H 8L4	45.3857002000	-75.6707001000	(613) 738-9999	carlospizzaottawa@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5260	3b999086-496b-4949-8d51-29a20d746372	402	t	2701 St Joseph Blvd	65	3	K1C 1G4	45.4720993000	-75.5230026000	(613) 837-0518	goodtasteottawa@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5261	080dfdbe-b1be-4a88-99d9-4a286a22a50c	403	t	2641, rue Masson	28	4	H1Y 1W1	45.5457001000	-73.5764008000	(514) 223-5150	suisensushi-pholamici@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5264	64451964-3af2-4fb8-9814-f920b282adc6	406	t	279, boul Jacques-Cartier	61	4	J4N 1P8	45.5960999000	-73.4425964000	(450) 448-8111	\N	f	2025-09-25 17:34:13.516778+00	\N
5265	b25b2a10-23fe-4a2d-9615-fa16a32384ce	407	t	247-C, boul D'Anjou	90	4	J6J 2R3	45.3594017000	-73.7235031000	(450) 844-7575	Roland.mark24@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5266	b0affe9a-a2c6-49f0-a630-42b303c6b6b2	408	t	77, boul St-Jean-Baptiste	90	4	J6J 3H7	45.3624992000	-73.7136002000	(450) 716-1213	\N	f	2025-09-25 17:34:13.516778+00	\N
5268	14a15b34-e114-4f3f-92c4-3b6c80a8e999	410	t	356 Preston St	65	3	K1S 4M6	45.4017982000	-75.7102966000	(613) 749-7490	nick_lafavorita@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5271	a4dc655b-ad52-45cf-a295-1f403413279a	413	t	72, rue St-Jean-Baptiste unit 123	90	4	J6K 4Y7	45.3615990000	-73.7135010000	(450) 699-8888	jewel.uddin514@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5272	3bab5213-ab25-4de1-9ae0-4c4c3347d7fa	414	t	5611, av de Monkland	28	4	H4A 1E2	45.4754982000	-73.6229019000	(514) 419-6242	rmaadarani@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5273	f13f861c-9cae-4f73-946d-b9268de29a82	415	t	2480, ch de Chambly	56	4	J4L 3Y4	45.5242996000	-73.4694977000	(579) 721-7277	michael.boutin@monithq.ca	f	2025-09-25 17:34:13.516778+00	\N
5274	df93926d-bac6-44b0-94ab-c5b2ea284383	416	t	3838, boul Taschereau	64	4	J4V 2H9	45.4872017000	-73.4700012000	(450) 443-2647	\N	f	2025-09-25 17:34:13.516778+00	\N
5278	3f3f977a-6666-4275-b9e4-9c731b4aef6e	420	t	86 Murray St	65	3	K1N 5M6	45.4296989000	-75.6936035000	(613) 366-2266	info@fiazza.ca	f	2025-09-25 17:34:13.516778+00	\N
5279	12e8bcd8-6e70-48bf-8657-2e862d577d8a	421	t	3722 Innes Rd	95	3	K1W 0C8	45.4505005000	-75.5176010000	(613) 837-7388	saigonpho232bank@yahoo.ca	f	2025-09-25 17:34:13.516778+00	\N
5280	c049df64-ae55-4d21-a5ef-afcc61cfc4f6	422	t	1-1 Roydon Place	8	3	K2E 1A3	45.3381996000	-75.7256012000	(613) 366-2266	nepean@hardstonesgrill.com	f	2025-09-25 17:34:13.516778+00	\N
5285	4d15e68e-bc40-40c8-8667-157f2759a001	427	t	4000 Bridle Path Dr	65	3	K1T 1Z5	45.3488007000	-75.6460037000	(613) 680-8484	CALLAMER@GMAIL.COM	f	2025-09-25 17:34:13.516778+00	\N
5286	892aedaa-07f1-4f6a-b246-e8eed2e4e2d8	428	t	5630, Grande All�e	64	4	J3Y 1A9	45.4746017000	-73.4428024000	(450) 678-4280	\N	f	2025-09-25 17:34:13.516778+00	\N
5287	24aa308f-586a-480a-879e-efffef373078	429	t	13201, rue Sherbrooke E	28	4	H1A 1C2	45.6585007000	-73.5089035000	(514) 644-0999	\N	f	2025-09-25 17:34:13.516778+00	\N
5288	e96aa4a9-835c-43e2-a935-dd6ba8ee5ead	430	t	3023 Cedarview Rd	65	3	K2J 4A8	45.2659988000	-75.7714005000	(613) 825-8080	luckypanda.ca@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5290	aacfbd49-4ced-453e-8432-f0d48abe46bb	432	t	213 Hunter St W	23	3	K9H 2L1	44.3056984000	-78.3225021000	(705) 740-0707	bltheshooter@yahoo.ca	f	2025-09-25 17:34:13.516778+00	\N
5291	705c0fc3-7475-4275-aa97-273e8d1f80c9	433	t	437 Sunnyside Ave	65	3	K1S 4W9	45.3903999000	-75.6929016000	(613) 733-8226	Jacobhaydar@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5292	d6a46b5a-991f-416e-a497-4269db096350	434	t	511 E Genessee St	\N	\N	13066	0.0000000000	0.0000000000	(315) 637-3212	\N	f	2025-09-25 17:34:13.516778+00	\N
5293	de5e11ba-aceb-4447-ae88-2fbe7ae266ca	435	t	415 George St N	23	3	K9H 3R4	44.3063011000	-78.3200989000	(705) 743-8828	info@realthai-cuisine.com	f	2025-09-25 17:34:13.516778+00	\N
5294	ec32c499-8400-43a8-96f2-0787e690e3be	436	t	437 George St	23	3	K9H 3R4	44.3070984000	-78.3201981000	(705) 874-8882	\N	f	2025-09-25 17:34:13.516778+00	\N
5295	b6ad3303-546e-4fb6-b009-49d0eaa44b55	437	t	527 Bronson Ave	65	3	K1R 6J9	45.4059982000	-75.7025986000	(613) 688-5555	Bartours1982@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5297	c3d05137-7e3f-4b8d-a777-0a35715ae81d	439	t	200 Deschamps Ave	65	3	K1L 5Z2	45.4367981000	-75.6644974000	(613) 255-6745	sergevanier@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5298	7466aea4-080d-4a5a-a2d2-17f783acf641	440	t	180 Preston St	65	3	K1R 7P8	45.4062996000	-75.7129974000	(613) 233-6239	paulajean029@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5299	49e0999f-6087-4676-b4a8-24a38e81895c	441	t	55 Byward Market Square	65	3	K1N 9C3	45.4269981000	-75.6921997000	(613) 244-1600	kcheatani@sympatico.ca	f	2025-09-25 17:34:13.516778+00	\N
5300	9f5c94e0-f503-440f-b7a9-9c778ce4e459	442	t	365 Westwood Dr	36	3	K9A 4M5	43.9599991000	-78.1885986000	(905) 372-3334	ilirsino@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5301	ca44dc24-a970-4e3c-b167-c1a696cf6f8e	443	t	4000 Bridle Path Dr	65	3	K1T 1Z5	45.3488007000	-75.6460037000	(613) 680-8484	CALLAMER@GMAIL.COM	f	2025-09-25 17:34:13.516778+00	\N
5302	8f921996-8ec1-476e-92fb-55d74b364fd0	444	t	33, rue de Valcourt, unit� 30	32	4	J8T 8G8	45.4765015000	-75.7013016000	(819) 246-6626	elie.choueiri@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5303	140ec867-fdaf-4908-bb01-c38599e267d4	445	t	1741 Cyrville Rd	65	3	K1B 3L8	45.4168015000	-75.6026993000	(613) 216-4655	akbaritsa@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5304	94c3154a-4dae-452c-938a-13dffffeee6f	446	t	150 Queen St	92	3	K0L 2H0	44.4290009000	-78.2673035000	(705) 652-3131	ilirsino@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5305	12c074f6-6776-4b82-b7b3-32a57ae51a5a	447	t	512 George St	23	3	K9J 3E5	44.2891998000	-78.3172989000	(705) 741-3334	ilirsino@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5306	0bc203f6-2ee4-462a-88ec-9b27bb30eedc	448	t	476 Brant St	26	3	L7R 2G4	43.3270988000	-79.7998962000	(905) 966-5955	cornedbeefhut@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5307	13920d20-5cd5-4f16-ad89-6f34413f2b7a	449	t	3848 Innes Rd	65	3	K1W 0C8	45.4514008000	-75.5152969000	(613) 830-0888	kcheatani@sympatico.ca	f	2025-09-25 17:34:13.516778+00	\N
5308	131ce684-6b90-45d5-a57d-f4203e79df5d	450	t	6075, ch de Chambly	64	4	J3Y 3R6	45.4981995000	-73.4064026000	(450) 656-2131	\N	f	2025-09-25 17:34:13.516778+00	\N
5309	e13a3eaf-d1d3-47fb-b226-5c11770faef4	451	t	113 Peter St	87	3	L1A 1C5	43.9500008000	-78.2830963000	(905) 800-0746	papaspizzaland@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5310	7cdac93e-fbaf-4b2f-a54e-97ca9f9b711a	452	t	253 West St N	99	3	L3V 5C9	44.6170006000	-79.4269028000	(705) 325-3771	s3har@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5311	2779f0d6-fbd0-4ad4-af2a-393e4b336933	453	t	98 Dunlop St E	38	3	L4M 1A4	44.3894005000	-79.6865997000	(705) 503-9300	thepizzajunction@outlook.com	f	2025-09-25 17:34:13.516778+00	\N
5312	9ea133ca-42ae-4d17-b8cf-6ce2e976fa22	454	t	16 Dunlop St E	38	3	L4M 1A3	44.3893013000	-79.6894989000	(705) 734-2544	bijay@spiceforme.com	f	2025-09-25 17:34:13.516778+00	\N
5313	7ebc4c71-fb21-4352-8b3e-31f2f5119ff7	455	t	276 Memorial Ave	99	3	L4B 5X6	44.5964012000	-79.4242020000	(705) 327-8677	info@topsinpizza.com	f	2025-09-25 17:34:13.516778+00	\N
5325	e21b6a47-f45a-48ce-b5c8-1ef11256f951	899	t	908 17 Ave SW	52	11	\N	51.0379982000	-114.0820007000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
5315	4f4710be-7931-4107-b8c2-deda8cd74c46	457	t	2695 Marsdale Rd	23	3	K9L 1Y4	44.2966003000	-78.3003998000	(705) 874-9898	papaspizzaland@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5333	36860f84-c0c8-4254-8698-0f5862a6b3a8	475	t	1775 Carling Ave	65	\N	\N	0.0000000000	0.0000000000	(613) 798-8088	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
5319	a5044b55-9efa-4eb4-9097-55e4275021d3	461	t	1380 Clyde Ave, Unit B	65	3	K2G 3H9	45.3596001000	-75.7393036000	(613) 695-2288	admin@asianstarsrestaurant.com	f	2025-09-25 17:34:13.516778+00	\N
5321	d6cf96f7-7ebb-4823-8d40-149d3477d68f	463	t	2177 Ogilvie Rd	65	3	K1J 8Y7	45.4448013000	-75.5949020000	(613) 745-8880	jaber.abeeat@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5322	601fb8eb-048e-4f21-a4ed-5a91a573b6c3	464	t	Elgin street	65	3	\N	45.4319000000	-75.6100006000	\N	kcheatani@sympatico.ca	f	2025-09-25 17:34:13.516778+00	\N
5323	9d1fdd51-4cd4-4b86-a2a5-55005950ef62	465	t	62 Maple Ave	38	3	L4N 1R8	44.3899002000	-79.6921005000	(705) 797-0052	\N	f	2025-09-25 17:34:13.516778+00	\N
5324	a64d4494-01a9-4485-9cbd-e91d6916ccdb	466	t	275 Bank St	65	3	K2P 2P1	45.4156990000	-75.6964035000	(613) 233-8717	\N	f	2025-09-25 17:34:13.516778+00	\N
5326	40955b34-16e3-469c-8b46-477342cd40b9	468	t	2138 St Joseph Blvd	95	3	K1C 1E6	45.4667015000	-75.5345001000	(613) 858-1111	linliangzuo@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5327	f0040614-7676-4714-b2c1-6dba0cace010	469	t	1390 Prince of Wales Dr	65	3	K2C 3N2	45.3693008000	-75.7033997000	(613) 225-1238	thai.coconut.ottawa@outlook.com	f	2025-09-25 17:34:13.516778+00	\N
5329	6f9d0c47-5082-49a7-b87b-3c0ddf6d9998	471	t	58 Dunlop St E	38	3	L4M 1A3	44.3893013000	-79.6869965000	(705) 727-0189	yan_hoa@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5330	dca83a8d-4136-4974-848d-0e0e14d21f5e	472	t	19 Concession St	9	3	K7K 2A5	44.2416992000	-76.4954987000	\N	\N	f	2025-09-25 17:34:13.516778+00	\N
5331	6abbeff5-7bcb-436a-bb14-c3d95183c5a5	473	t	3175 Rutherford Rd, Unit G34	16	3	L4K 5Y6	43.8284988000	-79.5382004000	(905) 660-9899	trung3636@rogers.com	f	2025-09-25 17:34:13.516778+00	\N
5332	23bdcbee-ab78-4d7d-bc6d-fd12c020f918	474	t	3175 Rutherford Rd, Unit 74	16	3	L4K 5Y6	43.8284988000	-79.5382004000	(905) 760-2060	quitemaple@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5316	5f890dbf-97e9-47d5-80dd-1782f3579677	895	t	5-3780 Fallowfield Rd	65	3	\N	45.2869987000	-75.7591019000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5337	307c9586-2c7e-4ebf-b2b7-95e9c2d5d1ee	479	t	2006 Robertson Rd	65	3	K2H 1A5	45.3238983000	-75.8271027000	(613) 596-0760	canadathai@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5338	56ca0513-0631-440f-b420-d3db8a985dbf	480	t	411 McArthur Ave	65	3	K1K 1G7	45.4323006000	-75.6485977000	(613) 680-5999	thilee.ram@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5340	64bef379-2ada-482f-9f5c-c8087c26ea27	482	t	1896 Prince of Wales Dr	65	3	K2C 3W9	45.3536987000	-75.7048035000	(613) 695-9988	kenchowhum@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5341	3ff2afd9-25f6-42d0-b958-099d2ad2133f	483	t	486 B Avenue de Buckingham	68	4	J8L 2G9	45.5872002000	-75.4168015000	(819) 281-9000	elie.choueiri@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5342	b3922669-281b-4187-8ddc-a8b258229d2d	484	t	574, boul Saint-Joseph	32	4	J8Y 4A5	45.4499016000	-75.7359009000	(819) 777-7732	joebolahood@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5343	87c6d589-dee7-4feb-bc93-10d121f14a0f	485	t	1980 Ogilvie Rd	65	3	K1J 9L3	45.4319000000	-75.6100006000	(613) 746-7287	gmeast@bellnet.ca	f	2025-09-25 17:34:13.516778+00	\N
5344	0d6663fc-3543-482e-9fcc-38e728a69a2a	486	t	40 Beech St	65	3	K1S 4M8	45.4011993000	-75.7073975000	(613) 237-1641	noemail@noemail.ca	f	2025-09-25 17:34:13.516778+00	\N
5346	e79f726f-7ba3-4200-a7be-1eb229b479e5	488	t	1060 Ogilvie Rd	65	3	K1J 7P8	45.4247017000	-75.6352997000	(613) 741-9191	arnab_619@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5347	8465213e-5715-49a7-bb5b-0d61613b3603	489	t	169 York St	65	3	K1N 5T4	45.4300003000	-75.6892014000	(613) 232-3100	funkyimran57@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5348	4286f3f7-6644-40dc-8b4c-a2e4bdb6543a	490	t	3-701 Eagleson Rd	73	3	K2M 2G1	45.2878990000	-75.8677979000	(613) 592-7888	Caiyang8602@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5349	46b6cd0d-af9a-4ccb-a96b-ca3ed7e18254	491	t	730 Bank St	65	3	K1S 2G3	45.4040985000	-75.6891022000	(613) 563-4411	no@no.ca	f	2025-09-25 17:34:13.516778+00	\N
5350	7e4aab06-77e5-404f-88d4-68c67f1e1a3c	492	t	1525 Banks Street	65	3	K1H 7Z1	45.3809013000	-75.6688004000	(613) 733-0808	tasso@hometownsportsbar.ca	f	2025-09-25 17:34:13.516778+00	\N
5351	e5db32d8-338f-403a-9231-505f9b24082a	493	t	775 Bank St	65	3	K1S 3V5	45.4035988000	-75.6885986000	(613) 565-8226	T@doughboyz.ca	f	2025-09-25 17:34:13.516778+00	\N
5352	e0e816c1-66c4-4b89-bfaf-5d6b0e54af5e	494	t	2950 Bank Street	65	3	K1T 1N8	45.3462982000	-75.6260986000	(613) 680-0811	falafoulgourmet@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5353	69286060-e0f2-474b-bad3-da958747088c	495	t	622 Montreal Rd	65	3	K1K 0T6	45.4424019000	-75.6417007000	(613) 746-4678	hostindia_ottawa@yahoo.ca	f	2025-09-25 17:34:13.516778+00	\N
4319	0acc00d9-f432-4ce0-ae66-088887b30b8a	805	t	75 Elgin Street	59	1	K7S 3T9	45.4345455000	-76.3555388000	(613) 317-0327	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4320	e4368404-9e2d-4520-bd3d-34c95346b6f0	806	t	2446 Bank Street	65	1	K1V 1A4	45.3419389000	-75.7560492000	(613) 731-3535	m.lezzeik@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4321	92cf6470-2105-432a-81d0-508a1cd6ee1b	807	t	169 York St	65	1	K1N 5T4	45.4215296000	-75.6971931000	(613) 562-4545	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4322	8e98c5b8-b4d3-4e62-b963-0783c4514380	808	t	786 Rue Main	32	2	J8R 1W7	45.5057880000	-75.6519494000	(819) 663-1666	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4323	f4271c4d-92cc-44ac-b065-8283c5f1e7c0	809	t	2310 Rue Saint-Louis	32	2	J8T 5L8	45.4874348000	-75.7457741000	(819) 205-1666	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4324	87ead0a4-449e-4f89-9621-7f38fa6a20d3	810	t	393 Mont�e de la Source	32	2	J8V 0J2	45.5375457000	-75.7714149000	(819) 607-1717	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
5334	e44b2536-f878-44f2-85eb-8aa987c0610b	476	t	185 Mackenzie Rd	83	12	X0E 0T0	68.3566971000	-133.7209930000	(867) 777-4900	fearlessleader@tonimoes.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
5355	57698e5b-f090-4df8-a3e4-dc61acf2357b	497	t	2491 St-Joseph Blvd	65	3	K1C 1G2	45.4700012000	-75.5272980000	(613) 834-4549	charanjit65@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5356	f5294bae-56c8-4f13-8d3a-c93256074f4c	498	t	1797, rte du Carrefour	37	4	J8N 7M7	45.5932999000	-75.6173019000	(819) 671-7111	hima.ca@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5358	36e4d4b1-ab4c-4899-99b0-c9eed3b0126b	500	t	3777 Strandherd Dr	65	3	K2J 4B1	45.2681007000	-75.7494965000	(613) 823-8688	\N	f	2025-09-25 17:34:13.516778+00	\N
5359	47ea3731-c885-492b-bdee-048bd0ce85b9	501	t	57 chemin de la grande-cote	67	4	J7G 1G8	45.6188011000	-73.8135986000	(450) 419-4188	enshokugeisha@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5360	3c03548c-705f-441c-b2c9-62fc90e9e6df	502	t	1433 Woodroffe Ave	65	3	K2G 2V5	45.3422012000	-75.7555008000	(613) 723-8808	jtam048@uottawa.ca	f	2025-09-25 17:34:13.516778+00	\N
5361	4a115a54-01d6-46f4-9fff-16acde355449	503	t	1-1234 Merivale Road	65	3	K1R 6R5	45.3707008000	-75.7332993000	(613) 234-4567	allannguyen79@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5362	59fbe010-b9a8-4a70-9af3-be2987edbcf3	504	t	202 Bank St	65	3	K2P 2H6	45.4174995000	-75.6984024000	(613) 234-0888	weng9876@outlook.com	f	2025-09-25 17:34:13.516778+00	\N
5364	7420c94e-9139-44ec-8ee2-8da439313f24	506	t	427 Mcarthur Ave	65	3	K1K 1G5	45.4215012000	-75.6971970000	(613) 852-6693	noemail@noemail.com	f	2025-09-25 17:34:13.516778+00	\N
5365	5a97835e-30e5-4ed2-af25-40682d3879ea	507	t	800 Hunt Club Road	65	3	K1V 1C3	45.3443985000	-75.6663971000	(613) 680-8959	sarwarhazara@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5366	95a22f6a-915b-4aa4-a485-b78ee2948007	508	t	1947 Bank Street	65	3	K1V 8A4	45.3670006000	-75.6611023000	(613) 521-3868	\N	f	2025-09-25 17:34:13.516778+00	\N
5367	ddec2292-854f-4231-964e-39cf8e1b28d3	509	t	700 March Rd	65	3	K2K 2V9	45.3497009000	-75.9248962000	(613) 599-0006	thanhtaynguyen@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5368	524beae4-aae6-4ba6-a2e2-7ab34f7c3f9c	510	t	5507 Hazeldean Rd	65	3	K1V 8A4	45.2896996000	-75.9024963000	(613) 836-1688	yurongtcp@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5369	852bda3b-38ac-4abe-8f47-281ecead8531	511	t	261 Centrepointe drive	65	3	K2G 6E8	45.3391991000	-75.7713013000	(613) 226-3888	noemail@noemail.ca	f	2025-09-25 17:34:13.516778+00	\N
5371	11716fb9-1f75-4e88-b34f-73b716fd2ac8	513	t	2564 St. Joseph Blvd	95	3	K1C 1G3	45.4705009000	-75.5251007000	(613) 837-6600	nashs63@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5372	a6cf9e67-533f-4d52-bb02-872d89a273c7	514	t	2564 St Joseph Boulevard	95	3	K1C 1G3	45.4705009000	-75.5251007000	(613) 424-5660	\N	f	2025-09-25 17:34:13.516778+00	\N
5373	187d830d-ac00-46e9-887d-80ef9d918a0b	515	t	81 Richmond Rd	65	3	K1Z 6V8	45.3969002000	-75.7434006000	(613) 728-1973	ray_napolis@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5374	29e4de66-712d-4fe9-9f34-de07369940ff	516	t	1105 Cobden Road	65	3	K2C 2Z1	45.3521996000	-75.7779007000	(613) 828-2828	skarkache@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5375	0cb38e8c-8641-40dd-a5c7-254a7fdcf700	517	t	222 Hunt Club Road	65	3	K1V 1C1	45.3348999000	-75.6920013000	(613) 739-8687	yhasso2562@rogers.com	f	2025-09-25 17:34:13.516778+00	\N
5376	2df237f0-fbeb-4f4a-98d0-7c7d5702b50d	518	t	1577 Laperriere	65	3	K1Z 7T3	45.3767014000	-75.7456970000	(613) 729-3882	Gar6139@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5377	82513b3d-f542-41bb-a34d-5ff84605540e	519	t	4312 Innes Road	95	3	K4A 5E6	45.4589996000	-75.4934006000	(613) 590-1000	camvan73@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5378	9e6cd485-43c4-4444-8b75-a4d838d6e41d	520	t	874 Clyde ave	65	3	K1Z 5A2	45.3764992000	-75.7485962000	(613) 728-2391	gregaboukheir@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5379	790f3693-a839-44d6-9a79-9093c3618581	521	t	25 Tapiola Cres	65	3	K1T 2J7	45.3639984000	-75.6465988000	(613) 277-7774	eljammalali073@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5380	1e30cfb8-9285-4719-81c1-aae92ced5a21	522	t	1463 Lasalle Blvd	53	3	P3A 1Z8	46.5215988000	-80.9427032000	(705) 560-2500	\N	f	2025-09-25 17:34:13.516778+00	\N
5381	ee0b221d-64a9-4a1b-aa4b-92cc9483438d	523	t	1856, Rue Sherbrooke	91	4	J1X 2T3	45.2784996000	-72.1278992000	(819) 769-0666	sabrigul@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5382	60f8c94d-c752-4908-9363-b3b4aac9675c	524	t	600 Terry Fox Drive	65	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	f	2025-09-25 17:34:13.516778+00	\N
5383	2536d1d1-fe84-47fd-89ae-f8db3f486ef4	525	t	1 Tartan drive	65	3	K2J 2W7	45.2699013000	-75.7539978000	(613) 823-3333	ravii12@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5384	36ac9422-c176-499f-92f5-981ddb6a7d7b	526	t	4055 Carling	73	3	K2K 2A4	45.3380013000	-75.9076004000	(613) 270-8866	bilalskabab@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5385	89718771-a896-4901-901c-61c472740b58	527	t	1739 Walkley Rd	65	3	K1V 2P6	45.3779984000	-75.6449966000	(613) 680-8300	yhaydar78@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5388	f83c3737-3ea8-42cd-aec2-d08eb7550099	530	t	327 St Laurent Blvd	65	3	K1K 2Z5	45.4500008000	-75.6516037000	(613) 680-5353	eatatmias@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5389	04437a3a-18b6-4125-9ad3-062794fcc294	531	t	1846 Carling Av	65	3	K2A 1E3	45.3762016000	-75.7566986000	(613) 686-1740	pitabellcanada@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5390	e62d15d3-61a5-45ef-a22c-d5dea6e7f78e	532	t	324 Bank Street	65	3	K2P 1Y1	45.4142990000	-75.6957016000	(613) 565-3030	ccisottawa@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5392	ab0b212a-7574-4121-b19f-62b08bccc5cd	534	t	69 rue Laurier	32	4	J8X 3V7	45.4304008000	-75.7104034000	(819) 777-0404	Vincent.gobuyan@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5393	40c230ad-b684-44c5-861b-c13cbff7d85a	535	t	425 Donald St	65	3	K1K 1L8	45.4283981000	-75.6495972000	(613) 741-7171	mchoukair@live.com	f	2025-09-25 17:34:13.516778+00	\N
5394	9aa96933-7184-4203-8ff7-7611ae80b98d	536	t	870 Somerset Street West	65	3	K1R 6R7	45.4085999000	-75.7134018000	(613) 238-8828	huangao175@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5395	038318fe-7773-45b0-b03b-3605695ea69f	537	t	291 Queen Mary	65	3	K1K 1X1	45.4252014000	-75.6521988000	(613) 741-2220	mohamed_tfaili@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5396	439031ee-4c49-4e33-b74e-023ed3883b89	538	t	4 Rue Belmont	44	4	J9H 1E5	45.3950996000	-75.8302994000	(819) 682-1222	stefanovic60@yahoo.ca	f	2025-09-25 17:34:13.516778+00	\N
5397	184e027f-1544-4ff8-be76-a8365dea76db	539	t	576 Montreal Road	65	3	K1K 0T9	45.4421005000	-75.6438980000	(613) 740-0888	jaber.abeeat@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5400	bb8f4d30-a77e-42b3-9f5c-f215779553d4	542	t	292 Albert St	65	3	K1P 1H4	45.4192009000	-75.7017975000	(613) 234-5433	fahim_bakth@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5401	18033138-65a2-449a-ba54-6abc0ea58653	543	t	256 Preston Street	65	3	K1R 7R5	45.4045982000	-75.7118988000	(613) 231-8424	Vincent.gobuyan@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5402	db619c6f-3e2c-499e-92cc-64de6867c658	544	t	1374 Baseline Rd	65	3	K2C 0A9	45.3622017000	-75.7369995000	(613) 238-8424	Vincent.gobuyan@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5403	7c830a21-b959-4005-8257-f07f150d0cf3	545	t	3005 Edouard VII	54	4	J0L 2K0	45.3525009000	-73.4741974000	(450) 659-6944	marios157@hotmail.ca	f	2025-09-25 17:34:13.516778+00	\N
5404	c614900e-9fba-41d7-8b5b-575eadbdf5cf	546	t	233 Laurier Ave E	65	3	K1N 6P1	45.4215012000	-75.6971970000	(613) 422-8734	nargesalamy@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5406	2a305db9-7b8d-4565-bed0-86951d48111c	548	t	1577 Alta Vista Dr	65	3	K1G 0E9	45.4086990000	-75.6580963000	(613) 248-8111	zeiti.n@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5407	150459c3-9202-4bb2-a8a9-8310a548ead5	549	t	3320 McCarthy Road	65	3	K1V 0X3	45.3512993000	-75.6703033000	(613) 731-2828	\N	f	2025-09-25 17:34:13.516778+00	\N
5408	5709134f-ae04-45da-9f5c-4b07fd566c30	550	t	873 Bank Street	65	3	K1S 2R5	45.4009018000	-75.6869965000	(613) 421-5802	lesliecole@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5409	86c140ae-8359-445a-b6c4-257d8b051806	551	t	100 Castlefrank Road	73	3	K2L 2V6	45.2937012000	-75.8817978000	(613) 435-8388	nucaribbean@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5410	5a49bae0-1c29-4bc1-9882-c2150885d09f	552	t	109 mattingly way	65	3	K4M 0C5	45.2677994000	-75.6970978000	(613) 277-1558	mathieublake@gmail.com	f	2025-09-25 17:34:13.516778+00	\N
5411	e81190a2-86a1-4621-babe-a909106ea26c	553	t	83 Holland Ave	65	3	K1Y 0Y1	45.4009018000	-75.7323990000	(613) 792-4478	hollandgrill@hotmail.com	f	2025-09-25 17:34:13.516778+00	\N
5412	ddf58e24-319f-4904-bc2a-1151b6d1b52f	554	t	819 Somerset St W	65	3	K1R 6R4	45.4094009000	-75.7113037000	(613) 238-6758	mtritran@yahoo.com	f	2025-09-25 17:34:13.516778+00	\N
5427	25eb8c34-e85a-4937-88e8-235261bbc885	923	t	600 Terry Fox Drive	73	11	K2L 4B6	45.3003900000	-75.9069158000	(613) 680-2050	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
5414	bbd0365c-ea7b-4491-b718-4d53e58538fe	556	t	2950 Bank Street	65	3	K1T 1N8	45.4215012000	-75.6971970000	\N	\N	f	2025-09-25 17:34:13.516778+00	\N
5433	ad369f9a-c08c-4d4e-b29f-e607666d275e	929	t	7772 Jeanne d'Arc Boulevard North	95	3	K1C 2J1	45.4823197000	-75.5279578000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
5416	94883f65-14d5-423a-b2c7-c70c2e8c8970	580	t	600 Terry Fox Drive	65	3	K2L 4B6	45.3003998000	-75.9067993000	(072) 045-6789	stefan1@menu.ca1	f	2025-09-25 17:34:13.516778+00	\N
5434	e85dedfc-81f3-45cb-b6f0-2712b43c8436	930	t	2225 Saint Laurent Boulevard	65	3	K1G 1B2	45.3895818000	-75.6173986000	(613) 737-3198	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
5418	94300863-0eda-4f30-b9b1-f3cff5eb545e	21	t	2047 Dovercourt Avenue	12	4	K2A 0X2	45.3784528000	-75.7689956000	(001) 123-4567	stefan@menu.ca	t	2025-09-25 17:34:13.516778+00	\N
5437	0c51a920-f49b-4f55-a819-a5d8339375c3	933	t	125 Preston Street	65	3	K1R 7P3	45.4080395000	-75.7138457000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
5438	9b3c40a0-5d57-424e-999a-ea91477b7209	934	t	375 Des �pinettes Avenue	95	3	K1E 3E6	45.4661877000	-75.4957745000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:49:33.554178+00
5440	853e1e1f-53c0-46d2-b704-752dc9bcbf82	936	t	2126 Apple Leaf Way	\N	4	\N	0.0000000000	0.0000000000	(613) 413-2250	\N	f	2025-09-25 17:34:13.516778+00	2022-01-31 13:15:16+00
5456	84e61e6c-7234-4a90-8d4e-36c196486c7d	952	t	4042 Innes Road	95	3	K1C 1T1	45.4551013000	-75.5051859000	(613) 841-4999	info@riverpizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5457	bb4a61fa-691b-4c56-ac38-613a106207b6	953	t	5960 Rue Sherbrooke Est	28	4	H1N 1B8	45.5762856000	-73.5466542000	(514) 254-7002	contact@genki-sushi.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5458	a199508a-062e-4b47-987e-841b0f1d2f7f	954	t	40 Beech Street	65	3	K1S 4M8	45.4009072000	-75.7078263000	(613) 237-1641	george@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5459	957d3e8b-f086-424a-9fa0-ed05dc38a2e6	955	t	1 Rue Cholette	32	4	J8Y 1J5	45.4534376000	-75.7519970000	(819) 775-4343	lanawab4@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5460	6d638a91-f272-4000-bef3-9ad1f82ee9df	956	t	Jeanne-d' Arc Boulevard	65	3	K1C 2R5	45.4846138000	-75.5189704000	(613) 830-3276	george@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5461	32b23622-5d2b-4e29-ba18-5ef91f6e2f7a	957	t	6505 Jeanne d'Arc Boulevard North	95	3	K1C 2R1	45.4799512000	-75.5369210000	(613) 837-8000	cosenzapizzas@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5462	b93ef3f9-9526-439d-a918-85d826a1a3d0	958	t	1610 Merivale Road	8	3	K2G 4A1	45.3484699000	-75.7324186000	(613) 225-3297	george@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5463	df7f2d8c-0438-4bdf-b0bb-57fc4567fb2b	959	t	1831 Robertson Road	8	3	K2H 8X3	45.3282713000	-75.8194738000	(613) 721-0007	george@menu.ca	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5464	acd4a56c-8f48-4404-b614-fea763120688	960	t	120 Rue Richelieu	76	4	J3B 6X4	45.3047677000	-73.2511136000	(450) 346-5535	uddinsantino@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5465	f99b3b00-d324-4183-ad0e-59f9fc496573	961	t	435 Mont�e de la Source	60	4	J8V 3B5	45.5394242000	-75.7727738000	(819) 607-0712	alexandra@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5466	d08a4424-ad4e-44d8-bfbe-30bd202dc252	962	t	1009 Chemin de Masson	32	4	J8M 1R4	45.5578100000	-75.4197700000	(819) 986-2222	alexandra@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5467	7d6a2df7-6e23-4d62-97b5-07101c31917c	963	t	1096 Chemin de Montr�al Ouest	32	4	J8M 2C1	45.5225471000	-75.4909607000	(819) 617-3434	alexandra@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5468	cb9448bc-4862-4870-93ac-5a927a4bda60	964	t	842 Boulevard Maloney Est	32	4	J8P 1H1	45.4847804000	-75.6077643000	(819) 893-1555	alexandra@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5469	c9a59a11-6e59-4beb-b9a8-c7be9ebf8f2b	965	t	922 Boulevard Maloney Est	32	4	J8P 1H5	45.4900364000	-75.5945722000	(819) 893-3434	alexandra@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
5470	3ebb9f9d-66a0-44cd-b6b6-fa20f031710b	966	t	405 Boulevard de l'H�pital	32	4	J8T 8E2	45.4898982000	-75.6891636000	(819) 568-1109	alexandra@menu.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:08:51.535656+00
4325	07af317d-00c8-414d-bff5-2e4c1677ea07	811	t	786 Rue Main	32	2	J8R 1W7	45.5057880000	-75.6519494000	(819) 663-1666	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4326	2ad3e765-056f-4bb9-b903-dda697f9bcc3	812	t	\N	32	2	J8T 5L8	45.4874348000	-75.7457741000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4327	c185c0e9-6609-4d58-8ece-c24c2b0207a3	813	t	2310 Rue Saint-Louis	32	2	J8T 5L8	45.4874348000	-75.7457741000	(819) 205-1666	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4328	f269b3d1-41cf-45bf-8950-bdc23fd0fd21	814	t	1574 Walkley Rd	65	1	K1V 6P5	45.4215296000	-75.6971931000	(819) 921-5111	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4329	f02a5323-7e7d-475c-ab13-ca202c49cb5d	815	t	600 Rideau Street	65	1	K1N 6A2	45.4328184000	-75.6752359000	(613) 789-2020	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4330	a60792e8-3d0b-4707-8a7f-a07c084a7d81	816	t	428 Rue G�n�reux	32	2	J8P 6G5	45.4765446000	-75.7012723000	(819) 643-5555	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4331	8e8838f8-b73f-4c4e-a435-736e6a2b21d2	817	t	1012 Merivale Road	65	1	K1Z 6A5	45.3795478000	-75.7335689000	(613) 729-9999	a1pizzatime@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4332	073cd5bf-2bb1-454b-9643-e6b5cfd11b36	818	t	2609 Laurier St	116	1	K4K 1K6	45.5437052000	-75.2978580000	(613) 446-1291	dharmeshkathireeya143@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4333	49549b42-45dc-41e8-835e-a0a5fa661ef4	819	t	6594 4th Line Rd	110	1	K0A 2T0	45.1173092000	-75.6984045000	(613) 489-1444	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4334	a6a8cb2c-2424-45cc-b44e-f60f9f11b347	820	t	574, boul Saint-Joseph	32	2	J8Y 4A5	45.4499787000	-75.7356338000	(819) 777-7736	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4335	9975c332-a1d3-47cc-8955-ddd6eb4e16f6	821	t	83 Mill Street	117	1	K4R 1A2	45.2564850000	-75.3581480000	(613) 445-3131	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4336	95b9dda2-3021-444e-aa3d-89387a0a5de2	822	t	253 Boul Maloney E	32	2	J8P 1C3	45.4845380000	-75.6467570000	(819) 643-3377	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4337	c39249a7-6305-44bf-ae3e-959e6b8bb7fc	823	t	26 Northside Road	65	1	K2H 5Z3	45.3295166000	-75.8138026000	(613) 721-1999	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4338	6313af0a-8dfc-4c77-bffd-b5a238e58a1d	824	t	26 Northside Road	65	1	K2H 5Z3	45.3295166000	-75.8138026000	(613) 596-0006	pankitpvp@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4339	dd5da7a8-735b-477d-b75f-1cb343fbb173	825	t	1 Rue Cholette	32	2	J8Y 1J5	45.4765446000	-75.7012723000	(819) 775-4343	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4340	6b2711ef-8595-4b8e-870f-fd55ace7c0be	826	t	585 Montreal Road	65	1	K1K 4K3	45.4422399000	-75.6447219000	(613) 745-5555	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4341	cd0049cc-886e-466e-a343-282f5eeb89ce	827	t	1896 Prince of Wales Dr	65	1	K2C 3W9	45.3538415000	-75.7048504000	(613) 695-9988	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4342	4f332405-60c5-467b-af46-4ee1d4b8af53	828	t	577 Gladstone Ave	65	1	K1R 5P2	45.4094414000	-75.7008776000	(613) 518-7434	info@ottawakabab.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4343	0f6bf112-03d6-47d1-9b4e-19d8e0462d6b	829	t	1009 Merivale Rd	65	1	K1Z 6A6	45.3797544000	-75.7328209000	(613) 728-5858	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4344	35e4510e-e1a2-4078-a4b7-c2432bf36531	830	t	1797, rte du Carrefour	37	2	J8N 7M7	\N	\N	(819) 671-7111	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4345	0f2fed17-0bd4-45d6-9489-f830fecc17cf	831	t	1012 Merivale Rd	65	1	K1Z 6A5	45.3796758830	-75.7335796314	(613) 715-9919	mapledelightpizza@gmail.com	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4346	ac39b5f8-ca8f-4249-b468-d8b89e362478	832	t	1078 Merivale Rd	65	1	\N	45.3775136000	-75.7335912000	(613) 722-7777	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4347	1ff0a508-934c-4c96-bc2d-006576d26e87	833	t	951 Notre-Dame St	107	1	K0A 1W0	45.2720134000	-75.2827795000	(613) 443-9111	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4348	fe33bb77-d389-47d6-a853-6dc45a205814	834	t	39 Bedford St	119	1	K0G 1X0	44.6796128000	-76.3995402000	(613) 273-8883	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4349	a2cf9041-4892-4c11-85e5-6ebba67da805	835	t	1216 Bank St	65	1	K1S 3Y1	45.3914804000	-75.6811092000	(613) 260-7474	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4350	f585a7af-0cb2-48ed-b5a8-3032e7cdccf3	836	t	1216 Bank St	65	1	K1S 3Y1	45.3914804000	-75.6811092000	(613) 526-3456	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4351	dd2337d8-e681-4dc4-ab3f-5179629be922	837	t	6500 Russell Road	93	1	K0A 1K0	45.3689882000	-75.4556710000	(343) 546-0222	corporate@milanopizza.ca	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4352	7a66ce74-84aa-46a1-bd09-fde0cb6ca0ba	838	t	95 Rue Saint-�tienne	32	2	J8X 1J7	45.4338677000	-75.7157922000	(819) 772-9883	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4353	67b6e513-d89e-48ae-afa7-30c022dc987a	839	t	\N	8	1	\N	45.3349046000	-75.7241006000	\N	\N	f	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4354	005ed6cf-9464-4736-b261-e84226b3e0bc	840	t	1896 Prince of Wales	8	1	K2C 3W9	45.3349046000	-75.7241006000	(613) 224-7700	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4355	2c1dbff1-6b0d-4175-b944-6a40492ab609	841	t	3091 Strandherd, Dr.7	103	1	K2J 4R9	45.2634006000	-75.7351024000	(613) 825-8283	\N	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
4356	2490c80a-6026-4d45-a7a8-4575983fc001	842	t	178 King St E	115	1	K0E 1T0	44.7111290000	-75.5120200000	(613) 925-3330	MilanoPrescott@gmail.com	t	2025-09-25 17:34:13.516778+00	2025-09-26 14:39:05.300782+00
\.


--
-- Data for Name: restaurant_schedules; Type: TABLE DATA; Schema: menuca_v3; Owner: postgres
--

COPY menuca_v3.restaurant_schedules (id, uuid, restaurant_id, type, day_start, time_start, time_stop, is_enabled, created_at, updated_at, day_stop) FROM stdin;
\.


--
-- Data for Name: restaurants; Type: TABLE DATA; Schema: menuca_v3; Owner: postgres
--

COPY menuca_v3.restaurants (id, uuid, legacy_v1_id, legacy_v2_id, name, status, activated_at, suspended_at, closed_at, created_at, created_by, updated_at, updated_by) FROM stdin;
7	558f5374-4f04-4a24-84fe-17b1d0fc4fd1	89	\N	Imilio's Pizzeria	active	\N	\N	\N	2025-09-24 13:49:43.753304+00	0	\N	\N
17	77fad114-9364-480b-be43-79db7ede61d4	110	\N	Papa Joe's Pizza ( now house of pizza only)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	18	\N	\N
19	3d049d0b-66da-4312-bc3d-8fc0c2b60997	112	\N	Milano INACTIVE Baxter - Iris - Cobden 3	active	\N	\N	\N	2025-09-24 13:49:43.753304+00	18	\N	\N
43	25dcc979-620c-4ced-9794-85b25714e440	141	\N	Liu's Cuisine (DROPPED)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
49	d7fd2959-22f5-49c6-8b3b-8b14a90e1ad3	150	\N	Mom's Chicken	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
67	cfba7c45-4600-4d83-82b3-93c2f1d3875a	181	\N	Milano ( dropped)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
83	f844f665-1ddf-4415-9945-bcb82e3441e4	199	\N	Season's Pizza	active	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
100	31761d43-c09b-4899-b469-b7e5296508e0	217	\N	Bento Sushi (DROPPED)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
111	99a4c9da-4bb5-4f2a-98a2-7a6bf36c3de3	230	\N	Paesano's Pizzeria ( closed)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
117	270f2e69-d4b1-4d59-a245-c6d6d3d1af23	237	\N	Shawarma King	active	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
118	59ac3941-b306-4dec-8fb5-6aab326613c5	238	\N	Mano City Pizza	active	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
120	51e13d8b-f999-48c6-a42a-ed604bd0e24b	240	\N	Piper's Pizzeria Bar & Grill ( dropped)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
129	f9afa20c-12c0-4dee-add7-1b7e008ceaa4	253	\N	Shogun Japanese (closed)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
162	529e6285-f215-43e5-96b2-0fda8f8ac758	296	\N	King Wok ( closed )	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
168	05645009-8781-4786-a70b-ef929fd6434d	304	\N	Hockey Sushi (closed)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
178	7dd4515b-5577-4dd5-8178-63ae6b3abaf1	316	\N	Red Chili Garden ( closed )	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
186	8d106694-e92a-41e0-aade-0a74447a8fd5	324	\N	Yaseen Halal Pizza - Carling	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
188	d915259d-af05-461c-9ca6-f6bf712e6aaa	326	\N	Al's Diner ( dropped ) 	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
231	0847b780-cdcb-40cd-bb6a-ee7aa10b6b08	371	\N	Ceylonta - Somerset (DROPPED)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
237	e2bb71e5-5477-4b04-ba0f-0ea3a6c42ef5	377	\N	Pho by Night - Sweet Art ( Dropped)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
238	c8aa0cce-23e1-4fe8-8272-8cc939c99b11	378	\N	Angelo's Sports Bar and Grill	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
248	ee31f6bb-4581-4ae9-aa05-acebdfc64d30	392	\N	Le Tandoor	active	\N	\N	\N	2025-09-24 13:49:43.753304+00	40	\N	\N
252	d91c11c8-c4ac-435c-82a2-c7e1779d3754	397	\N	Hokkaido Sushi (dropped)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
272	2ef01b71-02be-4ae1-a26f-9529bbefebaf	418	\N	Basha Mont-Saint-Hilaire (dropped)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	40	\N	\N
283	c94ba57f-6d6c-432c-9bc0-52f5a5908b59	430	\N	Amir Dorion ( dropped )	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	18	\N	\N
301	18a0494c-3033-4e0e-89a5-f8f393a6a451	454	\N	Ramigab dropped	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
305	45f386a4-0ea7-498f-b8c8-885bd23d01b2	459	\N	Indira's Caribbean Spot ( dropped )	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	34	\N	\N
307	86a09fc0-548b-4ceb-84dd-e150166eeb2e	461	\N	Grazie Kitchen and Pizza (closed)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
316	f525fd5a-fcb0-4267-9f9a-1ee90c030304	472	\N	TCJ Restaurant ( dropped ) 	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	40	\N	\N
318	c31be7d0-9098-41a5-9e49-372bcbdc6746	474	\N	Chicken'licious (dropped)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	34	\N	\N
332	bea58d6d-129e-4718-aac4-5aa0e250164e	494	\N	Basha Monkland (dropped)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	18	\N	\N
333	090e1ad8-0ab4-4bc1-b8cc-7cb755504c6a	495	\N	The Portuguese Chicken Guys (dropped)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	18	\N	\N
339	eacf83ac-811c-41b0-81b1-8184c82673b2	501	\N	Bai Du Sushi ( dropped )	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
355	8443b34e-905c-4405-adbb-daaa8b3547e8	518	\N	Sushiya ( dropped low sales)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	18	\N	\N
357	5fc1c543-68a3-4b3d-8dc9-d13e9b0d8b4b	520	\N	Tap Tap Express Dropped	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	18	\N	\N
379	325c1fc0-f3ac-4e52-b454-f900c96f3a2d	545	\N	Casse-Croï¿½te Quï¿½bec (dropped)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	18	\N	\N
385	5e0594ed-74be-4c12-97f1-faaace3dd3d1	551	\N	pizza boys	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
391	5c5bf36a-a0ed-4676-bcc3-3d6721fb9fb6	559	\N	Mia Pasta - Valleyfield ( dropped)	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	18	\N	\N
398	cfb5e461-4aaf-4484-ba96-a753d3571eef	567	\N	Mr Mozzarella ( dropped )	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
400	36db42b4-6644-4ee8-86ce-07f9392f303a	571	\N	Mia Pasta - Les Coteaux ( Closed )	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	34	\N	\N
417	21f39556-3083-40cb-bcb6-d978e92c3be6	589	\N	The Kathi Roll Express - North York (closed)_	suspended	\N	\N	\N	2014-10-08 15:27:39+00	34	\N	\N
418	c39840d6-8769-44b0-ba8a-da088d70fd43	590	\N	Aladdin Donair & Pizza (closed)	suspended	\N	\N	\N	2014-10-09 09:24:27+00	18	\N	\N
431	f475d006-5d13-4182-b2ef-24a40119986c	604	\N	Basha - Beloeil (dropped)	suspended	\N	\N	\N	2014-10-28 09:27:40+00	18	\N	\N
438	bb80390b-0a47-4e17-b6f6-1aeea0600e46	613	\N	Papa Joe's Fried Chicken Walkley	active	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
458	51b65a27-0804-4a33-a654-1714277ad720	642	\N	Lotus Chinese Food ( new owner )	suspended	\N	\N	\N	2014-11-25 09:45:32+00	21	\N	\N
459	0df7b907-f2d1-474c-bdd8-0fd701532773	643	\N	Galo Piri Piri ( closed for business )	suspended	\N	\N	\N	2014-11-25 10:10:09+00	56	\N	\N
460	78d1ff43-7863-4e64-a736-49f66e604f7c	644	\N	Pho La Express ( sold )	suspended	\N	\N	\N	2014-11-25 15:40:42+00	21	\N	\N
462	c40876da-0012-4472-a939-1bb776fadc98	646	\N	Prince Gourmet - Cyrville Dropped	suspended	\N	\N	\N	2014-11-05 08:14:15+00	21	\N	\N
467	e73c8870-28d0-4c44-ae74-4aab1f1ccf3b	654	\N	Fuji Yama Japanese Restaurant	suspended	\N	\N	\N	2014-12-03 15:23:17+00	56	\N	\N
470	ec7aae0b-ae7c-4b82-83ca-0b2f5455f854	659	\N	Carmello's Italian Restaurant & Bar (retired)	suspended	\N	\N	\N	2014-12-08 15:25:28+00	56	\N	\N
481	bb68ccb6-2462-43f7-8105-ecfe4340fe92	671	\N	Ceylonta - Carling ( dropped )	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
487	85f5c381-a714-4925-a72a-7668809a5f5c	687	\N	Merivale Noodle House (QUIT)	suspended	\N	\N	\N	2015-02-27 08:59:11+00	21	\N	\N
496	4a88eb33-7a9a-4873-bde8-dd2dd6d0c30d	700	\N	Colonnade Pizza - Merivale Road	suspended	\N	\N	\N	2015-04-16 13:32:30+00	21	\N	\N
499	003a21b3-5c87-42ad-b3ce-d23f8cb20758	704	\N	Bilal Halal Pizza ( dropped )	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
505	cefa5bc3-54f5-44e1-af2e-7f02401d23ca	710	\N	Patricio's 2 For 1 Pizza ( dropped )	suspended	\N	\N	\N	2015-05-25 15:01:43+00	18	\N	\N
512	9ec62a8c-19c2-4a48-9571-9745615f87bd	717	\N	1 for 1 Pizza Carling	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
528	ca9e5114-e776-4430-a905-9d2076e263ad	737	\N	Papaz Pizza ( closed )	suspended	\N	\N	\N	2015-11-12 15:58:39+00	21	\N	\N
533	28350212-a756-4e52-854c-ce611f2b784e	749	\N	Wellington Diner ( dropped )	suspended	\N	\N	\N	2015-12-18 14:13:14+00	21	\N	\N
540	2eff8420-4308-43dd-9971-5f76e2b5185c	758	\N	Papa Grecque des Flandres	active	\N	\N	\N	2016-01-08 11:38:12+00	21	\N	\N
541	3a93e0ba-6e5e-4164-a7ff-c7c72ce5c11c	759	\N	Jumbo Chinese Food Restaurant (CANCELLED)	suspended	\N	\N	\N	2016-01-11 10:13:42+00	21	\N	\N
547	4944350a-ddb9-4be3-a136-a7d5e6ce8ed1	766	\N	POS SIMPLICITY	active	\N	\N	\N	2014-11-05 08:14:15+00	21	\N	\N
555	50f17207-6f1d-4972-8b6a-a1d9dbf13caf	774	\N	Petit Peru	suspended	\N	\N	\N	2016-02-09 19:07:09+00	21	\N	\N
557	36c058c1-93f5-4250-aaea-dc6304250d8c	776	\N	Via613 (CANCELLED)	suspended	\N	\N	\N	2016-02-24 13:20:49+00	18	\N	\N
558	f41f24b8-8641-45ff-8ae2-74275f090041	777	\N	East India Co - West Ottawa	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
559	099621a1-be2d-43ba-bc1f-f6a1317acb99	778	\N	Bonita's Cantina	suspended	\N	\N	\N	2016-02-26 08:59:35+00	21	\N	\N
560	253f71ff-04dc-4d3c-b2df-5d2e895c0565	780	\N	Pizza Bonne Humeur	suspended	\N	\N	\N	2016-02-29 17:35:16+00	21	\N	\N
561	e001e520-2243-428c-94a1-40d9281cc480	781	\N	Aahar The Taste of India	active	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
562	0d69652b-ce92-4456-96ef-df97b7dfb556	782	\N	Pizza des Hautes Plaines	active	\N	\N	\N	2016-03-01 20:28:05+00	21	\N	\N
563	ae89c479-2a6e-43ab-954a-e7aeb71b363e	783	\N	Fort York Pizzeria	suspended	\N	\N	\N	2016-03-02 10:25:38+00	18	\N	\N
564	57cd42c1-1cd1-4abf-902f-6ce931cd8ab1	784	\N	Smoque Shack	suspended	\N	\N	\N	2016-03-04 10:50:52+00	21	\N	\N
565	9567d7d3-9c44-488d-b98d-2019d9aeae9b	785	\N	Milano	active	\N	\N	\N	2016-03-08 12:12:56+00	21	\N	\N
566	2f6afccf-3d62-4f4b-b01c-c54467ec81ea	786	\N	Petit Peru Hull (INACTIVE)	suspended	\N	\N	\N	2016-03-11 09:45:24+00	21	\N	\N
567	471e38c3-934b-4626-9299-288fcb3c94ed	787	\N	Main Meal (CLOSED)	suspended	\N	\N	\N	2016-04-04 15:20:47+00	21	\N	\N
568	d0292ac1-131b-4080-8572-6f50369257df	788	\N	Burrito Shack - Spratt - Closed	suspended	\N	\N	\N	2014-10-30 16:51:44+00	56	\N	\N
569	fccf7088-2ad9-46c8-8ed0-012bab524fa1	789	\N	Milano	active	\N	\N	\N	2016-04-13 14:21:08+00	21	\N	\N
570	a970d6fc-87b8-473d-b4b8-35169231bfe6	790	\N	Pizza 9 Grecque 9	active	\N	\N	\N	2016-05-03 11:20:16+00	21	\N	\N
571	a3102dcc-eb8b-4322-948b-5152995efef9	791	\N	Kings Pizza and Greek - Closed	suspended	\N	\N	\N	2016-05-03 11:21:13+00	21	\N	\N
572	9b54034c-46bf-42a3-b92f-74185ec671c9	792	\N	Diana Pizza (dropped)	suspended	\N	\N	\N	2016-05-04 16:22:59+00	21	\N	\N
573	fc65994a-4722-40b0-a8da-a0f5fae31b3d	793	\N	Golden Fries (cancelled)	suspended	\N	\N	\N	2016-05-10 10:14:02+00	21	\N	\N
574	530ad44a-1045-4d8a-98b0-a29aba361feb	794	\N	Bistro Le New Yorkais ( temp dropped )	suspended	\N	\N	\N	2016-05-31 11:59:42+00	21	\N	\N
575	35983e1a-91ea-4dd8-87cb-af04eb6c32cc	795	\N	Xtreme Pizza Orleans	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
576	e1fb0aff-976d-4e3c-bd85-8f30f1478a61	796	\N	Elgin Street Diner	suspended	\N	\N	\N	2016-06-14 14:41:32+00	21	\N	\N
577	ac948056-28a4-4432-bf9c-63a7c614be70	797	\N	Clocktower Brew pub Westboro	suspended	\N	\N	\N	2016-06-14 14:53:43+00	21	\N	\N
578	45c9a3ab-6f16-43fc-b164-7c6aa55f22c1	798	\N	MLT DWN	suspended	\N	\N	\N	2016-06-14 15:17:42+00	21	\N	\N
579	808c32e4-7a40-43b6-9f45-912c0db1766e	799	\N	Coriander Thai	suspended	\N	\N	\N	2016-06-14 15:23:28+00	21	\N	\N
581	d27bb44b-760d-4a11-9729-74f3e539c928	802	\N	Shawarma Andalos (dropped)	suspended	\N	\N	\N	2016-06-16 15:14:08+00	21	\N	\N
582	e708c42b-dcc6-4479-86d0-39257ad0df57	803	\N	The Beer Man North Bay (QUIT)	suspended	\N	\N	\N	2015-05-27 12:29:05+00	21	\N	\N
583	7fa92902-328b-4b46-97c8-852f9e9b1d54	804	\N	Dou' Ini	suspended	\N	\N	\N	2016-06-22 10:24:36+00	21	\N	\N
584	d69e3737-030a-4891-86ef-1ab8af370b1f	805	\N	Crispy's	active	\N	\N	\N	2016-06-22 11:18:22+00	21	\N	\N
585	500da8e2-39ad-4996-86bf-d3811794f3b2	806	\N	Chateau du Shawarma	suspended	\N	\N	\N	2016-06-22 15:40:57+00	21	\N	\N
586	b6c28d67-c997-4752-ab45-0edbb5f69d06	807	\N	Milano	active	\N	\N	\N	2016-06-23 11:35:27+00	21	\N	\N
587	c801c909-0d09-4bf4-b756-90a78bdcc896	808	\N	Milano	active	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
588	8ea11a28-d7a4-4dca-8487-1507e471e837	809	\N	Orleans Shawarma	suspended	\N	\N	\N	2016-07-19 15:40:15+00	21	\N	\N
589	a82385d4-0dba-494e-9f5a-79b6f26afe7e	810	\N	Maison Fumï¿½e BBQ	suspended	\N	2022-02-21 17:17:36+00	\N	2016-07-20 15:48:53+00	21	\N	\N
590	6f375585-2141-4565-aecd-adb10ee01b6a	811	\N	Himalaya (closed)	suspended	\N	\N	\N	2016-07-21 10:51:35+00	18	\N	\N
591	4bf99d89-90a2-4355-a113-9ab1e619e912	812	\N	Tasty Burgers and Grill ( inactive dropped )	suspended	\N	\N	\N	2016-07-21 13:48:52+00	21	\N	\N
592	c10db1e1-c870-420c-9c2d-9f05a8255e3e	813	\N	Pho Saigon Express	suspended	\N	\N	\N	2016-07-22 10:38:47+00	37	\N	\N
593	a9949fd8-3ef1-459a-8849-18c69cc48242	815	\N	Milano	active	\N	\N	\N	2016-08-02 08:38:06+00	21	\N	\N
594	923a57a6-4ac6-42db-b7ad-9132b85b3757	816	\N	Say Cheese Pizza and Poutine	suspended	\N	\N	\N	2016-08-03 11:21:48+00	21	\N	\N
595	33b041ec-9f01-4bb6-a248-3e007251a5c6	817	\N	Supreme Pizzeria	active	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
596	c2409f19-ab31-4dad-8ba4-9e8dcd42f006	818	\N	Sushi Fleury	active	\N	\N	\N	2016-08-18 09:44:10+00	18	\N	\N
597	15dc597f-492a-4b07-87d3-13a9f7f98277	819	\N	Luxx Deli Bistro	suspended	\N	\N	\N	2016-08-24 09:05:22+00	21	\N	\N
598	61c070d6-ef40-4228-abe7-1ff9c860190a	820	\N	Karuna Cafe	suspended	\N	\N	\N	2016-09-01 13:54:03+00	21	\N	\N
599	4d6b89f9-028d-4167-9d3f-f89d1c0020c6	821	\N	The Main Bar & Grill	suspended	\N	\N	\N	2016-09-14 10:54:48+00	21	\N	\N
600	f0467f53-92b0-456e-804b-ae7c72b0e78b	822	\N	Jade Yi's Kitchen dropped	suspended	\N	\N	\N	2016-09-20 08:54:06+00	21	\N	\N
601	f1d4327d-61c4-4825-b5b6-f0852d00412b	824	\N	Milano	active	\N	\N	\N	2016-10-11 10:14:04+00	18	\N	\N
602	6b3b2d7b-a904-428d-9ca0-3d17c3077399	825	\N	Papa Pizza Cantley	active	\N	\N	\N	2016-10-13 13:31:47+00	21	\N	\N
603	090cd47d-ceaa-4bb7-9ddd-9ba4d21dc7d6	826	\N	Centre Pizza	active	\N	\N	\N	2016-10-17 16:03:33+00	21	\N	\N
604	bc0cef0a-1cd0-419f-b1bf-4d7a7405f270	827	\N	Mom and Pops Pizza Shop	suspended	\N	\N	\N	2016-10-18 11:11:41+00	21	\N	\N
605	171d1def-b60e-4fe2-8e85-09e2ed9f5235	828	\N	Pho Van Van	suspended	\N	\N	\N	2016-10-18 13:57:47+00	21	\N	\N
606	d6a9bff7-0a96-45b7-8dd6-b657f5691c09	829	\N	Anna Fine Thai	suspended	\N	\N	\N	2016-10-18 13:58:23+00	21	\N	\N
607	4b661fce-19ba-436d-81a4-14e68d88272f	830	\N	Aroy Thai	active	\N	\N	\N	2016-10-25 10:09:42+00	21	\N	\N
608	b735a428-18b1-44dd-a952-a5897a1eacc5	831	\N	Verona Pizza House	suspended	\N	\N	\N	2016-10-25 13:09:15+00	21	\N	\N
609	5d692123-fe9c-4220-a3cd-cc98173094ca	832	\N	Dough Brothers	suspended	\N	\N	\N	2016-10-27 09:45:00+00	21	\N	\N
610	4a5cf378-8ec9-47ef-b5b0-13b488d4ced4	833	\N	Milano	active	\N	\N	\N	2016-11-08 14:07:50+00	21	\N	\N
611	cd575d3d-86a3-4993-b568-76fd388fa165	834	\N	1 for 1 Pizza Rideau	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
612	c247e685-68d5-4ae7-9d67-715a43d9f091	835	\N	Restaurant Bambou	suspended	\N	\N	\N	2016-11-24 12:15:21+00	21	\N	\N
613	ace15763-6ff3-4e31-9094-98cadc002d84	836	\N	Angry Dragonz	suspended	\N	\N	\N	2016-12-04 20:12:09+00	21	\N	\N
614	7cf04bf6-ebf4-4509-aed8-350da1a3d987	838	\N	Marina Pizza des Flandres 	active	\N	\N	\N	2016-10-13 13:31:47+00	21	\N	\N
615	383031f9-eaa4-47f2-b534-b0d21f622ff0	839	\N	Marina Pizza Maloney	active	\N	\N	\N	2016-10-13 13:31:47+00	21	\N	\N
616	4a580995-d798-491e-bae2-923d513d34e9	840	\N	Papa Grecque Maloney 	active	\N	\N	\N	2016-01-08 11:38:12+00	21	\N	\N
617	89f2aa2f-7695-40c9-9d16-76c5b0942f50	841	\N	Big Bone BBQ (dropped)	suspended	\N	\N	\N	2016-12-05 13:13:18+00	21	\N	\N
618	702c1f37-5e4c-461c-983f-e22f83550def	842	\N	3 Bites Shawarma, Greek and Pizza (dropped)	suspended	\N	\N	\N	2016-12-22 10:38:48+00	21	\N	\N
619	7f258be8-2405-4caa-b121-f05b75953c72	843	\N	La Brochette	suspended	\N	\N	\N	2016-12-22 10:44:01+00	21	\N	\N
620	49975c47-22f7-4842-b4ec-39cff9dee436	844	\N	Poulet Mom's Chicken Gatineau	suspended	\N	\N	\N	2016-06-22 15:40:57+00	21	\N	\N
621	9ea31776-117e-4fcb-bbd6-d0d90272d18c	847	\N	Pro de la Pizza	suspended	\N	\N	\N	2017-01-09 17:01:21+00	21	\N	\N
622	413e81aa-1998-4fec-b05a-7bb8bf7625d7	848	\N	Pro de la Pizza	suspended	\N	\N	\N	2016-05-31 11:59:42+00	21	\N	\N
623	cd2de5de-37f2-44dc-9a20-bf6a8a61cbb6	849	\N	1 for 1 Pizza St Laurent	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	21	\N	\N
624	3061ea55-e38a-432f-8b80-ba6dfdbadf8f	850	\N	Milano	active	\N	\N	\N	2017-02-24 15:35:29+00	21	\N	\N
625	565e1cc9-f4e2-4f9f-a53a-a8d1738e663e	851	\N	Euro Mex	suspended	\N	\N	\N	2017-02-27 11:11:20+00	21	\N	\N
626	498d4f0c-b5f2-4427-be6e-63bf9f85aae9	852	\N	Jo-Jo's Pizzeria Fernbank	suspended	\N	\N	\N	2017-03-09 09:17:16+00	18	\N	\N
627	e8b50452-397b-46bd-bff8-9543cf6e6b82	853	\N	Jo-Jo's Pizzeria Stittsville	suspended	\N	\N	\N	2017-03-09 09:17:16+00	18	\N	\N
628	9d6d432b-0317-4395-9c0f-9657377b5bf3	854	\N	Jo-Jo's Pizzeria (reserved)	pending	\N	\N	\N	2017-03-09 09:17:16+00	18	\N	\N
629	a5e97c0d-f006-453c-a975-7e205c2fd838	855	\N	Jo-Jo's Pizzeria Carling	suspended	\N	\N	\N	2017-03-09 09:17:16+00	18	\N	\N
630	45241faa-b95a-456c-bf08-35f4600e10ac	856	\N	Asia Garden Ottawa	active	\N	\N	\N	2017-03-23 12:03:02+00	21	\N	\N
631	687b9d3a-d6bf-4e27-b4f4-e699baf7f5bf	857	\N	clone test	suspended	\N	\N	\N	2025-09-24 13:49:43.753304+00	18	\N	\N
632	f5d22d8b-7003-4ecd-8fd8-3ea55dae1dfd	859	\N	Shawarma Bits	suspended	\N	\N	\N	2017-05-09 14:02:32+00	21	\N	\N
633	9371372c-f962-4085-91f1-880a80f5990f	860	\N	Charlie Chan Famous Chinese Food	suspended	\N	\N	\N	2017-05-10 14:38:43+00	21	\N	\N
634	37718c28-f104-4c41-a3cc-960c3c0bf6cd	861	\N	Lorenzo Pizzeria - Arch	active	\N	\N	\N	2017-05-11 12:29:44+00	21	\N	\N
635	69c828de-52d9-4dea-8437-cd2c4284da83	862	\N	Lunasole Orleans (dropped)	suspended	\N	\N	\N	2017-05-11 20:19:24+00	21	\N	\N
636	b98d6e2a-65d8-4a4e-91fb-6f27339b3201	863	\N	Joes Family Pizzeria	active	\N	\N	\N	2017-05-15 10:04:20+00	18	\N	\N
637	8bfb047b-32e2-4f3e-a6f4-251bf51bec9a	864	\N	Masala Mama's Kitchen (dropped)	suspended	\N	\N	\N	2017-06-05 11:59:03+00	21	\N	\N
638	a10e5487-9ca0-42c4-b25c-e2164f45869d	865	\N	Digby's Restaurant	active	\N	\N	\N	2017-06-12 09:58:51+00	21	\N	\N
639	e5737340-a23d-400b-9239-2bc2d59b344e	866	\N	Andalo's Shawarma Hunt Club	suspended	\N	\N	\N	2017-06-26 10:53:54+00	21	\N	\N
640	e7046334-d343-4c0b-85df-7f00267ec913	868	\N	Bagan Indian Food	suspended	\N	\N	\N	2017-07-11 18:39:15+00	21	\N	\N
641	33bfe4d4-e034-48a5-bd05-ad495e8bdce5	869	\N	China Moon	active	\N	\N	\N	2017-08-01 10:43:36+00	21	\N	\N
642	9cd2e4dd-b570-41fa-a9d6-f0fbe9cd2927	870	\N	Isabella Pizza	suspended	\N	\N	\N	2017-08-16 10:13:59+00	21	\N	\N
643	8d55dfc8-de1b-4b2a-aad0-0cd229856d25	871	\N	Cazza Pizza (ON HOLD)	suspended	\N	\N	\N	2017-08-30 09:25:02+00	21	\N	\N
644	91516d18-63fb-4a0c-89bf-2176c171050c	872	\N	Mozza Pizza Hull	active	\N	\N	\N	2017-09-11 14:22:03+00	21	\N	\N
645	6118480e-ab7d-439a-b1e1-99d24c320695	873	\N	Pho Lee Restaurant	suspended	\N	\N	\N	2017-09-15 10:34:50+00	18	\N	\N
646	fd114305-bd2e-4fca-a03e-55badb0f11c9	874	\N	JC Royal Thai Cuisine	active	\N	\N	\N	2017-09-18 11:11:31+00	31	\N	\N
647	bc99bdd7-833e-4f6d-8e70-2a910f7b4deb	875	\N	Papaye Verte Call Centre	active	\N	\N	\N	2017-09-22 11:10:54+00	21	\N	\N
648	b8dd7025-9802-4998-b87e-b89c3c17013e	876	\N	Chef Cheng cloxsed out of business	suspended	\N	\N	\N	2017-09-29 11:41:53+00	21	\N	\N
649	4ab274ef-4841-4572-8501-dfbfa9620d65	877	\N	Pub House	suspended	\N	\N	\N	2017-10-24 07:38:10+00	21	\N	\N
650	e07fe617-da69-4e1e-a877-3f3cbc76a19c	878	\N	Pizza Run	active	\N	\N	\N	2017-10-25 09:07:39+00	18	\N	\N
651	33383ad0-3d75-4366-92dd-16d456a4da30	879	\N	Milano	active	\N	\N	\N	2017-10-26 14:10:25+00	21	\N	\N
652	9e229fa5-c6d3-48fd-8465-e4668362e9ba	880	\N	Pilos Greek Restaurant	suspended	\N	\N	\N	2017-11-13 14:24:35+00	21	\N	\N
653	116f9c68-79bb-4d61-bd06-3b53fa9ebbef	882	\N	Shawarma Palace Rideau (dropped)	suspended	\N	\N	\N	2017-11-14 20:07:16+00	21	\N	\N
654	19eeb446-0de8-4096-9980-396501de95de	883	\N	Downtown Pizza & Qabar Grilled Chicken	suspended	\N	\N	\N	2017-11-15 09:44:42+00	18	\N	\N
655	14d4e0a7-79a1-46aa-ab2e-47c1cc4084aa	884	\N	1 for 1 Pizza 1741 St Laurent Blvd (inactive)	suspended	\N	\N	\N	2017-12-01 11:54:27+00	21	\N	\N
656	94ee1dcd-4c47-4694-a093-c1ac9d443e1e	885	\N	Mandarin Ogilvie Restaurant	suspended	\N	\N	\N	2017-12-05 13:41:00+00	21	\N	\N
657	dc07cd6a-5604-4a8f-b908-21c15d56a61a	886	\N	Sula Wok (dropped)	suspended	\N	\N	\N	2017-12-07 10:12:09+00	21	\N	\N
658	f23caf26-57ae-4a0a-9abf-69f6c4a7a5f7	887	\N	Kanata Noodle House Carling dropped	suspended	\N	\N	\N	2018-01-04 14:33:07+00	0	\N	\N
659	2b187b39-3a55-4e2d-8e35-b2c8361a3572	888	\N	John Juan	suspended	\N	\N	\N	2018-01-15 11:51:19+00	21	\N	\N
660	3e776179-4c48-4201-9eb4-f7d67f6154e0	889	\N	Milano	active	\N	\N	\N	2018-02-20 09:39:11+00	21	\N	\N
661	5ab1e3da-9e58-4bca-985b-e9a82091063f	891	\N	Indian Curry House	suspended	\N	\N	\N	2018-03-07 08:56:10+00	21	\N	\N
662	041b4bfe-e9e0-40d3-9bac-007189c6a541	892	\N	La Maison Szechuan	active	\N	\N	\N	2018-03-07 09:02:17+00	21	\N	\N
663	655dd6cd-e961-4b82-b3a7-e521c1de2af2	893	\N	Meatings (dropped)	suspended	\N	\N	\N	2018-03-08 08:40:00+00	21	\N	\N
664	e5e387d3-0d0f-4f04-b1ea-85361ccadabf	894	\N	Lorenzo Bar and Grill	active	\N	\N	\N	2018-04-04 15:58:44+00	21	\N	\N
665	e07f2f47-5120-42b0-8760-e0939ab70768	895	\N	Golf Kingsway	suspended	\N	\N	\N	2018-04-12 08:57:45+00	21	\N	\N
666	ea72041d-4b6e-4f27-8a87-60c31ebcafa8	896	\N	India Curry and Kebab House	suspended	\N	\N	\N	2018-04-25 13:50:52+00	21	\N	\N
667	316802dd-9b1e-41ca-9eba-ccec6c63c564	897	\N	Chicken Ranch	suspended	\N	\N	\N	2018-05-03 11:26:44+00	21	\N	\N
668	15c66822-d75f-4e9d-b5f0-c776a4aff3d2	898	\N	Chez Gaston	suspended	\N	\N	\N	2018-05-08 11:34:17+00	21	\N	\N
669	0d36761e-ff64-43bf-9bdf-b858deaaaf38	899	\N	Mother India	pending	\N	\N	\N	2018-05-10 07:40:32+00	18	\N	\N
670	f3c15413-93c9-4af8-a0e2-1bc366a7d7cc	900	\N	Casey's Bar and Grill CLOSED	suspended	\N	\N	\N	2018-05-13 08:26:38+00	21	\N	\N
671	ebad1bb3-6712-4021-825c-21bc05ebaa27	901	\N	Joe's Pizza and Subs	suspended	\N	2024-06-28 02:27:41+00	\N	2018-06-04 14:29:40+00	21	\N	\N
672	78fcb758-77ce-483b-beb6-5616e1d767f5	902	\N	Colonel's City Pizza	suspended	\N	\N	\N	2018-07-27 07:08:14+00	18	\N	\N
673	e4701090-735b-464e-80e0-14813e4b05b3	904	\N	Sizzle n' Grill (dropped)	suspended	\N	\N	\N	2018-08-01 08:31:10+00	21	\N	\N
674	525ab16c-1c85-4cfa-9790-b4137791504a	905	\N	Colonel's City Pizza Casselman	suspended	\N	\N	\N	2018-08-01 10:56:06+00	18	\N	\N
675	aafc7384-1ef5-43c5-9c34-bc7a96856aef	906	\N	Long Long Noodles	suspended	\N	\N	\N	2018-09-04 12:06:16+00	21	\N	\N
676	4b743f7a-dd2f-40c9-984f-f9ca8d16efa1	907	\N	Holland's Pizzeria (dropped)	suspended	\N	\N	\N	2018-09-06 06:54:17+00	18	\N	\N
677	ace75547-da83-4696-a900-6765ca5a8fa9	910	\N	The Beer Man 2 Call Center	suspended	\N	\N	\N	2018-09-18 12:06:50+00	21	\N	\N
678	5e93b7f5-df6e-4238-98df-21dbfa018d64	911	\N	East India CC - REMOVED	suspended	\N	\N	\N	2018-09-19 08:45:44+00	21	\N	\N
679	f284ab1b-72e9-415e-b3f7-577ceaca1db7	912	\N	Pizza Corner	active	\N	\N	\N	2018-10-12 06:45:41+00	18	\N	\N
680	967286b7-c5ce-4e7c-a2bc-845d3637f418	913	\N	Milano	active	\N	2025-06-30 20:06:10+00	\N	2018-10-22 10:55:51+00	21	\N	\N
681	d12563f7-a0ef-46a9-ab1f-0cca76a9e082	914	\N	Oka's Hull	active	\N	\N	\N	2018-11-05 15:08:11+00	21	\N	\N
682	4cac9430-8e21-432a-b93e-00a2ea481af7	915	\N	Lulu Shawarma and Greek	suspended	\N	\N	\N	2018-11-09 09:24:05+00	21	\N	\N
683	6eb515f7-29bc-49db-8779-377b1d8abaaa	916	\N	Shop A Pizza (dropped)	suspended	\N	\N	\N	2018-11-12 15:45:12+00	21	\N	\N
684	f87728b4-28cb-4b6a-b74b-637422649b99	917	\N	Juluca's (dropped)	suspended	\N	\N	\N	2018-11-13 12:12:59+00	21	\N	\N
685	3c745ee8-6401-4ebe-a22e-a753366f6469	918	\N	Caesars Palace	pending	\N	\N	\N	2018-11-16 10:09:59+00	18	\N	\N
686	650526c7-7633-4359-b34f-680d73abf3f3	919	\N	3 Brothers	suspended	\N	\N	\N	2018-11-21 09:55:16+00	21	\N	\N
687	fe7b8949-c492-41e2-b3a9-49add7294e7b	920	\N	Twisted Pita & Pizzeria	active	\N	\N	\N	2018-12-12 10:29:30+00	18	\N	\N
688	5f3378e7-2603-4919-a6fb-3138b1435265	921	\N	Pizza Riverview	active	\N	\N	\N	2019-01-08 17:24:35+00	21	\N	\N
689	3d19d175-3a1f-46a4-9781-d4a7a4df85e6	922	\N	Subito Sandwich (dropped)	suspended	\N	\N	\N	2019-01-11 11:29:18+00	21	\N	\N
690	a0e8ad5b-8ccc-4b25-af43-ef8d39f17d3f	923	\N	Jimmy Gyro Pizza and Poutinerie	suspended	\N	\N	\N	2019-01-19 11:19:06+00	21	\N	\N
691	427076ea-2158-40d2-8a8b-e1c4f8b788bc	924	\N	La Poutinerie Walkley (dropped)	suspended	\N	\N	\N	2019-01-20 08:42:59+00	21	\N	\N
692	9c78e029-1703-49ab-a21b-29847dbe1f06	925	\N	Pho Nha Vietnamese Cuisine	active	\N	\N	\N	2019-01-31 11:28:31+00	37	\N	\N
693	27443cfd-a953-4e51-b738-1b50c86b7b3f	926	\N	Roost and Grills (dropped)	suspended	\N	\N	\N	2019-02-14 15:13:45+00	21	\N	\N
694	fddd6d02-6877-402e-bb0c-a8fca06d6074	928	\N	Portugalos Restaurant	suspended	\N	\N	\N	2019-03-05 14:05:03+00	21	\N	\N
695	901b7252-3827-4959-8353-e38478132c43	929	\N	East Side Marios	suspended	\N	\N	\N	2019-03-05 14:24:03+00	21	\N	\N
696	8abab638-fd79-4c1b-9721-d987f840c1a6	930	\N	Pizza Maisonneuve	active	\N	\N	\N	2019-03-05 14:31:43+00	21	\N	\N
697	4a2fec4e-f1f0-4810-a095-ce28d9b78edd	931	\N	Patio Vidal Des Flandres	suspended	\N	\N	\N	2019-03-05 14:33:17+00	21	\N	\N
698	952d8fd2-3d33-4092-b701-0a44f9333632	934	\N	Yorgo's - Barrhaven KEEP Active Mapped Printer	active	\N	\N	\N	2019-03-26 06:34:13+00	21	\N	\N
699	06ea29a7-5fba-43db-bda2-845982458c2e	935	\N	Milano	suspended	\N	\N	\N	2019-03-26 08:14:42+00	21	\N	\N
700	28705db5-e1db-4ac6-a058-da770abf17b3	936	\N	Prime Burger Bar (dropped)	suspended	\N	\N	\N	2019-04-04 06:27:00+00	18	\N	\N
701	bff01405-073e-4501-bbee-b80ec93fe231	937	\N	Milano	active	\N	\N	\N	2019-04-15 10:20:26+00	21	\N	\N
702	a4a03c8f-90c9-48c6-a4d6-b84c3b803d93	938	\N	El Taco De Oro (dropped)	suspended	\N	\N	\N	2019-04-30 15:25:01+00	21	\N	\N
703	96ef4290-2c80-43da-9fdc-1e530cdcc90b	939	\N	Geo's Pizza (dropped)	suspended	\N	\N	\N	2019-04-30 15:25:52+00	21	\N	\N
704	870c2844-bbc5-4c31-ae74-2fc65ac06d87	940	\N	Chili Thai	suspended	\N	\N	\N	2019-04-30 15:26:25+00	21	\N	\N
705	82038cf4-e699-48fd-97e6-ea29be6d6c4e	941	\N	New China (dropped)	suspended	\N	\N	\N	2019-05-01 15:08:00+00	21	\N	\N
706	7097de4a-2432-4603-8f75-fa2c638553a8	942	\N	The Wing Shoppe	suspended	\N	\N	\N	2019-05-02 12:54:46+00	21	\N	\N
707	8bbb30fb-7289-43cb-a9eb-99b0103fdbb0	943	\N	Palermo Pizzeria Gladstone CLOSED	suspended	\N	\N	\N	2019-06-17 10:01:52+00	21	\N	\N
708	143c3ae3-025c-433b-94d4-5d234021210c	944	\N	Winner House Chinese Food	suspended	\N	\N	\N	2019-06-18 08:12:34+00	21	\N	\N
709	62821f03-21e4-422c-9b0a-ff5e7d70aaac	945	\N	Asian Kitchen	suspended	\N	\N	\N	2019-07-05 08:59:51+00	21	\N	\N
710	3e84f6bb-1717-4b3b-8150-09ca87ffe1a6	946	\N	Gatineau Maison de Nouille CLOSED	suspended	\N	\N	\N	2019-07-05 09:07:24+00	21	\N	\N
711	9f71140b-044a-4e97-a474-679d2196e7b8	947	\N	Supreme Pizzeria	active	\N	\N	\N	2019-07-08 09:43:34+00	21	\N	\N
712	0cdf446f-bebf-462a-aa3b-48b6fd51f28b	948	\N	Patate Lou Lou	active	\N	\N	\N	2019-07-22 14:52:08+00	21	\N	\N
713	40cf0609-3bbb-4578-80d8-8a774b4b164d	949	\N	Le Moulin	suspended	\N	\N	\N	2019-08-02 10:49:51+00	21	\N	\N
714	8bad7027-f815-4c03-a606-28ab37b97265	951	\N	Ogilvie Pizza	active	\N	\N	\N	2019-08-02 10:51:46+00	21	\N	\N
715	43a0f9fc-7da8-4bc9-9852-1c672711f145	952	\N	La Poutinerie Ogilvie	active	\N	\N	\N	2019-08-19 03:14:54+00	21	\N	\N
716	99503325-3e44-43f1-aa25-c29093739b3a	953	\N	PizzaRama	active	\N	\N	\N	2019-08-22 18:35:24+00	21	\N	\N
717	d6deea31-4aec-4e7b-b3ae-88a71c817f4c	954	\N	East Feast (dropped)	suspended	\N	\N	\N	2019-08-28 13:55:51+00	21	\N	\N
718	9936f7a0-e2a8-4325-8f7b-7a8af68c6223	955	\N	Amici Restaurant & Pizzeria	pending	\N	\N	\N	2019-09-03 09:08:25+00	18	\N	\N
719	7f9f85d9-ba8c-46d5-8ac3-3cb3081ab8ed	956	\N	Patio Vidal Grï¿½ber	suspended	\N	\N	\N	2019-09-09 13:06:39+00	21	\N	\N
720	e7fad899-3986-40e5-a08c-93d6f404195f	957	\N	La Zone Chawarma	suspended	\N	\N	\N	2019-09-17 14:33:35+00	21	\N	\N
721	f94ccd5c-d9de-4f5f-ac67-c731da296a43	959	\N	La Maison Pho	active	\N	2025-07-25 22:48:31+00	\N	2019-10-03 09:23:17+00	21	\N	\N
722	0a1d1a9e-6ec3-4aea-92ed-456dbd092d3f	960	\N	Orchidee Restaurant Fusion Asiatique	suspended	\N	\N	\N	2019-10-15 13:19:58+00	21	\N	\N
723	357a48fe-2145-468c-bd25-774ce2dd93f0	961	\N	Lorenzo's Orleans (dropped)	suspended	\N	\N	\N	2019-10-17 14:54:26+00	21	\N	\N
724	694c5da3-12df-4780-9204-c90f682d2321	962	\N	Papa Joe's Pizza - Prince of Wales	suspended	\N	\N	\N	2019-10-28 10:00:08+00	18	\N	\N
725	2d12c325-86c7-45ca-ba49-649628235748	963	\N	The Greek Flame and Pizza	active	\N	2025-06-14 04:27:54+00	\N	2019-11-06 16:14:46+00	21	\N	\N
726	77b821f5-a39d-4f26-856b-a13a6d946984	964	\N	Pizza Joanna	active	\N	\N	\N	2019-11-06 16:15:59+00	21	\N	\N
727	ee2f2246-53c5-47ad-b323-2ae0ed0b9554	965	\N	La Maison du Burger	active	\N	\N	\N	2019-11-07 13:17:42+00	21	\N	\N
728	f870a668-75ae-480f-96cf-4702de064ead	966	\N	Pho Maison de Nouilles HUll (dropped)	suspended	\N	\N	\N	2019-11-28 09:00:35+00	21	\N	\N
729	2f9af8da-bccc-45f0-ac6c-603bb0f6169e	967	\N	Mehfil Indian Cuisine	suspended	\N	2022-09-09 20:28:38+00	\N	2019-12-11 14:52:43+00	21	\N	\N
730	799c8dfd-b8f5-46cc-b077-1d6c06f419a8	968	\N	Friendly Restaurant and Pizzeria	active	\N	\N	\N	2019-12-16 11:36:11+00	21	\N	\N
731	3877bf9b-400a-4e9b-86fc-5e9b1c414cb6	969	\N	Harveys Hull	suspended	\N	\N	\N	2020-01-10 15:48:28+00	21	\N	\N
732	cdb156ec-3ce6-4cce-b8e7-ad98d01f88bd	970	\N	La Maison Grillï¿½e	active	\N	\N	\N	2020-01-10 15:49:57+00	21	\N	\N
733	248fceea-f7f5-4f10-af14-6a98a0f43e75	971	\N	Milano (dropped)	suspended	\N	\N	\N	2020-01-17 14:21:18+00	21	\N	\N
734	3ff8af83-1e7f-4c83-84cd-1a06af0b9140	972	\N	Ottawa Liquor Service old	suspended	\N	\N	\N	2020-02-25 09:39:25+00	21	\N	\N
735	9fd9c9f2-6e0d-411d-97a9-5ba1d98d6d64	973	\N	Amicci Pizza	active	\N	\N	\N	2020-02-26 08:59:34+00	21	\N	\N
736	27e73fc9-e9f1-4eec-9f76-71f980dc1c7a	974	\N	Greber Pizza et Shawarma	active	\N	\N	\N	2020-02-26 13:46:21+00	21	\N	\N
737	36cfbbb6-6550-4774-8baa-1b873008c13a	975	\N	Liu's Garden	suspended	\N	2023-06-05 01:18:32+00	\N	2020-03-12 10:43:15+00	21	\N	\N
738	06d55723-7f19-4b62-a4c7-62b64926af38	976	\N	Mr Mic Chinese Restaurant	suspended	\N	\N	\N	2020-03-18 17:20:33+00	21	\N	\N
739	7d55905a-52ab-46ca-829c-2718bbcaf04c	977	\N	Aroma Pizzeria	suspended	\N	\N	\N	2020-03-26 14:35:09+00	21	\N	\N
740	b960022b-56a2-4cc9-8a2e-db9b6caf970d	978	\N	Milano	active	\N	2025-05-31 22:13:53+00	\N	2020-03-30 13:36:29+00	21	\N	\N
741	c03b54d7-31eb-4b86-a930-b6e7dd6b87d7	979	\N	Little Elephant Thai Bistro	suspended	\N	\N	\N	2020-04-08 10:41:22+00	21	\N	\N
742	a9d1974e-74de-4b1e-be1e-14c6be544b47	980	\N	Mukut Ottawa	suspended	\N	\N	\N	2020-05-15 13:38:02+00	21	\N	\N
743	8cc31d90-5a57-4c49-880d-9f6ef1bab47d	981	\N	FJ Pizzeria	active	\N	\N	\N	2020-05-19 02:49:51+00	21	\N	\N
744	72ab4b32-872c-4a7c-8bea-c99a22f75a61	982	\N	Riverbend Pub and Dining Canadian-Chinese	suspended	\N	\N	\N	2020-05-19 12:12:44+00	21	\N	\N
745	9823edfb-1684-4e2c-bdf7-c0623ddde7d0	983	\N	Sala Thai	active	\N	\N	\N	2020-06-05 11:14:25+00	21	\N	\N
746	d7666661-713b-4329-8cf1-f273ebffd79f	984	\N	duplicate	suspended	\N	\N	\N	2020-06-08 11:38:32+00	21	\N	\N
747	a10c5ad0-59e6-4f2e-9deb-681588c1a481	985	\N	Full House Asian Cuisine	active	\N	\N	\N	2020-06-08 12:06:05+00	18	\N	\N
748	816c6c62-8c72-4805-b408-3823865f9ede	986	\N	Rinag Authentic Indian Food	suspended	\N	\N	\N	2020-06-30 11:30:49+00	21	\N	\N
749	96466c2a-bc06-410e-80cd-17daabdc2e8b	987	\N	Milano	active	\N	\N	\N	2020-07-07 10:04:03+00	21	\N	\N
750	403bd8e5-8bdd-4cbe-beb4-9524ef4ea3a3	988	\N	Pizza Bob	active	\N	\N	\N	2020-07-24 09:38:40+00	21	\N	\N
751	71dd340c-a239-4150-8f9b-3508cad2114f	989	\N	Milano	active	\N	\N	\N	2020-09-25 08:41:00+00	21	\N	\N
752	496a7934-883e-47f1-b57f-a7d219f7d4dd	991	\N	clona stefan	active	\N	\N	\N	2020-09-28 10:14:59+00	21	\N	\N
753	ee7e1a9a-faf0-4460-b276-bf4bce402b88	995	\N	Casa Grecque	suspended	\N	\N	\N	2020-10-05 14:56:13+00	21	\N	\N
754	c8c62bae-2e5d-4721-807d-2ecb4ea6b771	996	\N	Fil's Diner	suspended	\N	\N	\N	2020-10-14 09:27:20+00	21	\N	\N
755	ff55e1f5-2542-4500-afb8-d8e0993f888c	997	\N	Pizza La Diffï¿½rence HULL CLOSED	suspended	\N	2024-02-17 01:13:03+00	\N	2020-10-14 10:03:05+00	21	\N	\N
756	1924077a-ea94-4fcd-b6c7-180777986d22	998	\N	Little Gyros Greek Grill	active	\N	\N	\N	2020-10-29 10:06:28+00	18	\N	\N
757	de3d4724-31a4-4879-b274-dff7f9950336	999	\N	Supra Pizza	suspended	\N	2022-08-15 03:58:56+00	\N	2020-10-29 15:10:38+00	21	\N	\N
758	85d0cb5e-df2e-4220-9fc1-7ec6e6d76240	1000	\N	3 Brothers Shawarma & Poutine Hull	suspended	\N	\N	\N	2020-11-05 08:01:21+00	21	\N	\N
759	3100a334-021b-416d-8377-b9a95bdabc44	1001	\N	Authentic Vietnamese Pho House Nepean	suspended	\N	\N	\N	2020-11-17 14:24:27+00	21	\N	\N
760	0f4b1915-88d7-499f-a728-62a015df4105	1002	\N	Beneci Pizza Vanier	suspended	\N	\N	\N	2020-11-24 09:15:16+00	21	\N	\N
761	08dc2cf9-0325-42be-a4a7-0891a51fde72	1003	\N	3 Brothers Kanata	suspended	\N	2021-09-18 21:42:12+00	\N	2020-12-09 09:53:26+00	21	\N	\N
762	9d9f71d4-f0da-4f28-b75e-d304fd1f64a7	1004	\N	Authentic Vietnamese Pho House Barrhaven	suspended	\N	\N	\N	2020-12-14 09:03:40+00	21	\N	\N
763	cf48e8a1-1040-4c71-93b4-b913e902d780	1005	\N	Authentic Vietnamese Pho House Kanata	suspended	\N	\N	\N	2020-12-14 09:04:24+00	21	\N	\N
764	629acd7f-253c-4e2c-9e5f-e79717980521	1006	\N	Ha's Dim Sum Noodle House	suspended	\N	\N	\N	2021-01-04 07:02:35+00	18	\N	\N
765	adbf05cd-1588-40dd-805c-59c62aa912f1	1007	\N	HanaHana Korean Food and Sushi Takeout	active	\N	\N	\N	2021-01-08 09:24:38+00	21	\N	\N
766	fd94b4f5-16ca-4864-8abc-32f47d3e4c89	1008	\N	Ke Ola Poke	suspended	\N	\N	\N	2021-01-11 13:27:21+00	21	\N	\N
767	cdf952cf-a65f-41d4-9593-3d4980767a6c	1009	\N	Pho Bo Ga Express	active	\N	\N	\N	2021-01-21 13:34:19+00	21	\N	\N
768	b510279c-2617-41ac-a731-6bd97cbc820e	1010	\N	Pho Bo Ga 2	active	\N	\N	\N	2021-01-21 13:36:25+00	21	\N	\N
769	49073cb4-cc1f-48b4-999a-2d89595b6124	1011	\N	Jimmies Pizza	suspended	\N	2021-11-26 00:35:45+00	\N	2021-01-21 13:45:22+00	21	\N	\N
770	99205366-a974-46c1-bb25-14bf4d07d0a3	1012	\N	West End Pizza	suspended	\N	2022-08-01 11:39:42+00	\N	2021-02-02 16:20:11+00	21	\N	\N
771	6522594c-a78b-46dc-a7cc-9ae3450218b2	1013	\N	All Out Burger	active	\N	\N	\N	2021-02-18 09:48:17+00	21	\N	\N
772	d145bea3-88cf-4825-acaf-e7bbe42757c1	1014	\N	Zaytoun	pending	\N	\N	\N	2021-03-04 09:48:02+00	21	\N	\N
773	3d026d61-df36-4c05-8e34-71c3bceaf78a	1015	\N	Mojo's Chinese Food	suspended	\N	\N	\N	2021-03-15 14:20:20+00	21	\N	\N
774	7cae7f7c-934d-4800-bc36-c4c64d41903e	1016	\N	Argos Greek & Pizza	suspended	\N	\N	\N	2021-04-21 11:07:31+00	21	\N	\N
775	846e5acc-16a9-4a07-b5fe-ad754185a501	1017	\N	Montako	pending	\N	\N	\N	2021-04-26 13:30:43+00	18	\N	\N
776	035d6f10-400b-46d1-b96a-da2e3e27087f	1018	\N	Bank Shawarma and Poutine	active	\N	\N	\N	2021-05-05 10:42:35+00	21	\N	\N
777	a0a0aa3b-618b-4d9f-ba34-16a3d550bd98	1019	\N	Roulas Jus et Gelato	active	\N	\N	\N	2021-05-12 14:53:07+00	21	\N	\N
778	674b73ec-8107-4158-8252-a5df02e5c32b	1020	\N	Westboro Subs	active	\N	\N	\N	2021-05-18 09:12:38+00	21	\N	\N
779	a40f7d54-efd8-4409-836a-3b9e1b44a7a0	1021	\N	2King Shawarma and Poutine	pending	\N	\N	\N	2021-05-19 09:54:47+00	18	\N	\N
780	f30f7ac4-08c7-4d31-9231-31c2e3571dd4	1022	\N	Eddy Authentic Lebanese Cuisine	suspended	\N	\N	\N	2021-06-29 10:23:24+00	21	\N	\N
781	78f4d61f-079a-43c3-b6a4-a99a15ceae78	1023	\N	Golden Crust	active	\N	\N	\N	2021-06-30 08:30:10+00	21	\N	\N
782	a0ffae42-2678-40a6-af6c-ae5e5488842c	1024	\N	Colonnade Pizza	suspended	\N	\N	\N	2021-07-29 08:52:43+00	21	\N	\N
783	28db2d4e-7f78-4929-9a97-ef9e4eb14068	1025	\N	Colonnade Pizza	active	\N	\N	\N	2021-07-29 08:54:37+00	21	\N	\N
784	4163ab00-dbf0-4ec2-881f-8cd71dcabf27	1027	\N	Colonnade Pizza	active	\N	\N	\N	2021-07-29 08:55:46+00	21	\N	\N
785	e1428e93-deb6-4868-8cd3-2a38895ef04c	1028	\N	Colonnade Pizza	active	\N	\N	\N	2021-07-29 11:33:13+00	21	\N	\N
786	93c6b508-79ca-4b2e-8bc0-0a48ad50a3e6	1029	\N	Cousin Vinny's Pizzeria	active	\N	\N	\N	2021-08-04 10:26:33+00	21	\N	\N
787	a060acc9-1888-4e45-972b-bfabb7cff328	1030	\N	Restaurant Yotis	suspended	\N	\N	\N	2021-09-08 06:06:24+00	18	\N	\N
788	5245222b-10d7-42b8-b820-c8f8392f4ac8	1031	\N	Dunya's Famous Pizza (dropped)	suspended	\N	2022-09-03 01:58:18+00	\N	2021-09-27 13:18:56+00	21	\N	\N
789	5a775f11-eac8-4aab-9d70-90a5ffff8537	1032	\N	Poutinerie Quï¿½becurds Hull	active	\N	\N	\N	2021-10-14 11:06:27+00	21	\N	\N
790	e97eb91f-7faf-4572-8792-441f0b717616	1033	\N	Nachos Loco Hull	active	\N	\N	\N	2021-10-14 11:07:01+00	21	\N	\N
791	7e845ed6-2087-4908-9158-70fcb672a1ff	1034	\N	Samo's Greek Kitchen	active	\N	\N	\N	2021-10-15 09:31:03+00	21	\N	\N
792	91c6da34-54a7-4c30-b532-7a80d2898cee	1035	\N	Dumpling Bowl	active	\N	2025-09-12 00:28:42+00	\N	2021-10-19 11:02:38+00	18	\N	\N
793	708b9dc2-c238-46f1-95bb-09e0a6e24d62	1037	\N	Stacked Smoked Meat Grill	suspended	\N	\N	\N	2021-10-25 10:32:00+00	21	\N	\N
794	1f799828-4326-492f-b8fd-49064e400518	1038	\N	All Out Burger	active	\N	\N	\N	2021-11-03 13:08:57+00	21	\N	\N
795	93ca75ea-993a-48f0-9371-1cd382362540	1039	\N	Papa Pizza Chem. de Masson	active	\N	\N	\N	2021-12-16 09:05:53+00	21	\N	\N
796	153d1ca5-98d3-46b6-9950-1d178ea7f0e1	1040	\N	Parï¿½a	suspended	\N	\N	\N	2022-01-04 12:22:08+00	18	\N	\N
797	b6b4d96a-5742-4afa-bad2-45b5db4656cd	1041	\N	Papa Burger	active	\N	\N	\N	2022-01-05 08:51:01+00	21	\N	\N
798	31f5262c-da43-4d44-ac67-f6a09f35e07c	1042	\N	Kabylie Pizza	active	\N	2025-02-23 03:04:46+00	\N	2022-01-10 13:07:09+00	21	\N	\N
799	70a98a69-bc30-40c1-a2ec-da9340a9a3ca	1043	\N	The Cupboard	pending	\N	\N	\N	2022-01-12 15:35:43+00	21	\N	\N
800	1ef282d8-0837-4d17-91ab-d037b520249a	1044	\N	The Cupboard	active	\N	\N	\N	2022-01-17 15:14:40+00	21	\N	\N
801	c518a989-6dd6-4856-a0ad-30f12a4a1a16	1045	\N	Nachos Loco Gatineau	active	\N	\N	\N	2022-01-27 13:45:40+00	21	\N	\N
802	20587340-ab60-4a61-860e-0ad81e0e2a0a	1046	\N	Poutinerie Quï¿½becurds Gatineau	active	\N	\N	\N	2022-01-27 13:49:07+00	21	\N	\N
803	dea63aad-9516-43fc-8e54-226439a0d9cf	1047	\N	Le Pierrot	suspended	\N	\N	\N	2022-02-01 11:34:48+00	21	\N	\N
804	8f1672ee-3139-4ea4-802c-1e1c1dd5911d	1048	\N	Jasmine Rice Thai Kitchen	suspended	\N	\N	\N	2022-03-14 10:20:59+00	21	\N	\N
805	f81eb2e4-5c76-4b9b-84e5-38c939294299	1049	\N	Chicken Palace	suspended	\N	\N	\N	2022-03-25 10:05:35+00	21	\N	\N
806	3ec8ada8-15a8-403e-9cdd-7f0eefcc2955	1050	\N	Crispy's Bank Street	active	\N	\N	\N	2022-04-11 09:11:29+00	21	\N	\N
807	1a8f99c3-c532-4938-aa6a-b70d56cebf3e	1051	\N	Oh My Grill	active	\N	\N	\N	2022-05-12 10:07:23+00	21	\N	\N
808	a74741fc-bf21-4353-b485-5ceec7dc622b	1052	\N	Bellevue Pizza Main	suspended	\N	\N	\N	2022-05-17 11:17:42+00	21	\N	\N
809	5258cff3-522a-4f27-81cb-8a9e8c4d0d35	1053	\N	Bellevue Pizza St Louis	suspended	\N	\N	\N	2022-05-17 11:20:32+00	21	\N	\N
810	3414c98e-d5c3-4cdb-89a8-865adef7c88c	1054	\N	Papa Grecque Cantley	active	\N	\N	\N	2022-05-18 13:29:32+00	21	\N	\N
811	35e4c9e4-a8bc-4676-a9cc-b51b7ec9ae9e	1055	\N	Le SubShop Main	suspended	\N	\N	\N	2022-06-21 06:34:31+00	21	\N	\N
812	ee723ddc-0add-4e4d-9e36-a82b85821376	1056	\N	to be deleted	suspended	\N	\N	\N	2022-06-21 06:35:53+00	21	\N	\N
813	9d5ed93c-4369-4e78-9f1e-8642b8649dc8	1057	\N	Le SubShop St Louis	suspended	\N	\N	\N	2022-06-23 11:17:19+00	21	\N	\N
814	941396b2-e54b-4316-b980-9644edf09577	1058	\N	Ottawa Liquor Service	active	\N	\N	\N	2022-08-22 04:53:24+00	21	\N	\N
815	4ad87b97-9554-48f3-add3-ae691256d0ad	1059	\N	Golden Center Pizza	active	\N	2025-09-11 23:57:40+00	\N	2022-08-30 11:55:43+00	21	\N	\N
816	f4babc27-354d-4c20-ae6a-61eabea3a7a5	1060	\N	Dï¿½panneur Gï¿½nï¿½reux	active	\N	\N	\N	2022-09-12 09:46:27+00	21	\N	\N
817	b2f2d72d-ff39-4ab9-91e4-26d71cabadde	1061	\N	Pizza Times	suspended	\N	2023-05-02 22:52:20+00	\N	2022-09-20 09:29:18+00	21	\N	\N
818	522bdd9d-1860-4b72-af03-5e20dd643e0f	1062	\N	Milano	active	\N	\N	\N	2022-09-21 12:42:26+00	21	\N	\N
819	c6272c06-e870-4f9b-89e9-735531ed2f93	1063	\N	Milano	active	\N	\N	\N	2022-10-19 10:28:33+00	21	\N	\N
820	0330b603-9841-4917-84e9-741ab3d32ef9	1064	\N	Vieux Hull Pizza	active	\N	\N	\N	2022-11-16 12:58:52+00	21	\N	\N
821	198a115a-2be5-4ff1-bff2-7915982d0ea4	1065	\N	Milano	active	\N	\N	\N	2022-12-01 13:45:53+00	21	\N	\N
822	a1ff39d6-0e3d-44ab-b364-6164ee9a66c6	1066	\N	Papa Burger Maloney	active	\N	\N	\N	2022-12-12 07:30:55+00	21	\N	\N
823	4f4e74c8-c9c4-4ff7-97ca-b6eb1c10385a	1067	\N	PoutineZaaa	suspended	\N	\N	\N	2023-01-13 12:17:47+00	21	\N	\N
824	3882592d-e261-4df0-9718-efabc7465af4	1069	\N	Prima Pizza	active	\N	\N	\N	2023-01-17 14:32:02+00	21	\N	\N
825	ed660567-139b-45d3-b4f5-6c5b84959a0b	1070	\N	La Nawab V2	active	\N	\N	\N	2023-01-18 02:13:17+00	18	\N	\N
826	8b82ded9-a4fc-407d-8cef-19f089bb5cf9	1071	\N	All Out Burger	active	\N	\N	\N	2023-02-09 01:23:27+00	18	\N	\N
827	101a9c59-aa54-4b1d-9758-054dd44dd17a	1072	\N	Lucky Key	active	\N	\N	\N	2023-02-20 13:26:33+00	21	\N	\N
828	5cf7d668-6182-49a4-b6f9-b325fbe2a7ec	1073	\N	Ottawa Kabab	active	\N	\N	\N	2023-03-02 11:22:11+00	21	\N	\N
829	c0b763ed-94c0-417e-b1d9-b94cb70ac200	1074	\N	Pizzalicious	active	\N	\N	\N	2023-05-05 06:48:14+00	21	\N	\N
830	4258f594-088a-4801-ba7f-c817c3a5a575	1076	\N	Papa Grecque Val-des-Monts	pending	\N	\N	\N	2023-07-14 01:20:29+00	18	\N	\N
831	8c9beaac-d932-47bb-b1c9-f8c178cac30b	1078	\N	Maple Delight Pizza	suspended	\N	\N	\N	2023-07-20 02:46:46+00	18	\N	\N
832	a244dbf3-a31e-4a2f-b663-2199239b4a57	1079	\N	Kirkwood Pizza	pending	\N	\N	\N	2023-08-03 02:10:55+00	18	\N	\N
833	7e4b3f07-7f57-4af3-974b-8fff14f35538	1080	\N	All Out Burger	active	\N	\N	\N	2023-10-10 13:45:35+00	18	\N	\N
834	b6fd624b-1ade-4602-bcdc-211939304968	1081	\N	Milano	active	\N	\N	\N	2023-12-08 01:10:43+00	21	\N	\N
835	d64b6f89-4d76-4b6e-92a2-b597d9ac0577	1082	\N	Milano	active	\N	\N	\N	2024-01-23 14:50:37+00	21	\N	\N
836	a1ba071c-88b3-4cd7-8c3f-e95140c2cd51	1083	\N	Souvlaki Souvlaki	active	\N	\N	\N	2024-01-25 10:03:29+00	18	\N	\N
837	e7b55b77-6146-48c6-9494-2b2e7aeada7b	1084	\N	Milano	active	\N	\N	\N	2024-06-06 09:39:29+00	21	\N	\N
838	1b1843b7-41aa-4334-82be-78e47fc49fc4	1085	\N	L'Hibou Qui Rit	active	\N	2024-12-01 00:37:20+00	\N	2024-07-18 14:12:47+00	21	\N	\N
839	09be6e5a-a889-458d-9fa0-b3aa37012698	1086	\N	Milano Prince of Wales	pending	\N	\N	\N	2024-08-07 01:25:58+00	18	\N	\N
840	49424897-e1b0-4d44-b8a0-8a77418da4a8	1087	\N	Milano	active	\N	\N	\N	2024-08-07 01:26:53+00	18	\N	\N
841	7f5105f3-8832-4767-a4eb-5c6ea5b47bd2	1088	\N	All Out Burger	active	\N	\N	\N	2024-08-13 09:51:27+00	18	\N	\N
842	614adb4d-a9f0-4909-8eef-f5b0a08c6e56	1089	\N	Milano	active	\N	\N	\N	2024-09-16 14:39:39+00	21	\N	\N
843	24528523-382a-424f-bb00-e2cd7655839e	1090	\N	Oh My Grill Gatineau	active	\N	\N	\N	2024-09-30 14:13:44+00	21	\N	\N
844	1f9bb77f-cfac-4957-aba7-2a63e2feefee	1091	\N	Mykonos Greek Grill	pending	\N	\N	\N	2024-11-08 11:41:23+00	21	\N	\N
845	8c8f1b46-bf06-4119-a0d9-98e0d95e31ac	1092	\N	Mykonos Greek Grill	active	\N	\N	\N	2024-11-08 11:43:13+00	21	\N	\N
846	769323a7-0a51-4a06-8bb9-86bb57826f33	1093	\N	Mykonos Greek Grill	active	\N	\N	\N	2024-11-14 02:35:31+00	18	\N	\N
847	9041bb62-3853-437d-bb19-102d99f39984	1094	\N	Sushiyana	active	\N	\N	\N	2024-12-12 12:15:33+00	21	\N	\N
1	9a0d0c36-9249-45aa-975c-583c0bafbce2	72	1025	Wok Bistro Noodles Bar and Grill (TEST)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	0	2025-09-24 13:49:43.753304+00	0
2	d75e8bae-75ff-4c41-85e1-c0de717d2072	73	1026	Sushi Help (TEST)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	0	2025-09-24 13:49:43.753304+00	0
3	e99ed119-3fa4-4e03-9679-435f93d6f4a7	79	1027	Oriental Chu Shing Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	0	2025-09-24 13:49:43.753304+00	0
4	1647a2a9-527f-48bf-834e-50bbe256b7f1	81	1028	Pizza Shark	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	0	2025-09-24 13:49:43.753304+00	0
5	ce175c42-7666-4668-a6ff-ddcefc16c768	82	1029	Cedar Valley	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	0	2025-09-24 13:49:43.753304+00	0
6	37f503a3-b0f5-448b-98b7-31ae19156ffb	87	1030	Kanata Noodle House	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	0	2025-09-24 13:49:43.753304+00	0
8	7a94f123-0e71-4ffe-a7f3-79f2c80a5bfe	90	1032	Lucky Star Chinese Food	pending	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	0	2025-09-24 13:49:43.753304+00	0
9	1a77ffd1-6db7-419f-8190-f85a6c8ee7f9	91	1033	Ho Ho Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	0	2025-09-24 13:49:43.753304+00	0
10	a9e0b491-83f0-470e-b53b-a388c57d020c	92	1034	Salito Gourmet Specialty Pizza (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	0	2025-09-24 13:49:43.753304+00	0
11	33740ac0-734b-4381-9710-e067af9960bf	93	1035	Hello Sushi Man	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	0	2025-09-24 13:49:43.753304+00	0
12	a6a23543-8651-4886-94e2-27c577ef37eb	94	1036	Mama Rosa	suspended	2016-02-25 08:08:34+00	2025-09-12 00:56:05+00	\N	2025-09-24 13:49:43.753304+00	0	2025-09-24 13:49:43.753304+00	0
13	23f1ba90-187a-4495-83bf-37470c6af3d0	95	1037	Papa Joe's Pizza - Downtown	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
14	8110a253-94c0-40e2-a8e4-16338becc27e	96	1038	Kal's Place Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
15	d3218eea-678e-4a75-9161-633d7975345d	101	1039	New Mee Fung Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
16	960258cc-e739-4dfb-97a9-e6317429747e	109	1040	Papa Joe's Pizza - Greely & Findlay Creek	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
18	84280549-990e-4ced-ae84-ed4019d7fc8f	111	1042	Papa Joe's Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
20	d3a897a4-4da6-44c1-99a8-10715224dad1	113	1044	Gladstone Golden Grill (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
22	0af5b01d-c196-4e2b-9de8-0d06991f01bc	117	1046	House of Lasagna	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	11	2025-09-24 13:49:43.753304+00	0
23	81bcdf72-5f7d-4f8a-8194-c35c1cada825	118	1047	Pita Pit	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
24	1c5f5321-f60b-4c2e-950b-2b15acf039cd	120	1048	Villa Pizzeria N The Greek Place	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
25	94ad719f-71d4-428f-aad6-34abecc3d573	121	1049	Mandarin Court ( closed sold)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
26	621a9670-6399-4204-b57b-f1decd491b5d	122	1050	Hungry Sammys(sold)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
27	ae177610-bd73-49e7-9668-af62678f066d	123	1051	New Shawarma King	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
28	f4d30a11-ec7f-416a-8bfa-77f35b132443	124	1052	Eastview Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
29	f3f58131-4caa-4b3e-aff0-f82b24f1a17b	125	1053	Pizza Palace And Cafe (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
30	7ea1caf2-c5ed-4bbd-a537-112c48da4cde	126	1054	Vanier Grill	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
31	cb622084-0305-4382-ba14-3d45f44fe0fd	127	1055	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
32	1bc5c1a5-be31-415c-b4b4-08f8c377e9b2	128	1056	Golden Crust Pizzeria	suspended	2016-02-25 08:08:34+00	2022-12-09 01:50:26+00	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
33	e6756be5-f1a3-406e-87a7-11dbb4a6a3da	130	1057	Bien Pho Vietnamese and Thai Cuisine	suspended	2016-02-25 08:08:34+00	2024-06-01 00:09:50+00	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
34	bd9aef2d-38a6-4078-91be-774bbc3170f3	131	1058	Pizza Express Extra	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
35	52d8fb06-ac8a-44d8-b236-9677f0bb1843	132	1059	Mozza Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
36	0dc73ee2-f3ac-41c7-af34-8f64b3070877	133	1060	Taj Indian Cuisine	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
37	a84f18ba-e317-4411-aebd-eca1a36a1894	134	1061	House of Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
38	b7bfd5ce-fd00-4d2a-93a1-6ac5958a70ba	135	1062	Preston Pizza (CHANGED TO XTREME PIZZA)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
39	a1b078f3-f0ad-413e-a405-bc850f01f771	136	1063	Lemon Grass Thai Food	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
40	96aaa40a-e7ca-450a-b627-92f130204d10	137	1064	Yang Sheng Restaurant	pending	2016-02-25 08:08:34+00	2022-10-03 01:12:55+00	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
41	05006f01-ee2e-4827-9680-9935f1498e70	138	1065	East India Co	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
42	67535877-e17b-40c1-8848-e57d1693092a	140	1066	Cypress Garden	pending	2016-02-25 08:08:34+00	2025-02-05 18:07:49+00	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
44	bf1614a4-c444-4573-bb56-a0daac8fd9a5	142	1068	Kiki Lebanese Pineview Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
45	2be9882c-00a8-42ba-acb0-4a7696e9ec20	143	1069	Bobbie's Pizza & Subs	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
46	092b04fd-066b-4c64-bd58-8bf760a6110d	144	1070	Koi Asia (CLOSED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
47	307fee31-1e3e-4d44-9ab9-9ecee745035e	145	1071	Mr Mozzarella - Nepean	suspended	2016-02-25 08:08:34+00	2025-01-12 17:04:48+00	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
48	716c9a9a-4ad3-432c-a377-4648682a68e6	146	1072	Merivale Pizza & Wings	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
50	7e3d83a1-87c2-41ed-87df-ea19996fc393	151	1074	Shawarma House	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
51	3c74ff9d-e794-4f95-82f9-6d3b72c55516	153	1075	Dino's & Donald's Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
52	57e3a136-e4db-4539-8709-914e43d927af	154	1076	Wing Hing Chinese Food	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
53	e40c6321-e738-40c2-a92f-b704fe6a7a87	155	1077	Greekos	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
54	40b5d857-8109-4410-b157-f923903846ef	157	1078	House of Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
55	7cae2ed2-2c47-410f-9ea7-bd2835296594	161	1079	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
56	dd08afc8-e25b-4e85-9da7-4bdb94632369	162	1080	House of Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
57	72b91f86-32c1-45d7-8f2d-a0300e888faf	164	1081	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
58	9d1ecfd4-6b5b-42fb-a281-e01a6833a657	171	1082	Greekos Souvlaki & Pizza (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
59	9156d6e6-7565-4c9f-a622-00b19a46fa55	172	1083	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
60	eae77b4d-d3e3-472d-94c6-e93f97551152	173	1084	Opa's	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
61	90cee403-05c4-4a7d-a9ce-f9fe765b9678	174	1085	Joe's Pizza and Subs	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
62	ef9f3079-48ce-4dc1-86d1-80ea54ae0438	175	1086	Vanier Pizza & Subs	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
63	bed72292-9c00-481d-9c18-2e123b5f62ce	177	1087	Mr Mozzarella York	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
64	7d315dd5-2322-47c1-afa8-89d06398f4a1	178	1088	Willie's Chinese Food	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
65	e3862905-5c67-46cc-b77c-ab8ddf88822d	179	1089	Number One Chinese Take Out	pending	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
66	e6145b28-2982-4fbc-a32d-10507dc13041	180	1090	Elegant Pizza (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
68	11c09b4f-78fb-4da7-9c6f-d321554137c6	182	1092	Pizzeria Riverview	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
69	e0f51216-a85a-4056-b7ff-8c03cdabde75	183	1093	Aylmer BBQ	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
70	ac51e566-c4fd-4d33-99be-551bdaf4c74a	184	1094	Papa Pizza - Hull	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
71	a3e57604-2c65-4db4-a7ae-ec88971da385	186	1095	Shawarma and Souvlaki House	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
72	c8775496-e349-42a9-ad24-eea02d5dc58f	187	1096	Cathay Restaurants	pending	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
73	ab05794b-fb54-4c06-8f87-541b4de682fb	188	1097	Naked Fish Sushi	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
74	675b30bf-12bf-4156-aeb6-87f55561274e	189	1098	Moe's Famous Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
75	a492c722-76d7-4505-a6db-eabf96b0ab41	190	1099	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
76	051fffee-bd94-4afb-8b3d-d0424bb04857	191	1100	Benji's Vietnamese Cuisine (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
77	ef90a162-0677-4622-949a-172c593cdd6a	192	1101	Lorenzo's Pizzeria - Vanier	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
78	d1e0d9f3-e60e-44b1-aec5-8a1f762e5751	193	1102	House Of Georgie - 'Sorento's'	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
79	9a00a8a3-6d0f-4360-9fa0-30e67e821b1f	194	1103	Le Maillon Restaurant(sold)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
80	4136625c-48c0-4f4a-854f-877969e56c47	195	1104	Pizza la Cite	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
81	1a4fd8fe-d31f-49fe-8cf9-357e0762a7a6	197	1105	Lunasole Restaurant & Bar (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
82	4516fddc-b73d-4bd3-abbf-8c3e40ed1707	198	1106	Wei's Noodle House	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
84	5d799673-36b8-4017-808c-0e63479a6f18	200	1108	The Original Georgie's	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
85	9437fbbe-8c82-4680-9e9c-01e1a6012d95	201	1109	Festival Japan	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
86	24b8fc97-7d7b-4065-bf93-79352e8e8ed6	202	1110	Popeye The Chef ( closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
87	1aed3b48-cd0a-449a-8ddc-736ebd203b6c	203	1111	Champa Thai Food	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
88	28fe98c2-fdca-44e5-9fae-0a6c6ab8c9c7	204	1112	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
89	0370534b-f599-4c2d-8a3a-60cd8f83d25f	205	1113	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
90	96d46efb-1e28-4486-a6bb-d7bec90bb25b	206	1114	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
91	edb896a5-edb1-411b-8ba4-89a8b2df0318	207	1115	Milano	suspended	2016-02-25 08:08:34+00	2025-07-13 06:59:06+00	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
92	e8be35ef-1b68-4293-9743-85ab9dcfe420	208	1116	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
93	161e5cea-fe25-4643-824e-921bc48858a5	209	1117	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
94	0360f7ea-b29e-4adc-8f8e-8e26d73e213e	210	1118	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
95	48188eb8-81c5-42ea-aa50-908e7bdbb62d	211	1119	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
96	45167e96-5710-46fe-af73-f39d9df22e8f	212	1120	Pho Thu Do (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	1	2025-09-24 13:49:43.753304+00	0
97	1bc4999c-7094-4830-9566-2f3c5e7bd5bf	213	1121	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
98	e358c970-9a9e-463c-9d69-7e3ba818ef12	215	1122	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
99	0122a8d3-7f07-4392-b117-775a60a461b0	216	1123	do_not_delete	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	1	2025-09-24 13:49:43.753304+00	0
101	73b0890a-7941-480f-ab04-8ea14ebdb2f5	218	1125	Mukut Indian Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
102	8d111174-e2c3-441a-8031-2f4541444179	219	1126	Lemon Grass Restaurant	pending	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
103	ea4dbc43-48f0-4e17-9bb3-e46c7ad52a3c	221	1127	Golden India	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
104	b74a79cd-04f5-446b-95fb-653c48065332	223	1128	Spice Express	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
105	c4b10cc4-dac4-488e-bb8e-6fc570071723	224	1129	Ginkgo Garden	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
106	e71c9ade-7902-4de4-ad20-bba5d8657c81	225	1130	Restaurant Le Choix	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
107	0cb3d26d-507f-4be7-8340-52171bc80791	226	1131	La Bella Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
108	18220d2b-2255-4cf5-bf96-6e13d5999eb2	227	1132	Familia Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
109	5900ce52-c550-4b33-9ba1-01b9a6ccdbde	228	1133	Restaurant Chez Gerry	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
110	2cd3e522-5166-4808-a965-b0c4907abe9d	229	1134	Pizza Mia	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
112	7cdd6b31-1f4b-4a3c-9c35-9030f59d9f78	231	1136	Papa Pizza - Gatineau Ouest	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
113	8d40d7c8-cfbb-4ff9-9df4-7c66bbfd5252	232	1137	New Hong Shing	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
114	9b29dc06-4d79-4ab0-befa-96407e8c5f6e	234	1138	Restaurant Lasp�zia Caf�	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
115	8b16fc5c-149d-4b7e-bbbe-04aedf160fa6	235	1139	Chillies Indian Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
116	6467216a-da43-448e-ada0-0d3c6c6684e2	236	1140	El Greko	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
119	81acebeb-2bba-4b75-abcb-5a2d313d50c7	239	1143	Hung Mein	pending	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
121	ebd1d395-f8d1-47ee-bf89-c10dbb6536a7	241	1145	Shawarma Rosana	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
122	0ce62555-381f-4080-a7af-7096b2233445	242	1146	Chez Gaston Shawarma(stopped delivery)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
123	99b71ddb-03f4-43aa-b615-d640c682ee49	245	1147	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
124	0b27347b-9dda-4615-bad8-b44e1a0c3851	246	1148	Carlo's Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
125	eb14623c-d90c-4403-97a2-6515413b672e	247	1149	Roma Pizzeria	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
126	96d64667-3f60-4a5d-9045-36344139f85e	248	1150	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
127	1e79a7d9-3a08-4563-839c-8916f4345ea5	249	1151	Restaurant Basha	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
128	06f3b731-cfa5-413a-a415-adbf681e9268	251	1152	Lac Vien Vietnamese Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	31	2025-09-24 13:49:43.753304+00	0
130	a63b1596-81c0-4498-8493-610031912545	254	1154	Gio Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
131	de86547d-e88d-41eb-be59-526ce0c18a1f	255	1155	Centertown Donair & Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
132	4e4539b4-2b56-4e4a-bcd5-63667b61c25b	256	1156	Shawarma De Roza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
133	003aeaba-0857-411c-adc8-778e3b4a9364	257	1157	Riverside Pizzeria	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
134	2abb602f-3101-4fc2-abd1-3c7ef0cba8b3	258	1158	Sawa Sushi	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
135	14937d68-3061-46c7-8c2f-2cfdad274c79	259	1159	Malone's Lakeside Bar & Grill(dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
136	74c0fafd-31b3-429a-acda-c973a5191d5a	260	1160	Buffalo Bill	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
137	1ffd90d5-8384-46f5-b3c5-9147af650d16	262	1161	Pho Dau Bo Restaurant - North York (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	31	2025-09-24 13:49:43.753304+00	0
138	0ad2e37e-9336-4512-949c-dfd86f167478	263	1162	Planet Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
139	c139f1ff-72f3-46d6-ab4a-149ef7ddd246	264	1163	Pizza Bravo	suspended	2016-02-25 08:08:34+00	2025-09-12 01:59:23+00	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
140	ac29b07c-8a32-4147-8078-7db5444fd078	265	1164	Pho Kinh Do Vietnamese Thai	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
141	2358bedf-1127-4455-a5a0-b717a43e7977	273	1165	Golden Bowl Restaurant	pending	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
142	a3a3322c-1065-4550-8e48-55d7c95a5a91	274	1166	House of Greek (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
143	804bef8a-c66d-47b1-8181-dc80537396e9	275	1167	Tony's Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
144	a5b9b6f5-952b-42e7-8131-b52593e42c4c	276	1168	Paradise Shawarma	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
145	09ed2920-f1c8-4ea0-a26d-7f8b7e36edf1	277	1169	Pho Viet 24 (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
146	aec7df97-b8a3-4910-854b-6cfd682d4501	278	1170	Pho Lien Hung	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
147	5df529cc-f14b-4241-8b33-7b6672ae1524	280	1171	Pho Dau Bo Restaurant - Kitchener	active	2016-02-25 08:08:34+00	2023-03-16 20:31:29+00	\N	2025-09-24 13:49:43.753304+00	31	2025-09-24 13:49:43.753304+00	0
148	c5ba5706-f4f6-4dc0-9d2c-3aa03a6ac847	281	1172	Lorenzo's Pizzeria - Pinecrest (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
149	1d11c4cc-9096-4351-9507-14d80fca8f50	283	1173	Porteree Pub & Restaurant (closed dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
150	ce00169f-5fdc-443e-b42f-63969068e2d3	284	1174	Miki's Pizzeria (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
151	6cfc5eb2-55ed-4209-97b5-79bb32e7accb	285	1175	Rosabella Pizza (dropped changed to yessen)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
152	617173cb-33a8-416e-8be0-b9b414277b9d	286	1176	Pho Xua	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
153	0d366e91-a5c3-4aab-9718-a7c37b18aeb6	287	1177	Basmati	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
154	ba21e7de-9a30-4cee-8375-df2490100d24	288	1178	Habaybna  (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
155	fdd24140-01f8-41ff-bca0-fe5872044504	289	1179	Shawarma Rayan (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
156	28bf37f6-98c1-40a1-b5c6-76d765c8b077	290	1180	Nhu Lan (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
157	72931734-8827-4523-abf3-3b2524e8ca00	291	1181	Shawarma Station	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
158	943daf11-0078-4e46-9c97-18924b458e63	292	1182	Silk Road Kabob House - Kanata ( closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
159	2c1d585b-a7ae-458e-88d3-10fbb8aea57b	293	1183	Ariana Kabab House(dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
160	611c2d71-c820-407e-96fe-2e3d180dca55	294	1184	Hong Kong Chinese Food Takeout	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
161	8b4b72a4-2d57-4ac8-978a-d5522ce69d63	295	1185	OpenRice Asian Fusion & Lounge	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
163	10c613f2-3f9f-4505-9d80-b842a241c390	297	1187	Buffalo Bills Wings Laval	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
164	887c89d0-81a5-4418-8f30-e8e9e5e2f16e	298	1188	Lac Vien Vietnamese Restaurant - Scarborough	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	31	2025-09-24 13:49:43.753304+00	0
165	cd00bee3-f294-42ff-9c33-a822ec1335fb	299	1189	Lac Vien Vietnamese Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	31	2025-09-24 13:49:43.753304+00	0
166	30c389b4-5d33-451f-9c63-0d3b57167a4c	300	1190	Toto Pizzeria Lachine(DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
167	9a2ec575-264a-4ab3-bb85-c4185e97dc70	303	1191	Colonnade City Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
169	76832153-ab4f-4f7b-9895-cec3152d5fe2	305	1193	Urban Turban	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
170	e3a9f79d-c31f-4637-b8c9-949d74c2a630	306	1194	Winner House	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
171	d11ee712-d683-4c68-9209-422548fbf3f1	307	1195	La Shish (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
172	8df9891c-8dbb-4844-ae3a-22d96f18a8a5	310	1197	Pho Com Vietnam (moved dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
173	6bb6f211-4f3b-480a-8d4a-7ddcc7cb4f25	311	1198	Hao Sushi (On Hold)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
174	fabf05cf-6b2a-45a5-8f52-cba5eb6aacb7	312	1199	Lucky King Take Out	pending	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
175	8d6b9641-7667-4b08-b2e9-dc179ddd67d7	313	1200	Indian Biriyani House	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
176	76cbafcf-2012-4801-bb17-2068a196275f	314	1201	Brother Wu	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
177	e74d6331-defc-4b0c-85c4-4c8c8b451bea	315	1202	Jwaya (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
179	49ef79d1-779d-416a-9152-81e71864e6cb	317	1204	Pho Orchid	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
180	20454ec8-c842-4c89-9acb-ece322448ce7	318	1205	Indian Punjabi Clay Oven	pending	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
181	a28c26e8-c595-4d67-bc3b-47f03dbc7378	319	1206	Al-Amine (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
182	99a97193-9f28-4082-92d2-44862d797f11	320	1207	Metro Pizza (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
183	fd736827-6b1c-44d5-8788-5b1181793398	321	1208	Forno's Pizzeria (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
184	b3cb8b21-38e5-4301-862d-72e9db87d868	322	1209	Eastern City Restaurant (sold)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
185	b063a81e-bf91-4ab7-95cf-11a3cc84b8f8	323	1210	Vietnamese Noodle House	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
187	0fb6ece3-2280-40b1-8908-c1612f83f82d	325	1212	Pavarazzi	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
189	5fcea7f1-32dd-42c5-a006-c2633f7472df	327	1214	Lai Lai Chinese Food	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
190	0b825f70-30cb-45ae-abd4-47592f5006a5	328	1215	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
191	143f0c0a-6429-4d32-a663-f1ee94cd7d85	329	1216	Jardin Thai ( dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
192	6fa38bc9-6e70-4cb8-af23-c30efe352e95	330	1217	Pizza Dorval Express (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
193	fad3a75f-4dd1-4993-8cea-8b9d7fef5527	331	1218	test	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
194	d41b7d00-78df-4416-96b3-015973b847d4	332	1219	Silk Road Kabob House	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
195	241ec8b0-4630-4356-9a60-4fa96656723c	333	1220	Chez Antonio Restaurant(sold now chez villa)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
196	60ed6fa1-71f2-4150-8166-44be2bc3a91a	334	1221	Colonnade Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
197	fec85115-29a3-47bc-ae95-9ef437c106de	335	1222	Aahar The Taste of India	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
198	defd338d-2218-464a-ae26-72829938faa4	336	1223	Wing Wah Take Out & Delivery (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
199	a98acf39-8df6-44da-87e3-debc348fd9ca	337	1224	Pho Bo Ga King - Somerset	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
200	b41c9a56-06a5-4ab6-a99a-c9f498e2982f	339	1225	El-Indio Inc (CLOSED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
201	7b0d47c2-5cf4-443c-8a32-b5577de64dda	340	1226	Cheezy Pizza & Pasta	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
202	fd6e13cb-596b-403f-91dc-2c2a73df02ea	341	1227	Tandoori Fusion	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
203	832821bf-b1de-4125-9b98-a9fb06d8b80c	342	1228	Chez Raffino (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
204	47b6fb34-8eeb-4859-8d47-b6236ae5d400	343	1229	Du Barry Restaurant (CLOSED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
205	4dc9ab44-3d48-4371-b256-01c63e3c316d	344	1230	Mont Liban Bakery & Shawarma	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
206	940255d0-2570-4d58-b9b5-0edb3928d418	345	1231	Maximo's Pizza & Donair (dropped sold )	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
207	1ea60953-ea0b-4206-8656-f714353c74e4	346	1232	Papa Pizza - Gatineau Est	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
208	2cec2a5b-a2b7-4f3f-9f2b-4680b5f1e59f	347	1233	Buffalo Bill Wings Montreal	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
209	bd66a22d-c20c-4259-94a6-41be15ebeafd	348	1234	Buffalo Bill	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
210	55ca71b6-538f-4535-a971-a05a0daca39c	349	1235	Pizz'Ami (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
211	c001b727-2a8a-402d-974c-7db818766287	350	1236	Erman Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
212	42cfd423-0f12-462a-b98e-7d54ee0477ee	351	1237	Roma Pizza and Donair (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
213	c3dbfb36-7a48-47ce-9d90-7ad2f217f78d	352	1238	Poukham Thai Cuisine ( closed )	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
214	f2c3ea6a-9469-4b63-ab6d-30f92d80dc3b	353	1239	Pizza Test	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
215	cf3fba5b-5a42-4444-a222-bc1d91c87e5e	354	1240	Istanbouli Shawarma House	suspended	2016-02-25 08:08:34+00	2022-02-28 23:24:43+00	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
216	d36edf4d-2d96-4cf0-8487-723985da504a	355	1241	Willy's Pizza (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
217	7876a174-263e-4c42-8a91-20af2654e482	356	1242	Pizza Welat (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
218	e6c8a5be-5e36-415c-a6c7-51317b194272	357	1243	Lees Greek & Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
219	ec96f0c2-06e1-4d67-92e5-36616745c20f	358	1244	Greco on Bank	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
220	43e42cab-1773-4005-a3a0-a733c02d0c0f	359	1245	Pho Tien Phat (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
221	7cf05e08-cb9a-47e9-9223-0dc68cf8fcea	360	1246	Carlsbad Pizza (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
222	746b31f8-bb1b-46e5-9058-1005c00ac562	361	1247	Express Asian Food (Changed to A Plus sushi)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
223	a8a937c9-b07d-4306-953f-0dccf60a236d	362	1248	2 for 1 Pizza	suspended	2016-02-25 08:08:34+00	2023-04-14 20:56:07+00	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
224	4c6e2cf6-887e-4c9d-a0cf-461715f1fc7d	364	1249	La Famiglia Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	31	2025-09-24 13:49:43.753304+00	0
225	b4046805-2a92-4cdb-a61d-3772204d8fd4	365	1250	Dana's Indian Cuisine	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
226	4777f70b-9410-4a78-b683-aeac930f45c9	366	1251	Old Man Pizza (DROPPED) 	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
227	9379720b-1959-44b1-b977-0ae534090ea9	367	1252	Willy's Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
228	b4e15f85-e783-46e6-aa80-9205ea855fbb	368	1253	Restaurant Da Gunes (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
229	2d32dcff-12a7-48d6-b6f1-f5d1e0a2631f	369	1254	Tandoori Raj (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
230	59d7c5c0-b40f-44db-b65e-086855545129	370	1255	Pizza Crave (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
232	a009b241-ef52-4325-a8ab-baed13a0f7b9	372	1257	Bar Burrito Downtown (HOLD)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
233	6561c9df-4633-47cd-8661-2d393daebc39	373	1258	Ever Afters	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
234	7f5826de-d258-4ffb-8a9e-989e4c3573a7	374	1259	New Mukut Restaurant Indian Cuisine	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
235	5e668707-17cc-4363-b912-dd9d5b62f002	375	1260	Pita Pizza plus Kebob King ( Replaced)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
236	dcb16074-4c08-4e30-982a-f6e3d2636c76	376	1261	Bangkok Thai Garden	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
239	aeb81e4b-b78f-49c3-9b36-7d210f2a92f7	379	1264	Aunty Rosa (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
240	55468c23-5a08-4cc4-a493-8a723b4a3137	380	1265	Tassot Creole	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
241	c464bcdc-8c21-41d2-90e3-b4c14498fb67	383	1266	Beneci Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
242	015a6b8c-9140-4cb5-a194-8caccafd6eb4	384	1267	Stuffed Burgers & Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
243	1f6df644-de7a-494e-ade8-8fc7454dcc94	385	1268	Pasta Tutti Giorni (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
244	91a7ef6c-dcbb-468c-82ca-efcf7101fc06	386	1269	Wontonmama (CLOSED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
245	cf6b268c-dc40-4f78-80ce-2aaa90920274	387	1270	Orchid Sushi	pending	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
246	3d0fa79f-b57b-48ca-9670-ec3da4a69cfe	389	1271	Pizz�ria Parenteau PJ	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
247	b5247eaa-c0d7-4496-b977-9f2a58e49555	391	1272	Restaurant Mario's	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
249	4dfdbc37-40a0-4365-b63e-549b31e24a3c	394	1274	La Rumeur	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
250	3438da97-6c5a-4c69-806a-c526e4bac81c	395	1275	Le palais des sous marins et pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
251	8ccc782c-92b1-4196-8f1e-1a1680274108	396	1276	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
253	14565c65-4719-47b6-8d97-0150e80712bb	398	1278	Pappas Souvlaki  (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
254	b94d5bb7-65e8-4177-aa1f-aae3bf468654	399	1279	Grand Tandoori (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
255	68825e59-babf-4963-a8ea-db32b30995ca	400	1280	Basha La Prairie (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
256	e46d2a09-7e32-4355-a3dd-7ef6b875a2a5	401	1281	Greek Express (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
257	0452ac0d-942d-47be-83ab-58113e49f1b0	402	1282	Forest Hill Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
258	94909119-4234-4fdc-a8b6-7948ad0f096d	404	1283	Pho Haven	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
259	3e56611c-500f-41e7-b9cf-0190e7da9168	405	1284	3 for 1 Pizza (Closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
260	5afe22eb-3fa8-41ad-bce0-da9c83308d2d	406	1285	Sushi Presse	active	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
261	3f7f1de6-8fff-4932-b1ac-9dfb3432a75b	407	1286	Medina Fried Chicken	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
262	b040560a-0859-46f4-a7d3-dbe90f7cdb8e	408	1287	CasaLuna Pizza(quit)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
263	1d87c640-dd71-48ac-baca-1d09c9b743ac	409	1288	Pure Joy Sushi & Bubble Tea	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
264	5b873a3e-2974-4b84-88ff-7998ff4b0448	410	1289	Milano Pizzeria (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
265	2cfee48d-05b1-4544-9a02-1a9baf87bf6f	411	1290	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
266	b2b5bdd3-2006-4660-8176-a3304572d794	412	1291	Ambala	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	42	2025-09-24 13:49:43.753304+00	0
267	5154562c-2915-4cc4-814e-bd3f75fb9ded	413	1292	Lucky Fortune	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	42	2025-09-24 13:49:43.753304+00	0
268	4e7e2567-9a98-4a4a-b21e-55908c0258b1	414	1293	Le Ming Chuan (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	42	2025-09-24 13:49:43.753304+00	0
269	bef1d91f-808e-47aa-936b-92bf451f5a94	415	1294	Shaan Tandoori	pending	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	42	2025-09-24 13:49:43.753304+00	0
270	d7905e1a-ea27-4d57-93bf-83cc0b44e8b6	416	1295	Fat Albert's	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
271	f0d0217c-f979-4b66-80de-47b1d49fc808	417	1296	Sushi Presse LaSalle (dropped closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
273	a819fca3-ef40-4ba4-99f1-9b04edadd0e8	419	1298	Sous Le Palmier	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
274	55f0530d-96a8-4ff5-890f-00e5272be098	421	1299	Michelle BBQ	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
275	2defea6e-7084-4e0f-b539-06665c194cfc	422	1300	Basha (Van Horne)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
276	83041d3e-c15c-48be-b3c0-47a95c538d06	423	1301	Basha (Des Laurentides) (dropped) click my resto	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
277	ee24582d-02fd-41a7-b5a8-5ec566837694	424	1302	I Went to Philly Yonge (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
278	d4138f0a-d39e-4d0f-95d8-01f10b81dbe5	425	1303	Parti Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
279	40746d3c-d808-479a-911f-fcaffc989621	426	1304	Mr. Chopsticks	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
280	7e8c2c30-b15b-4560-9b8d-6bb066f8dee4	427	1305	Taco Loco (dropped for clique my slice)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
281	07c11749-f090-411b-b06b-3e10a82769e2	428	1306	Pizza Tomato (DROPPED CLOSED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
282	f63837e8-0baf-4b05-b1cb-efda3fc54e12	429	1307	Ocean Sushi	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
284	1e583387-a81a-4821-b312-137488351d6e	431	1309	Mysore (Brossard) Dropped Closed down	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
285	57abae85-19df-45b6-9bfc-cc3d9014a7a0	432	1310	Thali	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
286	9ad32129-a265-4038-adb0-239d667cbbc6	433	1311	Amir Saint-Lazare	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
287	cd4d4ae8-5cfb-485b-8638-60f337f45b10	434	1312	Amir Vaudreuil	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
288	e2f1ab77-0764-4b08-8160-89664fb054a5	436	1313	Amir Vimont	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
289	b0906d5c-1871-4c13-b610-eb6b4ac253f6	438	1314	India Cafe	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
290	cae8aa6f-35e3-46d6-91dd-fa75adbf44c5	439	1315	Miso Japanese Cuisine	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
291	7dfc56d6-cf37-45ca-975c-b07e0199945b	441	1316	1 for 1 Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
292	e1a9c788-1984-4a10-b1bc-f199e8b63b6b	442	1317	Chester's Country Fried Chicken( Changed to PFC)_	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
293	57d2a3b1-f670-40f0-ac36-2078cf382611	443	1318	Chester's Country Fried Chicken(changed to pfc)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
294	223788a2-27ad-478b-9e1c-61dcda51c3df	447	1319	Caf� Asia	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
295	1c2b3c2d-963a-4e7f-a0da-bd2373e67d2c	448	1320	Yaseen Halal Pizza - Bank	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
296	94b48f25-a53d-44a3-8e31-faba97e2177e	449	1321	Marble Slab Ottawa	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
297	ebe850ea-f01f-4930-9d86-8213c0aa42e8	450	1322	Pili Pili Grilled Chicken (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
298	c87348af-b41c-4534-b03d-de7a530e32b7	451	1323	Fat Albert's	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
299	924815ce-65e4-4fd3-a911-93bf79489860	452	1324	Fat Albert's 	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
300	d6b4ea7d-62e2-4fd1-8085-656d3835bf14	453	1325	Fat Albert's	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
302	a9feaba6-588d-455f-b136-7c5199a1fc32	455	1327	La Porte de L'Inde	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
303	d49bef14-6b40-4f36-b413-4a7dcc4f61b2	457	1328	Happy Sushi	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
304	8246059c-d546-4b21-b2ef-2cc804bc30da	458	1329	Classico Louie's Pizzeria	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
306	dd9f4efc-e425-48bd-90a1-d1cccdaaf1c9	460	1331	Kothu Rotti	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
308	0f952437-4d67-46dd-8c0a-47c741a7269c	462	1333	Mysore Plateau (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
309	bd9f9601-63ff-4233-8672-81a489d9ee7a	463	1334	Sababa Grill (dropped closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
310	628e6958-a2d7-4803-a8da-e07e1539a113	464	1335	Yum Yum	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
311	a5180bbb-b78d-4995-8e81-57872a71cf4c	466	1336	Green Lady	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
312	4fefefc0-4df8-4de0-b967-e68cd44b85f0	468	1337	Madina Pizza (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
313	e933c2c2-2bde-41ff-a254-902358e054e4	469	1338	The Big Slice Pizza (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
314	c0720d18-6848-4224-ae19-d99e2a985a77	470	1339	La Bella Managua (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
315	4f50269e-5190-471e-8354-b71e73846cbc	471	1340	Dolmades ( closed for business)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
317	e3f95003-15f1-469b-b885-b2dd8e733b47	473	1342	European Pizza and Shawarma	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
319	6379e1a7-6bf5-4266-8907-a43564391264	475	1344	Little Saigon ( closed )	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
320	8e8f1060-8c26-498b-8648-1eaabfb7d525	476	1345	Amato (dropped )	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
321	b45c6600-eed0-4867-a5aa-5159aff82c3d	477	1346	Fat Albert's (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
322	00c9333b-4b2a-4d43-9f0e-482807034073	483	1347	Fat Albert's	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
323	ba04a4b0-6730-4020-8e80-b510a4696d6b	484	1348	Corrado's Authentic Italian Cuisine(dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
324	8d56b7be-8169-40ff-af62-56c4a781bb4e	485	1349	Mackies Burger ( closed for business)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
325	716c7f29-3beb-48a6-aaa1-17fe839dd1cc	486	1350	New York Pizza & Donair	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
326	21fb34bb-28ba-4d35-aebe-413cb55fe2ce	487	1351	Solymar ( dropped closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
327	d8f29845-8a61-4de4-b1c3-77d49bd24928	488	1352	Mekong Restaurant (quit)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
328	ebcd0a25-16ac-4497-8ee4-c01b9ac1697a	489	1353	JN Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
329	2d005bd8-860a-4a92-9dd2-5f6709d9f6a1	490	1354	Louis Steak House & Pizza(dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
330	901d8f12-c5fa-4144-849b-536df7b1f287	492	1355	Chef De La Maison Roti	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
331	deb0da71-5781-489d-81e9-249f6e854229	493	1356	Sushi Style	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
334	27c6a54b-253e-4699-82b2-6a1f3537f419	496	1359	Basha La Jeunesse (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
335	c09ee13b-bb1e-43e4-a2fa-b4b5650d85f4	497	1360	Sushi 930	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
336	24e4a8f3-3a83-4109-89cd-d7c0a266d0b3	498	1361	Sushi Xtra	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
337	911ae9bc-09d5-4509-83c9-6e239a1e1238	499	1362	One of a Kind Pasta & Grill ( closed )	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
338	a3dfad99-43e5-4d10-a9b6-38242a5695c2	500	1363	Ju Xiang Yuan ( dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
340	f836cf93-7a38-4c8f-b71c-804662d68d86	502	1365	Caf� Saffron	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
341	157e55e7-0f66-4bcf-8713-c6d1b7291621	504	1366	Urban Tandoor	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
342	2d128a35-bd31-4318-87f6-9cefd5eccc57	505	1367	Ricardo's Pizza (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
343	197c15c4-7f6b-4132-83a0-8dc77fb7fbfa	506	1368	Namaste India 	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
344	5df7ab69-685f-4ab7-a8ab-010bee798b5e	507	1369	Carolina's Cuisina	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
345	dc78f1c1-fd09-4e1b-a978-785d32017aa2	508	1370	I Love Sushi	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
346	3b939c72-139d-4b72-9132-d0549f59dd40	509	1371	Thai Plus	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
347	e0717d6f-64d8-4edc-aa30-d7ec7a7403a8	510	1372	Restaurant Anne (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
348	9fe43409-cded-47e6-a194-695fbc1904a1	511	1373	Sushi Express Fantasia	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
349	f6fdded9-9ef3-4c22-8d4b-886685aaa36d	512	1374	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
350	9cca4aa1-e9fe-464d-98fa-8d439fda50b4	513	1375	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
351	78d637ef-dba4-4116-aa86-479f4be80766	514	1376	Les D�lices d'Ali	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
352	87d10fdd-fd3f-4b47-a4e8-9028ac314cf2	515	1377	Papa Ceo Fine Italian Foods & Pizza (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
353	7bcacc4c-6afd-44db-99ad-2d7d8dec14e3	516	1378	New Sushi Island	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
354	86d78c21-84f1-41b0-b827-f4e72e71aec9	517	1379	The Kathi Roll Express - Yonge St	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
356	0e79aac5-9461-42be-b97f-e12e142d4f71	519	1381	Wow Sushi	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
358	c4a6da49-da4a-4942-b066-10b7b8706cdb	521	1383	Boar n Wing (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
359	523056d6-6681-44d0-8120-87b9b95e9fd3	523	1384	Miyuki Sushi Bar	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
360	88d485f9-7942-4922-959a-31d08b52d0b8	524	1385	La Belle �poque (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
361	6242c567-882a-484c-bb60-4e7cf32f9f10	525	1386	Resto Miramar (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
362	9d022eb1-bbe1-45ff-abd2-3ea6e683830f	527	1387	Pizza Rive-Sud	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
363	e47a8dbb-01ac-4d2a-9eb9-607e818d952a	528	1388	Cafe Bistro Ohayo (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
364	d5a62f4f-598b-438b-9626-df8bc7d0b5db	529	1389	Beer Man and Liquor Lady	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
365	575a7718-2460-4c16-86b7-a3b00ef1173e	530	1390	Sushi Kampai	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
366	bf04669a-02e8-46cf-a546-8c1eadb592cc	531	1391	Ici Express	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
367	4ae7f390-af2b-4472-8928-a46bfc825d83	532	1392	Xtreme Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
368	fce9188e-76d3-4c55-a8cf-9a4f249e22b1	533	1393	Baja Grill	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
369	b64bd8cd-83c2-4825-a90e-6e1c797528d0	534	1394	Aji Sushi (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
370	5ae5acd3-89bb-4236-b6ae-3ec85fe85480	535	1395	Milano (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
371	84efcfa1-dc71-45f3-8c43-596badd889b7	537	1396	303 Fusion Kitchen (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
372	2a9c48ab-e094-4da0-b99c-f1de6f8c62f6	538	1397	Eat-a-Pita (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
373	c5c8fe09-8ee2-4cb5-83f6-4e65e62e49f1	539	1398	Reece's Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
374	e62dfde8-6cc3-4bb2-a0f2-55b24be65fe7	540	1399	Suisen Sushi - Pho lam Ici	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
375	243984bc-d674-4350-bfa0-6cfe00e55201	541	1400	Restaurant O'Wok	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
376	6f90f5f7-395c-4ef5-90f3-aef108a61904	542	1401	Sachi Sushi	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
377	2423bbb1-18f5-4dd0-acdc-60bdc34c6b6c	543	1402	Minato closed	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
378	cc5dd119-8523-41c3-b056-e547b355624a	544	1403	Western Style Chicken and Pizza ( dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
380	67aa35f1-01a1-4095-93e7-bd7862adb5c7	546	1405	Restaurant Mazaj (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
381	90114a9f-98c6-46f7-98d4-aac3ee67d8f2	547	1406	Yorgo's - Nepean	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
382	08245696-314d-4046-9590-8cb7fff6c9b9	548	1407	Capital City Smokehouse ( closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
383	d8ea2b2c-c77f-4d2c-9e77-7f7d911d79bd	549	1408	Yorgo's - Barrhaven	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
384	94ccc32b-cbe2-4fc7-9da1-4fda3537ed86	550	1409	New Town Chinese Food	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
386	c1ef56f6-3909-4a0a-b5c0-efdb49555c01	552	1411	Dominican Express(sold)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
387	f284c396-08c3-444c-b016-61b5f906e792	553	1412	Pizza Lovers Laurier	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
388	35c0088b-6b36-43d0-8b20-d98e3779a60e	554	1413	Glebe Indian Cuisine	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
389	0912a6b5-9fa5-4301-b663-bb02ab0bb4b3	557	1414	Ch�teau Venus de Valleyfield (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	34	2025-09-24 13:49:43.753304+00	0
390	b37a99a9-d39b-4db3-8f24-c1fd29b36cec	558	1415	Mack's Restaurant (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
392	79ae2f04-9d9d-4e1a-b874-d82fe0811816	560	1417	Greek to go	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
393	6a5b93b9-3067-4f97-8ad7-1c96fc3cbbd7	562	1418	Crustini Pizza (closing out of business)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
394	1f277f8b-61ea-4cea-ad29-07ca8705d9e4	563	1419	Hung Fatt	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
395	7612b05d-8dff-4d84-9af8-1ff09ecf971f	564	1420	Pizzaland (sold dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
396	92bb3213-d4e1-4dab-8968-5263a345cb01	565	1421	Zone Shish Taouk	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
397	24856d4e-1266-448c-9934-07303dfefd5a	566	1422	Laziz Broast & Mix Grill (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
399	8d5a419e-258d-48df-a6ac-fc0738a6d5bf	569	1424	The Suya Spot Restaurant (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
401	a0318005-1865-4938-b650-48dbbe1460ff	572	1426	Chess Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
402	d6cc7493-8798-4a4f-b640-7810ade60288	573	1427	Good Taste Fusion Restaurant (CLOSED)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
403	4e61fd1b-c095-46e7-8ff9-f94428113e2e	575	1428	Pho Lam Ici	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
404	cdfa319b-9850-4dca-8ef1-b0ae134facab	576	1429	Just Chicken (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-06 13:56:20+00	18	2025-09-24 13:49:43.753304+00	0
405	e0c1cdef-9e72-4d56-986a-f5f300d87679	577	1430	Catalina Pizza & Chicken (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-06 14:36:37+00	18	2025-09-24 13:49:43.753304+00	0
406	6359bd7b-babb-416a-87e7-7f5c5c6dec99	578	1431	Restaurant Bravi (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-07 10:32:23+00	34	2025-09-24 13:49:43.753304+00	0
407	53c1636a-d32d-463e-883f-78fbe7e8598f	579	1432	Nouilles Zen	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-07 11:17:44+00	18	2025-09-24 13:49:43.753304+00	0
408	70a12e16-9fe1-49a4-8784-7c5ebd3d2420	580	1433	Coin M�choui (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-07 11:20:16+00	18	2025-09-24 13:49:43.753304+00	0
409	c689a8d6-3e8e-4a28-9858-328975fe4189	581	1434	Plato Restaurant - DROPPED	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-07 16:06:52+00	18	2025-09-24 13:49:43.753304+00	0
410	17ef836d-b084-4509-9f48-e5eb97a4e260	582	1435	La Favorita	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-07 16:08:22+00	21	2025-09-24 13:49:43.753304+00	0
411	7854e091-d4dc-43aa-9a9e-c9fc8524336d	583	1436	Mazaya - DROPPED	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-08 09:02:38+00	18	2025-09-24 13:49:43.753304+00	0
412	d660c946-efbf-414f-9a53-faacf869fc8c	584	1437	Tandoori Grill - DROPPED	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-08 09:07:31+00	18	2025-09-24 13:49:43.753304+00	0
413	c2309230-b1b7-4bdb-af2e-89a2dbed7c7f	585	1438	Indi Express	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-08 10:24:45+00	34	2025-09-24 13:49:43.753304+00	0
414	fed79819-5290-46d8-85a4-940f22156f9e	586	1439	Massa Grilladerie Grecque(dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-08 10:54:51+00	18	2025-09-24 13:49:43.753304+00	0
415	2d67df3d-f3be-41f6-aeec-9c28afc89447	587	1440	Au Petit Charbon closed	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-08 10:59:42+00	18	2025-09-24 13:49:43.753304+00	0
416	3b9849e6-df2c-4e48-a763-8307c4e509b4	588	1441	Amir - Greenfield Park - (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-08 12:06:53+00	18	2025-09-24 13:49:43.753304+00	0
419	0c267302-9bde-4189-981b-e71e02aba519	591	1444	Kim's 2 for 1 Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-10 10:23:54+00	18	2025-09-24 13:49:43.753304+00	0
420	f2645b01-05e8-4910-aab7-2145d7a0c087	592	1445	Fiazza Fresh Fired (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-14 15:01:41+00	21	2025-09-24 13:49:43.753304+00	0
421	811ba7d7-1df7-4e2c-8ddd-1f93e57f8cb8	593	1446	Saigon Pho	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-17 16:33:10+00	21	2025-09-24 13:49:43.753304+00	0
422	1a53b8c0-939d-4e98-8e19-4b1e5c2bc42f	594	1447	Hard Stones Grill Nepean Restaurant (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-17 17:03:02+00	21	2025-09-24 13:49:43.753304+00	0
423	00d2a0e4-c239-4568-8c5e-e952de00365c	595	1448	Green Chili - DROPPED	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-20 09:20:37+00	18	2025-09-24 13:49:43.753304+00	0
424	784eafbd-7fd8-4f9d-b6af-44ec96289782	596	1449	Great Canadian Pizza - Shawcliffe Gate - DROPPED	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-21 10:28:28+00	18	2025-09-24 13:49:43.753304+00	0
425	2e85ffa1-dc1e-4bab-ba1e-8905c61719bc	597	1450	Butter Chicken Hut - DROPPED	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-21 10:33:07+00	18	2025-09-24 13:49:43.753304+00	0
426	e688b3c6-260f-4f74-8085-e30bee40f49e	599	1451	Nikos Pizza - DROPPED	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-23 09:07:16+00	18	2025-09-24 13:49:43.753304+00	0
427	0007c243-e6ae-441b-8b8a-062fa3dbb85a	600	1452	Papa Joe's Pizza - Bridle Path	pending	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
428	9c7d1c0b-9f64-45dd-88ee-077c5a091f09	601	1453	Resto Delice (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-27 09:15:48+00	18	2025-09-24 13:49:43.753304+00	0
429	54133b32-189f-4238-8ecd-937f0e25ee30	602	1454	Le Royaume D'Angkor (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-27 09:17:17+00	18	2025-09-24 13:49:43.753304+00	0
430	c1af6950-0bf5-4ee1-81d1-0aa9f8a5a7f5	603	1455	Lucky Panda	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-27 13:37:28+00	21	2025-09-24 13:49:43.753304+00	0
432	fc21ece5-b216-4f21-a663-9d021592780f	606	1457	The Newdle Bar & Bubble Tea Co ( out of business)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-30 16:23:31+00	56	2025-09-24 13:49:43.753304+00	0
433	86571ed9-95bc-415b-bc3a-07c25cef7fde	607	1458	Burrito Shack - Sunnyside	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-30 16:51:44+00	56	2025-09-24 13:49:43.753304+00	0
434	215bdcc4-e26e-4f13-bea6-d45a44baa714	608	1459	Pasquale's Pizzeria	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-30 16:56:20+00	56	2025-09-24 13:49:43.753304+00	0
435	4d570e62-8b99-4c0f-8923-be1d0029a613	609	1460	Real Tha� (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-03 10:24:38+00	56	2025-09-24 13:49:43.753304+00	0
436	40a088a3-3de6-4c8e-b813-8efe4e0c633f	611	1461	Madoi Sushi Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-03 11:38:31+00	56	2025-09-24 13:49:43.753304+00	0
437	75e14f90-a967-4f65-82d2-fa2b531d98a4	612	1462	Papa Joe's Fried Chicken - Downtown	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
439	754f7077-af1d-4e98-9083-83710cade33a	614	1464	The Great Canadian Poutinerie (QUIT)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-04 16:56:30+00	21	2025-09-24 13:49:43.753304+00	0
440	3b81cd0d-926a-45a8-959d-0c4148e056b4	615	1465	La Dolce Vita	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-04 16:57:49+00	21	2025-09-24 13:49:43.753304+00	0
441	ccb5809f-939d-4403-a84e-437ea8f9abd8	616	1466	Prince Gourmet - Market	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-05 08:14:15+00	21	2025-09-24 13:49:43.753304+00	0
442	85ddb52a-46fb-48a7-a091-203fb638f3dd	618	1467	The Original Spaghetti House Pizzeria - Cobourg	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-05 12:26:40+00	56	2025-09-24 13:49:43.753304+00	0
443	ff644667-9f11-443e-970a-2995e279233f	620	1468	Papa Joe's Fried Chicken - Bridle Path	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
444	69bed7bb-0dac-4bde-8493-b9000f4b96c6	623	1469	Chez Villa - Gatineau	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-08 10:16:04+00	21	2025-09-24 13:49:43.753304+00	0
445	eba8f54b-dc9c-4dac-9369-96673a5aab19	624	1470	Yaseen Halal Pizza - Cyrville	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
446	77c97800-69a7-4e53-9cdd-2d015bd39a4c	626	1471	The Original Spaghetti House - Lakefield	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-05 12:26:40+00	56	2025-09-24 13:49:43.753304+00	0
447	78cfb976-7127-421c-90f4-748fbbe31ff5	627	1472	The Original Spaghetti House - Peterborough	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-05 12:26:40+00	56	2025-09-24 13:49:43.753304+00	0
448	3fb27d19-efe0-446b-bece-5f66c1f50099	628	1473	The Corned Beef Hut (dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-12 13:46:27+00	56	2025-09-24 13:49:43.753304+00	0
449	0606b6b5-d286-4145-9f15-30be04b25a68	629	1474	Prince Gourmet - Innes	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-05 08:14:15+00	21	2025-09-24 13:49:43.753304+00	0
450	360e63d7-5982-4624-8288-6c316858b6b9	630	1475	Restaurant �toile de Chambly (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-14 13:01:39+00	56	2025-09-24 13:49:43.753304+00	0
451	5fef3146-b9cc-4ed8-a294-5795e1e788b5	631	1476	Papa's Pizzaland - Port Hope (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-14 13:13:42+00	56	2025-09-24 13:49:43.753304+00	0
452	1a80480e-7aa1-416d-bdb0-3b5cea558026	633	1477	Grillers Pizza & Wings	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-17 12:23:38+00	31	2025-09-24 13:49:43.753304+00	0
453	3874c8df-6f07-4052-af28-0f35ea377791	635	1478	The Pizza Junction	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-18 15:22:26+00	31	2025-09-24 13:49:43.753304+00	0
454	2c9b4cdc-6b59-44f1-afb6-1f30dc32fe9e	636	1479	Spice Indian Cuisine & Wine Bar (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-18 15:24:35+00	31	2025-09-24 13:49:43.753304+00	0
455	b1bb74ad-956c-417f-b65f-5342a4d771d7	637	1480	Tops In Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-19 10:36:04+00	31	2025-09-24 13:49:43.753304+00	0
456	b7a47687-8fae-4efa-99bf-d2a4bf96123b	638	1481	Great Canadian Pizza - 17 Ave (DROPPED)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-21 10:28:28+00	18	2025-09-24 13:49:43.753304+00	0
457	3f185f75-1d71-48c0-8395-3145c3b50cd8	639	1482	Papa's Pizzaland - Peterborough (Dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-14 13:13:42+00	56	2025-09-24 13:49:43.753304+00	0
461	5a2a4abe-e8b6-49ba-a191-990c001b94fd	645	1486	Asian Stars Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-25 15:43:44+00	21	2025-09-24 13:49:43.753304+00	0
463	ebee2ab9-e281-44c2-9298-11afb6e81116	649	1488	Prince Gourmet - Ogilvie 	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-05 08:14:15+00	21	2025-09-24 13:49:43.753304+00	0
464	384f16d0-7652-423e-aecf-e0a8959cf8af	650	1489	Prince Gourmet - open in May	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-05 08:14:15+00	21	2025-09-24 13:49:43.753304+00	0
465	130074b0-c324-4e73-a3f8-6ca5cd520699	651	1490	Royal Thai Cuisine	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-27 09:09:26+00	31	2025-09-24 13:49:43.753304+00	0
466	57c11bdb-35fe-4556-9a08-eb7237ed1a1d	652	1491	Pho Bo Ga Truc	suspended	2016-02-25 08:08:34+00	\N	\N	2014-12-01 17:03:22+00	21	2025-09-24 13:49:43.753304+00	0
468	51a18288-98ca-45d1-a6bd-33b0e3e1fa0f	656	1493	Just Wok	suspended	2016-02-25 08:08:34+00	2022-10-31 01:02:58+00	\N	2014-12-04 15:57:23+00	56	2025-09-24 13:49:43.753304+00	0
469	9010fe5f-a5d8-40de-8a4b-9cf9e0ca5cdb	657	1494	Thai Coconut	suspended	2016-02-25 08:08:34+00	2024-12-31 19:40:19+00	\N	2014-12-05 10:32:52+00	21	2025-09-24 13:49:43.753304+00	0
471	80082238-1745-43eb-9dad-1426701558b0	660	1496	Fresh Pho U	suspended	2016-02-25 08:08:34+00	\N	\N	2014-12-16 12:42:24+00	31	2025-09-24 13:49:43.753304+00	0
472	034dd976-5888-4b97-992a-5db093d1ca95	661	1497	Pizza by Adonis	suspended	2016-02-25 08:08:34+00	\N	\N	2014-12-17 17:00:56+00	21	2025-09-24 13:49:43.753304+00	0
473	bbdf9db1-1762-4686-9c4a-547ce8838204	662	1498	Lucky Bamboo	suspended	2016-02-25 08:08:34+00	\N	\N	2014-12-22 09:29:15+00	56	2025-09-24 13:49:43.753304+00	0
474	c8889b9a-2fd5-4bc4-a9c7-41adc976e4f2	663	1499	Nowshak Restaurant ( dropped)	suspended	2016-02-25 08:08:34+00	\N	\N	2014-12-22 09:53:36+00	56	2025-09-24 13:49:43.753304+00	0
475	20f30584-7267-4e64-9187-954ffb367578	664	1500	Silver Spoon HOLD	suspended	2016-02-25 08:08:34+00	\N	\N	2014-12-23 15:02:48+00	21	2025-09-24 13:49:43.753304+00	0
476	80cd1bc1-86c4-4f4b-ae6f-b8f536f355c8	665	1501	Tonimoes - Inuvik  (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2015-01-19 09:57:42+00	56	2025-09-24 13:49:43.753304+00	0
477	7000d3f6-2986-4521-9db7-f2d37d76123c	666	1502	Tonimoes - Whitehorse	suspended	2016-02-25 08:08:34+00	\N	\N	2015-01-19 09:57:42+00	56	2025-09-24 13:49:43.753304+00	0
478	b61d1623-23dc-4d8a-abfb-38343ba485d6	668	1503	Chalet de Hull - (Stalled)	suspended	2016-02-25 08:08:34+00	\N	\N	2015-02-02 09:33:32+00	21	2025-09-24 13:49:43.753304+00	0
479	d2c9ebf6-4813-4537-8125-ecc5c7908f7e	669	1504	iCook Pho You	suspended	2016-02-25 08:08:34+00	\N	\N	2015-02-06 11:12:31+00	21	2025-09-24 13:49:43.753304+00	0
480	d3887320-0dd9-402a-ad9e-0a9ebb5d69eb	670	1505	Reginos Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2015-02-09 15:19:07+00	21	2025-09-24 13:49:43.753304+00	0
482	2a12ba53-e9b2-4589-ba6e-fb2d9a3d0207	672	1507	The Wok	suspended	2016-02-25 08:08:34+00	\N	\N	2015-02-12 17:11:17+00	21	2025-09-24 13:49:43.753304+00	0
483	a7dbbe3d-b0bb-461a-a561-d6b4be5b3ba7	673	1508	Chez Villa - Buckingham	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-08 10:16:04+00	21	2025-09-24 13:49:43.753304+00	0
484	ec3afaa2-4cce-40e4-b9fc-16594f8602b5	683	1509	Pizza Maisonneuve	suspended	2016-02-25 08:08:34+00	\N	\N	2015-02-19 14:11:31+00	56	2025-09-24 13:49:43.753304+00	0
485	e0e15b24-c3ae-428b-a790-9f0cf880a415	684	1510	The Mongolian Village	suspended	2016-02-25 08:08:34+00	\N	\N	2015-02-20 09:45:47+00	21	2025-09-24 13:49:43.753304+00	0
486	46c9e06a-2236-48f5-8911-7fa8ba465394	686	1511	Wandee Thai Cuisine Sept 2022	pending	2016-02-25 08:08:34+00	\N	\N	2015-02-25 15:12:54+00	21	2025-09-24 13:49:43.753304+00	0
488	536f65ac-07c2-40b4-a22c-fc9e96ed31cc	688	1513	Palki Cuisine of India	suspended	2016-02-25 08:08:34+00	\N	\N	2015-03-06 10:01:57+00	21	2025-09-24 13:49:43.753304+00	0
489	c51fe2f0-8af8-453a-80ff-fe37155fe804	692	1514	Sopranos Pizza Ottawa	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
490	1c6641da-30ed-433a-aef0-4763d6f072ed	694	1515	Thai to Go	suspended	2016-02-25 08:08:34+00	\N	\N	2015-03-25 14:57:10+00	21	2025-09-24 13:49:43.753304+00	0
491	189fdc85-f312-4f53-96ec-c69808a98d2a	695	1516	Light of India	pending	2016-02-25 08:08:34+00	\N	\N	2015-03-25 14:57:32+00	21	2025-09-24 13:49:43.753304+00	0
492	f2c5d9e6-61c5-4417-8104-c9db68a7ad3d	696	1517	Hometown Sports and Grill	suspended	2016-02-25 08:08:34+00	\N	\N	2015-03-25 15:35:58+00	18	2025-09-24 13:49:43.753304+00	0
493	49d961d4-656b-4643-9a39-b0cdc837908e	697	1518	Burrito Shack - Bank	suspended	2016-02-25 08:08:34+00	\N	\N	2014-10-30 16:51:44+00	56	2025-09-24 13:49:43.753304+00	0
494	85d076d3-f34c-4995-9195-5a1b659bac76	698	1519	Falafoul Gourmet (closed )	suspended	2016-02-25 08:08:34+00	\N	\N	2015-04-07 09:54:05+00	21	2025-09-24 13:49:43.753304+00	0
495	62d7638a-5a8a-4dd7-bc13-550a9a371f75	699	1520	Host India	suspended	2016-02-25 08:08:34+00	\N	\N	2015-04-14 16:53:02+00	21	2025-09-24 13:49:43.753304+00	0
497	a75df5f3-057f-4b4d-9d84-2104c158c485	701	1522	Rangoli	suspended	2016-02-25 08:08:34+00	\N	\N	2015-04-21 09:19:10+00	21	2025-09-24 13:49:43.753304+00	0
498	f06ad042-aba6-4574-bdd3-3b7be53aae4e	703	1523	Papa Pizza - Val-des-Monts	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
500	9eb345cf-6eb7-4496-800a-b7a1b01493ea	705	1525	Asian Dragon (Backed out)	suspended	2016-02-25 08:08:34+00	\N	\N	2015-04-23 12:39:02+00	21	2025-09-24 13:49:43.753304+00	0
501	cda26093-6042-4ae9-8f7a-91e313307daf	706	1526	Sushi Enshoku	suspended	2016-02-25 08:08:34+00	\N	\N	2015-05-06 09:46:12+00	36	2025-09-24 13:49:43.753304+00	0
502	7f73e24d-66c8-47c5-adac-c0b94af8f62f	707	1527	New Hong Kong	suspended	2016-02-25 08:08:34+00	\N	\N	2015-05-08 15:46:13+00	21	2025-09-24 13:49:43.753304+00	0
503	06e22796-fea9-40dc-a994-1498dc703617	708	1528	Pho Bo Ga King - Merivale 	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
504	02401c7d-0f2c-4ef6-9fab-892a22c47969	709	1529	A Plus Sushi	suspended	2016-02-25 08:08:34+00	\N	\N	2015-05-12 13:26:47+00	21	2025-09-24 13:49:43.753304+00	0
506	68adb3a4-1dc6-46fd-8cc8-126003d8df92	711	1531	The Beer Man	pending	2016-02-25 08:08:34+00	\N	\N	2015-05-27 12:29:05+00	21	2025-09-24 13:49:43.753304+00	0
507	4d3fc5b4-bdd3-4d73-8aac-b6294c607fcc	712	1532	Pizza Lovers Hunt Club	suspended	2016-02-25 08:08:34+00	\N	\N	2015-06-04 11:33:37+00	18	2025-09-24 13:49:43.753304+00	0
508	80563494-4bad-41f9-8bb1-e9b80e0da30c	713	1533	Fusion House (closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2015-06-12 14:29:44+00	18	2025-09-24 13:49:43.753304+00	0
509	e08886eb-c2c0-495c-aa65-78ecb8593dd8	714	1534	Phu-Yen Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2015-06-23 15:03:55+00	21	2025-09-24 13:49:43.753304+00	0
510	0dc6d658-32c2-49cb-be3e-384cf2c18b43	715	1535	Fusion House Kanata	suspended	2016-02-25 08:08:34+00	\N	\N	2015-06-12 14:29:44+00	18	2025-09-24 13:49:43.753304+00	0
511	39a22d2c-7285-45ee-8381-ed0bd5a590bc	716	1536	Egg Roll Factory	pending	2016-02-25 08:08:34+00	\N	\N	2015-07-09 13:58:00+00	21	2025-09-24 13:49:43.753304+00	0
513	dd468205-227d-4e6b-a486-01f2f5594b8a	718	1538	Mangiano Pizzeria	suspended	2016-02-25 08:08:34+00	\N	\N	2015-08-19 16:05:29+00	21	2025-09-24 13:49:43.753304+00	0
514	889861bd-7675-4e21-abd8-3eb664628973	719	1539	Marroush Orleans	suspended	2016-02-25 08:08:34+00	\N	\N	2015-08-19 16:08:36+00	21	2025-09-24 13:49:43.753304+00	0
515	c293e416-372b-4195-8941-28e96b788426	721	1540	Napolis	suspended	2016-02-25 08:08:34+00	\N	\N	2015-08-25 11:56:17+00	21	2025-09-24 13:49:43.753304+00	0
516	d67c41c1-2aaf-484d-9f4b-8d711d669755	722	1541	Beneci Pizza Cobden	suspended	2016-02-25 08:08:34+00	\N	\N	2015-08-28 10:47:48+00	21	2025-09-24 13:49:43.753304+00	0
517	d3153c8a-758d-4adf-94dc-6367596bbe7c	724	1542	Sbarro	suspended	2016-02-25 08:08:34+00	\N	\N	2015-09-04 14:57:17+00	21	2025-09-24 13:49:43.753304+00	0
518	08784823-0d7b-45d4-9443-f693e9e30e5b	726	1543	Joe's Pizza and Subs Laperriere	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
519	a227351a-45c9-40ac-aa4a-ac37da1abb8e	727	1544	HaNoi Pho	suspended	2016-02-25 08:08:34+00	\N	\N	2015-09-11 10:06:56+00	21	2025-09-24 13:49:43.753304+00	0
520	8f704cff-b3fc-4ce6-870b-62067ef58034	728	1545	Reynolds	suspended	2016-02-25 08:08:34+00	\N	\N	2015-09-15 13:02:58+00	36	2025-09-24 13:49:43.753304+00	0
521	7424e412-cf1c-4992-b776-df5e67b73719	729	1546	Palermo Pizzeria	suspended	2016-02-25 08:08:34+00	\N	\N	2015-09-16 15:11:18+00	21	2025-09-24 13:49:43.753304+00	0
522	02edd3be-05dc-489d-8165-b9a8029657aa	730	1547	P&M's Kouzzina	suspended	2016-02-25 08:08:34+00	\N	\N	2015-09-16 16:11:03+00	21	2025-09-24 13:49:43.753304+00	0
523	f33d5d3f-89f2-4f13-be5a-8c84f373aed8	732	1548	Pizza 2 Go	suspended	2016-02-25 08:08:34+00	\N	\N	2015-10-02 11:45:19+00	18	2025-09-24 13:49:43.753304+00	0
524	948719be-272f-44df-b18f-9555cfdb1739	733	1549	Bar Burrito South Nepean	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
525	8d8ef4cb-6a08-4f82-92f0-6fc2c78369a0	734	1550	Mr Mozzarella	suspended	2016-02-25 08:08:34+00	\N	\N	2015-10-23 13:25:04+00	21	2025-09-24 13:49:43.753304+00	0
526	4f729fe9-fe6d-4fef-994a-e445337dd496	735	1551	Bilal's Kabab	suspended	2016-02-25 08:08:34+00	\N	\N	2015-11-04 18:50:55+00	21	2025-09-24 13:49:43.753304+00	0
527	155a2afd-b26e-490f-8a5c-9961e118955f	736	1552	Shawarma House Walkley	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
529	c93a4293-8361-4db7-8fe5-ac2d0b348a8f	738	1554	King Kabab and Shawarma	suspended	2016-02-25 08:08:34+00	\N	\N	2015-12-02 15:05:25+00	21	2025-09-24 13:49:43.753304+00	0
530	e6f19203-3d7a-403b-8d3a-22b00f8dfa8e	739	1555	Mia's Indian Cuisine - St Laurent	suspended	2016-02-25 08:08:34+00	\N	\N	2015-12-07 10:34:56+00	21	2025-09-24 13:49:43.753304+00	0
531	c2bad3fc-ea86-4983-87f6-33c97220a55d	746	1556	Pita Bell	suspended	2016-02-25 08:08:34+00	\N	\N	2015-12-09 10:10:07+00	18	2025-09-24 13:49:43.753304+00	0
532	26bc654b-997e-404b-98bd-5e451c722635	748	1557	Island Grill Ottawa	suspended	2016-02-25 08:08:34+00	\N	\N	2015-12-15 16:12:09+00	21	2025-09-24 13:49:43.753304+00	0
534	d95b29c5-f2a6-4fe1-8a38-f4c8ee0005c0	750	1559	Papaye Verte	suspended	2016-02-25 08:08:34+00	\N	\N	2015-12-18 14:17:45+00	21	2025-09-24 13:49:43.753304+00	0
535	41d6cd0f-a5a1-44eb-b811-58b37b8e73d8	752	1560	Palermo Pizzeria - Donald 	suspended	2016-02-25 08:08:34+00	\N	\N	2015-09-16 15:11:18+00	21	2025-09-24 13:49:43.753304+00	0
536	4ab330e6-73df-436b-92a3-dd98b7096966	753	1561	Yimin Dim Sum House	suspended	2016-02-25 08:08:34+00	\N	\N	2016-01-04 15:19:50+00	21	2025-09-24 13:49:43.753304+00	0
537	a356ab8a-b3e7-41d5-ab36-46774bbc2682	754	1562	Pizza Pita	suspended	2016-02-25 08:08:34+00	\N	\N	2016-01-04 17:39:06+00	21	2025-09-24 13:49:43.753304+00	0
538	96b92b5a-65cf-4b87-aef9-e84a7e53ecf4	756	1563	Pizza la Diff�rence	suspended	2016-02-25 08:08:34+00	\N	\N	2016-01-05 16:57:53+00	21	2025-09-24 13:49:43.753304+00	0
539	4ea21df9-cecf-4679-88af-a67d8b798ec7	757	1564	Prince Gourmet- Montreal Road	suspended	2016-02-25 08:08:34+00	\N	\N	2014-11-05 08:14:15+00	21	2025-09-24 13:49:43.753304+00	0
542	85492d8c-2c77-410f-8fd0-e9a6e47aa130	760	1567	India Palace	suspended	2016-02-25 08:08:34+00	\N	\N	2016-01-13 11:49:05+00	21	2025-09-24 13:49:43.753304+00	0
543	59c9e3c9-c673-42f1-8e0f-d31c2e419546	761	1568	Green Papaya Preston	suspended	2016-02-25 08:08:34+00	\N	\N	2015-12-18 14:17:45+00	21	2025-09-24 13:49:43.753304+00	0
544	fd3b5a10-4f7d-4ab9-864c-5a0a8729d00e	762	1569	Green Papaya Baseline	suspended	2016-02-25 08:08:34+00	\N	\N	2015-12-18 14:17:45+00	21	2025-09-24 13:49:43.753304+00	0
545	9f857d57-9f37-4019-8fc9-e117b4205b51	763	1570	Mario's St Philippe de la Prairie	suspended	2016-02-25 08:08:34+00	2025-07-07 13:03:12+00	\N	2025-09-24 13:49:43.753304+00	40	2025-09-24 13:49:43.753304+00	0
546	e491e51f-257b-4e18-bab3-9ef2a85d60f9	764	1571	Burger Lovers	suspended	2016-02-25 08:08:34+00	\N	\N	2016-01-19 13:09:00+00	21	2025-09-24 13:49:43.753304+00	0
548	42a05f47-c911-4185-836e-41d8baaba5d9	767	1573	Via613 Bis (ON HOLD)	suspended	2016-02-25 08:08:34+00	\N	\N	2025-09-24 13:49:43.753304+00	21	2025-09-24 13:49:43.753304+00	0
549	2c182dc1-a188-4324-b67a-da0d92bc80b0	768	1574	Asian Palace Ottawa	suspended	2016-02-25 08:08:34+00	\N	\N	2016-01-27 14:17:41+00	21	2025-09-24 13:49:43.753304+00	0
550	ac1ed3b0-c3d3-4db2-847e-b11e0cdfc518	769	1575	Original Burger Joint	suspended	2016-02-25 08:08:34+00	\N	\N	2016-01-29 08:49:27+00	21	2025-09-24 13:49:43.753304+00	0
551	9e2a50c4-fd4f-4725-a419-baa7940b08a9	770	1576	Nu Caribbean	suspended	2016-02-25 08:08:34+00	\N	\N	2016-01-29 10:16:13+00	21	2025-09-24 13:49:43.753304+00	0
552	c4011d5f-7363-4cf0-8489-28298d4494cb	771	1577	Matts_TEST_restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2016-01-29 12:56:09+00	21	2025-09-24 13:49:43.753304+00	0
553	d63d34b1-a6dd-40db-a337-72651acd2661	772	1578	Holland Kisa Grill	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-08 10:15:48+00	21	2025-09-24 13:49:43.753304+00	0
554	c4d474bd-1152-4c0e-b67b-7030d5720630	773	1579	Vietnam Palace	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-08 10:28:16+00	21	2025-09-24 13:49:43.753304+00	0
556	6e88dbeb-0564-40e8-adc7-a1a7501e7f37	775	1581	Kallisto	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-18 11:17:35+00	21	2025-09-24 13:49:43.753304+00	0
580	d3b7c692-da50-4757-961d-2e8b06d6d8e0	800	1593	test stefan	suspended	2016-10-15 14:55:58+00	\N	\N	2016-06-16 10:34:18+00	1	2025-09-24 13:49:43.753304+00	0
21	36b0dd07-0942-4a76-84e3-3c0bc5b04db0	114	1595	Test James - Dovercourt Pizza	active	2017-03-17 13:28:13+00	\N	\N	2025-09-24 13:49:43.753304+00	18	2025-09-24 13:49:43.753304+00	0
849	e8c5b7df-b6a7-4a5f-b928-34d468ed9bef	\N	1031	Imilio's Pizzeria	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
850	ebe8c337-d3a0-4044-8ad5-d71019b2b3c1	\N	1041	Papa Joe's Pizza - Alta Vista	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
851	aaeac554-aafd-4705-ba85-8f5243ec08e2	\N	1043	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
852	16d64ec1-c33d-4c2d-a000-be542ac0a0f6	\N	1045	Pizza Lime	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
853	da4122aa-f0c4-47f6-9680-156d643cc6ad	\N	1067	Liu's Cuisine	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
854	b5113b9c-d952-448a-9513-866d2e91f95a	\N	1073	Mom's Chicken ( closed)	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
855	42fbfeb5-aef0-4ec5-9bf1-df2952c163bd	\N	1091	Milano	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
856	087c12d8-cee1-4f57-a48b-54a6781a78d8	\N	1107	Season's Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
857	ca028211-836c-4095-9a4f-e3a8101d76df	\N	1124	Bento Sushi	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
858	bc1852b1-dad9-4fff-bf94-6860169caa6c	\N	1135	Paesano's Pizzeria	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
859	0c227757-ece6-4fde-9896-074ca869a407	\N	1141	Shawarma's King	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
860	9443b8da-5dbd-4051-a534-8d1679f247b6	\N	1142	Milano City Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
861	80a9c751-32c3-4b63-85f3-6c876337d796	\N	1144	Piper's Pizzeria Bar & Grill	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
862	2889cd6b-acc5-44e2-9fd4-2ff6b73e0277	\N	1153	Shogun Japanese Steak House & Sushi Bar	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
863	1d1371cb-8449-42f3-9b1f-fe741d6a2a5b	\N	1186	King Wok	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
864	116a0c37-b8e0-493d-bae5-cfc507603a6f	\N	1192	Hockey Sushi 	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
865	dc08d09c-7b60-4d82-a124-427b030e0d78	\N	1196	Gloria's Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
866	a830611f-9f61-44d9-931d-106a2145a450	\N	1203	Red Chili Garden	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
867	b8f0dacd-bdbd-4399-a3e3-479fe7edaa80	\N	1211	Zeewan Eatery	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
868	2dffc9da-61ab-4577-aad6-92067c7e87e4	\N	1213	Al's Diner	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
869	a84beee2-69dd-4fdc-af8e-52e5b4fe18e0	\N	1256	Ceylonta - Somerset	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
870	da35b794-d4a9-4ac7-b359-ac3b94a60eae	\N	1262	Pho by Night - Sweet Art	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
871	efca569a-8d97-428a-8e0b-0a6aee0fb1c0	\N	1263	Angelo's	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
872	9fd886fb-8664-4baf-853a-0df078d6f1f4	\N	1273	Le Tandoor	pending	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
873	abe7995d-82d1-42a9-ad7e-793c0c6515b4	\N	1277	Hokkaido Sushi	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
874	932b3854-b892-4d88-aab5-7b4342a2bd4b	\N	1297	Basha Mont-Saint-Hilaire	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
875	67faadb2-c843-4690-a619-f5cac944ab82	\N	1308	Amir Dorion	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
876	cd4a8e3a-befe-40e7-b3f7-ef86760e29d5	\N	1326	Ramigab	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
877	a67271a1-f95c-448f-bfe0-b32257ddaa01	\N	1330	Indira's Caribbean Spot	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
878	ec0ba586-6756-44fb-8ee2-17f26652771a	\N	1332	Grazie Kitchen and Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
879	d0f64431-edb7-4d81-a09a-25e6ae70ce79	\N	1341	TCJ Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
880	ae04e75d-4584-4cdc-82ad-41ec131a1d4a	\N	1343	Chicken'licious	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
881	1fa6d647-9107-4a6e-add1-288a56fec2a8	\N	1357	Basha (Monkland)	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
882	7d7bac18-b200-4308-88e0-120533f2ed22	\N	1358	The Portuguese Chicken Guys	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
883	f6aa33c5-4507-4bb0-af1c-702efec2702f	\N	1364	Bai Du Sushi	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
884	b8cb4b05-75a6-4e28-ba7e-309afa26acf4	\N	1380	Sushiya	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
885	d194f1d6-8de3-4c24-9ade-9cb25d366ee4	\N	1382	Tap Tap Express	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
886	cef853d1-a207-44f9-93fc-0b67cdbbf92f	\N	1404	Casse-Cro�te Qu�bec	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
887	611065ca-87a2-4c63-91db-30596da61486	\N	1410	Via613	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
888	92f220a5-5bc7-4da8-ac3c-43a740108842	\N	1416	Mia Pasta - Valleyfield	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
889	6830f148-2106-4606-9805-af5933da4e03	\N	1423	Mr Mozzarella	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
890	a7b27be8-98fa-4d65-b5ec-97ec8a4cb2db	\N	1425	Mia Pasta - Les Coteaux	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
891	e4849d48-1f6d-4663-9bc0-44ab00710ea4	\N	1442	The Kathi Roll Express - North York	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
892	ca015606-16a5-4122-b037-b0799c0b09d7	\N	1443	Aladdin Donair & Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
893	2e8c8777-f1dd-40df-af17-a85136f112b1	\N	1456	Basha - Beloeil	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
894	a42beebc-5aa2-48cf-80b9-8ecee4acedce	\N	1463	Papa Joe's Fried Chicken - Alta Vista	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
895	40123a78-31be-4d23-9edc-7c357f8d0890	\N	1483	Lotus Chinese Food	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
896	11ca1bed-d23d-4e48-a2f4-fc6b3e89661c	\N	1484	Galo Piri Piri	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
897	af744f13-b87c-4fc8-98b6-c159b962a330	\N	1485	Pho La Express	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
898	082d49ce-71f4-47d6-a106-3450aaf0712e	\N	1487	Prince Gourmet - Cyrville	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
899	a18214a2-6627-459b-aabf-ff7bd22dc3bf	\N	1492	Fuji Yama Japanese Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
900	32ea779a-3087-4097-8be3-6595b2691660	\N	1495	Carmello's Italian Restaurant & Bar	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
901	082a81e8-5054-4dde-a7a1-bcf553969f3d	\N	1506	Ceylonta - Carling	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
902	49b9f11d-8805-4186-90b9-950c558b9d87	\N	1512	Merivale Noodle House	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
903	a780f233-826d-4856-8a22-242a893c35b3	\N	1521	Colonnade Pizza - Merivale Road	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
904	6d92265d-7961-4228-be99-245400618db3	\N	1524	Bilal Halal Pizza - Yaseen Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
905	4dc988c9-f805-4126-b78d-dfc7fe82625f	\N	1530	Patricio's 2 For 1 Pizza	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
906	cddc0d4a-a451-4b5f-b148-d21a6ff58ab9	\N	1537	1 for 1 Pizza Carling	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
907	3ac7076b-8ed0-4f55-887a-0848593bfb74	\N	1553	Papa Pizza Ottawa	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
908	4ea90285-e9d7-4d8a-814d-65ba37cedc26	\N	1558	Wellington Diner	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
909	6a5b86ce-3597-4cb4-9f6b-78e116dd404d	\N	1565	Papa Grecque des Flandres	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
910	442dadc2-7f1a-40a2-93be-7250a4085a83	\N	1566	Jumbo Chinese Food Restaurant	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
911	068a2945-a801-427d-b587-ecb9ad322911	\N	1572	Prince Gourmet	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
912	dbeed801-3681-412c-8e6f-7ed8878733ed	\N	1580	Petit Peru	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
913	111c27dd-fc95-446c-a5c8-206c7678d794	\N	1582	Via613 New	suspended	2016-02-25 08:08:34+00	\N	\N	2016-02-25 08:08:34+00	0	\N	0
914	0fb16c99-a43f-4060-a145-5d2730ffb8d9	\N	1594	First Test on V2	suspended	2016-12-05 20:46:53+00	\N	\N	2016-12-05 20:46:53+00	24	\N	0
915	93f17c59-5ddb-481f-8d40-c088359d0a39	\N	1596	TEST JUNE 2018	suspended	2018-06-13 15:14:23+00	\N	\N	2018-06-13 15:14:23+00	24	\N	0
916	46e7e522-3514-4857-b382-e3c1be836b13	\N	1597	Milano 14 Main St	suspended	2019-05-01 09:25:41+00	\N	\N	2019-05-01 09:25:41+00	24	\N	0
917	04746d1d-3791-40c4-bff9-c63cc190d033	\N	1598	trigger_test	suspended	2019-05-24 11:07:44+00	\N	\N	2019-05-24 11:07:44+00	1	\N	0
918	f02daa72-621d-40d0-b04c-812620897a34	\N	1603	Milano Test 1/13/2020	pending	2020-01-13 17:09:49+00	\N	\N	2020-01-13 17:09:49+00	24	2021-01-26 10:28:54+00	40
919	8c7aa11d-9b44-4269-83d5-192452510ec8	\N	1604	Restaurant Test 3/15/2020	suspended	2020-03-15 07:52:38+00	\N	\N	2020-03-15 07:52:38+00	24	\N	0
920	34461f87-1217-42ea-8f05-afe3bcb17fda	\N	1605	Restaurant Test 26 Aug 2020	suspended	2020-08-26 07:09:28+00	\N	\N	2020-08-26 07:09:28+00	24	2020-11-12 12:34:51+00	1
921	8f7bae04-e2a2-4dfe-bb0e-7d75d24bfd8a	\N	1608	Menu TEST 07 Dec 2020	suspended	2020-12-07 16:44:22+00	\N	\N	2020-12-07 16:44:22+00	40	2020-12-07 11:44:32+00	40
922	309fc898-6f7c-47cf-9935-3424e5e3d204	\N	1609	Aahar The Taste of India	pending	2021-01-26 14:38:36+00	\N	\N	2021-01-26 14:38:36+00	24	2021-01-26 09:38:45+00	24
923	721edd7f-3ed8-49ec-8e0f-d25ff63adf7b	\N	1610	1111	suspended	2021-01-26 15:47:16+00	\N	\N	2021-01-26 15:47:16+00	40	2021-01-26 10:47:20+00	40
924	2a547d58-3548-45ee-9ac1-edaa7003371b	\N	1611	All Out Burger Bank St.	active	2021-05-26 11:39:41+00	\N	\N	2021-05-26 11:39:41+00	24	2021-05-26 07:39:48+00	24
925	faf98584-90bf-4696-ab50-98a0fdfc7835	\N	1612	Milano Baseline TEST	pending	2021-12-08 11:13:19+00	\N	\N	2021-12-08 11:13:19+00	24	2021-12-08 06:13:28+00	24
926	9e92d65d-b141-4e06-b3d7-1e49529225be	\N	1613	First Test with Yanni	pending	2022-01-05 17:35:38+00	\N	\N	2022-01-05 17:35:38+00	24	2022-01-05 12:35:45+00	24
927	661f89e8-8955-4652-9151-5e743197c6d8	\N	1614	1st test with George	pending	2022-01-05 17:36:41+00	\N	\N	2022-01-05 17:36:41+00	24	2022-01-05 12:36:49+00	24
928	28e72bf1-8c46-46fd-b478-abd05f383bf4	\N	1615	Vanier Pizza & Subs TEST	suspended	2022-01-10 17:46:51+00	\N	\N	2022-01-10 17:46:51+00	40	2022-01-10 12:47:03+00	40
929	49ff8375-2c5f-417e-a3a7-c79bfb341516	\N	1616	Tony's Pizza	pending	2022-01-11 17:22:37+00	\N	\N	2022-01-11 17:22:37+00	44	2022-01-11 12:22:44+00	44
930	0c3ae54a-f0d9-4059-b1ac-ba09ae5163f2	\N	1617	Ginkgo Garden	pending	2022-01-13 17:34:09+00	\N	\N	2022-01-13 17:34:09+00	44	2022-01-13 12:34:13+00	44
931	da163bf6-cfac-4c07-a6b7-3b526bf8e6e5	\N	1618	Yorgos Yanni Practice	suspended	2022-01-19 20:00:59+00	\N	\N	2022-01-19 20:00:59+00	44	2022-01-19 15:01:03+00	44
932	7c28f2ae-d3ef-4a82-a65b-8ceacb172945	\N	1619	Beneci Pizza Yanni Practice	pending	2022-01-19 20:01:38+00	\N	\N	2022-01-19 20:01:38+00	44	2022-01-19 15:01:42+00	44
933	623e1718-70f4-47c9-9057-3b0bdddc2e4a	\N	1620	Xtreme Pizza Yanni Practice	pending	2022-01-26 17:54:25+00	\N	\N	2022-01-26 17:54:25+00	44	2022-01-26 12:54:31+00	44
934	273a363f-063a-4fa9-9223-fd126c583b7b	\N	1621	Mama Rosa Yanni Practice	pending	2022-01-27 18:40:29+00	\N	\N	2022-01-27 18:40:29+00	44	2022-01-27 13:40:32+00	44
935	096eb6ff-0b2f-4db5-bde5-e27af448efb8	\N	1622	Papa Pizza Yanni	suspended	2022-01-31 18:08:21+00	\N	\N	2022-01-31 18:08:21+00	44	2022-01-31 13:08:25+00	44
936	3fcaa9c4-95dc-461c-aa3a-3e9085f01b1a	\N	1623	Pizza Rama Yanni	pending	2022-01-31 18:15:12+00	\N	\N	2022-01-31 18:15:12+00	44	2022-01-31 13:15:16+00	44
937	ac6a31ef-e521-4277-bed7-52985a6ecd08	\N	1624	Yanni Bouziotas	suspended	2022-02-07 18:01:44+00	\N	\N	2022-02-07 18:01:44+00	44	2022-02-07 13:01:48+00	44
938	8d6332c6-63bb-4c07-b426-84124153c9fa	\N	1625	Aroy Thai	pending	2022-02-22 18:16:17+00	\N	\N	2022-02-22 18:16:17+00	44	2022-02-22 13:16:22+00	44
939	3d416477-7b62-4d6b-9d96-40a8447afc09	\N	1626	La Maison Pho	pending	2022-02-25 20:06:21+00	\N	\N	2022-02-25 20:06:21+00	44	2022-02-25 15:06:27+00	44
940	3211ab23-3636-425b-b9e9-c7d49e046a6f	\N	1627	Sala Thai	pending	2022-03-03 19:27:38+00	\N	\N	2022-03-03 19:27:38+00	44	2022-03-03 14:27:42+00	44
941	e2fec53b-9dfd-4ffe-a531-773a070ecbe3	\N	1628	Ting's Kitchen	pending	2022-03-08 18:57:24+00	\N	\N	2022-03-08 18:57:24+00	44	2022-03-08 13:57:28+00	44
942	1df37c9f-f4a0-4b3c-aa25-80178833861b	\N	1629	Asia Garden Ottawa	pending	2022-03-10 17:40:31+00	\N	\N	2022-03-10 17:40:31+00	44	2022-03-10 12:40:34+00	44
943	377d2a2c-cb0f-4af7-ae0e-faa5e243eb72	\N	1630	NANA Thai Cuisine	pending	2022-03-15 17:37:46+00	\N	\N	2022-03-15 17:37:46+00	44	2022-03-15 13:37:51+00	44
944	884e055a-2937-407a-9091-3d706a60969b	\N	1631	China Moon	pending	2022-03-15 18:13:02+00	\N	\N	2022-03-15 18:13:02+00	44	2022-03-15 14:13:05+00	44
945	b28a8b7f-ea57-4cab-b52e-3ec3d67e8ea3	\N	1632	Papa Joe's Pizza - Prince of Wales	pending	2022-03-24 16:44:58+00	\N	\N	2022-03-24 16:44:58+00	44	2022-03-24 12:45:02+00	44
946	9bcc1f6d-674e-4cfc-864f-628fdef08273	\N	1633	Mehfil Indian Cuisine	pending	2022-03-30 18:50:47+00	\N	\N	2022-03-30 18:50:47+00	44	2022-03-30 14:50:50+00	44
947	a9b41805-4c9f-44dc-92df-79ad954a47f4	\N	1634	Thai Coconut	suspended	2022-10-12 09:22:15+00	\N	\N	2022-10-12 09:22:15+00	24	2022-10-12 05:22:32+00	24
948	26a6484a-8a8d-46ab-8843-d210af9d444a	\N	1635	All Out Burger Gladstone	active	2023-04-24 09:41:24+00	\N	\N	2023-04-24 09:41:24+00	40	2023-04-24 05:41:39+00	40
949	883731df-0d30-4755-843d-ef6a152a1d08	\N	1636	All Out Burger Montreal Rd	active	2023-04-25 10:13:59+00	\N	\N	2023-04-25 10:13:59+00	40	2023-04-25 06:14:07+00	40
950	aacee049-2414-4012-bdae-1fd3250b7e22	\N	1637	Kirkwood Pizza	active	2023-08-04 04:37:30+00	2025-09-12 04:09:42+00	\N	2023-08-04 04:37:30+00	40	2023-08-04 00:37:45+00	40
951	8a13fac1-3a2c-43e5-ac5c-fffdabc79ae0	\N	1638	Shawarma Depot	pending	2023-09-06 09:33:18+00	\N	\N	2023-09-06 09:33:18+00	40	2023-09-06 05:33:25+00	40
952	0aed0093-09aa-476f-9f22-eaddcd86d64d	\N	1639	River Pizza	active	2023-11-13 09:21:23+00	\N	\N	2023-11-13 09:21:23+00	40	2023-11-13 04:21:33+00	40
953	731e142e-6f4a-4dde-bab9-ff46299cfde8	\N	1640	Genki Sushi ( dropped)	suspended	2023-12-18 10:41:18+00	\N	\N	2023-12-18 10:41:18+00	40	2023-12-18 05:41:32+00	40
954	86d5330b-7e3a-4bbf-a57e-7a27918a8d44	\N	1641	Wandee Thai	active	2023-12-20 06:41:01+00	\N	\N	2023-12-20 06:41:01+00	40	2023-12-20 01:41:07+00	40
955	dcafda07-8897-4e5c-b695-75e114dbdd0d	\N	1642	La Nawab	active	2024-01-04 08:44:23+00	\N	\N	2024-01-04 08:44:23+00	40	2024-01-04 03:44:29+00	40
956	bd8a154f-033d-4cb1-906e-5327e482d5e1	\N	1643	Tony's Pizza	pending	2024-01-10 09:28:34+00	\N	\N	2024-01-10 09:28:34+00	40	2024-01-10 04:28:41+00	40
957	86671afc-0cf7-4200-9bdd-d071b70d5a7e	\N	1654	Cosenza	active	2024-02-05 12:32:39+00	\N	\N	2024-02-05 12:32:39+00	40	2024-02-05 07:32:48+00	40
958	7f57da3e-bee1-4f78-b66b-7f7200d9ee41	\N	1655	Merivale Pizza & Wings	pending	2024-02-15 10:50:34+00	\N	\N	2024-02-15 10:50:34+00	40	2024-02-15 05:50:59+00	40
959	38e8970b-5c5e-476c-afa3-8bc270144c41	\N	1656	Shawarma Shish	pending	2024-02-20 05:58:18+00	\N	\N	2024-02-20 05:58:18+00	40	2024-02-20 00:58:29+00	40
960	c22d306c-e599-472c-8b90-0cd68841caf9	\N	1657	Cuisine Bombay Indienne	active	2024-03-12 11:45:55+00	\N	\N	2024-03-12 11:45:55+00	40	2024-03-12 07:46:07+00	40
961	7d35127f-7820-4abf-88c8-0114b0c4068b	\N	1658	Chicco Shawarma Cantley	active	2024-03-19 08:07:33+00	\N	\N	2024-03-19 08:07:33+00	40	2024-03-19 04:07:42+00	40
962	651cdcd3-0f86-41b6-a200-aa7aab7a1056	\N	1659	Chicco Pizza & Shawarma Buckingham	active	2024-03-19 13:50:25+00	\N	\N	2024-03-19 13:50:25+00	40	2024-03-19 09:50:31+00	40
963	8d8d6840-4313-4709-afae-d4f2774ba52f	\N	1660	Chicco Pizza Shawarma Anger	active	2024-03-19 13:51:22+00	2025-09-11 23:43:07+00	\N	2024-03-19 13:51:22+00	40	2024-03-19 09:51:30+00	40
964	c4c1a33f-d718-4d44-a595-c8760eb81a9d	\N	1661	Chicco Pizza Maloney	active	2024-03-19 13:52:09+00	\N	\N	2024-03-19 13:52:09+00	40	2024-03-19 09:52:15+00	40
965	f3ebd935-4662-4e6d-8ca5-f1d92d429bd9	\N	1662	Chicco Shawarma Maloney	active	2024-03-19 13:52:48+00	\N	\N	2024-03-19 13:52:48+00	40	2024-03-19 09:52:53+00	40
966	c6fab922-d8cf-47df-86c2-7c46102669fc	\N	1663	Chicco Pizza de l�Hopital	active	2024-03-19 13:54:33+00	2025-09-12 01:00:40+00	\N	2024-03-19 13:54:33+00	40	2024-03-19 09:54:38+00	40
967	88b4dd0a-35c8-44c3-9b05-8fc08a9e996c	\N	1664	Chicco Pizza St-Louis	active	2024-03-19 13:55:09+00	2025-09-10 23:37:48+00	\N	2024-03-19 13:55:09+00	40	2024-03-19 09:55:14+00	40
968	3d6b1d8a-854d-41ca-9a4c-a75cf408f230	\N	1665	Zait and Zaatar	active	2024-04-22 18:40:35+00	\N	\N	2024-04-22 18:40:35+00	45	2024-04-22 14:40:43+00	45
969	5ddfd3a3-f31a-45d6-8641-5adfae78779e	\N	1666	Mia Pizza Grec	suspended	2024-06-01 03:21:29+00	\N	\N	2024-06-01 03:21:29+00	40	2024-05-31 23:22:23+00	40
970	3e7cc902-6f3d-49ac-8eb6-1be4241e587e	\N	1667	Le Hibou Qui Rit	suspended	2024-07-17 18:11:04+00	\N	\N	2024-07-17 18:11:04+00	45	2024-07-17 14:11:11+00	45
971	71790493-5494-494a-a09c-ddf9a832423f	\N	1668	Little Gyros Greek Grill	active	2024-07-17 18:18:35+00	\N	\N	2024-07-17 18:18:35+00	45	2024-07-17 14:18:41+00	45
972	55b1d353-d099-4263-b320-e59f64da7a8f	\N	1669	Bistro 548	suspended	2024-08-13 12:50:34+00	\N	\N	2024-08-13 12:50:34+00	40	2024-08-13 08:50:49+00	40
973	7029ac53-1125-4add-bfcb-6b931decc238	\N	1670	Capital Bites	active	2024-09-04 10:33:45+00	\N	\N	2024-09-04 10:33:45+00	40	2024-09-04 06:33:53+00	40
974	68ff40b4-58b2-4ab0-aa3e-0ce571a14a7e	\N	1671	Pachino Pizza	active	2024-10-03 19:25:13+00	\N	\N	2024-10-03 19:25:13+00	40	2024-10-03 15:25:47+00	40
975	6e97498c-c08c-4324-87bd-da09abbe52b6	\N	1672	Pizza Marie	pending	2024-11-07 13:55:08+00	\N	\N	2024-11-07 13:55:08+00	2	\N	0
976	3d5d71e1-b692-4ad6-8fa2-a775d35f3f16	\N	1673	Pizza Marie	active	2024-11-07 13:57:55+00	\N	\N	2024-11-07 13:57:55+00	40	2024-11-07 08:58:06+00	40
977	7cadd28b-92b0-4f9a-94e0-dc45e292d9ce	\N	1674	Capri Pizza	active	2025-01-29 10:40:54+00	\N	\N	2025-01-29 10:40:54+00	40	2025-01-29 05:41:00+00	40
978	874b5c2d-5049-420f-984e-4091e573d8ed	\N	1675	Riverside Pizzeria	active	2025-02-11 10:12:26+00	\N	\N	2025-02-11 10:12:26+00	40	2025-02-11 05:12:31+00	40
979	e3de78d3-8553-4215-ba27-170cba8a68da	\N	1676	Routine Poutine	active	2025-02-13 07:21:26+00	\N	\N	2025-02-13 07:21:26+00	40	2025-02-13 02:21:49+00	40
980	ce0ea76d-4067-4786-89b8-1818f1746199	\N	1677	Chef Rad Halal Pizza & Burgers	active	2025-05-06 12:04:09+00	\N	\N	2025-05-06 12:04:09+00	45	2025-05-06 08:04:14+00	45
981	e9c74d3c-f52d-4d7f-826b-53e7286539ed	\N	1678	Al-s Drive In	active	2025-06-10 13:05:28+00	\N	\N	2025-06-10 13:05:28+00	45	2025-06-10 09:05:34+00	45
\.


--
-- Data for Name: spatial_ref_sys; Type: TABLE DATA; Schema: public; Owner: supabase_admin
--

COPY public.spatial_ref_sys (srid, auth_name, auth_srid, srtext, proj4text) FROM stdin;
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.schema_migrations (version, inserted_at) FROM stdin;
20211116024918	2025-08-15 16:01:01
20211116045059	2025-08-15 16:01:04
20211116050929	2025-08-15 16:01:06
20211116051442	2025-08-15 16:01:08
20211116212300	2025-08-15 16:01:11
20211116213355	2025-08-15 16:01:13
20211116213934	2025-08-15 16:01:15
20211116214523	2025-08-15 16:01:18
20211122062447	2025-08-15 16:01:20
20211124070109	2025-08-15 16:01:22
20211202204204	2025-08-15 16:01:25
20211202204605	2025-08-15 16:01:27
20211210212804	2025-08-15 16:01:34
20211228014915	2025-08-15 16:01:36
20220107221237	2025-08-15 16:01:38
20220228202821	2025-08-15 16:01:40
20220312004840	2025-08-15 16:01:42
20220603231003	2025-08-15 16:01:46
20220603232444	2025-08-15 16:01:48
20220615214548	2025-08-15 16:01:51
20220712093339	2025-08-15 16:01:53
20220908172859	2025-08-15 16:01:55
20220916233421	2025-08-15 16:01:57
20230119133233	2025-08-15 16:01:59
20230128025114	2025-08-15 16:02:02
20230128025212	2025-08-15 16:02:05
20230227211149	2025-08-15 16:02:07
20230228184745	2025-08-15 16:02:09
20230308225145	2025-08-15 16:02:11
20230328144023	2025-08-15 16:02:13
20231018144023	2025-08-15 16:02:16
20231204144023	2025-08-15 16:02:19
20231204144024	2025-08-15 16:02:21
20231204144025	2025-08-15 16:02:23
20240108234812	2025-08-15 16:02:26
20240109165339	2025-08-15 16:02:28
20240227174441	2025-08-15 16:02:32
20240311171622	2025-08-15 16:02:35
20240321100241	2025-08-15 16:02:39
20240401105812	2025-08-15 16:02:45
20240418121054	2025-08-15 16:02:48
20240523004032	2025-08-15 16:02:56
20240618124746	2025-08-15 16:02:58
20240801235015	2025-08-15 16:03:00
20240805133720	2025-08-15 16:03:03
20240827160934	2025-08-15 16:03:05
20240919163303	2025-08-15 16:03:08
20240919163305	2025-08-15 16:03:10
20241019105805	2025-08-15 16:03:12
20241030150047	2025-08-15 16:03:20
20241108114728	2025-08-15 16:03:23
20241121104152	2025-08-15 16:03:25
20241130184212	2025-08-15 16:03:28
20241220035512	2025-08-15 16:03:30
20241220123912	2025-08-15 16:03:32
20241224161212	2025-08-15 16:03:34
20250107150512	2025-08-15 16:03:36
20250110162412	2025-08-15 16:03:39
20250123174212	2025-08-15 16:03:41
20250128220012	2025-08-15 16:03:43
20250506224012	2025-08-15 16:03:45
20250523164012	2025-08-15 16:03:47
20250714121412	2025-08-15 16:03:49
20250905041441	2025-09-24 14:00:26
\.


--
-- Data for Name: subscription; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.subscription (id, subscription_id, entity, filters, claims, created_at) FROM stdin;
\.


--
-- Data for Name: cities_v1; Type: TABLE DATA; Schema: staging; Owner: postgres
--

COPY staging.cities_v1 (id, name, display_name, lat, lng, timezone, province_id) FROM stdin;
1	Ploiesti	Ploiesti	\N	\N	\N	\N
2	Bucharest	Bucharest	\N	\N	\N	\N
3	Baicoi	Baicoi	\N	\N	\N	\N
4	Kanata	Kanata	45.301665	-75.907341	America/Toronto	1
9	Ottawa	Ottawa	45.411572	-75.698194	America/Toronto	1
10	Orleans	Orleans	45.466208	-75.5424929	America/Toronto	1
11	Downtown Ottawa	Downtown-Ottawa	45.411572	-75.698194	America/Toronto	1
12	Toronto	Toronto	43.653524	-79.3839069	America/Toronto	1
13	London	London	42.979398	-81.246138	America/Toronto	1
14	Almonte	Almonte	45.2255655	-76.1940598	America/Toronto	1
15	Stittsville	Stittsville	45.2585131	-75.9207767	America/Toronto	1
16	Ville de QuÃ©bec	Ville-de-QuÃ©bec	46.813878	-71.207981	America/Montreal	2
17	Nepean	Nepean	45.3349046	-75.7241006	America/Toronto	1
18	Vanier	Vanier	46.825032	-71.266482	America/Montreal	2
20	Montreal	Montreal	45.5086699	-73.5539925	America/Montreal	2
21	Gatineau	Gatineau	44.9001	-76.021	America/Montreal	2
22	Gloucester	Gloucester	45.4473421	-75.5942867	America/Toronto	1
23	Aylmer	Aylmer	42.7729381	-80.9828842	America/Toronto	1
24	Smiths Falls	Smiths-Falls	56.1191126	-103.7404703	America/Toronto	1
25	Kemptville	Kemptville	45.0163884	-75.645947	America/Toronto	1
26	Cornwall	Cornwall	45.1373	-76.1399	America/Toronto	1
27	Winchester	Winchester	45.0918057	-75.3527847	America/Toronto	1
28	Casselman	Casselman	45.3107048	-75.0893653	America/Toronto	1
29	Carleton Place	Carleton-Place	43.6796024	-80.4301304	America/Toronto	1
30	North York	North-York	43.7615377	-79.4110794	America/Toronto	1
31	Mississauga	Mississauga	43.5890452	-79.6441198	America/Toronto	1
32	Scarborough	Scarborough	43.7764258	-79.2317521	America/Toronto	1
33	Guelph	Guelph	43.5448048	-80.2481666	America/Toronto	1
34	Kitchener	Kitchener	43.434311	-80.4777469	America/Toronto	1
35	Bourget	Bourget	45.4349429	-75.158034	America/Toronto	1
36	Lachine	Lachine	45.444854	-73.68492	America/Montreal	2
37	Richmond	Richmond	49.1665898	-123.133569	America/Vancouver	6
38	Pierrefonds	Pierrefonds	45.484871	-73.853109	America/Montreal	2
39	Dorval	Dorval	45.45	-73.75	America/Montreal	2
40	Edmonton	Edmonton	53.544389	-113.4909267	America/Edmonton	9
41	RosemÃ¨re	RosemÃ¨re	45.638974	-73.785008	America/Montreal	2
42	Charny	Charny	46.7146359	-71.2604518	America/Montreal	2
43	Terrebonne	Terrebonne	45.6929818	-73.6331102	America/Montreal	2
44	Longueuil	Longueuil	45.5369442	-73.5107131	America/Montreal	2
45	Calgary	Calgary	51.0453246	-114.0581012	America/Edmonton	9
46	Vancouver	Vancouver	49.261226	-123.1139268	America/Vancouver	6
47	Saint-Jean-sur-Richelieu	Saint-Jean-sur-Richelieu	45.305771	-73.2544903	America/Montreal	2
48	Greenfield Park	Greenfield-Park	45.485707	-73.462088	America/Montreal	2
49	Saint-Constant	Saint-Constant	45.379181	-73.5644913	America/Montreal	2
50	Saint-Hyacinthe	Saint-Hyacinthe	45.6306875	-72.9563391	America/Montreal	2
51	Alfred	Alfred	45.5586094	-74.8803744	America/Toronto	1
52	Brossard	Brossard	45.454706	-73.470661	America/Montreal	2
53	Saint-Hubert	Saint-Hubert	45.4983322	-73.4065074	America/Montreal	2
54	La Prairie	La-Prairie	45.416889	-73.488487	America/Montreal	2
55	Alexandria	Alexandria	45.3111798	-74.6367158	America/Toronto	1
56	Chesterville	Chesterville	45.962879	-71.821636	America/Montreal	2
57	Laval	Laval	45.6066487	-73.712409	America/Montreal	2
58	Renfrew	Renfrew	45.4749199	-76.6877186	America/Toronto	1
59	Cobden	Cobden	45.6273519	-76.8823605	America/Toronto	1
60	LaSalle	LaSalle	45.4288669	-73.631252	America/Montreal	2
61	Mont-Saint-Hilaire	Mont-Saint-Hilaire	45.562	-73.189	America/Montreal	2
62	Saint Lazare	Saint-Lazare	45.399813	-74.137765	America/Montreal	2
63	Oshawa	Oshawa	43.8970929	-78.8657912	America/Toronto	1
64	Osgoode	Osgoode	45.1482547	-75.601778	America/Toronto	1
65	Sainte-Julie	Sainte-Julie	45.5924997	-73.3426988	America/Montreal	2
66	Brockville	Brockville	44.5895244	-75.6842858	America/Toronto	1
67	Carlsbad Springs	Carlsbad-Springs	45.369074	-75.456097	America/Toronto	1
69	Etobicoke	Etobicoke	43.6204946	-79.5131983	America/Toronto	1
70	Beloeil	Beloeil	45.5679246	-73.2039469	America/Montreal	2
71	Salaberry-de-Valleyfield	Salaberry-de-Valleyfield	45.2500909	-74.1330862	America/Montreal	2
72	LÃ©vis	LÃ©vis	45.344961	-73.309854	America/Montreal	2
73	Les Coteaux	Les-Coteaux	45.2593027	-74.206729	America/Montreal	2
74	Vaudreuil-Dorion	Vaudreuil-Dorion	45.404236	-74.0379599	America/Montreal	2
76	ChÃ¢teauguay	ChÃ¢teauguay	45.3601589	-73.7494033	America/Montreal	2
77	Manotick	Manotick	45.226422	-75.686355	America/Toronto	1
78	Peterborough	Peterborough	44.309058	-78.319747	America/Toronto	1
79	Cobourg	Cobourg	43.9593373	-78.1677363	America/Toronto	1
80	Lakefield	Lakefield	44.4227814	-78.2721967	America/Toronto	1
81	Port Hope	Port-Hope	43.949164	-78.2934616	America/Toronto	1
82	Burlington	Burlington	43.3255196	-79.7990319	America/Toronto	1
83	Orillia	Orillia	44.6082465	-79.4196783	America/Toronto	1
84	Barrie	Barrie	44.3893556	-79.6903316	America/Toronto	1
85	Boucherville	Boucherville	45.5913698	-73.4364097	America/Toronto	1
86	Kingston	Kingston	44.2311717	-76.4859544	America/Toronto	1
87	Vaughan	Vaughn	43.8372079	-79.508276	America/Toronto	1
88	Whitehorse	Whitehorse	60.7211871	-135.0568449	America/Whitehorse	11
89	Inuvik	Inuvik	68.3607437	-133.7230177	America/Inuvik	12
90	Val-des-Monts	Val-des-Monts	45.691964	-75.680643	America/Toronto	2
91	Boisbriand	Boisbriand	45.6126338	-73.8383733	America/Montreal	2
92	Moncton	Moncton	46.0878165	-64.7782313	America/Moncton	4
93	Buckingham	Buckingham	45.5864086	-75.4168654	America/Toronto	2
94	Sudbury	Sudbury	46.5513927	-81.0354982	America/Toronto	1
95	Magog	Magog	45.2664863	-72.1479889	America/Toronto	2
96	Saint Philippe	Saint-Philippe	45.3569439	-73.4767279	America/Montreal	2
97	North Bay	North-Bay	46.3091152	-79.4608204	America/Toronto	1
98	Arnprior	Arnprior	45.4347445	-76.3518469	America/Toronto	1
99	Beachburg	Beachburg	45.7357254	-76.8631085	America/Toronto	1
100	Metcalfe	Metcalfe	45.2203397	-75.4659944	America/Toronto	1
101	Barrhaven	Barrhaven	45.2751549	-75.749846	America/Toronto	1
102	Pembroke	Pembroke	45.8266513	-77.1108826	America/Toronto	1
103	Cambridge	Cambridge	43.3616211	-80.3144276	America/Toronto	1
104	Perth	Perth	44.8988097	-76.2485592	America/Toronto	1
105	Embrun	Embrun	45.275646	-75.275411	America/Toronto	1
106	Hull	Hull	45.428555	-75.713193	America/Montreal	2
108	Saint Catharines	Saint-Catharines	43.1593745	-79.2468626	America/Montreal	2
109	Morrisburg	Morrisburg	44.8977889	-75.1833966	America/Toronto	1
110	Rockland	Rockland	45.5483729	-75.2916118	America/Toronto	1
111	Petawawa	Petawawa	45.8982631	-77.2828772	America/Toronto	1
112	Merrickville	Merrickville	44.8455906	-75.8105866	America/Toronto	1
113	Breslau	Breslau	43.4691726	-80.4094164	America/Toronto	1
114	North Gower	North-Gower	45.1314849	-75.7161333	America/Toronto	1
115	Russell	Russell	45.2593424	-75.3595538	America/Toronto	1
116	Westport	Westport	44.6776761	-76.3996659	America/Toronto	1
117	Prescott	Prescott	44.709294	-75.518972	America/Toronto	1
\.


--
-- Data for Name: cities_v2; Type: TABLE DATA; Schema: staging; Owner: postgres
--

COPY staging.cities_v2 (id, name, province_id, lat, lng, timezone) FROM stdin;
4	Kanata	1	45.3016650000	-75.9073410000	America/Toronto
9	Ottawa	1	45.4115720000	-75.6981940000	America/Toronto
10	Orleans	1	45.4662080000	-75.5424929000	America/Toronto
11	Downtown Ottawa	1	45.4115720000	-75.6981940000	America/Toronto
12	Toronto	1	43.6535240000	-79.3839069000	America/Toronto
13	London	1	42.9793980000	-81.2461380000	America/Toronto
14	Almonte	1	45.2255655000	-76.1940598000	America/Toronto
15	Stittsville	1	45.2585131000	-75.9207767000	America/Toronto
16	Greely	1	45.2592867000	-75.5686438000	America/Toronto
17	Nepean	1	45.3349046000	-75.7241006000	America/Toronto
18	Vanier	1	46.8250320000	-71.2664820000	America/Toronto
19	Ville de QuÃ©bec	2	46.8138780000	-71.2079810000	America/Montreal
20	Montreal	2	45.5086699000	-73.5539925000	America/Montreal
21	Gatineau	2	45.4765446000	-75.7012723000	America/Montreal
22	Gloucester	1	45.4473421000	-75.5942867000	America/Toronto
23	Aylmer	2	42.7729381000	-80.9828842000	America/Montreal
24	Smiths Falls	1	44.9001000000	-76.0210000000	America/Toronto
25	Kemptville	1	45.0163884000	-75.6459470000	America/Toronto
26	Cornwall	1	45.0212762000	-74.7303450000	America/Toronto
27	Winchester	1	45.0918057000	-75.3527847000	America/Toronto
28	Casselman	1	45.3107048000	-75.0893653000	America/Toronto
29	Carleton Place	1	45.1373000000	-76.1399000000	America/Toronto
30	North York	1	43.7615377000	-79.4110794000	America/Toronto
31	Mississauga	1	43.5890452000	-79.6441198000	America/Toronto
32	Scarborough	1	43.7764258000	-79.2317521000	America/Toronto
33	Guelph	1	43.5448048000	-80.2481666000	America/Toronto
34	Kitchener	1	43.4343110000	-80.4777469000	America/Toronto
35	Bourget	1	45.4349429000	-75.1580340000	America/Toronto
36	Lachine	2	45.4448540000	-73.6849200000	America/Montreal
37	Richmond	6	49.1665898000	-123.1335690000	America/Vancouver
38	Pierrefonds	2	45.4848710000	-73.8531090000	America/Montreal
39	Dorval	2	45.4500000000	-73.7500000000	America/Montreal
40	Edmonton	9	53.5443890000	-113.4909267000	America/Edmonton
41	RosemÃ¨re	2	45.6389740000	-73.7850080000	America/Montreal
42	Charny	2	46.7146359000	-71.2604518000	America/Montreal
43	Terrebonne	2	45.6929818000	-73.6331102000	America/Montreal
44	Longueuil	2	45.5369442000	-73.5107131000	America/Montreal
45	Calgary	9	51.0453246000	-114.0581012000	America/Edmonton
46	Vancouver	6	49.2612260000	-123.1139268000	America/Vancouver
47	Saint-Jean-sur-Richelieu	2	45.3057710000	-73.2544903000	America/Montreal
48	Greenfield Park	2	45.4857070000	-73.4620880000	America/Montreal
49	Saint-Constant	2	45.3791810000	-73.5644913000	America/Montreal
50	Saint-Hyacinthe	2	45.6306875000	-72.9563391000	America/Montreal
51	Alfred	1	45.5586094000	-74.8803744000	America/Toronto
52	Brossard	2	45.4547060000	-73.4706610000	America/Montreal
53	Saint-Hubert	2	45.4983322000	-73.4065074000	America/Montreal
54	La Prairie	2	45.4168890000	-73.4884870000	America/Montreal
55	Alexandria	1	45.3111798000	-74.6367158000	America/Toronto
56	Chesterville	1	45.9628790000	-71.8216360000	America/Toronto
57	Laval	2	45.6066487000	-73.7124090000	America/Montreal
58	Renfrew	1	45.4749199000	-76.6877186000	America/Toronto
59	Cobden	1	45.6273519000	-76.8823605000	America/Toronto
60	LaSalle	2	45.4288669000	-73.6312520000	America/Montreal
61	Mont-Saint-Hilaire	2	45.5620000000	-73.1890000000	America/Montreal
62	Saint Lazare	2	45.3998130000	-74.1377650000	America/Montreal
63	Oshawa	1	43.8970929000	-78.8657912000	America/Toronto
64	Osgoode	1	45.1482547000	-75.6017780000	America/Toronto
65	Sainte-Julie	2	45.5924997000	-73.3426988000	America/Montreal
66	Brockville	1	44.5895244000	-75.6842858000	America/Toronto
67	Carlsbad Springs	1	45.3690740000	-75.4560970000	America/Toronto
69	Etobicoke	1	43.6204946000	-79.5131983000	America/Toronto
70	Beloeil	2	45.5679246000	-73.2039469000	America/Montreal
71	Salaberry-de-Valleyfield	2	45.2500909000	-74.1330862000	America/Montreal
72	Saint-Luc	2	45.3449610000	-73.3098540000	America/Montreal
73	Les Coteaux	2	45.2593027000	-74.2067290000	America/Montreal
74	Vaudreuil-Dorion	2	45.4042360000	-74.0379599000	America/Montreal
75	LÃ©vis	2	46.7382265000	-71.2464592000	America/Montreal
76	ChÃ¢teauguay	2	45.3601589000	-73.7494033000	America/Montreal
77	Manotick	1	45.2264220000	-75.6863550000	America/Toronto
78	Peterborough	1	44.3090580000	-78.3197470000	America/Toronto
79	Cobourg	1	43.9593373000	-78.1677363000	America/Toronto
80	Lakefield	1	44.4227814000	-78.2721967000	America/Toronto
81	Port Hope	1	43.9491640000	-78.2934616000	America/Toronto
82	Burlington	1	43.3255196000	-79.7990319000	America/Toronto
83	Orillia	1	44.6082465000	-79.4196783000	America/Toronto
84	Barrie	1	44.3893556000	-79.6903316000	America/Toronto
85	Boucherville	2	45.5913698000	-73.4364097000	America/Montreal
86	Kingston	1	44.2311717000	-76.4859544000	America/Toronto
87	Vaughan	1	43.8372079000	-79.5082760000	America/Toronto
88	Whitehorse	11	60.7211871000	-135.0568449000	America/Whitehorse
89	Inuvik	12	68.3607437000	-133.7230177000	America/Inuvik
90	Val-des-Monts	2	45.6919640000	-75.6806430000	America/Montreal
91	Boisbriand	2	45.6126338000	-73.8383733000	America/Montreal
92	Moncton	4	46.0878165000	-64.7782313000	America/Moncton
93	Buckingham	2	45.5864086000	-75.4168654000	America/Montreal
94	Sudbury	1	46.5513927000	-81.0354982000	America/Toronto
95	Magog	2	45.2664863000	-72.1479889000	America/Montreal
96	Saint Philippe	2	45.3569439000	-73.4767279000	America/Montreal
97	North Bay	1	46.3091152000	-79.4608204000	America/Toronto
98	Arnprior	1	45.4347445000	-76.3518469000	America/Toronto
99	Beachburg	1	45.7357254000	-76.8631085000	America/Toronto
100	Metcalfe	1	45.2203397000	-75.4659944000	America/Toronto
102	Blossom Park - Blossom Park West - Sawmill Creek/ 	0	45.3507346000	-75.6233913000	\N
103	Morrisburg	1	44.8978757516	-75.1840992031	America/Toronto
104	Cantley	2	45.5661759000	-75.7824590000	America/Montreal
105	District des Riverains	2	45.4641413000	-75.7035561000	\N
106	Trillium Industrial Park	1	43.4126530000	-80.4498304000	\N
107	District de DeschÃªnes	2	45.4001754000	-75.8063301000	\N
108	District du Versant	2	45.4921297000	-75.6890730000	\N
109	Hunt Club Woods - Quinterra - Revelstoke - Riversi	1	45.3475714000	-75.6923711000	\N
\.


--
-- Data for Name: provinces_v2; Type: TABLE DATA; Schema: staging; Owner: postgres
--

COPY staging.provinces_v2 (id, "name (english)", "nom(francais)", short_name) FROM stdin;
1	Ontario	Ontario	on 
2	Quebec	Qu�bec	qc 
3	Nova Scotia	Nouvelle-�cosse	ns 
4	New Brunswick	Nouveau-Brunswick	nb 
5	Manitoba	Manitoba	mb 
6	British Columbia	Colombie-Britannique	bc 
7	Prince Edward Island	�le-du-Prince-�douard	pe 
8	Saskatchewan	Saskatchewan	sk 
9	Alberta	Alberta	ab 
10	Newfoundland and Labrador	Terre-Neuve-et-Labrador	nl 
11	Yukon	Yukon	yt 
12	Northwest Territories	Les Territoires du Nord-Ouest	nt 
13	Nunavut	Nunavut	nu 
\.


--
-- Data for Name: v1_restaurant_domains; Type: TABLE DATA; Schema: staging; Owner: postgres
--

COPY staging.v1_restaurant_domains (id, restaurant, domain) FROM stdin;
1	82	cedarvalley.menu.ca
2	216	constantine.menu.ca
3	315	restaurantjwaya.com
4	486	newyorkpizzeria.ca
5	486	newyorkpizzeria.menu.ca
6	539	reecespizza.ca
7	539	reecespizza.menu.ca
8	623	chezvilla.menu.ca
9	623	order.chezvilla.com
10	469	bigslicepizza.ca
11	469	bigslicepizza.menu.ca
12	300	totopizza.ca
13	300	totopizza.menu.ca
14	464	yumyumrestaurant.ca
15	258	order.sawasushi.ca
16	258	sawasushi.menu.ca
17	92	salitogourmetpizza.menu.ca
18	92	salitogourmetpizza.ca
19	247	romapizzeria.ca
20	247	romapizzeria.menu.ca
21	505	ricardospizzaottawa.ca
22	525	restomiramar.ca
23	525	restomiramar.menu.ca
24	601	restodelice.menu.ca
25	601	restodelice.ca
26	630	etoiledechambly.ca
27	630	etoiledechambly.menu.ca
28	578	order.restaurantbravi.com
29	578	restaurantbravi.menu.ca
30	609	order.realthai-cuisine.com
31	609	realthaicuisine.menu.ca
32	581	order.platorestaurant.com
33	581	platorestaurant.menu.ca
34	182	riverview.menu.ca
35	564	pizzalandstluc.ca
36	564	pizzalandstluc.menu.ca
37	356	pizza-welat.com
38	356	pizzawelat.menu.ca
39	81	pizzashark.menu.ca
40	81	pizzashark.ca
41	125	pizzapalaceottawa.menu.ca
42	125	pizzapalaceottawa.com
43	330	pizzadorvalexpress.menu.ca
44	330	pizzadorvalexpress.com
45	349	pizz-ami.com
46	349	pizza-ami.com
47	349	pizzaami.menu.ca
48	118	pitapit.menu.ca
49	277	phoviet24.ca
50	277	phoviet24.menu.ca
51	310	phocom.ca
52	310	phocom.menu.ca
53	310	phocomvietnam.ca
54	631	papaspizzalandporthope.menu.ca
55	631	papaspizzalandporthope.ca
56	639	papaspizzalandpeterborough.ca
57	639	papaspizzalandpeterborough.menu.ca
58	515	papaceotoronto.ca
59	366	oldmanspizzeria.ca
60	366	oldmanspizzeria.menu.ca
61	599	order.nikospizza.ca
62	599	nikospizza.menu.ca
63	290	nhulan.ca
64	290	nhulan.menu.ca
65	431	brossard.mysore.ca
66	426	order.mrchopsticks.ca
67	426	mrchopsticks.menu.ca
68	396	alexandria.milanopizzeria.ca
69	396	milanoalexandria.menu.ca
70	284	mikispizzeria.com
71	284	mikispizzeria.menu.ca
72	421	michellebbq.com
73	421	michellebbq.menu.ca
74	583	order.mazaya.ca
75	583	mazaya.menu.ca
76	345	maximospizza.com
77	345	maximospizza.menu.ca
78	586	massagrill.ca
79	586	massagrill.menu.ca
80	468	madinapizza.ca
81	197	order.lunasole.ca
82	490	louissteakhouse.menu.ca
83	602	leroyaumedangkorasianfusion.ca
84	602	leroyaumedangkor.menu.ca
85	602	leroyaumedangkor.ca
86	144	koiasiarestaurant.com
87	144	koiasiarestaurant.menu.ca
88	531	iciexpress.com
89	122	hungrysammys.menu.ca
90	122	hungrysammys.com
91	594	hardstonesgrillnepean.menu.ca
92	288	habaybna.ca
93	288	habaybna.menu.ca
94	595	order.greenchili.ca
95	595	greenchili.menu.ca
96	401	greekexpress.ca
97	401	greekexpress.menu.ca
98	596	order.greatcanadianpizza.com
99	596	greatcanadianpizza.menu.ca
100	638	17avegreatcanadianpizza.menu.ca
101	399	grandtandooristhubert.ca
102	399	grandtandooristhubert.menu.ca
103	592	order.fiazza.ca
104	592	fiazza.menu.ca
105	201	festivaljapan.menu.ca
106	201	order.festivaljapan.ca
107	477	fatalbertstrim.menu.ca
108	477	trim.fatalberts.ca
109	373	everaftersottawa.ca
110	373	everaftersottawa.menu.ca
111	339	elindio.menu.ca
112	339	elindio.ca
113	322	easterncity.ca
114	322	easterncity.menu.ca
115	484	order.corrados.ca
116	484	 corrados.menu.ca
117	580	coinmechoui.ca
118	580	coinmechoui.menu.ca
119	342	chezraffino.ca
120	342	chezraffino.menu.ca
121	242	chezgastonshawarma.com
122	242	chezgastonshawarma.menu.ca
123	333	chezantonio.menu.ca
124	333	chezantonio.ca
125	408	casalunapizza.ca
126	408	casalunapizza.menu.ca
127	360	carlsbadpizza.ca
128	360	carlsbadpizza.menu.ca
129	528	cafeohayo.menu.ca
130	597	order.butterchickenhut.com
131	597	butterchickenhut.menu.ca
132	347	buffalobillqueenmary.ca
133	347	buffalobillqueenmary.menu.ca
134	423	bashadeslaurentides.com
135	423	bashadeslaurentides.menu.ca
136	293	arianakababhouse.ca
137	293	arianakababhouse.menu.ca
138	476	amatorestaurant.ca
139	476	amatorestaurant.menu.ca
140	319	al-amine.ca
141	319	al-amine.menu.ca
142	380	tassotcreole.menu.ca
143	380	tassotcreole.ca
144	427	order.eatloco.ca
145	427	order.eatloco.menu.ca
146	73	sushihelp.menu.ca
147	73	sushihelp.ca
148	498	sushixtratoronto.ca
149	223	spicexpress.menu.ca
150	135	prestonpizza.menu.ca
151	135	prestonpizza.com
152	241	shawarmarosanaottawa.ca
153	241	shawarmarosanaottawa.menu.ca
154	320	metropizzarestaurant.com
155	320	metropizzarestaurant.menu.ca
156	305	urbanturbanrestaurant.com
157	305	urbanturbanrestaurant.menu.ca
158	696	hometownsportsbar.menu.ca
159	180	elegantpizzaorleans.menu.ca
160	180	elegantpizzaorleans.com
161	321	fornospizzeria.com
162	321	fornospizzeria.menu.ca
163	171	greekostapiola.menu.ca
164	171	greekostapiola.menuottawa.com
165	577	catalinapizza.menu.ca
166	577	catalinapizza.ca
167	178	willieschinesetakeout.menu.ca
168	178	willieschinesetakeout.com
169	361	expressasianfood.ca
170	281	lorenzoottawa.com
171	281	lorenzoottawa.menu.ca
172	212	phothudo.menu.ca
173	212	phothudo.com
174	188	nakedfishsushi.menu.ca
175	188	order.nakedfishsushi.ca
176	488	order.mekong.ca
177	488	mekong.menu.ca
178	488	mekongottawa.ca
179	471	dolmadesgreek.ca
180	485	mackiesburgerottawa.ca
181	548	capitalcitysmokehouse.menu.ca
182	202	popeyethechef.ca
183	202	popeyethechef.menu.ca
184	673	chezvillabuckingham.menu.ca
185	673	chezvilla.com
186	336	wingwah.menu.ca
187	262	northyork.phodaubo.net
188	544	westernstylechickenandpizza.ca
189	544	westernstylechickenandpizza.menu.ca
190	730	kouzzina.menu.ca
191	553	pizzaloversl.menu.ca
192	483	fatalbertscanotek.menu.ca
193	483	canotek.fatalberts.ca
194	665	mackenzieinuvik.menu.ca
195	121	mandarincourtottawa.com
196	121	mandarincourtottawa.menu.ca
197	698	order.falafoulgourmet.com
198	698	falafoulgourmet.menu.ca
199	405	3for1pizza.com
200	292	carling.silkroadkabobhouse.com
201	329	jardin-thai.com
202	329	jardinthai.menu.ca
203	350	erman-pizza.com
204	350	ermanpizza.menu.ca
205	649	ogilvieprincegourmet.menu.ca
206	757	mtlprincegourmet.menu.ca
207	573	goodtastefusion.menu.ca
208	573	goodtastefusion.com
209	372	rideau.barburritoottawa.ca
210	343	dubarry.menu.ca
211	343	order.dubarry.ca
212	713	fusionhousebank.menu.ca
213	386	wontonmamaottawa.ca
214	386	wontonmamaottawa.menu.ca
215	375	pitapizzaplus.ca
216	375	pittapizzaplus.menu.ca
217	394	larumeur.ca
218	462	plateau.mysore.ca
219	462	mysore.ca
220	462	mysore.menu.ca
221	463	sababagrill.ca
222	470	labellamanagua.ca
223	470	labellamanagua.menu.ca
224	470	order.labellamanagua.com
225	475	restaurantlittlesaigon.ca
226	475	restaurantlittlesaigon.menu.ca
227	497	sushi930toronto.ca
228	510	restaurantanne.ca
229	510	restaurantanne.menu.ca
230	516	newsushiisland.ca
231	516	newsushiisland.menu.ca
232	543	minatomontreal.ca
233	543	minatomontreal.menu.ca
234	546	restaurantmazaj.ca
235	546	restaurantmazaj.menu.ca
236	557	chateauvenus.ca
237	557	chateauvenus.menu.ca
238	558	restaurantmacks.com
239	558	macksrestaurant.menu.ca
240	606	newdlebar.com
241	606	newdlebar.menu.ca
242	618	Cobourgoriginalspaghettihouse.menu.ca
243	618	cobourg.originalspaghettihouse.com
244	626	lakefield.originalspaghettihouse.com
245	627	peterborough.originalspaghettihouse.com
246	636	spiceindiannepalesecuisine.menu.ca
247	636	spiceindiannepalesecuisine.ca
248	636	spiceforme.com
249	398	pappassouvlaki.com
250	398	pappassouvlaki.menu.ca
251	400	bashalaprairie.com
252	400	bashalaprairie.menu.ca
253	417	sushipresselasalle.ca
254	417	sushipresselasalle.menu.ca
255	767	pizzaboyzshawarma.com
256	767	order.pizzaboyzshawarma.com
257	752	donald.palermopizzeria.ca
258	759	jumbochinesefoods.menu.ca
259	613	walkley.papajoesfriedchicken.ca
260	643	galopiripiri.menu.ca
261	643	order.galopiripiri.com
262	418	bashasthilaire.ca
263	418	bashasthilaire.menu.ca
264	518	order.sushiya.ca
265	474	chicken-licious.ca
266	474	chicken-licious.menu.ca
267	545	cassecroutequebec.ca
268	545	cassecroutequebec.menu.ca
269	495	portuguesechickenguys.ca
270	495	portuguesechickenguys.menu.ca
271	304	orderkanata.hockeysushi.com
272	304	hockeysushi.menu.ca
273	461	graziepizza.ca
274	461	graziekitchen.com
275	459	indirascaribbeanspot.ca
276	533	order.bajagrill.ca
277	533	bajagrill.menu.ca
278	798	mltdwn.menu.ca
279	799	corianderthai.menu.ca
280	797	clocktowerwestboro.menu.ca
281	796	elginstreetdiner.menu.ca
282	439	misorestaurant.ca
283	439	misorestaurant.menu.ca
284	72	wokbistro.menu.ca
285	72	wokbistro.ca
286	72	lou.servehttp.com
287	737	papazpizza.net
288	358	grecoonbank.ca
289	835	restaurantbambou.menu.ca
290	829	annathai.menu.ca
291	454	ramigab.ca
292	454	ramigab.menu.ca
293	520	taptapexpress.com
294	520	taptapexpress.menu.ca
295	766	possimplicity.menu.ca
296	848	prodelapizza.ca
297	501	baidusushi.ca
298	501	baidusushi.menu.ca
299	650	blairprincegourmet.menu.ca
300	565	zoneshishtaouk.ca
301	813	phosaigonexpress.ca
302	812	tastyburgergrill.menu.ca
303	794	lenewyorkais.ca
304	786	hull.petitperu.ca
305	692	sopranospizzaottawa.ca
306	692	sopranospizzaottawa.menu.ca
307	692	sopranospizzaottawa.com
308	352	poukhamthai.com
309	614	poutinerie.ca
310	614	poutinerie.menu.ca
311	866	andalos.menu.ca
312	746	pitabell.menu.ca
313	746	pitabell.ca
314	237	shawarmasking.menu.ca
315	774	ottawa.petitperu.ca
316	774	petitperu.ca
317	828	!phovanvan.menu.ca
318	732	mpizza2go.com
319	732	mpizza2go.menu.ca
320	875	papayevertecc.menu.ca
321	802	andaloselgin.menu.ca
322	793	goldenfries.menu.ca
323	820	karunacafeottawa.ca
324	910	ottawabeerman2.menu.ca
325	287	cafedelishottawa.ca
326	920	twistedpita.ca
327	615	order.ladolcevitapreston.com
328	880	pilos.menu.ca
329	769	originalburger.ca
330	878	pizzarun.run
331	612	bronson.papajoesfriedchicken.ca
332	761	prestongreenpapaya.menu.ca
333	915	order.lulushawarmaandgrill.com
334	729	palermopizzeria.ca
335	888	order.johnjuan.ca
336	888	johnjuancc.menu.ca
337	448	phoebepizza.ca
338	951	ogilviepizzaottawa.com
339	930	pizzamaisonneuve.com
340	930	pizzamaisonneuve.menu.ca
341	175	vanierpizza.menu.ca
342	175	vanierpizza.ca
343	912	thepizzacorner.ca
344	808	wylie.milanopizzeria.ca
345	838	desflandres.pizzamarina.ca
346	758	desflandres.papagrecque.com
347	973	amiccipizza.menu.ca
348	162	houseofpizzarichmond.menu.ca
349	162	houseofpizza.menuottawa.com
350	925	order.phonha.ca
351	940	chilithai.menu.ca
352	280	kitchener.phodaubo.net
353	280	phodaubo.net
354	1004	barrhaven.vietnamesephohouse.com
355	1005	kanata.vietnamesephohouse.com
356	1002	benecipizzavanier.com
357	695	lightofindia.menu.ca
358	884	1741stlaurent.1for1pizzaottawa.com
359	986	rinag.menu.ca
360	764	burgerlovers.ca
361	519	wowsushimontreal.menu.ca
362	519	wowsushimontreal.ca
363	419	souslepalmier.ca
364	419	souslepalmier.menu.ca
365	921	pizzariverview.ca
366	142	pineviewkiki.menu.ca
367	142	pineviewkiki.com
368	826	centrepizzaottawa.com
369	1017	montako.menu.ca
370	965	commande.lamaisonduburger.com
371	1022	eddylebanese.com
372	1027	colonnade2140carling.menu.ca
373	919	3brothersrideau.menu.ca
374	919	order.3brothersshawarma.com
375	1010	phoboga2.ca
376	154	winghing.menu.ca
377	154	winghing.menuottawa.com
378	1009	phobogaexpress.ca
379	959	lamaisonpho.com
380	453	fatalbertsrussell.menu.ca
381	453	russell.fatalberts.ca
382	453	fatalbertsrussel.com
383	1029	cousinvinnyspizzeria.com
384	1020	westborosubs.com
385	374	mukutorleans.menu.ca
386	374	mukutorleans.com
387	914	opas-hull.com
388	914	okashull.com
389	736	shawarmahousewalkley.menu.ca
390	736	shawarmahousewalkley.com
391	1030	yotisrestaurant.ca
392	1037	stacked.menu.ca
393	722	beneci.menu.ca
394	722	order.beneci.com
395	894	lorenzobarandgrill.com
396	286	phoxua.ca
397	286	phoxua.menu.ca
398	656	order.justwok.ca
399	656	justwok.menu.ca
400	1039	masson.papapizza.ca
401	756	pizzaladifferenceaylmer.com
402	189	andiamopizzeria.ca
403	1033	hull.nachosloco.ca
404	1032	hull.poutineriequebecurds.ca
405	1045	gatineau.nachosloco.ca
406	600	bridlepath.papajoespizza.ca
407	620	bridlepath.papajoesfriedchicken.ca
408	620	papajoesfriedchicken.menu.ca
409	1040	pareaorleans.ca
410	541	owok.ca
411	157	houseofpizzawalkley.menu.ca
412	157	houseofpizzawalkley.com
413	157	houseofpizzawalkley.ca
414	157	walkley.papajoespizza.ca
415	205	casselman.menu.ca
416	205	casselman.milanopizzeria.ca
417	937	morrisburg.milanopizzeria.ca
418	892	szechuan.menu.ca
419	877	pubhouse.ca
420	455	portedelinde.ca
421	455	portedelinde.menu.ca
422	1050	crispysbank.menu.ca
423	127	milanomontrealroad.menu.ca
424	127	montreal.milanopizzeria.ca
425	864	masalamama.ca
426	1035	dumplingbowl.menu.ca
427	824	stittsville.milanopizzeria.ca
428	1023	order.golden-crust.ca
429	1054	cantley.papagrecque.com
430	805	crispyswoodroofe.menu.ca
431	1058	ottawaliquorservice.com
432	1060	depanneurgenereux.com
433	264	pizzabravogatineau.com
434	264	pizzabravogatineau.menu.ca
435	970	lamaisongrillee.com
436	1018	bankshawarmaandpoutine.com
437	825	cantley.papapizzagatineau.com
438	825	cantley.papapizza.ca
439	184	papapizzahull.com
440	184	hull.papapizza.ca
441	672	thewokottawa.com
442	672	thewokottawa.menu.ca
443	145	mrmozzarellanepean.menu.ca
444	1064	vieuxhullpizza.com
445	231	commande.papapizzagatineau.com
446	231	gatineau-ouest.papapizza.ca
447	1041	papaburger.ca
448	1038	gladstone.alloutburger.com
449	1013	2560bank.alloutburger.com
450	173	opasgatineau.menu.ca
451	173	opasgatineau.com
452	173	oppas.ca
453	173	roulas.ca
454	1016	argosgreek.com
455	1016	order.argosgreek.com
456	789	baseline.milanopizzeria.ca
457	840	maloney.papagrecque.com
458	346	maloney.papapizzagatineau.com
459	346	gatineau-est.papapizza.ca
460	839	maloney.pizzamarina.ca
461	953	pizzaramagatineau.ca
462	1066	257maloney.papaburger.ca
463	988	pizzabob.ca
464	95	bronson.papajoespizza.ca
465	989	hull.milanopizzeria.ca
466	193	houseofgeorgie.menu.ca
467	193	menuottawa.houseofgeorgie.ca 
468	952	lapoutinerieogilvie.ca
469	1072	luckykeychinesefood.com
470	392	restaurantletandoor.ca
471	392	restaurantletandoor.menu.ca
472	1044	thecupboardarnprior.com
473	161	merivale.milanopizzeria.ca
474	785	spratt.milanopizzeria.ca
475	1019	roulasjusetgelato.com
476	1073	ottawakababongladstone.com
477	1079	menu.ca
478	1028	colonnadebarrhaven.menu.ca
479	985	fullhouseasiancuisine.ca
480	228	chezgerry.ca
481	228	chezgerry.menu.ca
482	513	winchester.milanopizzeria.ca 
483	1007	order.hanahana.ca
484	542	sachisushimontreal.ca
485	542	sachisushimontreal.menu.ca
486	376	bangkokthaigarden.ca
487	376	bangkokthaigarden.menu.ca
488	1034	samosgreek.ca
489	711	ottawabeerman.com
490	711	thebeerman.ca
491	512	osgoode.milanopizzeria.ca
492	889	wilsonstperth.milanopizzeria.ca
493	547	nepean.yorgo.ca
494	547	nepean.yorgo.menu.ca
495	134	houseofpizzaorleans.ca
496	134	houseofpizzaorleans.menu.ca
497	172	milanotompkins.menu.ca
498	172	tompkins.milanopizzeria.ca
499	213	kemptville.milanopizzeria.ca
500	1081	westport.milanopizzeria.ca
501	1083	souvlakisouvlaki.com
502	334	colonnade280metcalfe.menu.ca
503	1063	northgower.milanopizzeria.ca
504	94	mamarosa.menu.ca
505	94	mamarosa.ca
506	978	petawawa.milanopizzeria.ca
507	413	luckyfortune.ca
508	413	luckyfortune.menu.ca
509	1082	glebe.milanopizzeria.ca
510	318	indianclayoven.ca
511	318	indianclayoven.menu.ca
512	130	bienphoorleans.menu.ca
513	130	bienphoorleans.com
514	861	order.lorenzos.com
515	1059	goldencenterpizza.com
516	998	breslau.littlegyrosgreek.ca
517	963	thegreekflameandpizza.com
518	411	cobden.milanopizzeria.ca
519	807	arnprior.milanopizzeria.ca
520	1071	585mtlroad.alloutburger.com
521	164	milanoinnes.menu.ca
522	164	innes.milanopizzeria.ca
523	1087	princeofwales.milanopizzeria.ca
524	1085	lhibouquirit.com
525	879	woodfield.milanopizzeria.ca
526	323	charmthaicuisineottawa.com
527	874	order.jcroyalthai.com
528	1088	barrhaven.alloutburger.com
529	1080	embrun.alloutburger.com
530	239	hungmein.ca
531	239	hungmein.menu.ca
532	1090	gatineau.ohmygrill.ca
533	1051	169york.ohmygrill.ca
534	1093	kemptville.mykonosgreekgrill.ca
535	856	asiagarden.ca
536	865	digbysrestaurant.com
537	207	milanodalhousie.menu.ca
538	207	dalhousie.milanopizzeria.ca
539	1084	carlsbadsprings.milanopizzeria.ca
540	183	aylmerbbq.menu.ca
541	183	aylmerbbq.ca
542	947	pizzeriasupreme.ca
543	146	merivalepizzaandwings.menu.ca
544	146	merivalepizzaandwings.com
545	101	newmeefung.menu.ca
546	101	newmeefung.com
547	101	newmeefung.ca
548	219	ottawalemongrass.com
549	219	ottawalemongrass.menu.ca
550	948	patateloulouaylmer.ca
551	132	mozzapizzagatineau.com
552	872	mozzapizzahull.com
553	869	chinamoongatineau.com
554	238	manotickpizza.com
555	238	manotickpizza.menu.ca
556	238	manocitypizza.ca
557	224	ginkgogarden.menu.ca
558	224	ginkgogarden.ca
559	200	originalgeorgies.menu.ca
560	200	originalgeorgies.com
561	703	papapizzavaldesmonts.com
562	703	val-des-monts.papapizza.ca
563	669	icookphoyou.com
564	669	icookphoyou.menu.ca
565	782	pizzadeshautesplaines.com
566	187	cathayottawa.menu.ca
567	187	cathayottawa.com
568	199	seasonspizzaottawa.ca
569	199	seasonspizzaottawa.menu.ca
570	179	no1chinesefood.menu.ca
571	179	no1chinesefood.menuottawa.com
572	179	no1chinesefoodottawa.com
573	294	hongkongottawa.com
574	294	hongkongottawa.menu.ca
575	694	tingskitchen.ca
576	1092	northgower.mykonosgreekgrill.ca
577	781	aaharaltavista.menu.ca
578	1094	sushiyanamontbleu.ca
579	968	order.friendlypizza.ca
580	140	cypressgarden.ca
581	312	luckykingtakeout.com
582	312	luckykingtakeout.menu.ca
583	1062	rockland.milanopizzeria.ca
584	211	milanobarrhaven.menu.ca
585	211	barrhaven.milanopizzeria.ca
586	790	pizza9.ca
587	1089	prescott.milanopizzeria.ca
588	143	originalbobbies.menu.ca
589	143	originalbobbies.com
590	818	sushifleury.ca
591	275	tonyspizza.menu.ca
592	275	order.tonys-pizza.ca
593	245	carletonplace.milanopizzeria.ca
594	190	bank.milanopizzeria.ca
595	337	somerset.phobogakingottawa.com
596	337	phobogakingottawa.com
597	727	hanoi-pho.menu.ca
598	974	greberpizzaetshawarma.ca
599	383	benecipizzeria.menu.ca
600	964	pizzajoanna.menu.ca
601	511	sushiexpressfantasia.ca
602	511	sushiexpressfantasia.menu.ca
603	511	sushilongueuil.ca
604	90	luckystar.menu.ca
605	90	luckystarchinesefoods.com
606	707	newhongkongchinese.ca
607	651	royalthai.menu.ca
608	208	stlaurent.menu.ca
609	208	stlaurent.milanopizzeria.ca
610	721	napoliswestboro.ca
611	850	alfred.milanopizzeria.ca
612	203	champathai.ca
613	203	champathai.menu.ca
614	257	riversidepizzeriaottawa.ca
615	255	centertowndonair.com
616	255	centertowndonair.menu.ca
617	833	renfrew.milanopizzeria.ca
618	532	ottawa.xtremepizzaottawa.com
619	364	lafamigliaonthedanforth.ca
620	206	bourget.milanopizzeria.ca
621	1042	kabyliepizza.com
622	89	imiliospizzeria.menu.ca
623	89	imiliospizzeria.ca
624	987	merrickville.milanopizzeria.ca
625	913	gatineau.milanopizzeria.ca
626	913	3boulstrene.milanopizzeria.ca
627	1025	colonnade1500bank.menu.ca
628	701	rangoli.menu.ca
629	391	stjean.marios.menu.ca
630	817	supremepizzeriadonald.ca
631	362	ottawa-pizza.ca
632	362	ottawapizza.menu.ca
633	362	ottawa2for1pizza.com
634	114	pizzalime.menu.ca
635	114	menu
636	114	lou.hopto.orgg
637	225	lechoixaylmer.com
638	1069	primapizza.ca
639	983	salathaicuisine.menu.ca
640	248	milanohazeldean.menu.ca
641	248	hazeldean.milanopizzeria.ca
642	712	pizzalovershc.menu.ca
643	800	my_domain.menu.ca
644	415	shaantandooribrossard.ca
645	415	shaantandooribrossard.menu.ca
646	192	lorenzos.menu.ca
647	192	lorenzosottawa.ca
648	192	lorenzosdelivery.ca
649	192	lorenzosdelivery.menu.ca
650	1046	gatineau.poutineriequebecurds.ca
651	716	eggrollfactory.ca
652	716	eggrollfactory.menu.ca
653	830	aroythaibarrhaven.ca
654	863	joesfamilypizzeria.ca
655	489	jnpizza.ca
656	489	order.jnpizza.com
657	209	milanomanotick.menu.ca
658	209	manotick.milanopizzeria.ca
659	124	eastviewpizza.menu.ca
660	124	eastviewpizza.ca
661	344	montliban.menu.ca
662	344	montliban.ca
663	387	orchidsushiottawa.ca
664	387	orchidsushiottawa.menu.ca
665	1074	pizzaliciousottawa.com
666	1065	russell.milanopizzeria.ca
667	815	beachburg.milanopizzeria.ca
668	204	smithsfalls.milanopizzeria.ca
669	328	milanoperth.menu.ca
670	328	richmond.milanopizzeria.ca
671	117	houseoflasagna.ca
672	117	houseoflasagna.menu.ca
673	246	carlospizzeria.ca
674	246	carlospizzeria.menu.ca
\.


--
-- Data for Name: v1_restaurants; Type: TABLE DATA; Schema: staging; Owner: postgres
--

COPY staging.v1_restaurants (id, name, pending, active, suspend_operation, suspended_at, added_on, updated_at, added_by, updated_by) FROM stdin;
72	Wok Bistro Noodles Bar and Grill (TEST)	n	Y	0	0	\N	\N	0	\N
73	Sushi Help (TEST)	n	N	0	0	\N	\N	0	\N
79	Oriental Chu Shing Restaurant	n	N	0	0	\N	\N	0	\N
81	Pizza Shark	n	N	0	0	\N	\N	0	\N
82	Cedar Valley	n	N	0	0	\N	\N	0	\N
87	Kanata Noodle House dropped	n	N	0	0	\N	\N	0	\N
89	Imilio's Pizzeria	n	Y	0	0	\N	\N	0	\N
90	Lucky Star Chinese Food	n	Y	0	0	\N	\N	0	\N
91	Ho Ho Restaurant	n	N	0	0	\N	\N	0	\N
92	Salito Gourmet Specialty Pizza (DROPPED)	n	N	0	0	\N	\N	0	\N
93	Hello Sushi Man	n	N	0	0	\N	\N	0	\N
94	Mama Rosa	n	Y	1	1757638565	\N	\N	0	\N
95	Papa Joe's Pizza - Downtown	n	Y	0	0	\N	\N	18	\N
96	Kal's Place Restaurant	n	N	0	0	\N	\N	18	\N
101	New Mee Fung Restaurant	n	Y	0	0	\N	\N	18	\N
109	Papa Joe's Pizza - Greely & Findlay Creek	n	Y	0	0	\N	\N	18	\N
110	Papa Joe's Pizza ( now house of pizza only)	n	N	0	0	\N	\N	18	\N
111	Papa Joe's Pizza	n	N	0	0	\N	\N	18	\N
112	Milano INACTIVE Baxter - Iris - Cobden 3	n	Y	0	0	\N	\N	18	\N
113	Gladstone Golden Grill (Dropped)	n	N	0	0	\N	\N	18	\N
114	Pizza Lime	n	Y	0	0	\N	\N	18	\N
117	House of Lasagna	n	Y	0	0	\N	\N	11	\N
118	Pita Pit	n	N	0	0	\N	\N	18	\N
120	Villa Pizzeria N The Greek Place	n	N	0	0	\N	\N	21	\N
121	Mandarin Court ( closed sold)	n	N	0	0	\N	\N	21	\N
122	Hungry Sammys(sold)	n	N	0	0	\N	\N	21	\N
123	New Shawarma King	n	N	0	0	\N	\N	21	\N
124	Eastview Pizza	n	Y	0	0	\N	\N	21	\N
125	Pizza Palace And Cafe (dropped)	n	N	0	0	\N	\N	21	\N
126	Vanier Grill	n	N	0	0	\N	\N	21	\N
127	Milano	n	Y	0	0	\N	\N	21	\N
128	NY Pizza	n	N	1	1670550626	\N	\N	21	\N
130	Bien Pho Vietnamese and Thai Cuisine	n	Y	1	1717200590	\N	\N	21	\N
131	Pizza Express Extra	n	N	0	0	\N	\N	21	\N
132	Mozza Pizza Gatineau	n	Y	0	0	\N	\N	21	\N
133	Taj Indian Cuisine	n	N	0	0	\N	\N	21	\N
134	House of Pizza	n	Y	0	0	\N	\N	21	\N
135	Preston Pizza (CHANGED TO XTREME PIZZA)	n	N	0	0	\N	\N	21	\N
136	Lemon Grass Thai Food	n	N	0	0	\N	\N	21	\N
137	Yang Sheng Restaurant	n	N	0	1664759575	\N	\N	21	\N
138	East India Co	n	N	0	0	\N	\N	21	\N
140	Cypress Garden	n	Y	0	1738778869	\N	\N	21	\N
141	Liu's Cuisine (DROPPED)	n	N	0	0	\N	\N	21	\N
142	Kiki Lebanese Pineview Pizza	n	Y	0	0	\N	\N	21	\N
143	Bobbie's Pizza & Subs	n	Y	0	0	\N	\N	21	\N
144	Koi Asia (CLOSED)	n	N	0	0	\N	\N	18	\N
145	Mr Mozzarella - Nepean	n	Y	0	1736701488	\N	\N	21	\N
146	Merivale Pizza & Wings	n	Y	0	0	\N	\N	21	\N
150	Mom's Chicken	n	N	0	0	\N	\N	21	\N
151	Shawarma House	n	N	0	0	\N	\N	21	\N
153	Dino's & Donald's Pizza	n	N	0	0	\N	\N	21	\N
154	Wing Hing Chinese Food	n	N	0	0	\N	\N	18	\N
155	Greekos	n	N	0	0	\N	\N	21	\N
157	House of Pizza	n	Y	0	0	\N	\N	21	\N
161	Milano	n	Y	0	0	\N	\N	21	\N
162	House of Pizza	n	N	0	0	\N	\N	21	\N
164	Milano	n	Y	0	0	\N	\N	21	\N
171	Greekos Souvlaki & Pizza (closed)	n	N	0	0	\N	\N	21	\N
172	Milano	n	Y	0	0	\N	\N	21	\N
173	Roulas Grecque et Pizza	n	Y	0	0	\N	\N	21	\N
174	Joe's Pizza and Subs	n	N	0	0	\N	\N	21	\N
175	Vanier Pizza & Subs	n	Y	0	0	\N	\N	21	\N
177	Mr Mozzarella York	n	N	0	0	\N	\N	21	\N
178	Willie's Chinese Food	n	N	0	0	\N	\N	21	\N
179	Number One Chinese Take Out	n	Y	0	0	\N	\N	21	\N
180	Elegant Pizza (Dropped)	n	N	0	0	\N	\N	21	\N
181	Milano ( dropped)	n	N	0	0	\N	\N	21	\N
182	Pizzeria Riverview	n	N	0	0	\N	\N	21	\N
183	Aylmer BBQ	n	Y	0	0	\N	\N	21	\N
184	Papa Pizza - Hull	n	Y	0	0	\N	\N	21	\N
186	Shawarma and Souvlaki House	n	N	0	0	\N	\N	21	\N
187	Cathay Restaurants	n	Y	0	0	\N	\N	21	\N
188	Naked Fish Sushi	n	N	0	0	\N	\N	21	\N
189	Andiamo Pizzeria	n	Y	0	0	\N	\N	21	\N
190	Milano	n	Y	0	0	\N	\N	21	\N
191	Benji's Vietnamese Cuisine (closed)	n	N	0	0	\N	\N	18	\N
192	Lorenzo's Pizzeria - Vanier	n	Y	0	0	\N	\N	18	\N
193	House Of Georgie - 'Sorento's'	n	Y	0	0	\N	\N	18	\N
194	Le Maillon Restaurant(sold)	n	N	0	0	\N	\N	21	\N
195	Pizza la Cite	n	N	0	0	\N	\N	21	\N
197	Lunasole Restaurant & Bar (Dropped)	n	N	0	0	\N	\N	21	\N
198	Wei's Noodle House	n	N	0	0	\N	\N	21	\N
199	Season's Pizza	n	Y	0	0	\N	\N	21	\N
200	The Original Georgie's	n	Y	0	0	\N	\N	21	\N
201	Festival Japan	n	N	0	0	\N	\N	21	\N
202	Popeye The Chef ( closed)	n	N	0	0	\N	\N	21	\N
203	Champa Thai Cuisine	n	Y	0	0	\N	\N	21	\N
204	Milano	n	Y	0	0	\N	\N	21	\N
205	Milano	n	Y	0	0	\N	\N	21	\N
206	Milano	n	Y	0	0	\N	\N	21	\N
207	Milano	n	Y	1	1752389946	\N	\N	21	\N
208	Milano	n	Y	0	0	\N	\N	21	\N
209	Milano	n	Y	0	0	\N	\N	21	\N
210	Milano INACTIVE	n	Y	0	0	\N	\N	21	\N
211	Milano	n	Y	0	0	\N	\N	21	\N
212	Pho Thu Do (dropped)	n	N	0	0	\N	\N	1	\N
213	Milano	n	Y	0	0	\N	\N	21	\N
215	Milano INACTIVE	n	Y	0	0	\N	\N	21	\N
216	do_not_delete	n	N	0	0	\N	\N	1	\N
217	Bento Sushi (DROPPED)	n	N	0	0	\N	\N	21	\N
218	Madhuban Indian Cuisine	n	N	0	0	\N	\N	21	\N
219	Lemongrass Thai Cuisine	n	Y	0	0	\N	\N	21	\N
221	Golden India	n	N	0	0	\N	\N	21	\N
223	Spice Express	n	N	0	0	\N	\N	21	\N
224	Ginkgo Garden	n	Y	0	0	\N	\N	21	\N
225	Restaurant Le Choix	n	Y	0	0	\N	\N	21	\N
226	La Bella Pizza (closed)	n	N	0	0	\N	\N	21	\N
227	Familia Pizza	n	N	0	0	\N	\N	21	\N
228	Restaurant Chez Gerry	n	Y	0	0	\N	\N	21	\N
229	Pizza Mia (closed)	n	N	0	0	\N	\N	21	\N
230	Paesano's Pizzeria ( closed)	n	N	0	0	\N	\N	21	\N
231	Papa Pizza Des Flandres	n	Y	0	0	\N	\N	21	\N
232	New Hong Shing	n	N	0	0	\N	\N	21	\N
234	Restaurant Laspï¿½zia Cafï¿½	n	N	0	0	\N	\N	21	\N
235	Chillies Indian Restaurant	n	N	1	0	\N	\N	21	\N
236	El Greko	n	N	0	0	\N	\N	21	\N
237	Shawarma King	n	Y	0	0	\N	\N	21	\N
238	Mano City Pizza	n	Y	0	0	\N	\N	21	\N
239	Hung Mein	n	Y	0	0	\N	\N	21	\N
240	Piper's Pizzeria Bar & Grill ( dropped)	n	N	0	0	\N	\N	21	\N
241	Shawarma Rosana	n	N	0	0	\N	\N	21	\N
242	Chez Gaston Shawarma(stopped delivery)	n	N	0	0	\N	\N	21	\N
245	Milano	n	Y	0	0	\N	\N	21	\N
246	Carlo's Pizza	n	Y	0	0	\N	\N	21	\N
247	Roma Pizzeria	n	N	0	0	\N	\N	21	\N
248	Milano	n	Y	0	0	\N	\N	21	\N
249	Restaurant Basha	n	N	0	0	\N	\N	21	\N
251	Lac Vien Vietnamese Restaurant	n	N	0	0	\N	\N	31	\N
253	Shogun Japanese (closed)	n	N	0	0	\N	\N	21	\N
254	Gio Pizza	n	N	0	0	\N	\N	21	\N
255	Centertown Donair & Pizza	n	Y	0	0	\N	\N	21	\N
256	Shawarma De Roza	n	N	0	0	\N	\N	21	\N
257	Riverside Pizzeria	n	Y	0	0	\N	\N	21	\N
258	Sawa Sushi	n	N	0	0	\N	\N	21	\N
259	Malone's Lakeside Bar & Grill(dropped)	n	N	0	0	\N	\N	21	\N
260	Buffalo Bill	n	N	0	0	\N	\N	34	\N
262	Pho Dau Bo Restaurant - North York (dropped)	n	N	0	0	\N	\N	31	\N
263	Planet Pizza	n	N	0	0	\N	\N	21	\N
264	Pizza Bravo	n	Y	1	1757642363	\N	\N	21	\N
265	Pho Kinh Do Vietnamese Thai	n	N	0	0	\N	\N	18	\N
273	Golden Bowl Restaurant	n	N	0	0	\N	\N	21	\N
274	House of Greek (dropped)	n	N	0	0	\N	\N	21	\N
275	Tony's Pizza	n	Y	0	0	\N	\N	21	\N
276	Paradise Shawarma	n	N	0	0	\N	\N	21	\N
277	Pho Viet 24 (dropped)	n	N	0	0	\N	\N	34	\N
278	Pho Lien Hung	n	N	0	0	\N	\N	34	\N
280	Pho Dau Bo Restaurant - Kitchener	n	N	0	1678998689	\N	\N	31	\N
281	Lorenzo's Pizzeria - Pinecrest (closed)	n	N	0	0	\N	\N	21	\N
283	Porteree Pub & Restaurant (closed dropped)	n	N	0	0	\N	\N	34	\N
284	Miki's Pizzeria (Dropped)	n	N	0	0	\N	\N	21	\N
285	Rosabella Pizza (dropped changed to yessen)	n	N	0	0	\N	\N	21	\N
286	Pho Xua	n	Y	0	0	\N	\N	34	\N
287	Cafe Delish	n	N	0	0	\N	\N	21	\N
288	Habaybna  (dropped)	n	N	0	0	\N	\N	21	\N
289	Shawarma Rayan (DROPPED)	n	N	0	0	\N	\N	21	\N
290	Nhu Lan (dropped)	n	N	0	0	\N	\N	34	\N
291	Shawarma Station	n	N	0	0	\N	\N	21	\N
292	Silk Road Kabob House - Kanata ( closed)	n	N	0	0	\N	\N	21	\N
293	Ariana Kabab House(dropped)	n	N	0	0	\N	\N	21	\N
294	Hong Kong Chinese Food Takeout	n	Y	0	0	\N	\N	21	\N
295	OpenRice Asian Fusion & Lounge	n	N	0	0	\N	\N	21	\N
296	King Wok ( closed )	n	N	0	0	\N	\N	21	\N
297	Buffalo Bills Wings Laval	n	N	0	0	\N	\N	34	\N
298	Lac Vien Vietnamese Restaurant - Scarborough	n	N	0	0	\N	\N	31	\N
299	Lac Vien Vietnamese Restaurant	n	N	0	0	\N	\N	31	\N
300	Toto Pizzeria Lachine(DROPPED)	n	N	0	0	\N	\N	34	\N
303	Colonnade City Pizza	n	N	0	0	\N	\N	21	\N
304	Hockey Sushi (closed)	n	N	0	0	\N	\N	21	\N
305	Urban Turban	n	N	0	0	\N	\N	21	\N
306	Winner House	n	N	0	0	\N	\N	21	\N
307	La Shish (dropped)	n	N	0	0	\N	\N	21	\N
310	Pho Com Vietnam (moved dropped)	n	N	0	0	\N	\N	34	\N
311	Hao Sushi (On Hold)	n	N	0	0	\N	\N	21	\N
312	Lucky King Take Out	n	Y	0	0	\N	\N	21	\N
313	Indian Biriyani House	n	N	0	0	\N	\N	21	\N
314	Brother Wu	n	N	0	0	\N	\N	21	\N
315	Jwaya (DROPPED)	n	N	0	0	\N	\N	34	\N
316	Red Chili Garden ( closed )	n	N	0	0	\N	\N	21	\N
317	Pho Orchid dropped	n	N	0	0	\N	\N	34	\N
318	Indian Punjabi Clay Oven	n	Y	0	0	\N	\N	21	\N
319	Al-Amine (DROPPED)	n	N	0	0	\N	\N	34	\N
320	Metro Pizza (dropped)	n	N	0	0	\N	\N	34	\N
321	Forno's Pizzeria (Dropped)	n	N	0	0	\N	\N	21	\N
322	Eastern City Restaurant (sold)	n	N	0	0	\N	\N	21	\N
323	Charm Thai Cuisine	n	Y	0	0	\N	\N	21	\N
324	Yaseen Halal Pizza - Carling	n	N	0	0	\N	\N	21	\N
325	Pavarazzi	n	N	0	0	\N	\N	21	\N
326	Al's Diner ( dropped ) 	n	N	0	0	\N	\N	21	\N
327	Lai Lai Chinese Food	n	N	0	0	\N	\N	21	\N
328	Milano	n	Y	0	0	\N	\N	21	\N
329	Jardin Thai ( dropped)	n	N	0	0	\N	\N	34	\N
330	Pizza Dorval Express (dropped)	n	N	0	0	\N	\N	34	\N
331	test	n	N	0	0	\N	\N	21	\N
332	Silk Road Kabob House	n	N	0	0	\N	\N	21	\N
333	Chez Antonio Restaurant(sold now chez villa)	n	N	0	0	\N	\N	21	\N
334	Colonnade Pizza	n	Y	0	0	\N	\N	21	\N
335	Aahar The Taste of India	n	N	0	0	\N	\N	21	\N
336	Wing Wah Take Out & Delivery (closed)	n	N	0	0	\N	\N	21	\N
337	Pho Bo Ga King - Somerset	n	Y	0	0	\N	\N	21	\N
339	El-Indio Inc (CLOSED)	n	N	0	0	\N	\N	21	\N
340	Cheezy Pizza & Pasta	n	N	0	0	\N	\N	21	\N
341	Tandoori Fusion	n	N	0	0	\N	\N	21	\N
342	Chez Raffino (DROPPED)	n	N	0	0	\N	\N	18	\N
343	Du Barry Restaurant (CLOSED)	n	N	0	0	\N	\N	21	\N
344	Mont Liban Bakery & Shawarma	n	Y	0	0	\N	\N	21	\N
345	Maximo's Pizza & Donair (dropped sold )	n	N	0	0	\N	\N	34	\N
346	Papa Pizza Maloney	n	Y	0	0	\N	\N	21	\N
347	Buffalo Bill Wings Montreal	n	N	0	0	\N	\N	34	\N
348	Buffalo Bill	n	N	0	0	\N	\N	34	\N
349	Pizz'Ami (dropped)	n	N	0	0	\N	\N	18	\N
350	Erman Pizza	n	Y	0	0	\N	\N	18	\N
351	Roma Pizza and Donair (DROPPED)	n	N	0	0	\N	\N	34	\N
352	Poukham Thai Cuisine ( closed )	n	N	0	0	\N	\N	21	\N
353	Pizza Test	n	N	0	0	\N	\N	18	\N
354	Istanbouli Shawarma House	n	N	1	1646090683	\N	\N	21	\N
355	Willy's Pizza (DROPPED)	n	N	0	0	\N	\N	21	\N
356	Pizza Welat (DROPPED)	n	N	0	0	\N	\N	18	\N
357	Lees Greek & Pizza	n	N	0	0	\N	\N	21	\N
358	Greco on Bank	n	N	0	0	\N	\N	21	\N
359	Pho Tien Phat (dropped)	n	N	0	0	\N	\N	34	\N
360	Carlsbad Pizza (dropped)	n	N	0	0	\N	\N	21	\N
361	Express Asian Food (Changed to A Plus sushi)	n	N	0	0	\N	\N	21	\N
362	2 for 1 Pizza	n	Y	0	1681505767	\N	\N	21	\N
364	La Famiglia on the Danforth	n	Y	0	0	\N	\N	31	\N
365	Dana's Indian Cuisine	n	N	0	0	\N	\N	21	\N
366	Old Man Pizza (DROPPED) 	n	N	0	0	\N	\N	34	\N
367	Willy's Pizza	n	N	0	0	\N	\N	21	\N
368	Restaurant Da Gunes (DROPPED)	n	N	0	0	\N	\N	18	\N
369	Tandoori Raj (DROPPED)	n	N	0	0	\N	\N	34	\N
370	Pizza Crave (DROPPED)	n	N	0	0	\N	\N	18	\N
371	Ceylonta - Somerset (DROPPED)	n	N	0	0	\N	\N	21	\N
372	Bar Burrito Downtown (HOLD)	n	N	0	0	\N	\N	21	\N
373	Ever Afters	n	N	0	0	\N	\N	21	\N
374	New Mukut Restaurant Indian Cuisine	n	Y	0	0	\N	\N	21	\N
375	Pita Pizza plus Kebob King ( Replaced)	n	N	0	0	\N	\N	21	\N
376	Bangkok Thai Garden	n	N	0	0	\N	\N	21	\N
377	Pho by Night - Sweet Art ( Dropped)	n	N	0	0	\N	\N	21	\N
378	Angelo's Sports Bar and Grill	n	N	0	0	\N	\N	21	\N
379	Aunty Rosa (closed)	n	N	0	0	\N	\N	34	\N
380	Tassot Creole	n	N	0	0	\N	\N	34	\N
383	Beneci Pizza	n	Y	0	0	\N	\N	21	\N
384	Stuffed Burgers & Pizza	n	N	0	0	\N	\N	21	\N
385	Pasta Tutti Giorni (dropped)	n	N	0	0	\N	\N	18	\N
386	Wontonmama (CLOSED)	n	N	0	0	\N	\N	21	\N
387	Orchid Sushi	n	Y	0	0	\N	\N	21	\N
389	Pizzï¿½ria Parenteau PJ	n	N	0	0	\N	\N	40	\N
391	Restaurant Mario's	n	N	0	0	\N	\N	40	\N
392	Le Tandoor	n	Y	0	0	\N	\N	40	\N
394	La Rumeur	n	Y	0	0	\N	\N	40	\N
395	Le palais des sous marins et pizza	n	N	0	0	\N	\N	40	\N
396	Milano	n	N	0	0	\N	\N	21	\N
397	Hokkaido Sushi (dropped)	n	N	0	0	\N	\N	21	\N
398	Pappas Souvlaki  (dropped)	n	N	0	0	\N	\N	18	\N
399	Grand Tandoori (DROPPED)	n	N	0	0	\N	\N	40	\N
400	Basha La Prairie (Dropped)	n	N	0	0	\N	\N	40	\N
401	Greek Express (DROPPED)	n	N	0	0	\N	\N	21	\N
402	Forest Hill Pizza	n	N	0	0	\N	\N	34	\N
404	Pho Haven	n	N	0	0	\N	\N	21	\N
405	3 for 1 Pizza (Closed)	n	N	0	0	\N	\N	21	\N
406	Sushi Presse - switched to V2	n	Y	0	0	\N	\N	18	\N
407	Medina Fried Chicken (closed)	n	N	0	0	\N	\N	21	\N
408	CasaLuna Pizza(quit)	n	N	0	0	\N	\N	21	\N
409	Pure Joy Sushi & Bubble Tea (dropped)	n	N	0	0	\N	\N	21	\N
410	Milano Pizzeria (DROPPED)	n	N	0	0	\N	\N	21	\N
411	Milano	n	Y	0	0	\N	\N	21	\N
412	Ambala	n	N	0	0	\N	\N	42	\N
413	Lucky Fortune	n	Y	0	0	\N	\N	42	\N
414	Le Ming Chuan (Dropped)	n	N	0	0	\N	\N	42	\N
415	Shaan Tandoori	n	Y	0	0	\N	\N	42	\N
416	Fat Albert's	n	N	0	0	\N	\N	21	\N
417	Sushi Presse LaSalle (dropped closed)	n	N	0	0	\N	\N	40	\N
418	Basha Mont-Saint-Hilaire (dropped)	n	N	0	0	\N	\N	40	\N
419	Sous Le Palmier	n	Y	0	0	\N	\N	40	\N
421	Michelle BBQ	n	N	0	0	\N	\N	40	\N
422	Basha (Van Horne)	n	N	0	0	\N	\N	40	\N
423	Basha (Des Laurentides) (dropped) click my resto	n	N	0	0	\N	\N	40	\N
424	I Went to Philly Yonge (DROPPED)	n	N	0	0	\N	\N	18	\N
425	Parti Pizza	n	N	0	0	\N	\N	21	\N
426	Mr. Chopsticks	n	N	0	0	\N	\N	21	\N
427	Taco Loco (dropped for clique my slice)	n	N	0	0	\N	\N	40	\N
428	Pizza Tomato (DROPPED CLOSED)	n	N	0	0	\N	\N	40	\N
429	Ocean Sushi	n	N	0	0	\N	\N	34	\N
430	Amir Dorion ( dropped )	n	N	0	0	\N	\N	18	\N
431	Mysore (Brossard) Dropped Closed down	n	N	0	0	\N	\N	34	\N
432	Thali	n	N	0	0	\N	\N	34	\N
433	Amir Saint-Lazare (dropped)	n	N	0	0	\N	\N	34	\N
434	Amir Vaudreuil (dropped)	n	N	0	0	\N	\N	34	\N
436	Amir Vimont	n	N	0	0	\N	\N	40	\N
438	India Cafe	n	N	0	0	\N	\N	21	\N
439	Miso Japanese Cuisine	n	N	0	0	\N	\N	21	\N
441	1 for 1 Pizza	n	N	0	0	\N	\N	21	\N
442	Chester's Country Fried Chicken( Changed to PFC)_	n	N	0	0	\N	\N	21	\N
443	Chester's Country Fried Chicken(changed to pfc)	n	N	0	0	\N	\N	21	\N
447	Cafï¿½ Asia	n	N	0	0	\N	\N	18	\N
448	Phoebe Pizza Yassen before	n	N	0	0	\N	\N	21	\N
449	Marble Slab Ottawa	n	N	0	0	\N	\N	21	\N
450	Pili Pili Grilled Chicken	n	N	0	0	\N	\N	21	\N
451	Fat Albert's BANK CLOSED	n	N	0	0	\N	\N	21	\N
452	Fat Albert's 	n	N	0	0	\N	\N	21	\N
453	Fat Albert's	n	Y	0	0	\N	\N	21	\N
454	Ramigab dropped	n	N	0	0	\N	\N	21	\N
455	La Porte de L'Inde	n	Y	0	0	\N	\N	18	\N
457	Happy Sushi sold closed	n	N	0	0	\N	\N	40	\N
458	Classico Louie's Pizzeria (dropped)	n	N	0	0	\N	\N	18	\N
459	Indira's Caribbean Spot ( dropped )	n	N	0	0	\N	\N	34	\N
460	Kothu Rotti	n	N	0	0	\N	\N	21	\N
461	Grazie Kitchen and Pizza (closed)	n	N	0	0	\N	\N	21	\N
462	Mysore Plateau (dropped)	n	N	0	0	\N	\N	34	\N
463	Sababa Grill (dropped closed)	n	N	0	0	\N	\N	18	\N
464	Yum Yum	n	N	0	0	\N	\N	34	\N
466	Green Lady	n	N	0	0	\N	\N	34	\N
468	Madina Pizza (dropped)	n	N	0	0	\N	\N	34	\N
469	The Big Slice Pizza (dropped)	n	N	0	0	\N	\N	40	\N
470	La Bella Managua (dropped)	n	N	0	0	\N	\N	40	\N
471	Dolmades ( closed for business)	n	N	0	0	\N	\N	21	\N
472	TCJ Restaurant ( dropped ) 	n	N	0	0	\N	\N	40	\N
473	European Pizza and Shawarma	n	N	0	0	\N	\N	34	\N
474	Chicken'licious (dropped)	n	N	0	0	\N	\N	34	\N
475	Little Saigon ( closed )	n	N	0	0	\N	\N	40	\N
476	Amato (dropped )	n	N	0	0	\N	\N	34	\N
477	Fat Albert's (closed)	n	N	0	0	\N	\N	21	\N
483	Fat Albert's	n	N	0	0	\N	\N	21	\N
484	Corrado's Authentic Italian Cuisine(dropped)	n	N	0	0	\N	\N	34	\N
485	Mackies Burger ( closed for business)	n	N	0	0	\N	\N	40	\N
486	New York Pizza & Donair	n	N	0	0	\N	\N	18	\N
487	Solymar ( dropped closed)	n	N	0	0	\N	\N	34	\N
488	Mekong Restaurant (quit)	n	N	0	0	\N	\N	21	\N
489	JN Pizza	n	Y	0	0	\N	\N	21	\N
490	Louis Steak House & Pizza(dropped)	n	N	0	0	\N	\N	21	\N
492	Chef De La Maison Roti	n	N	0	0	\N	\N	18	\N
493	Sushi Style	n	N	0	0	\N	\N	18	\N
494	Basha Monkland (dropped)	n	N	0	0	\N	\N	18	\N
495	The Portuguese Chicken Guys (dropped)	n	N	0	0	\N	\N	18	\N
496	Basha La Jeunesse (dropped)	n	N	0	0	\N	\N	34	\N
497	Sushi 930	n	N	0	0	\N	\N	18	\N
498	Sushi Xtra	n	N	0	0	\N	\N	18	\N
499	One of a Kind Pasta & Grill ( closed )	n	N	0	0	\N	\N	18	\N
500	Ju Xiang Yuan ( dropped)	n	N	0	0	\N	\N	21	\N
501	Bai Du Sushi ( dropped )	n	N	0	0	\N	\N	21	\N
502	Cafï¿½ Saffron (dropped)	n	N	0	0	\N	\N	21	\N
504	Urban Tandoor	n	N	0	0	\N	\N	21	\N
505	Ricardo's Pizza (dropped)	n	N	0	0	\N	\N	21	\N
506	Namaste India 	n	N	0	0	\N	\N	21	\N
507	Carolina's Cuisina sold closed	n	N	0	0	\N	\N	18	\N
508	I Love Sushi	n	N	0	0	\N	\N	18	\N
509	Thai Plus (inactive)	n	N	0	0	\N	\N	21	\N
510	Restaurant Anne (dropped)	n	N	0	0	\N	\N	18	\N
511	Sushi Express Chambly	n	Y	0	0	\N	\N	18	\N
512	Milano	n	Y	0	0	\N	\N	21	\N
513	Milano	n	Y	0	0	\N	\N	21	\N
514	delice de ali	n	N	0	0	\N	\N	21	\N
515	Papa Ceo Fine Italian Foods & Pizza (dropped)	n	N	0	0	\N	\N	18	\N
516	New Sushi Island	n	N	0	0	\N	\N	18	\N
517	The Kathi Roll Express - Yonge St (CLOSED)	n	N	0	0	\N	\N	18	\N
518	Sushiya ( dropped low sales)	n	N	0	0	\N	\N	18	\N
519	Wow Sushi	n	Y	0	0	\N	\N	18	\N
520	Tap Tap Express Dropped	n	N	0	0	\N	\N	18	\N
521	Boar n Wing (dropped)	n	N	0	0	\N	\N	18	\N
523	Miyuki Sushi Bar	n	N	0	0	\N	\N	18	\N
524	La Belle ï¿½poque (dropped)	n	N	0	0	\N	\N	34	\N
525	Resto Miramar (dropped)	n	N	0	0	\N	\N	18	\N
527	Pizza Rive-Sud	n	N	0	0	\N	\N	18	\N
528	Cafe Bistro Ohayo (closed)	n	N	0	0	\N	\N	18	\N
529	Beer Man and Liquor Lady	n	N	0	0	\N	\N	34	\N
530	Sushi Kampai	n	N	0	0	\N	\N	40	\N
531	Ici Express	n	N	0	0	\N	\N	18	\N
532	Xtreme Pizza	n	Y	0	0	\N	\N	21	\N
533	Baja Grill	n	N	0	0	\N	\N	21	\N
534	Aji Sushi (DROPPED)	n	N	0	0	\N	\N	40	\N
535	Milano (closed)	n	N	0	0	\N	\N	21	\N
537	303 Fusion Kitchen (dropped)	n	N	0	0	\N	\N	18	\N
538	Eat-a-Pita (dropped)	n	N	0	0	\N	\N	18	\N
539	Reece's Pizza	n	N	0	0	\N	\N	18	\N
540	Suisen Sushi - Pho lam Ici	n	N	0	0	\N	\N	18	\N
541	Restaurant O'Wok	n	Y	0	0	\N	\N	18	\N
542	Sachi Sushi	n	Y	0	0	\N	\N	18	\N
543	Minato closed	n	N	0	0	\N	\N	18	\N
544	Western Style Chicken and Pizza ( dropped)	n	N	0	0	\N	\N	18	\N
545	Casse-Croï¿½te Quï¿½bec (dropped)	n	N	0	0	\N	\N	18	\N
546	Restaurant Mazaj (Dropped)	n	N	0	0	\N	\N	18	\N
547	Yorgo's - Nepean	n	Y	0	0	\N	\N	21	\N
548	Capital City Smokehouse ( closed)	n	N	0	0	\N	\N	21	\N
549	Argos Greek & Pizza KEEP IT INACTIVE	n	N	0	0	\N	\N	21	\N
550	New Town Chinese Food	n	N	0	0	\N	\N	21	\N
551	pizza boys	n	N	0	0	\N	\N	21	\N
552	Dominican Express(sold)	n	N	0	0	\N	\N	21	\N
553	Pizza Lovers Laurier	n	Y	0	0	\N	\N	21	\N
554	Glebe Indian Cuisine	n	N	0	0	\N	\N	21	\N
557	Chï¿½teau Venus de Valleyfield (closed)	n	N	0	0	\N	\N	34	\N
558	Mack's Restaurant (dropped)	n	N	0	0	\N	\N	18	\N
559	Mia Pasta - Valleyfield ( dropped)	n	N	0	0	\N	\N	18	\N
560	Greek to go	n	N	0	0	\N	\N	21	\N
562	Crustini Pizza (closing out of business)	n	N	0	0	\N	\N	21	\N
563	Hung Fatt	n	N	0	0	\N	\N	21	\N
564	Pizzaland (sold dropped)	n	N	0	0	\N	\N	18	\N
565	Zone Shish Taouk	n	N	0	0	\N	\N	18	\N
566	Laziz Broast & Mix Grill (Dropped)	n	N	0	0	\N	\N	21	\N
567	Mr Mozzarella ( dropped )	n	N	0	0	\N	\N	21	\N
569	The Suya Spot Restaurant (dropped)	n	N	0	0	\N	\N	18	\N
571	Mia Pasta - Les Coteaux ( Closed )	n	N	0	0	\N	\N	34	\N
572	Chess Pizza	n	N	0	0	\N	\N	21	\N
573	Good Taste Fusion Restaurant (CLOSED)	n	N	0	0	\N	\N	21	\N
575	Pho Lam Ici	n	N	0	0	\N	\N	18	\N
576	Just Chicken (Dropped)	n	N	0	0	2014-10-06 13:56:20+00	\N	18	\N
577	Catalina Pizza & Chicken (dropped)	n	N	0	0	2014-10-06 14:36:37+00	\N	18	\N
578	Restaurant Bravi (Dropped)	n	N	0	0	2014-10-07 10:32:23+00	\N	34	\N
579	Nouilles Zen (dropped)	n	N	0	0	2014-10-07 11:17:44+00	\N	18	\N
580	Coin Mï¿½choui (Dropped)	n	N	0	0	2014-10-07 11:20:16+00	\N	18	\N
581	Plato Restaurant - DROPPED	n	N	0	0	2014-10-07 16:06:52+00	\N	18	\N
582	La Favorita	n	N	0	0	2014-10-07 16:08:22+00	\N	21	\N
583	Mazaya - DROPPED	n	N	0	0	2014-10-08 09:02:38+00	\N	18	\N
584	Tandoori Grill - DROPPED	n	N	0	0	2014-10-08 09:07:31+00	\N	18	\N
585	Indi Express closed	n	N	0	0	2014-10-08 10:24:45+00	\N	34	\N
586	Massa Grilladerie Grecque(dropped)	n	N	0	0	2014-10-08 10:54:51+00	\N	18	\N
587	Au Petit Charbon closed	n	N	0	0	2014-10-08 10:59:42+00	\N	18	\N
588	Amir - Greenfield Park - (Dropped)	n	N	0	0	2014-10-08 12:06:53+00	\N	18	\N
589	The Kathi Roll Express - North York (closed)_	n	N	0	0	2014-10-08 15:27:39+00	\N	34	\N
590	Aladdin Donair & Pizza (closed)	n	N	0	0	2014-10-09 09:24:27+00	\N	18	\N
591	Kim's 2 for 1 Pizza	n	N	0	0	2014-10-10 10:23:54+00	\N	18	\N
592	Fiazza Fresh Fired (Dropped)	n	N	0	0	2014-10-14 15:01:41+00	\N	21	\N
593	Saigon Pho (dropped)	n	N	0	0	2014-10-17 16:33:10+00	\N	21	\N
594	Hard Stones Grill Nepean Restaurant (dropped)	n	N	0	0	2014-10-17 17:03:02+00	\N	21	\N
595	Green Chili - DROPPED	n	N	0	0	2014-10-20 09:20:37+00	\N	18	\N
596	Great Canadian Pizza - Shawcliffe Gate - DROPPED	n	N	0	0	2014-10-21 10:28:28+00	\N	18	\N
597	Butter Chicken Hut - DROPPED	n	N	0	0	2014-10-21 10:33:07+00	\N	18	\N
599	Nikos Pizza - DROPPED	n	N	0	0	2014-10-23 09:07:16+00	\N	18	\N
600	Papa Joe's Pizza - Bridle Path	n	Y	0	0	\N	\N	18	\N
601	Resto Delice (Dropped)	n	N	0	0	2014-10-27 09:15:48+00	\N	18	\N
602	Le Royaume D'Angkor (Dropped)	n	N	0	0	2014-10-27 09:17:17+00	\N	18	\N
603	Lucky Panda	n	N	0	0	2014-10-27 13:37:28+00	\N	21	\N
604	Basha - Beloeil (dropped)	n	N	0	0	2014-10-28 09:27:40+00	\N	18	\N
606	The Newdle Bar & Bubble Tea Co ( out of business)	n	N	0	0	2014-10-30 16:23:31+00	\N	56	\N
607	Burrito Shack - Sunnyside	n	N	0	0	2014-10-30 16:51:44+00	\N	56	\N
608	Pasquale's Pizzeria	n	N	0	0	2014-10-30 16:56:20+00	\N	56	\N
609	Real Thaï¿½ (dropped)	n	N	0	0	2014-11-03 10:24:38+00	\N	56	\N
611	Madoi Sushi Restaurant ( dropped )	n	N	0	0	2014-11-03 11:38:31+00	\N	56	\N
612	Papa Joe's Fried Chicken - Downtown	n	Y	0	0	\N	\N	21	\N
613	Papa Joe's Fried Chicken Walkley	n	Y	0	0	\N	\N	21	\N
614	The Great Canadian Poutinerie (QUIT)	n	N	0	0	2014-11-04 16:56:30+00	\N	21	\N
615	La Dolce Vita	n	N	0	0	2014-11-04 16:57:49+00	\N	21	\N
616	Prince Gourmet - Market	n	N	0	0	2014-11-05 08:14:15+00	\N	21	\N
618	The Original Spaghetti House Pizzeria - Cobourg	n	N	0	0	2014-11-05 12:26:40+00	\N	56	\N
620	Papa Joe's Fried Chicken - Bridle Path	n	Y	0	0	\N	\N	21	\N
623	Chez Villa - Gatineau	n	N	0	0	2014-11-08 10:16:04+00	\N	21	\N
624	Yaseen Halal Pizza - Cyrville	n	N	0	0	\N	\N	21	\N
626	The Original Spaghetti House - Lakefield	n	N	0	0	2014-11-05 12:26:40+00	\N	56	\N
627	The Original Spaghetti House - Peterborough	n	N	0	0	2014-11-05 12:26:40+00	\N	56	\N
628	The Corned Beef Hut (dropped)	n	N	0	0	2014-11-12 13:46:27+00	\N	56	\N
629	Prince Gourmet - Innes	n	N	0	0	2014-11-05 08:14:15+00	\N	21	\N
630	Restaurant ï¿½toile de Chambly (Dropped)	n	N	0	0	2014-11-14 13:01:39+00	\N	56	\N
631	Papa's Pizzaland - Port Hope (Dropped)	n	N	0	0	2014-11-14 13:13:42+00	\N	56	\N
633	Grillers Pizza & Wings (CLOSED)	n	N	0	0	2014-11-17 12:23:38+00	\N	31	\N
635	The Pizza Junction	n	N	0	0	2014-11-18 15:22:26+00	\N	31	\N
636	Spice Indian Cuisine & Wine Bar (closed)	n	N	0	0	2014-11-18 15:24:35+00	\N	31	\N
637	Tops In Pizza dropped	n	N	0	0	2014-11-19 10:36:04+00	\N	31	\N
638	Great Canadian Pizza - 17 Ave (DROPPED)	n	N	0	0	2014-10-21 10:28:28+00	\N	18	\N
639	Papa's Pizzaland - Peterborough (Dropped)	n	N	0	0	2014-11-14 13:13:42+00	\N	56	\N
642	Lotus Chinese Food ( new owner )	n	N	0	0	2014-11-25 09:45:32+00	\N	21	\N
643	Galo Piri Piri ( closed for business )	n	N	0	0	2014-11-25 10:10:09+00	\N	56	\N
644	Pho La Express ( sold )	n	N	0	0	2014-11-25 15:40:42+00	\N	21	\N
645	Asian Stars Restaurant skip exclusif. 	n	N	0	0	2014-11-25 15:43:44+00	\N	21	\N
646	Prince Gourmet - Cyrville Dropped	n	N	0	0	2014-11-05 08:14:15+00	\N	21	\N
649	Prince Gourmet - Ogilvie 	n	N	0	0	2014-11-05 08:14:15+00	\N	21	\N
650	Prince Gourmet - open in May	n	N	0	0	2014-11-05 08:14:15+00	\N	21	\N
651	Royal Thai Cuisine	n	Y	0	0	2014-11-27 09:09:26+00	\N	31	\N
652	Pho Bo Ga Truc - inactive	n	N	0	0	2014-12-01 17:03:22+00	\N	21	\N
654	Fuji Yama Japanese Restaurant	n	N	0	0	2014-12-03 15:23:17+00	\N	56	\N
656	Just Wok	n	Y	0	1667178178	2014-12-04 15:57:23+00	\N	56	\N
657	Thai Coconut INACTIVE	n	N	1	1735674019	2014-12-05 10:32:52+00	\N	21	\N
659	Carmello's Italian Restaurant & Bar (retired)	n	N	0	0	2014-12-08 15:25:28+00	\N	56	\N
660	Fresh Pho U	n	N	0	0	2014-12-16 12:42:24+00	\N	31	\N
661	Pizza by Adonis	n	N	0	0	2014-12-17 17:00:56+00	\N	21	\N
662	Lucky Bamboo	n	N	0	0	2014-12-22 09:29:15+00	\N	56	\N
663	Nowshak Restaurant ( dropped)	n	N	0	0	2014-12-22 09:53:36+00	\N	56	\N
664	Silver Spoon HOLD	n	N	0	0	2014-12-23 15:02:48+00	\N	21	\N
665	Tonimoes - Inuvik  (closed)	n	N	0	0	2015-01-19 09:57:42+00	\N	56	\N
666	Tonimoes - Whitehorse drpopped	n	N	0	0	2015-01-19 09:57:42+00	\N	56	\N
668	Chalet de Hull - (Stalled)	n	N	0	0	2015-02-02 09:33:32+00	\N	21	\N
669	iCook Pho You	n	Y	0	0	2015-02-06 11:12:31+00	\N	21	\N
670	Reginos Pizza (Dropped)	n	N	0	0	2015-02-09 15:19:07+00	\N	21	\N
671	Ceylonta - Carling ( dropped )	n	N	0	0	\N	\N	21	\N
672	The Wok	n	Y	0	0	2015-02-12 17:11:17+00	\N	21	\N
673	Chez Villa - Buckingham	n	N	0	0	2014-11-08 10:16:04+00	\N	21	\N
683	Pizza Maisonneuve	n	N	0	0	2015-02-19 14:11:31+00	\N	56	\N
684	The Mongolian Village (CLOSED)	n	N	0	0	2015-02-20 09:45:47+00	\N	21	\N
686	Wandee Thai Cuisine	n	Y	0	0	2015-02-25 15:12:54+00	\N	21	\N
687	Merivale Noodle House (QUIT)	n	N	0	0	2015-02-27 08:59:11+00	\N	21	\N
688	Palki Cuisine of India	n	N	0	0	2015-03-06 10:01:57+00	\N	21	\N
692	Sopranos Pizza Ottawa	n	N	0	0	\N	\N	21	\N
694	Ting's Kitchen	n	Y	0	0	2015-03-25 14:57:10+00	\N	21	\N
695	Light of India	n	Y	0	0	2015-03-25 14:57:32+00	\N	21	\N
696	Hometown Sports and Grill	n	N	0	0	2015-03-25 15:35:58+00	\N	18	\N
697	Burrito Shack - Bank	n	N	0	0	2014-10-30 16:51:44+00	\N	56	\N
698	Falafoul Gourmet (closed )	n	N	0	0	2015-04-07 09:54:05+00	\N	21	\N
699	Host India	n	N	1	0	2015-04-14 16:53:02+00	\N	21	\N
700	Colonnade Pizza - Merivale Road	n	N	0	0	2015-04-16 13:32:30+00	\N	21	\N
701	Rangoli	n	Y	0	0	2015-04-21 09:19:10+00	\N	21	\N
703	Papa Pizza Val-Des-Monts	n	Y	0	0	\N	\N	21	\N
704	Bilal Halal Pizza ( dropped )	n	N	0	0	\N	\N	21	\N
705	Asian Dragon (Backed out)	n	N	0	0	2015-04-23 12:39:02+00	\N	21	\N
706	Sushi Enshoku	n	N	0	0	2015-05-06 09:46:12+00	\N	36	\N
707	New Hong Kong	n	Y	0	0	2015-05-08 15:46:13+00	\N	21	\N
708	Somerset View	n	N	0	0	\N	\N	21	\N
709	A Plus Sushi (CLOSED)	n	N	0	0	2015-05-12 13:26:47+00	\N	21	\N
710	Patricio's 2 For 1 Pizza ( dropped )	n	N	0	0	2015-05-25 15:01:43+00	\N	18	\N
711	The Beer Man	n	N	0	0	2015-05-27 12:29:05+00	\N	21	\N
712	Pizza Lovers Hunt Club	n	Y	0	0	2015-06-04 11:33:37+00	\N	18	\N
713	Fusion House (closed)	n	N	0	0	2015-06-12 14:29:44+00	\N	18	\N
714	Phu-Yen Restaurant	n	N	0	0	2015-06-23 15:03:55+00	\N	21	\N
715	Fusion House Kanata CLOSED	n	N	0	0	2015-06-12 14:29:44+00	\N	18	\N
716	Egg Roll Factory	n	Y	0	0	2015-07-09 13:58:00+00	\N	21	\N
717	1 for 1 Pizza Carling	n	N	0	0	\N	\N	21	\N
718	Mangiano Pizzeria	n	N	0	0	2015-08-19 16:05:29+00	\N	21	\N
719	Marroush Orleans	n	N	0	0	2015-08-19 16:08:36+00	\N	21	\N
721	Napolis	n	Y	0	0	2015-08-25 11:56:17+00	\N	21	\N
722	Beneci Pizza Cobden	n	N	0	0	2015-08-28 10:47:48+00	\N	21	\N
724	Sbarro	n	N	0	0	2015-09-04 14:57:17+00	\N	21	\N
726	Koda's Family Diner	n	N	0	0	\N	\N	21	\N
727	HaNoi Pho	n	Y	0	0	2015-09-11 10:06:56+00	\N	21	\N
728	Reynolds	n	N	0	0	2015-09-15 13:02:58+00	\N	36	\N
729	Palermo Pizzeria	n	Y	0	0	2015-09-16 15:11:18+00	\N	21	\N
730	P&M's Kouzzina	n	N	0	0	2015-09-16 16:11:03+00	\N	21	\N
732	Pizza 2 Go	n	N	0	0	2015-10-02 11:45:19+00	\N	18	\N
733	Bar Burrito South Nepean	n	N	0	0	\N	\N	21	\N
734	Mr Mozzarella	n	N	0	0	2015-10-23 13:25:04+00	\N	21	\N
735	Bilal's Kabab - CLOSED	n	N	0	0	2015-11-04 18:50:55+00	\N	21	\N
736	Shawarma Home	n	N	0	0	\N	\N	21	\N
737	Papaz Pizza ( closed )	n	N	0	0	2015-11-12 15:58:39+00	\N	21	\N
738	King Kabab and Shawarma ( dropped)	n	N	0	0	2015-12-02 15:05:25+00	\N	21	\N
739	Mia's Indian Cuisine - St Laurent	n	N	0	0	2015-12-07 10:34:56+00	\N	21	\N
746	Pita Bell	n	N	0	0	2015-12-09 10:10:07+00	\N	18	\N
748	Island Grill Ottawa	n	N	0	0	2015-12-15 16:12:09+00	\N	21	\N
749	Wellington Diner ( dropped )	n	N	0	0	2015-12-18 14:13:14+00	\N	21	\N
750	Papaye Verte	n	N	0	0	2015-12-18 14:17:45+00	\N	21	\N
752	Palermo Pizzeria - Donald 	n	N	0	0	2015-09-16 15:11:18+00	\N	21	\N
753	Yimin Dim Sum House (dropped)	n	N	0	0	2016-01-04 15:19:50+00	\N	21	\N
754	Pizza Pita (dropped)	n	N	0	0	2016-01-04 17:39:06+00	\N	21	\N
756	Pizza la Diffï¿½rence Aylmer	n	Y	0	0	2016-01-05 16:57:53+00	\N	21	\N
757	Prince Gourmet- Montreal Road	n	N	0	0	2014-11-05 08:14:15+00	\N	21	\N
758	Papa Grecque des Flandres	n	Y	0	0	2016-01-08 11:38:12+00	\N	21	\N
759	Jumbo Chinese Food Restaurant (CANCELLED)	n	N	0	0	2016-01-11 10:13:42+00	\N	21	\N
760	India Palace	n	N	0	0	2016-01-13 11:49:05+00	\N	21	\N
761	Green Papaya Preston	n	N	0	0	2015-12-18 14:17:45+00	\N	21	\N
762	Green Papaya Baseline	n	N	0	0	2015-12-18 14:17:45+00	\N	21	\N
763	Mario's St Philippe de la Prairie	n	N	1	1751893392	\N	\N	40	\N
764	Burger Lovers	n	Y	0	0	2016-01-19 13:09:00+00	\N	21	\N
766	POS SIMPLICITY	n	Y	0	0	2014-11-05 08:14:15+00	\N	21	\N
767	Via613 Bis (ON HOLD)	n	N	0	0	\N	\N	21	\N
768	Asian Palace Ottawa	n	N	0	0	2016-01-27 14:17:41+00	\N	21	\N
769	Original Burger Joint	n	N	0	0	2016-01-29 08:49:27+00	\N	21	\N
770	Nu Caribbean	n	N	0	0	2016-01-29 10:16:13+00	\N	21	\N
771	Matts_TEST_restaurant	n	N	0	0	2016-01-29 12:56:09+00	\N	21	\N
772	Holland Kisa Grill	n	N	0	0	2016-02-08 10:15:48+00	\N	21	\N
773	Vietnam Palace	n	N	0	0	2016-02-08 10:28:16+00	\N	21	\N
774	Petit Peru	n	N	0	0	2016-02-09 19:07:09+00	\N	21	\N
775	Kallisto	n	N	0	0	2016-02-18 11:17:35+00	\N	21	\N
776	Via613 (CANCELLED)	n	N	0	0	2016-02-24 13:20:49+00	\N	18	\N
777	East India Co - West Ottawa	n	N	0	0	\N	\N	21	\N
778	Bonita's Cantina	n	N	0	0	2016-02-26 08:59:35+00	\N	21	\N
780	Pizza Bonne Humeur	n	N	0	0	2016-02-29 17:35:16+00	\N	21	\N
781	Aahar The Taste of India	n	Y	0	0	\N	\N	21	\N
782	Pizza des Hautes Plaines	n	Y	0	0	2016-03-01 20:28:05+00	\N	21	\N
783	Fort York Pizzeria	n	N	0	0	2016-03-02 10:25:38+00	\N	18	\N
784	Smoque Shack	n	N	0	0	2016-03-04 10:50:52+00	\N	21	\N
785	Milano	n	Y	0	0	2016-03-08 12:12:56+00	\N	21	\N
786	Petit Peru Hull (INACTIVE)	n	N	0	0	2016-03-11 09:45:24+00	\N	21	\N
787	Main Meal (CLOSED)	n	N	0	0	2016-04-04 15:20:47+00	\N	21	\N
788	Burrito Shack - Spratt - Closed	n	N	0	0	2014-10-30 16:51:44+00	\N	56	\N
789	Milano	n	Y	0	0	2016-04-13 14:21:08+00	\N	21	\N
790	Pizza 9 Grecque 9	n	Y	0	0	2016-05-03 11:20:16+00	\N	21	\N
791	Kings Pizza and Greek - Closed	n	N	0	0	2016-05-03 11:21:13+00	\N	21	\N
792	Diana Pizza (dropped)	n	N	0	0	2016-05-04 16:22:59+00	\N	21	\N
793	Golden Fries (cancelled)	n	N	0	0	2016-05-10 10:14:02+00	\N	21	\N
794	Bistro Le New Yorkais ( temp dropped )	n	N	0	0	2016-05-31 11:59:42+00	\N	21	\N
795	Xtreme Pizza Orleans	n	N	0	0	\N	\N	21	\N
796	Elgin Street Diner	n	N	0	0	2016-06-14 14:41:32+00	\N	21	\N
797	Clocktower Brew pub Westboro	n	N	0	0	2016-06-14 14:53:43+00	\N	21	\N
798	MLT DWN	n	N	0	0	2016-06-14 15:17:42+00	\N	21	\N
799	Coriander Thai	n	N	0	0	2016-06-14 15:23:28+00	\N	21	\N
800	test stefan	n	Y	0	0	2016-06-16 10:34:18+00	\N	1	\N
802	Shawarma Andalos (dropped)	n	N	0	0	2016-06-16 15:14:08+00	\N	21	\N
803	The Beer Man North Bay (QUIT)	n	N	0	0	2015-05-27 12:29:05+00	\N	21	\N
804	Dou' Ini	n	N	0	0	2016-06-22 10:24:36+00	\N	21	\N
805	Crispy's	n	Y	0	0	2016-06-22 11:18:22+00	\N	21	\N
806	Chateau du Shawarma	n	N	0	0	2016-06-22 15:40:57+00	\N	21	\N
807	Milano	n	Y	0	0	2016-06-23 11:35:27+00	\N	21	\N
808	Milano	n	Y	0	0	\N	\N	21	\N
809	Orleans Shawarma	n	N	0	0	2016-07-19 15:40:15+00	\N	21	\N
810	Maison Fumï¿½e BBQ	n	N	1	1645463856	2016-07-20 15:48:53+00	\N	21	\N
811	Himalaya (closed)	n	N	0	0	2016-07-21 10:51:35+00	\N	18	\N
812	Tasty Burgers and Grill ( inactive dropped )	n	N	0	0	2016-07-21 13:48:52+00	\N	21	\N
813	Pho Saigon Express	n	N	0	0	2016-07-22 10:38:47+00	\N	37	\N
815	Milano	n	Y	0	0	2016-08-02 08:38:06+00	\N	21	\N
816	Say Cheese Pizza and Poutine	n	N	0	0	2016-08-03 11:21:48+00	\N	21	\N
817	Supreme Pizzeria	n	Y	0	0	\N	\N	21	\N
818	Sushi Fleury	n	Y	0	0	2016-08-18 09:44:10+00	\N	18	\N
819	Luxx Deli Bistro	n	N	0	0	2016-08-24 09:05:22+00	\N	21	\N
820	Karuna Cafe	n	N	0	0	2016-09-01 13:54:03+00	\N	21	\N
821	The Main Bar & Grill	n	N	0	0	2016-09-14 10:54:48+00	\N	21	\N
822	Jade Yi's Kitchen dropped	n	N	0	0	2016-09-20 08:54:06+00	\N	21	\N
824	Milano	n	Y	0	0	2016-10-11 10:14:04+00	\N	18	\N
825	Papa Pizza Cantley	n	Y	0	0	2016-10-13 13:31:47+00	\N	21	\N
826	Centre Pizza	n	Y	0	0	2016-10-17 16:03:33+00	\N	21	\N
827	Mom and Pops Pizza Shop	n	N	0	0	2016-10-18 11:11:41+00	\N	21	\N
828	Pho Van Van	n	N	0	0	2016-10-18 13:57:47+00	\N	21	\N
829	Anna Fine Thai	n	N	0	0	2016-10-18 13:58:23+00	\N	21	\N
830	Aroy Thai	n	Y	0	0	2016-10-25 10:09:42+00	\N	21	\N
831	Verona Pizza House	n	N	0	0	2016-10-25 13:09:15+00	\N	21	\N
832	Dough Brothers	n	N	0	0	2016-10-27 09:45:00+00	\N	21	\N
833	Milano	n	Y	0	0	2016-11-08 14:07:50+00	\N	21	\N
834	1 for 1 Pizza Rideau	n	N	0	0	\N	\N	21	\N
835	Restaurant Bambou	n	N	0	0	2016-11-24 12:15:21+00	\N	21	\N
836	Angry Dragonz	n	N	0	0	2016-12-04 20:12:09+00	\N	21	\N
838	Marina Pizza des Flandres 	n	Y	0	0	2016-10-13 13:31:47+00	\N	21	\N
839	Marina Pizza Maloney	n	Y	0	0	2016-10-13 13:31:47+00	\N	21	\N
840	Papa Grecque Maloney 	n	Y	0	0	2016-01-08 11:38:12+00	\N	21	\N
841	Big Bone BBQ (dropped)	n	N	0	0	2016-12-05 13:13:18+00	\N	21	\N
842	3 Bites Shawarma, Greek and Pizza (dropped)	n	N	0	0	2016-12-22 10:38:48+00	\N	21	\N
843	La Brochette	n	N	0	0	2016-12-22 10:44:01+00	\N	21	\N
844	Poulet Mom's Chicken Gatineau	n	N	0	0	2016-06-22 15:40:57+00	\N	21	\N
847	Pro de la Pizza	n	N	0	0	2017-01-09 17:01:21+00	\N	21	\N
848	Pro de la Pizza	n	N	0	0	2016-05-31 11:59:42+00	\N	21	\N
849	1 for 1 Pizza St Laurent	n	N	0	0	\N	\N	21	\N
850	Milano	n	Y	0	0	2017-02-24 15:35:29+00	\N	21	\N
851	Euro Mex	n	N	1	0	2017-02-27 11:11:20+00	\N	21	\N
852	Jo-Jo's Pizzeria Fernbank	n	N	0	0	2017-03-09 09:17:16+00	\N	18	\N
853	Jo-Jo's Pizzeria Stittsville	n	N	0	0	2017-03-09 09:17:16+00	\N	18	\N
854	Jo-Jo's Pizzeria (reserved)	y	N	0	0	2017-03-09 09:17:16+00	\N	18	\N
855	Jo-Jo's Pizzeria Carling	n	N	0	0	2017-03-09 09:17:16+00	\N	18	\N
856	Asia Garden Ottawa	n	Y	0	0	2017-03-23 12:03:02+00	\N	21	\N
857	clone test	n	N	0	0	\N	\N	18	\N
859	Shawarma Bits	n	N	0	0	2017-05-09 14:02:32+00	\N	21	\N
860	Charlie Chan Famous Chinese Food	n	N	0	0	2017-05-10 14:38:43+00	\N	21	\N
861	Lorenzo Pizzeria - Arch	n	Y	0	0	2017-05-11 12:29:44+00	\N	21	\N
862	Lunasole Orleans (dropped)	n	N	0	0	2017-05-11 20:19:24+00	\N	21	\N
863	Joes Family Pizzeria	n	Y	0	0	2017-05-15 10:04:20+00	\N	18	\N
864	Masala Mama's Kitchen (dropped)	n	N	0	0	2017-06-05 11:59:03+00	\N	21	\N
865	Digby's Restaurant	n	Y	0	0	2017-06-12 09:58:51+00	\N	21	\N
866	Andalo's Shawarma Hunt Club	n	N	0	0	2017-06-26 10:53:54+00	\N	21	\N
868	Bagan Indian Food	n	N	0	0	2017-07-11 18:39:15+00	\N	21	\N
869	China Moon	n	Y	0	0	2017-08-01 10:43:36+00	\N	21	\N
870	Isabella Pizza	n	N	0	0	2017-08-16 10:13:59+00	\N	21	\N
871	Cazza Pizza (ON HOLD)	n	N	0	0	2017-08-30 09:25:02+00	\N	21	\N
872	Mozza Pizza Hull	n	Y	0	0	2017-09-11 14:22:03+00	\N	21	\N
873	Pho Lee Restaurant	n	N	0	0	2017-09-15 10:34:50+00	\N	18	\N
874	JC Royal Thai Cuisine	n	Y	0	0	2017-09-18 11:11:31+00	\N	31	\N
875	Papaye Verte Call Centre	n	Y	0	0	2017-09-22 11:10:54+00	\N	21	\N
876	Chef Cheng cloxsed out of business	n	N	0	0	2017-09-29 11:41:53+00	\N	21	\N
877	Pub House	n	N	0	0	2017-10-24 07:38:10+00	\N	21	\N
878	Pizza Run	n	Y	0	0	2017-10-25 09:07:39+00	\N	18	\N
879	Milano	n	Y	0	0	2017-10-26 14:10:25+00	\N	21	\N
880	Pilos Greek Restaurant	n	N	0	0	2017-11-13 14:24:35+00	\N	21	\N
882	Shawarma Palace Rideau (dropped)	n	N	0	0	2017-11-14 20:07:16+00	\N	21	\N
883	Downtown Pizza & Qabar Grilled Chicken	n	N	0	0	2017-11-15 09:44:42+00	\N	18	\N
884	1 for 1 Pizza 1741 St Laurent Blvd (inactive)	n	N	0	0	2017-12-01 11:54:27+00	\N	21	\N
885	Mandarin Ogilvie Restaurant	n	N	0	0	2017-12-05 13:41:00+00	\N	21	\N
886	Sula Wok (dropped)	n	N	0	0	2017-12-07 10:12:09+00	\N	21	\N
887	Kanata Noodle House Carling dropped	n	N	0	0	2018-01-04 14:33:07+00	\N	0	\N
888	John Juan	n	N	0	0	2018-01-15 11:51:19+00	\N	21	\N
889	Milano	n	Y	0	0	2018-02-20 09:39:11+00	\N	21	\N
891	Indian Curry House	n	N	0	0	2018-03-07 08:56:10+00	\N	21	\N
892	La Maison Szechuan	n	Y	0	0	2018-03-07 09:02:17+00	\N	21	\N
893	Meatings (dropped)	n	N	0	0	2018-03-08 08:40:00+00	\N	21	\N
894	Lorenzo Bar and Grill	n	Y	0	0	2018-04-04 15:58:44+00	\N	21	\N
895	Golf Kingsway	n	N	0	0	2018-04-12 08:57:45+00	\N	21	\N
896	India Curry and Kebab House	n	N	0	0	2018-04-25 13:50:52+00	\N	21	\N
897	Chicken Ranch	n	N	0	0	2018-05-03 11:26:44+00	\N	21	\N
898	Chez Gaston	n	N	0	0	2018-05-08 11:34:17+00	\N	21	\N
899	Mother India	y	N	0	0	2018-05-10 07:40:32+00	\N	18	\N
900	Casey's Bar and Grill CLOSED	n	N	0	0	2018-05-13 08:26:38+00	\N	21	\N
901	Joe's Pizza and Subs	n	N	1	1719541661	2018-06-04 14:29:40+00	\N	21	\N
902	Colonel's City Pizza	n	N	0	0	2018-07-27 07:08:14+00	\N	18	\N
904	Sizzle n' Grill (dropped)	n	N	0	0	2018-08-01 08:31:10+00	\N	21	\N
905	Colonel's City Pizza Casselman	n	N	0	0	2018-08-01 10:56:06+00	\N	18	\N
906	Long Long Noodles	n	N	0	0	2018-09-04 12:06:16+00	\N	21	\N
907	Holland's Pizzeria (dropped)	n	N	0	0	2018-09-06 06:54:17+00	\N	18	\N
910	The Beer Man 2 Call Center	n	N	0	0	2018-09-18 12:06:50+00	\N	21	\N
911	East India CC - REMOVED	n	N	0	0	2018-09-19 08:45:44+00	\N	21	\N
912	Pizza Corner	n	Y	0	0	2018-10-12 06:45:41+00	\N	18	\N
913	Milano	n	Y	0	1751313970	2018-10-22 10:55:51+00	\N	21	\N
914	Oka's Hull	n	Y	0	0	2018-11-05 15:08:11+00	\N	21	\N
915	Lulu Shawarma and Greek	n	N	0	0	2018-11-09 09:24:05+00	\N	21	\N
916	Shop A Pizza (dropped)	n	N	0	0	2018-11-12 15:45:12+00	\N	21	\N
917	Juluca's (dropped)	n	N	0	0	2018-11-13 12:12:59+00	\N	21	\N
918	Caesars Palace	y	N	0	0	2018-11-16 10:09:59+00	\N	18	\N
919	3 Brothers	n	N	0	0	2018-11-21 09:55:16+00	\N	21	\N
920	Twisted Pita & Pizzeria	n	Y	0	0	2018-12-12 10:29:30+00	\N	18	\N
921	Pizza Riverview	n	Y	0	0	2019-01-08 17:24:35+00	\N	21	\N
922	Subito Sandwich (dropped)	n	N	0	0	2019-01-11 11:29:18+00	\N	21	\N
923	Jimmy Gyro Pizza and Poutinerie	n	N	0	0	2019-01-19 11:19:06+00	\N	21	\N
924	La Poutinerie Walkley (dropped)	n	N	0	0	2019-01-20 08:42:59+00	\N	21	\N
925	Pho Nha Vietnamese Cuisine	n	Y	0	0	2019-01-31 11:28:31+00	\N	37	\N
926	Roost and Grills (dropped)	n	N	0	0	2019-02-14 15:13:45+00	\N	21	\N
928	Portugalos Restaurant	n	N	0	0	2019-03-05 14:05:03+00	\N	21	\N
929	East Side Marios	n	N	0	0	2019-03-05 14:24:03+00	\N	21	\N
930	Pizza Maisonneuve	n	Y	0	0	2019-03-05 14:31:43+00	\N	21	\N
931	Patio Vidal Des Flandres	n	N	0	0	2019-03-05 14:33:17+00	\N	21	\N
934	Yorgo's - Barrhaven KEEP Active Mapped Printer	n	Y	0	0	2019-03-26 06:34:13+00	\N	21	\N
935	Milano	n	N	0	0	2019-03-26 08:14:42+00	\N	21	\N
936	Prime Burger Bar (dropped)	n	N	0	0	2019-04-04 06:27:00+00	\N	18	\N
937	Milano	n	Y	0	0	2019-04-15 10:20:26+00	\N	21	\N
938	El Taco De Oro (dropped)	n	N	0	0	2019-04-30 15:25:01+00	\N	21	\N
939	Geo's Pizza (dropped)	n	N	0	0	2019-04-30 15:25:52+00	\N	21	\N
940	Chili Thai	n	N	0	0	2019-04-30 15:26:25+00	\N	21	\N
941	New China (dropped)	n	N	0	0	2019-05-01 15:08:00+00	\N	21	\N
942	The Wing Shoppe	n	N	0	0	2019-05-02 12:54:46+00	\N	21	\N
943	Palermo Pizzeria Gladstone CLOSED	n	N	0	0	2019-06-17 10:01:52+00	\N	21	\N
944	Winner House Chinese Food	n	N	0	0	2019-06-18 08:12:34+00	\N	21	\N
945	Asian Kitchen	n	N	0	0	2019-07-05 08:59:51+00	\N	21	\N
946	Gatineau Maison de Nouille CLOSED	n	N	0	0	2019-07-05 09:07:24+00	\N	21	\N
947	Supreme Pizzeria	n	Y	0	0	2019-07-08 09:43:34+00	\N	21	\N
948	Patate Lou Lou	n	Y	0	0	2019-07-22 14:52:08+00	\N	21	\N
949	Le Moulin	n	N	0	0	2019-08-02 10:49:51+00	\N	21	\N
951	Ogilvie Pizza	n	Y	0	0	2019-08-02 10:51:46+00	\N	21	\N
952	La Poutinerie Ogilvie	n	Y	0	0	2019-08-19 03:14:54+00	\N	21	\N
953	PizzaRama	n	Y	0	0	2019-08-22 18:35:24+00	\N	21	\N
954	East Feast (dropped)	n	N	0	0	2019-08-28 13:55:51+00	\N	21	\N
955	Amici Restaurant & Pizzeria	y	N	0	0	2019-09-03 09:08:25+00	\N	18	\N
956	Patio Vidal Grï¿½ber	n	N	0	0	2019-09-09 13:06:39+00	\N	21	\N
957	La Zone Chawarma	n	N	0	0	2019-09-17 14:33:35+00	\N	21	\N
959	La Maison Pho	n	Y	1	1753483711	2019-10-03 09:23:17+00	\N	21	\N
960	Orchidee Restaurant Fusion Asiatique	n	N	0	0	2019-10-15 13:19:58+00	\N	21	\N
961	Lorenzo's Orleans (dropped)	n	N	0	0	2019-10-17 14:54:26+00	\N	21	\N
962	Papa Joe's Pizza - Prince of Wales	n	N	0	0	2019-10-28 10:00:08+00	\N	18	\N
963	The Greek Flame and Pizza	n	Y	1	1749875274	2019-11-06 16:14:46+00	\N	21	\N
964	Pizza Joanna	n	Y	0	0	2019-11-06 16:15:59+00	\N	21	\N
965	La Maison du Burger	n	Y	0	0	2019-11-07 13:17:42+00	\N	21	\N
966	Pho Maison de Nouilles HUll (dropped)	n	N	0	0	2019-11-28 09:00:35+00	\N	21	\N
967	Mehfil Indian Cuisine	n	N	0	1662755318	2019-12-11 14:52:43+00	\N	21	\N
968	Friendly Restaurant and Pizzeria	n	Y	0	0	2019-12-16 11:36:11+00	\N	21	\N
969	Harveys Hull	n	N	0	0	2020-01-10 15:48:28+00	\N	21	\N
970	La Maison Grillï¿½e	n	Y	0	0	2020-01-10 15:49:57+00	\N	21	\N
971	Milano (dropped)	n	N	0	0	2020-01-17 14:21:18+00	\N	21	\N
972	Ottawa Liquor Service old	n	N	0	0	2020-02-25 09:39:25+00	\N	21	\N
973	Amicci Pizza	n	Y	0	0	2020-02-26 08:59:34+00	\N	21	\N
974	Greber Pizza et Shawarma	n	Y	0	0	2020-02-26 13:46:21+00	\N	21	\N
975	Liu's Garden	n	N	1	1685927912	2020-03-12 10:43:15+00	\N	21	\N
976	Mr Mic Chinese Restaurant	n	N	0	0	2020-03-18 17:20:33+00	\N	21	\N
977	Aroma Pizzeria	n	N	0	0	2020-03-26 14:35:09+00	\N	21	\N
978	Milano	n	Y	1	1748729633	2020-03-30 13:36:29+00	\N	21	\N
979	Little Elephant Thai Bistro	n	N	0	0	2020-04-08 10:41:22+00	\N	21	\N
980	Mukut Ottawa	n	N	0	0	2020-05-15 13:38:02+00	\N	21	\N
981	FJ Pizzeria	n	Y	0	0	2020-05-19 02:49:51+00	\N	21	\N
982	Riverbend Pub and Dining Canadian-Chinese	n	N	0	0	2020-05-19 12:12:44+00	\N	21	\N
983	Sala Thai	n	Y	0	0	2020-06-05 11:14:25+00	\N	21	\N
984	duplicate	n	N	0	0	2020-06-08 11:38:32+00	\N	21	\N
985	Full House Asian Cuisine	n	Y	0	0	2020-06-08 12:06:05+00	\N	18	\N
986	Rinag Authentic Indian Food	n	N	1	0	2020-06-30 11:30:49+00	\N	21	\N
987	Milano	n	Y	0	0	2020-07-07 10:04:03+00	\N	21	\N
988	Pizza Bob	n	Y	0	0	2020-07-24 09:38:40+00	\N	21	\N
989	Milano	n	Y	0	0	2020-09-25 08:41:00+00	\N	21	\N
991	clona stefan	n	Y	0	0	2020-09-28 10:14:59+00	\N	21	\N
995	Casa Grecque	n	N	0	0	2020-10-05 14:56:13+00	\N	21	\N
996	Fil's Diner	n	N	1	0	2020-10-14 09:27:20+00	\N	21	\N
997	Pizza La Diffï¿½rence HULL CLOSED	n	N	0	1708132383	2020-10-14 10:03:05+00	\N	21	\N
998	Little Gyros Greek Grill	n	Y	0	0	2020-10-29 10:06:28+00	\N	18	\N
999	Supra Pizza	n	N	0	1660535936	2020-10-29 15:10:38+00	\N	21	\N
1000	3 Brothers Shawarma & Poutine Hull	n	N	1	0	2020-11-05 08:01:21+00	\N	21	\N
1001	Authentic Vietnamese Pho House Nepean	n	N	0	0	2020-11-17 14:24:27+00	\N	21	\N
1002	Beneci Pizza Vanier	n	N	0	0	2020-11-24 09:15:16+00	\N	21	\N
1003	3 Brothers Kanata	n	N	1	1632001332	2020-12-09 09:53:26+00	\N	21	\N
1004	Authentic Vietnamese Pho House Barrhaven	n	N	0	0	2020-12-14 09:03:40+00	\N	21	\N
1005	Authentic Vietnamese Pho House Kanata	n	N	0	0	2020-12-14 09:04:24+00	\N	21	\N
1006	Ha's Dim Sum Noodle House	n	N	0	0	2021-01-04 07:02:35+00	\N	18	\N
1007	HanaHana Korean Food and Sushi Takeout	n	Y	0	0	2021-01-08 09:24:38+00	\N	21	\N
1008	Ke Ola Poke	n	N	1	0	2021-01-11 13:27:21+00	\N	21	\N
1009	Pho Bo Ga Express	n	Y	0	0	2021-01-21 13:34:19+00	\N	21	\N
1010	Pho Bo Ga 2	n	Y	0	0	2021-01-21 13:36:25+00	\N	21	\N
1011	Jimmies Pizza	n	N	1	1637886945	2021-01-21 13:45:22+00	\N	21	\N
1012	West End Pizza	n	N	1	1659353982	2021-02-02 16:20:11+00	\N	21	\N
1013	All Out Burger	n	Y	0	0	2021-02-18 09:48:17+00	\N	21	\N
1014	Zaytoun	y	N	0	0	2021-03-04 09:48:02+00	\N	21	\N
1015	Mojo's Chinese Food	n	N	1	0	2021-03-15 14:20:20+00	\N	21	\N
1016	Argos Greek & Pizza	n	N	0	0	2021-04-21 11:07:31+00	\N	21	\N
1017	Montako	y	N	0	0	2021-04-26 13:30:43+00	\N	18	\N
1018	Bank Shawarma and Poutine	n	Y	0	0	2021-05-05 10:42:35+00	\N	21	\N
1019	Roulas Jus et Gelato	n	Y	0	0	2021-05-12 14:53:07+00	\N	21	\N
1020	Westboro Subs	n	Y	0	0	2021-05-18 09:12:38+00	\N	21	\N
1021	2King Shawarma and Poutine	y	N	0	0	2021-05-19 09:54:47+00	\N	18	\N
1022	Eddy Authentic Lebanese Cuisine	n	N	0	0	2021-06-29 10:23:24+00	\N	21	\N
1023	Golden Crust	n	Y	0	0	2021-06-30 08:30:10+00	\N	21	\N
1024	Colonnade Pizza	n	N	0	0	2021-07-29 08:52:43+00	\N	21	\N
1025	Colonnade Pizza	n	Y	0	0	2021-07-29 08:54:37+00	\N	21	\N
1027	Colonnade Pizza	n	Y	0	0	2021-07-29 08:55:46+00	\N	21	\N
1028	Colonnade Pizza	n	Y	0	0	2021-07-29 11:33:13+00	\N	21	\N
1029	Cousin Vinny's Pizzeria	n	Y	0	0	2021-08-04 10:26:33+00	\N	21	\N
1030	Restaurant Yotis	n	N	0	0	2021-09-08 06:06:24+00	\N	18	\N
1031	Dunya's Famous Pizza (dropped)	n	N	1	1662170298	2021-09-27 13:18:56+00	\N	21	\N
1032	Poutinerie Quï¿½becurds Hull	n	Y	0	0	2021-10-14 11:06:27+00	\N	21	\N
1033	Nachos Loco Hull	n	Y	0	0	2021-10-14 11:07:01+00	\N	21	\N
1034	Samo's Greek Kitchen	n	Y	0	0	2021-10-15 09:31:03+00	\N	21	\N
1035	Dumpling Bowl	n	Y	1	1757636922	2021-10-19 11:02:38+00	\N	18	\N
1037	Stacked Smoked Meat Grill	n	N	0	0	2021-10-25 10:32:00+00	\N	21	\N
1038	All Out Burger	n	Y	0	0	2021-11-03 13:08:57+00	\N	21	\N
1039	Papa Pizza Chem. de Masson	n	Y	0	0	2021-12-16 09:05:53+00	\N	21	\N
1040	Parï¿½a	n	N	0	0	2022-01-04 12:22:08+00	\N	18	\N
1041	Papa Burger	n	Y	0	0	2022-01-05 08:51:01+00	\N	21	\N
1042	Kabylie Pizza	n	Y	0	1740279886	2022-01-10 13:07:09+00	\N	21	\N
1043	The Cupboard	y	N	0	0	2022-01-12 15:35:43+00	\N	21	\N
1044	The Cupboard	n	Y	0	0	2022-01-17 15:14:40+00	\N	21	\N
1045	Nachos Loco Gatineau	n	Y	0	0	2022-01-27 13:45:40+00	\N	21	\N
1046	Poutinerie Quï¿½becurds Gatineau	n	Y	0	0	2022-01-27 13:49:07+00	\N	21	\N
1047	Le Pierrot	n	N	0	0	2022-02-01 11:34:48+00	\N	21	\N
1048	Jasmine Rice Thai Kitchen	n	N	0	0	2022-03-14 10:20:59+00	\N	21	\N
1049	Chicken Palace	n	N	0	0	2022-03-25 10:05:35+00	\N	21	\N
1050	Crispy's Bank Street	n	Y	0	0	2022-04-11 09:11:29+00	\N	21	\N
1051	Oh My Grill	n	Y	0	0	2022-05-12 10:07:23+00	\N	21	\N
1052	Bellevue Pizza Main	n	N	0	0	2022-05-17 11:17:42+00	\N	21	\N
1053	Bellevue Pizza St Louis	n	N	0	0	2022-05-17 11:20:32+00	\N	21	\N
1054	Papa Grecque Cantley	n	Y	0	0	2022-05-18 13:29:32+00	\N	21	\N
1055	Le SubShop Main	n	N	0	0	2022-06-21 06:34:31+00	\N	21	\N
1056	to be deleted	n	N	0	0	2022-06-21 06:35:53+00	\N	21	\N
1057	Le SubShop St Louis	n	N	0	0	2022-06-23 11:17:19+00	\N	21	\N
1058	Ottawa Liquor Service	n	Y	0	0	2022-08-22 04:53:24+00	\N	21	\N
1059	Golden Center Pizza	n	Y	1	1757635060	2022-08-30 11:55:43+00	\N	21	\N
1060	Dï¿½panneur Gï¿½nï¿½reux	n	Y	0	0	2022-09-12 09:46:27+00	\N	21	\N
1061	Pizza Times	n	N	1	1683067940	2022-09-20 09:29:18+00	\N	21	\N
1062	Milano	n	Y	0	0	2022-09-21 12:42:26+00	\N	21	\N
1063	Milano	n	Y	0	0	2022-10-19 10:28:33+00	\N	21	\N
1064	Vieux Hull Pizza	n	Y	0	0	2022-11-16 12:58:52+00	\N	21	\N
1065	Milano	n	Y	0	0	2022-12-01 13:45:53+00	\N	21	\N
1066	Papa Burger Maloney	n	Y	0	0	2022-12-12 07:30:55+00	\N	21	\N
1067	PoutineZaaa	n	N	0	0	2023-01-13 12:17:47+00	\N	21	\N
1069	Prima Pizza	n	Y	0	0	2023-01-17 14:32:02+00	\N	21	\N
1070	La Nawab V2	n	Y	0	0	2023-01-18 02:13:17+00	\N	18	\N
1071	All Out Burger	n	Y	0	0	2023-02-09 01:23:27+00	\N	18	\N
1072	Lucky Key	n	Y	0	0	2023-02-20 13:26:33+00	\N	21	\N
1073	Ottawa Kabab	n	Y	0	0	2023-03-02 11:22:11+00	\N	21	\N
1074	Pizzalicious	n	Y	0	0	2023-05-05 06:48:14+00	\N	21	\N
1076	Papa Grecque Val-des-Monts	y	N	0	0	2023-07-14 01:20:29+00	\N	18	\N
1078	Maple Delight Pizza	n	N	0	0	2023-07-20 02:46:46+00	\N	18	\N
1079	Kirkwood Pizza	y	N	0	0	2023-08-03 02:10:55+00	\N	18	\N
1080	All Out Burger	n	Y	0	0	2023-10-10 13:45:35+00	\N	18	\N
1081	Milano	n	Y	0	0	2023-12-08 01:10:43+00	\N	21	\N
1082	Milano	n	Y	0	0	2024-01-23 14:50:37+00	\N	21	\N
1083	Souvlaki Souvlaki	n	Y	0	0	2024-01-25 10:03:29+00	\N	18	\N
1084	Milano	n	Y	0	0	2024-06-06 09:39:29+00	\N	21	\N
1085	L'Hibou Qui Rit	n	Y	1	1733013440	2024-07-18 14:12:47+00	\N	21	\N
1086	Milano Prince of Wales	y	N	0	0	2024-08-07 01:25:58+00	\N	18	\N
1087	Milano	n	Y	0	0	2024-08-07 01:26:53+00	\N	18	\N
1088	All Out Burger	n	Y	0	0	2024-08-13 09:51:27+00	\N	18	\N
1089	Milano	n	Y	0	0	2024-09-16 14:39:39+00	\N	21	\N
1090	Oh My Grill Gatineau	n	Y	0	0	2024-09-30 14:13:44+00	\N	21	\N
1091	Mykonos Greek Grill	y	N	0	0	2024-11-08 11:41:23+00	\N	21	\N
1092	Mykonos Greek Grill	n	Y	0	0	2024-11-08 11:43:13+00	\N	21	\N
1093	Mykonos Greek Grill	n	Y	0	0	2024-11-14 02:35:31+00	\N	18	\N
1094	Sushiyana	n	Y	0	0	2024-12-12 12:15:33+00	\N	21	\N
\.


--
-- Data for Name: v1_restaurants_locations; Type: TABLE DATA; Schema: staging; Owner: postgres
--

COPY staging.v1_restaurants_locations (id, address, city, province, zip, latitude, longitude, phone, main_email, active, updated_at) FROM stdin;
72	1615 Orleans Blvd.	10	3	K1C 7E2	45.4609703	-75.52389570000003	(613) 123-4567	cbouzi7039@rogers.com,james1234577@hotmail.com	Y	\N
73	1675 Tenth Line, K4A	9	3	\N	45.4699012	-75.49298650000003	(613) 123-4567	\N	N	\N
79	\N	9	3	\N	45.41108639999999	-75.7068549	\N	\N	N	\N
81	569 Gladstone	9	3	K1R 5P2	45.4093599	-75.70034399999997	(613) 563-9999	support@menu.ca,pizzashark@hotmail.com	N	\N
82	1615 Orleans Blvd.	10	3	K1C 7E2	45.4609703	-75.52389570000003	(613) 590-0372	chris.bouziotas@menu.ca	N	\N
87	500 Hazeldean Rd	4	3	K2L 2B5	45.293396	-75.89394500000003	(613) 831-1121	ha@kanatanoodlehouse.com	N	\N
89	110 Bearbrook Rd	22	3	K1B 5R2	45.431606	-75.56483679999997	(613) 834-0222	\N	Y	\N
90	1615 Orleans Blvd.	9	3	K1C 7E2	45.4609703	-75.52389570000003	(613) 830-1808	\N	Y	\N
91	875 Richmond Rd	9	3	K2A 0G7	45.3792905	-75.77336300000002	(613) 722-9200	tonyho13@sympatico.ca	N	\N
92	223 Laurier Avenue East	9	3	K1N 6P1	45.4259725	-75.681713	(613) 421-2667	iaragi@hotmail.com	N	\N
93	3885 Innes Road	10	3	K1C 1T1	45.4531261	-75.51124879999998	(613) 834-9990	\N	N	\N
94	375 Des Epinettes Ave	10	3	K1E 3E6	45.4657488	-75.49544170000001	(613) 841-1001	menu@mamarosa.ca	Y	\N
95	527 Bronson Ave	9	3	K1R 6J9	45.40598259999999	-75.7025645	(613) 688-5555	Bartours1982@hotmail.com	Y	\N
96	5517 Hazeldean Rd	15	3	K2S 0P5	45.28641090000001	-75.90689520000001	(613) 831-8585	kfrap2011@gmail.com	N	\N
101	350 Booth St	9	3	K1R 7K1	45.4074088	-75.70984950000002	(613) 567-8228	vinh613@gmail.com	Y	\N
109	5669 Bank St	9	3	K4P 1C3	45.2771717	-75.56831649999998	(613) 688-3333	mike@papajoespizza.ca,saad.35@hotmail.com	Y	\N
110	1574 Walkley Rd	9	3	K1V 6P5	45.3768817	-75.64709399999998	(613) 260-3456	mike@papajoespizza.ca,support@menu.ca	N	\N
111	127 Bridge St	14	3	K0A 1A0	45.22310239999999	-76.19494529999997	(613) 256-6000	mike@papajoespizza.ca,support@menu.ca,Alaa.nassar@gmail.com	N	\N
112	2529 Baseline	9	3	K2C 0E3	45.3503526	-75.7820294	(613) 829-5777	corporate@milanopizza.ca	Y	\N
113	523 Gladstone Ave	9	3	K1R 5N9	45.410104	-75.69878849999998	(613) 695-5557	butisi24@yahoo.ca,support@menu.ca,menu@gladstonegoldengrill.com	N	\N
114	14 Main St E	24	3	K7A 1A2	44.8998751	-76.0204693	(613) 663-9348	stefan@menu.ca,chris@menu.ca,razvan@menu.ca	Y	\N
117	984 Merivale Rd	9	3	K1Z 6A4	45.3810159	-75.73321429999999	(613) 728-9700	HouseofLasagna@menu.ca	Y	\N
118	373 Dalhousie St	9	3	K1N 9L3	45.4276174	-75.68988100000001	(613) 789-2239	andrew.scott@franchise.pitapit.com	N	\N
120	1009 Merivale Rd	9	3	K1Z 6A6	45.37942770000001	-75.73308199999997	(613) 727-1222	Najihitti@hotmail.com	N	\N
121	1374 Baseline Rd	9	3	K2C 0A9	45.3624916	-75.73704270000002	(613) 225-8882	chong_lc@hotmail.com	N	\N
122	4000 Bridle Path Dr	9	3	K1T 1Z5	45.3487048	-75.6454005	(613) 526-4666	menu@hungrysammys.com	N	\N
123	530 Rideau St	9	3	K1N 5Z6	45.4320722	-75.67782139999997	(613) 789-8888	menu@newshawarmaking.com	N	\N
124	251 Montreal Rd	9	3	K1L 6C4	45.43629120000001	-75.66125970000002	(613) 749-1555	menu@eastviewpizza.ca	Y	\N
125	411 McArthur Ave	9	3	K1K 1G7	45.4321734	-75.64829069999996	(613) 741-3333	menu@pizzapalaceottawa.com	N	\N
126	159 Montreal Rd	18	3	K1L 6E8	45.4348202	-75.6650942	(613) 746-4843	pierre_sfeir@hotmail.com	N	\N
127	876 Montreal Rd.	9	3	K1K 4L3	45.4461819	-75.63093620000001	(613) 747-4000	corporate@milanopizza.ca	Y	\N
128	293 St Laurent Blvd	9	3	K1K 2Z3	45.4511597	-75.65227070000003	(613) 741-2323	\N	N	\N
130	5929 Jeanne D'Arc Blvd S	9	3	K1C 6V8	45.4648777	-75.54092700000001	(613) 830-8002	\N	Y	\N
131	175, boul Maloney E	21	4	J8P 1B9	45.4840039	-75.64945019999999	(819) 663-6663	menu@pizzaexpressextra.com	N	\N
132	425, boul La V�rendrye E	21	4	J8R 1N2	45.5009185	-75.64253839999998	(819) 643-6433	mozzapizza@live.ca	Y	\N
133	3009 Carling Ave	9	3	K2B 7Y6	45.3551519	-75.80533020000001	(613) 726-6955	tajindiancuisine3009@gmail.com	N	\N
134	6505 Jeanne D'Arc Blvd. N.	10	3	K1C 2R1	45.4792973	-75.53610119999996	(613) 837-8000	houseofpizzaorleans1@gmail.com	Y	\N
135	125 Preston Street	9	3	K1R 7P3	45.4080833	-75.71385579999998	(613) 230-8230	pst_55@hotmail.com	N	\N
136	1055 Somerset St W	9	3	K1Y 3C4	45.4068356	-75.71987360000003	(613) 729-3282	lemongrassthai@msn.com	N	\N
137	662 Somerset St W	9	3	K1R 5K4	45.4114814	-75.70552570000001	(613) 216-1220	menu@yangshengottawa.ca	N	\N
138	210 Somerset St W	9	3	K2P 1P9	45.4172328	-75.69140019999998	(613) 667-4038	anishmehra@hotmail.com	N	\N
140	937 Carling Ave	9	3	K1Y 4E4	45.3953004	-75.7132459	(613) 728-3749	menu@cypressgarden.ca	Y	\N
141	3570 Strandherd Dr	9	3	K2J 4H1	45.2747792	-75.73675789999999	(613) 843-0212	menu@liuscuisine.ca	N	\N
142	2045 Meadowbrook Rd	9	3	K1B 4W7	45.4269641	-75.60101150000003	(613) 741-7662	fadinemr@hotmail.com	Y	\N
143	1443 Ogilvie Rd	9	3	K1J 7P3	45.4319532	-75.61834870000001	(613) 741-7000	nathaliezaher@hotmail.com	Y	\N
144	2006 Robertson Rd	17	3	K2H 1A5	45.3245528	-75.82713530000001	(613) 596-0760	menu@koiasiarestaurant.com	N	\N
145	1433 Woodroffe Ave	17	3	K2G 1W1	45.3419494	-75.7560393	(613) 226-9000	Mrmozz.nepean@gmail.com	Y	\N
146	1610 Merivale Rd	17	3	K2G 4A1	45.3482698	-75.73231799999996	(613) 225-3297	menu@merivalepizzaandwings.com	Y	\N
150	3059 Carling Ave	9	3	K2B 7K4	45.3543897	-75.8071822	(613) 667-2020	shawarmahouse@hotmail.ca	N	\N
151	3059 Carling Ave	9	3	K2B 7K4	45.3543897	-75.8071822	(613) 667-2020	shawarmahouse@hotmail.ca	N	\N
153	425 Donald St	9	3	K1K 1L8	45.428452	-75.64937909999998	(613) 741-7171	menu@dinosanddonalds.com	N	\N
154	2 Woodfield Dr	17	3	K2G 3Y3	45.3379907	-75.72610880000002	(613) 723-5511	menu@winghing.ca	N	\N
155	1234 Merivale Rd.	9	3	K2C 4C3	45.370701	-75.73327999999998	(613) 728-2424	ivan.masrieh@gmail.com,greekos.ca@gmail.com	N	\N
157	1574 Walkley Rd	9	3	K1V 6P5	45.3768817	-75.64709399999998	(613) 523-6666	houseofpizzawalkley@gmail.com	Y	\N
161	1234 Merivale Rd Unit 3	9	3	K2C 4A1	45.3772509	-75.73333660000003	(613) 729-9738	corporate@milanopizza.ca	Y	\N
162	160 Richmond Rd	9	3	K1Z 6W2	45.38275609999999	-75.76989079999998	(613) 728-2422	menu@houseofpizza.ca	N	\N
164	3848 Innes Rd	10	3	K1W 0C8	45.4513594	-75.5152951	(613) 824-8787	corporate@milanopizza.ca	Y	\N
171	25 Tapiola Cres	9	3	K1T 2J7	45.3637273	-75.64710070000001	(613) 737-3888	mhajo@hotmail.com	N	\N
172	385 Tompkins Ave	10	3	K1E 3H4	45.4771557	-75.49815819999998	(613) 834-7800	corporate@milanopizza.ca	Y	\N
173	245, rue de Cannes	21	4	J8T 8C5	45.4902964	-75.72394250000002	(819) 246-5252	roulam@hotmail.ca	Y	\N
174	68 Wylie Ave	9	3	K2B 6M4	45.3546217	-75.80658690000001	(613) 828-1610	\N	N	\N
175	201 Marier Ave	18	3	K1L 5R6	45.4391568	-75.66331509999998	(613) 742-4411	samir1boulos@hotmail.com	Y	\N
177	169 York St	9	3	K1N 5T4	45.4298979	-75.68913650000002	(613) 232-3100	funkyimran57@hotmail.com	N	\N
178	2908 St. Joseph Blvd	10	3	K1C 1G8	45.474616	-75.51795099999998	(613) 824-1240	owlying@hotmail.com	N	\N
179	988 Wellington St	9	3	K1Y 2X8	45.4056143	-75.72274279999999	(613) 722-5995	johnliu.no1@gmail.com	Y	\N
180	250 Centrum Blvd	10	3	K1E 3J1	45.4803716	-75.51053130000003	(613) 590-9777	medfalah132@hotmail.com	N	\N
181	2 Woodfield Dr	9	3	K2G 3Y3	45.3422125	-75.78528119999999	(613) 727-0900	daniela1@rogers.com,corporate@milanopizza.ca	N	\N
182	117 Rue Front	19	4	J9H 5S9	45.4042706	-75.85471619999998	(819) 682-2222	menu@riverviewpizza.ca	N	\N
183	134, rue Principale	23	4	J9H 4G8	45.3950239	-75.84296110000002	(819) 684-4372	marwabitar1@gmail.com	Y	\N
184	574, boul Saint-Joseph	21	4	J8Y 4A5	45.4499326	-75.73586929999999	(819) 777-1777	Rabih2015_01@hotmail.com	Y	\N
186	1730 Montreal Rd	22	3	K1J 6N3	51.8642449	-2.2381560000000036	(613) 421-3301	\N	N	\N
187	1423 Woodroffe Ave	17	3	K2G 1V9	45.3431606	-75.75701909999998	(613) 228-2228	tony74f@hotmail.com	Y	\N
188	342 Richmond Rd	9	3	K2A 0E7	45.3920032	-75.75410640000001	(613) 722-3474	accounts@expeditionshoppe.com	N	\N
189	102B McEwen Ave	9	3	K2B 5K7	45.371069	-75.78195289999996	(613) 726-0726	\N	Y	\N
190	2430 Bank St	9	3	K1V 0T7	45.3540286	-75.6489148	(613) 738-1555	corporate@milanopizza.ca	Y	\N
191	2750-B Iris St	9	3	K2C 1E6	45.3479058	-75.7872074	(613) 695-3144	benjis.restaurant@gmail.com	N	\N
192	94 Montreal Rd	18	3	K1L 6E6	45.4340486	-75.66678519999999	(613) 562-0848	menu@lorenzosottawa.ca	Y	\N
193	211 Gilmour St	9	3	K2P 0N9	45.4164246	-75.68979360000003	(613) 238-3333	houseofgeorgiepizza@gmail.com	Y	\N
194	408, boul La V�rendrye E	21	4	J8P 7T7	45.5009375	-75.64156300000002	(819) 669-6660	andrehawat@hotmail.com	N	\N
195	455, boul Riel	21	4	J8Z 2J8	45.4649868	-75.7730795	(819) 772-0001	najidergham@hotmail.com	N	\N
197	5935 Jeanne D'Arc Blvd S	10	3	K1C 2N1	45.4658864	-75.5419468	(613) 834-0503	menu@lunasole.ca	N	\N
198	726 Somerset St W	9	3	K1R 6P8	45.4104408	-75.70788570000002	(613) 230-6815	weisnoodlehouse@gmail.com	N	\N
199	725 Somerset Street West	9	3	K1R 6P7	45.4091481	-75.71156100000002	(613) 237-8080	georges.labaki@hotmail.com	Y	\N
200	1661 Carling Ave	9	3	K2A 1C4	45.379803	-75.74900630000002	(613) 729-5929	GeorgiesOnCarling@gmail.com	Y	\N
201	149 Kent Street	9	3	K1P 5P3	45.4189044	-75.70211	(613) 234-1224	\N	N	\N
202	2241 St Laurent Blvd	9	3	K1G 1B1	45.3888834	-75.61745619999999	(613) 523-0002	hturkie@hotmail.com	N	\N
203	193 King Edward Ave	9	3	K1N 7L6	45.432631	-75.68889719999999	(613) 321-4122	menu@champathai.ca	Y	\N
204	14 Main St E	24	3	K7A 1A2	44.8996881	-76.0220928	(613) 283-3333	corporate@milanopizza.ca	Y	\N
205	777 Principale St	28	3	K0A 1M0	45.3154268	-75.08935300000002	(613) 764-4442	milanocasselman10@gmail.com	Y	\N
206	3796 Champlain Rd	35	3	K0A 1E0	45.4350945	-75.15841499999999	(613) 487-2227	corporate@milanopizza.ca	Y	\N
207	339 Dalhousie St	9	3	K1N 7G1	45.4283771	-75.6905501	(613) 241-3334	corporate@milanopizza.ca	Y	\N
208	2241 St Laurent Blvd	9	3	K1G 1B1	45.3903342	-75.61827599999998	(613) 521-6661	corporate@milanopizza.ca	Y	\N
209	990 River Rd	9	3	K4M 1B9	45.2340721	-75.67734139999999	(613) 692-9292	corporate@milanopizza.ca	Y	\N
210	44 Seneca St	9	3	K1S 4X3	45.3915082	-75.68999780000001	(613) 730-6800	corporate@milanopizza.ca	Y	\N
211	3050 Woodroffe Ave	17	3	K2J 4G3	45.28453349999999	-75.72376889999998	(613) 843-8033	corporate@milanopizza.ca	Y	\N
212	3987 Riverside Dr	9	3	K1V 1C1	45.3330698	-75.69243069999999	(613) 736-5678	menu@phothudo.com	N	\N
213	2600 County Rd 43	25	3	K0G 1J0	45.018657	-75.65650670000002	(613) 258-4050	corporate@milanopizza.ca	Y	\N
215	335 Montreal Rd	26	3	K6H 1B6	45.0184577	-74.71101049999999	(613) 938-9300	corporate@milanopizza.ca	Y	\N
216	600 terry fox drive	4	3	K2L 4B6	45.3008987	-75.90632949999997	\N	stefan@menu.ca	N	\N
217	606 Rideau St	9	3	K1N 6A2	45.4330193	-75.67519089999996	(613) 562-2563	hunku79@gmail.com	N	\N
218	610 Rideau St	9	3	K1N 6A2	45.4330787	-75.67505249999999	(613) 789-2220	madhubancuisine@gmail.com	N	\N
219	331 Elgin St	9	3	K2P 1M5	45.415907	-75.68852040000002	(613) 233-5000	lemongrasselgin@gmail.com	Y	\N
221	408 McArthur Ave	9	3	K1K 1G8	45.4319639	-75.6486147	(613) 842-9153	subra_deb@hotmail.com	N	\N
223	1128 Cadboro Road	9	3	K1J 7R1	45.4306753	-75.6208105	(613) 695-6333	\N	N	\N
224	2225 St Laurent Blvd	9	3	K1G 1B1	45.3903342	-75.61827599999998	(613) 737-3198	menu@ginkgogarden.ca	Y	\N
225	139, rue Principale	21	4	J9H 3M6	45.3951129	-75.84215999999998	(819) 685-5555	Ziadkanaan2013@gmail.com	Y	\N
226	331, rue Laviolette	21	4	J8P 5Z1	45.4887715	-75.66057039999998	(819) 643-3363	\N	N	\N
227	511, rue A-Gibeault	21	4	J8R 2V9	45.50637709999999	-75.63638980000002	(819) 643-0091	e.alkoutsi@gmail.com	N	\N
228	9, rue Therien	21	4	J8Y 1H7	45.4544043	-75.75187399999999	(819) 771-4444	restaurantchezgerry@gmail.com	Y	\N
229	8154 Jeanne D'Arc Blvd N	10	3	K1E 2H5	45.4877765	-75.51130899999998	(613) 834-1110	shawks32@hotmail.com	N	\N
230	500 Old St Patrick St	9	3	K1N 9G4	45.4347612	-75.68369189999999	(613) 789-5777	ottawarony@hotmail.com	N	\N
231	22, rue des Flandres	21	4	J8T 4R7	45.4705017	-75.71866720000003	(819) 246-0000	osman_moudi@hotmail.com	Y	\N
232	285 Greenbank Rd	9	3	K2H 8K9	45.3241653	-75.77747790000001	(613) 828-2168	davesitu@me.com	N	\N
234	147, boul d'Europe	21	4	J9J 0A5	45.4422092	-75.7953895	(819) 595-6789	raed.ibrahim@hotmail.ca	N	\N
235	1581 Greenbank Rd	9	3	K2J 4Y6	45.27395500000001	-75.74704629999997	(613) 843-9559	chilliesindian@gmail.com	N	\N
236	201 rue Eddy	21	4	J8X 2X5	45.431956	-75.7205128	(819) 525-4449	unclejohnda@gmail.com	N	\N
237	395 Bank St	9	3	K2P 1Y3	45.4133316	-75.69448439999996	(613) 233-1282	houseinifadel@hotmail.com	Y	\N
238	5511 Manotick Main St	9	3	K4M 1B2	45.2271015	-75.68623539999999	(613) 692-7888	Zeintahan@hotmail.com	Y	\N
239	2567 Baseline Rd	9	3	K2H 7B3	45.3413653	-75.78733669999997	(613) 828-7926	449111756@qq.com	Y	\N
240	1133 St Laurent Blvd	9	3	K1K 3B5	45.4246312	-75.63731380000002	(613) 747-3770	raj_chanchlani@yahoo.com	N	\N
241	2219 Arch St	9	3	K1G 2H5	45.389173	-75.63057559999999	(613) 521-8500	moe_335@hotmail.com	N	\N
242	195 Rue Principale	23	4	J9H 6J8	45.39567630000001	-75.83440200000001	(819) 682-7777	gussader@hotmail.com	N	\N
245	26 Bridge St	29	3	K7C 2V1	45.1373484	-76.143032	(613) 253-0777	corporate@milanopizza.ca	Y	\N
246	60 Harmer Ave	9	3	K1Y 3H9	45.3968006	-75.73268940000003	(613) 722-6002	you.karkache@gmail.com	Y	\N
247	1 Rue Hobin Unit 5	9	3	K2S 1C3	45.264576	-75.9288004	(613) 836-5151	sargon2222@hotmail.ca	N	\N
248	471 Hazeldean Rd	4	3	K2L 4B8	45.298156	-75.88869649999998	(613) 831-3355	corporate@milanopizza.ca	Y	\N
249	73, boul de la Gappe	21	4	J8T 0B5	45.4654549	-75.71689099999998	(819) 243-0500	\N	N	\N
251	1580 Dundas St	31	3	L4X 1L4	43.6135921	-79.57869519999997	(905) 276-5888	\N	N	\N
253	1671 Carling Ave	11	3	K2A 1C4	45.379684	-75.7493245	(613) 729-6018	ottawashogun@gmail.com	N	\N
254	1896 Prince of Wales Dr	9	3	K2C 1P5	45.3539414	-75.70402769999998	(613) 224-7700	hawjins84@gmail.com	N	\N
255	422 Bronson Ave	9	3	K1R 6J6	45.4086956	-75.70418059999997	(613) 231-1000	scottd.budden@gmail.com	Y	\N
256	1896 Prince of Wales Dr	9	3	K2C 3W9	45.3539414	-75.70402769999998	(613) 274-0404	yan867297@gmail.com	N	\N
257	3679 Riverside Dr	9	3	K1V 1G8	45.3434587	-75.69090770000003	(613) 260-8555	riversidepizzathebest@gmail.com	Y	\N
258	250 Centrum Blvd	9	3	K1E 3J1	45.48028859999999	-75.51064819999999	(613) 834-0088	jackchung@sawasushi.ca	N	\N
259	1001 Queen Elizabeth Drive	9	3	K1S 5K7	45.3963486	-75.70570190000001	(613) 567-2254	\N	N	\N
260	1440 Rue de l'Eglise	\N	\N	H4L 2H3	\N	\N	(514) 519-4372	\N	N	\N
262	4-2437 Finch Ave W	30	3	M9M 2E7	43.7503344	-79.55021499999998	(416) 749-9943	\N	N	\N
263	1009 Merivale Rd	9	3	K1Z 6A6	45.3794153	-75.73306769999999	(613) 224-2242	Najihitti@hotmail.com	N	\N
264	108, boul Lorrain	21	4	J8P 2E7	45.494982	-75.6073834	(819) 643-2911	crystal_geinoz@hotmail.com	Y	\N
265	650 Woodlawn Rd W	33	3	N1K 1B8	43.5426224	-80.30762429999999	(519) 780-1144	\N	N	\N
273	1598 Cyrville Rd	22	3	K1B 3L8	45.4181403	-75.61058630000002	(613) 744-2865	sam_hakw@yahoo.com	N	\N
274	1200 Prince of Wales	9	3	K2C 3Y4	45.3745397	-75.708594	(613) 521-0800	houseofgreek@hotmail.com	N	\N
275	7772 Jeanne d'Arc Blvd	9	3	K1C 2R5	45.4823145	-75.52763859999999	(613) 830-3276	pizzatony51@gmail.com	Y	\N
276	1441 Ogilvie Rd.	9	3	K1J 7P3	45.4316287	-75.61811260000002	(613) 740-0001	\N	N	\N
277	3415 Dixie Rd Unit 4A	31	3	L4Y 2B1	43.6178379	-79.5951579	(905) 232-3288	\N	N	\N
278	1300 Finch Ave W	30	3	M3J 3K2	43.7641379	-79.4896516	(647) 430-7218	\N	N	\N
280	685 Fischer Hallman Rd, Unit G	34	3	N2E 4E9	43.415624	-80.51078640000003	(519) 576-9996	\N	N	\N
281	1105 Cobden Rd	9	3	K2C 2Z1	45.3521753	-75.77785440000002	(613) 820-5040	melindaramadan@sympatico.ca	N	\N
283	583 College St.	12	3	M6G 1B2	43.6552566	-79.41328659999999	(416) 532-1250	info@porteree.com	N	\N
284	26 Northside Rd	9	3	K2H 5Z6	45.3285595	-75.81673080000002	(613) 721-6666	miki_kelman@yahoo.ca	N	\N
285	2895 Bank St	9	3	K1T 1G3	45.3486409	-75.6269069	(613) 739-6363	\N	N	\N
286	1768 St. Clair Ave W	12	3	M6N 1J3	43.6740406	-79.4611122	(416) 519-9979	jnray3377@gmail.com	Y	\N
287	373 Somerset St W	9	3	K2P 0K1	45.41529990000001	-75.69670739999998	(613) 233-3399	linda52580@yahoo.com	N	\N
288	1581 Bank Street	9	3	K1H 7Z3	45.3792048	-75.6676142	(613) 244-5775	\N	N	\N
289	1611c Bank Street	9	3	K1V 7Y8	45.3783144	-75.6667544	(613) 670-0000	radaideh@ggctgroup.com	N	\N
290	1949 Finch Ave W. Unit C	30	3	M3N 2V3	43.7615377	-79.4110794	(647) 430-5790	\N	N	\N
291	2446 Bank St	9	3	K1V 1A4	45.3526315	-75.64687090000001	(613) 737-2121	bassamnaanoua@hotmail.ca	N	\N
292	4055 Carling Ave Unit 3	9	3	K2K 2A4	45.3380829	-75.90774479999999	(613) 270-8866	hamidmehdipour@hotmail.com	N	\N
293	2677 Alta Vista Road	9	3	K1V 7T5	45.3728114	-75.6642094	(613) 731-0666	arianakababhouse@gmail.com	N	\N
294	800 Hunt Club Rd	9	3	K1V 1C3	45.3444296	-75.66635200000002	(613) 521-1230	hui3820@hotmail.com	Y	\N
295	1755 St Laurent Blvd	9	3	K1G 3V4	45.404943	-75.62637519999998	(613) 739-8833	\N	N	\N
296	3891 Innes Rd	10	3	K1C 1T1	45.43437549999999	-75.55858849999998	(613) 824-9999	chun3260@hotmail.com	N	\N
297	87 Boulevard des Laurentides	57	4	H7G 1B4	45.5625293	-73.6833825	(450) 933-9949	\N	N	\N
298	2270 Markham Rd	32	3	M1B 2W4	43.8109992	-79.24305199999998	(416) 754-8188	\N	N	\N
299	141 Cartwright Ave	30	3	M6A 1V4	43.72116399999999	-79.46853190000002	(647) 344-7933	miketran200313@yahoo.ca	N	\N
300	1380 Notre Dame	36	4	H8S 2C8	45.4349028	-73.67543169999999	(514) 634-1011	restaurantpizzeriatoto@bellnet.ca	N	\N
303	2564 St. Joseph Blvd	10	3	K1C 1G3	45.4706237	-75.5257494	(613) 837-6600	nashs63@yahoo.com	N	\N
304	4055 Carling Ave	4	3	K2K 2A4	45.3380829	-75.90774479999999	(613) 270-1122	niyuxing33@hotmail.com	N	\N
305	591 March Rd	4	3	K2K 2M5	45.3475964	-75.92328850000001	(613) 599-0090	tej@urbanturbankanata.ca	N	\N
306	1 Tartan Drive	\N	\N	K2J 2W7	\N	\N	(613) 825-6565	\N	N	\N
307	1383 Clyde Ave	9	3	K2G 3H7	45.3596447	-75.73838460000002	(613) 225-5225	\N	N	\N
310	1991-A Finch Ave W	12	3	M3N 2V3	43.7569679	-79.51968720000002	(416) 746-8899	phanthai@hotmail.com	N	\N
311	1580 Merivale Rd	9	3	K2G 4B5	45.351346	-75.73451039999998	\N	\N	N	\N
312	1134 Cadboro Rd	9	3	K1J 9K4	45.4309766	-75.62106599999998	(613) 564-9888	mikisitu9138@gmail.com	Y	\N
313	1589 Bank St	9	3	K1H 7Z3	45.3788505	-75.66753599999998	(613) 260-3893	\N	N	\N
314	1060 St Laurent Blvd	9	3	K1K 3B4	45.4269109	-75.6389322	(613) 745-1791	brotherwu@gmail.com	N	\N
315	5831 Boul. Monk	20	4	H4E 3H2	45.4599914	-73.59671000000003	(514) 762-0001	soufanh@gmail.com	N	\N
316	178 McArthur Ave	9	3	K1L 6P9	45.431062	-75.66265750000002	(613) 695-0868	dubianbozi@hotmail.com	N	\N
317	124 Chestnut St	12	3	M5G 1R3	43.6550717	-79.38606849999996	(416) 506-1725	\N	N	\N
318	6-4055 Carling Ave.	4	3	K2K 2A4	45.3380829	-75.90774479999999	(613) 963-0625	indianpunjabiclayoven@gmail.com	Y	\N
319	3549 Av Lacombe	20	4	H3T 1M2	45.497133	-73.62314630000003	(514) 739-1817	a_zihri@hotmail.com	N	\N
320	4886 Boul. Saint Charles	38	4	H9H 3E2	45.4667829	-73.8744848	(514) 626-1626	\N	N	\N
321	683 Bronson Ave	9	3	K1S 2B9	45.4022177	-75.70025579999998	(613) 234-1377	Ja.newton@sympatico.ca	N	\N
322	2701 St Joseph Boul	9	3	K1C 1G4	45.47202129999999	-75.5230932	(613) 837-0518	easterncity@sympatico.ca	N	\N
323	121 Preston St	9	3	K1R 7P3	45.4083489	-75.71417529999997	(613) 421-1777	charmthaicuisineottawa@gmail.com	Y	\N
324	2916 Carling Ave	9	3	K2B 7J7	45.3566776	-75.80098959999998	(613) 695-1818	akbariozair@hotmail.com	N	\N
325	491 Somerset St W	9	3	K1R 5J7	45.4138672	-75.70031670000003	(613) 233-2320	dvreco@yahoo.com	N	\N
326	834 Clyde Ave	9	3	K1Z 5A1	45.3778429	-75.74953540000001	(613) 761-7488	alsdiner@on.aibn.com	N	\N
327	449 McArthur Ave	9	3	K1K 1G3	45.4325741	-75.64442500000001	(613) 741-4011	lailaichinesefood@gmail.com	N	\N
328	6179 Perth St.	37	3	K0A 2Z0	45.1936207	-75.83958949999999	(613) 838-4334	corporate@milanopizza.ca	Y	\N
329	270, boul Labelle	41	4	J7A 2H4	45.6272802	-73.80747439999999	(450) 971-5749	jardinthai@videotron.ca	N	\N
330	208, ave Dorval	39	4	H9S 3H3	45.4417761	-73.7403506	(514) 631-0631	\N	N	\N
331	\N	\N	\N	\N	\N	\N	\N	\N	N	\N
332	1021 Cyrville Rd	9	3	K1J 7S4	45.4256693	-75.63800700000002	(613) 741-7888	rostamp@hotmail.com	N	\N
333	30, rue de Valcourt, unit� 30	21	4	J8T 8G8	45.4924201	-75.70745899999997	(819) 815-1577	tonimontana630@hotmail.com	N	\N
334	280 Metcalfe	9	3	K2P 1R7	45.4157708	-75.6916205	(613) 237-3179	\N	Y	\N
335	727 Churchill Ave	9	3	K1Z 5G7	45.3811303	-75.74700139999999	(613) 688-4444	rupinder.pal@hotmail.com	N	\N
336	261 Centrepointe Dr	9	3	K2G 6E8	45.3391161	-75.77109889999997	(613) 727-1898	wingwahottawa@gmail.com	N	\N
337	778 Somerset St W	9	3	K1R 6R1	45.4099259	-75.70975039999996	(613) 237-3002	allannguyen79@hotmail.com	Y	\N
339	1 Rideaucrest Drive	17	3	K2G 6A4	45.2847677	-75.7225257	(613) 843-7220	gtracey@hotmail.com	N	\N
340	1716 Montreal Rd	9	3	K1J 6N5	45.4459007	-75.6111489	(613) 594-3333	cheezypizza@hotmail.ca	N	\N
341	2130 Robertson Rd	9	3	\N	45.32131469999999	-75.8351654	\N	\N	N	\N
342	4742, ch de la Cote-des-Neiges	20	4	H3V 1G2	45.4956007	-73.61069780000003	(514) 341-1222	vanessalambert1978@gmail.com	N	\N
343	343, boul Greber	21	4	J8T 5R3	45.4787804	-75.70098439999998	(819) 568-2088	zhiyesitu@gmail.com	N	\N
344	351 Montreal Rd	18	3	K1L 6B1	45.43806840000001	-75.65603599999997	(613) 288-1333	\N	Y	\N
345	11729 Jasper Ave	40	11	T5K 0N4	53.54077239999999	-113.5239671	(780) 705-7555	aliyapici@hotmail.com	N	\N
346	253, boul Maloney	21	4	J8P 1C3	45.4844706	-75.64674109999999	(819) 643-0000	kaled.alkhatib11@gmail.com	Y	\N
347	5248 ch Queen Mary	20	4	H3W 1X5	45.5624995	-73.68330479999997	(514) 486-5479	\N	N	\N
348	232 Rue Jean Talon Ouest	20	4	H2R 2X5	45.5624995	-73.68330479999997	(514) 342-4443	\N	N	\N
349	2266, ch de Chambly	44	4	J4J 3Z3	45.5262743	-73.47416709999999	(450) 646-0007	\N	N	\N
350	3628, av des �glises	42	4	G6X 1X2	46.718089	-71.2682767	(418) 832-4000	\N	Y	\N
351	11819 40 Ave NW	\N	\N	T6J 0R8	53.4762103	-113.53832510000001	(780) 944-9696	rojhat98@gmail.com	N	\N
352	110 rue Eddy	21	4	J8X 2W5	45.4284957	-75.72006679999998	(819) 770-1111	epiceriepoukham@hotmail.com	N	\N
353	123 rue Saint Pas-Vrais	43	4	J6Y 1K8	45.69916010000001	-73.81189039999998	(450) 456-4567	\N	N	\N
354	81 Holland Ave	9	3	K1Y 0Y1	45.400971	-75.73250410000003	(613) 722-4800	alsbeiti@hotmail.com	N	\N
355	1315 Richmond Road	9	3	K2B 8J7	45.3679932	-75.7860202	(613) 596-6661	\N	N	\N
356	2182 Marie-Victorin	19	4	J3X 1R4	46.7780401	-71.26005420000001	(450) 929-4929	\N	N	\N
357	106 - 180 Lees Ave	9	3	K1S 5J6	45.4155124	-75.67124469999999	(613) 569-6969	leesgreekandpizza@gmail.com	N	\N
358	212 Bank St	9	3	K2P 1X1	45.4171473	-75.6980446	(613) 695-4372	omid_shno@yahoo.com	N	\N
359	2133 Jane St	30	3	M3M 1A2	43.7198443	-79.50831849999997	(416) 240-7738	greenpower68@gmail.com	N	\N
360	6500 Russell Rd	67	3	K0A 1K0	45.3691913	-75.45591460000003	(613) 822-0893	joe.carlsbadpizza@yahoo.com	N	\N
361	202 Bank St	9	3	K2P 2H6	45.4175652	-75.69826899999998	(613) 234-0888	wei-zhong150@hotmail.com	N	\N
362	320 Bank St	\N	\N	K2P 1Y1	45.4143511	-75.69568079999999	(613) 234-6336	pizzapie241@rogers.com	Y	\N
364	2318 Danforth Ave	12	3	M4C 1K7	43.715077	-79.305245	(416) 551-5758	rozadalipaj@yahoo.com	Y	\N
365	1589 Bank Street	9	3	K1H 7Z3	45.3788366	-75.66739289999998	(613) 565-6666	rifathh@hotmail.com	N	\N
366	223 Jameson Ave.	12	3	M6K 2Y3	43.6403982	-79.43722330000003	(416) 588-7555	\N	N	\N
367	3023 Cedarview Rd	17	3	K2J 4A8	45.2660084	-75.77142959999998	(613) 825-9444	husseinelahmar@gmail.com	N	\N
368	233, boul. St-Anne	19	4	J0N 1H0	45.8503655	-73.49476240000001	\N	\N	N	\N
369	689 E65th Avenue	46	8	V5X 2P7	49.2119569	-123.09157190000002	(604) 325-1301	\N	N	\N
370	244, 70 Shawville Blvd	9	3	T2Y 2Z3	45.4215296	-75.69719309999999	\N	\N	N	\N
371	403 Somerset St W	9	3	K2P 2P5	45.41500749999999	-75.6977033	(613) 237-7812	ranjanthana@gmail.com	N	\N
372	176 Rideau St	9	3	K1N 9P1	45.4272109	-75.68941359999997	(613) 241-1234	stonexzhang@gmail.com	N	\N
373	319 Rideau St	9	3	K1N 5Y4	45.4293221	-75.68475409999996	(613) 218-0984	eaottawa@gmail.com	N	\N
374	1968 Portobello Blvd	10	3	K4A 4A7	45.4669807	-75.46679419999998	(613) 841-2223	rezamusa18@gmail.com	Y	\N
375	291 Queen Mary St	9	3	K1K 1X1	45.4251894	-75.65222349999999	(613) 741-2220	moussa0452@yahoo.ca	N	\N
376	370 Dalhousie St	9	3	K1N 7G2	45.4274885	-75.6900273	(613) 789-1888	bangkokthai.garden@gmail.com	N	\N
377	309 Dalhousie St	9	3	K1N 7E8	45.4291968	-75.69139439999998	(613) 789-8885	khoamedica@gmail.com	N	\N
378	303 St-Patrick St	9	3	K1N 5K4	45.4316588	-75.69130009999998	(613) 860-8888	georgeibrahim500@yahoo.com	N	\N
379	1025, boul du Seminaire N	47	4	J3A 1R7	45.3372638	-73.2676717	(450) 515-9494	ali.hallani@gmail.com	N	\N
380	3005, boul Taschereau	48	4	J4P 2W3	45.4983012	-73.48583020000001	(450) 466-1100	restotassot@hotmail.com	N	\N
383	4 Lorry Greenberg Dr	9	3	K1G 5H6	45.3698274	-75.6210964	(613) 739-7777	benecipizzeria@gmail.com	Y	\N
384	912 St Laurent Blvd	9	3	K1K 3B3	45.431264	-75.64138220000001	(613) 749-1010	chadi_hage10@hotmail.com	N	\N
385	\N	19	4	\N	52.9399159	-73.5491361	\N	\N	N	\N
386	109 Clarence St	9	3	K1N 5P5	45.4296242	-75.69183579999998	(613) 241-0990	wontonmama@gmail.com	N	\N
387	445 Laurier Ave W	9	3	K1R 0A2	45.4168524	-75.70352109999999	(613) 695-5588	orchid_sushi@yahoo.ca	Y	\N
389	2630, rue Dessaulles	50	4	J2S 2V4	45.6220643	-72.95652009999998	(450) 773-8533	khanhamyal91@gmail.com	N	\N
391	157, rue Saint-Jacques	47	4	J3B 2K2	45.3061326	-73.256101	(450) 358-1118	marios157@hotmail.ca	N	\N
392	1555 boul Provencher	52	4	J4W 1Z3	45.4733193	-73.47480919999998	(450) 672-6112	amandeep.singh06@hotmail.com	Y	\N
394	3140, ch de Chambly	44	4	J4L 1N5	45.5369442	-73.51071309999998	(450) 670-4342	\N	Y	\N
395	2860, rue de lyon	44	4	J4L 2V4	45.5144023	-73.46338270000001	(450) 670-4088	\N	N	\N
396	50 Main Street S	55	3	K0C 1A0	45.3091971	-74.63515840000002	(613) 642-7492	mikeatmilanos@hotmail.com	N	\N
397	272 Dalhousie St	9	3	K1N 7E6	45.429951	-75.69217070000002	(613) 860-9898	corrinachen.chen@gmail.com	N	\N
398	380, Route 132, St-Constant Suite 220	20	4	J5A 2L5	45.3920205	-73.57909380000001	(450) 635-4433	pshorros@yahoo.ca	N	\N
399	Grande Allee	53	4	J4T 2V5	45.4682008	-73.43333000000001	(450) 321-2352	hussain56@live.ca	N	\N
400	1016 Boulevard Taschereau	54	4	J5R 2E4	45.4131837	-73.49206290000001	(450) 286-1917	\N	N	\N
401	3018 St Joseph Boulevard	10	3	K1E 1E1	45.476845	-75.51394700000003	(613) 841-8181	greekexpress@hotmail.ca	N	\N
402	868 Eglington Ave W.	12	3	M6C 2B6	43.7009998	-79.42621659999998	(416) 528-3535	foresthillpizza@yahoo.ca	N	\N
404	2900 Woodroffe Ave	17	3	K2J 4P7	45.2924914	-75.72799880000002	(613) 440-5788	nenn646@gmail.com	N	\N
405	62 Main St	9	3	K1S 1B6	45.4126257	-75.68011009999998	(613) 565-0341	orxanmahammad@gmail.com	N	\N
406	6497, rue Beaubien Est	20	4	H1M 1B1	45.5871915	-73.5613821	(514) 313-6291	laura_paniagua513@hotmail.com	Y	\N
407	170 Lees Ave	9	3	K1S 5G5	45.4145464	-75.6714776	(613) 321-3111	cosmomartt@hotmail.com	N	\N
408	173 Hinchey Ave	9	3	K1Y 1L7	45.4072268	-75.73067000000003	(613) 729-4405	nbentivoglio@sympatico.ca	N	\N
409	2010 Trim Rd	10	3	K4A 0G4	45.4705002	-75.4543155	(613) 837-7777	ademh1129@hotmail.com	N	\N
410	49 Raglan S	58	3	K7V 1P8	45.4746949	-76.68756989999997	(613) 432-2020	 michelle.burgess@renfrewkoa.com	N	\N
411	2 Pembroke St ( Highway 17 )	59	3	K0J 1K0	45.6257499	-76.87677869999999	(613) 646-7200	corporate@milanopizza.ca	Y	\N
412	3887, rue Saint-Denis	20	4	H2W 2M2	45.51998	-73.57384809999996	(514) 499-0446	\N	N	\N
413	1970 Trim Rd	10	3	K4A 3P8	45.4715315	-75.45489450000002	(613) 830-8811	elita0303@yahoo.com	Y	\N
414	8200, boul tashereau	52	4	J4X 2S6	45.4491816	-73.46969260000003	(450) 465-8388	info@resto-mingchuan.com	N	\N
415	2550, boul Lapini�re	52	4	J4Z 2M2	45.4682713	-73.46253769999998	(450) 678-9322	abdul.a.choudhury@gmail.com	Y	\N
416	245 Laurier Ave	9	3	K1P 5J6	45.4195157	-75.69685909999998	(613) 695-6966	rgt@fatalberts.ca;kanishkaw@fatalbertsralphs.com	N	\N
417	7763, boul Newman	60	4	H8N 1X7	45.4376441	-73.62426540000001	(514) 363-8888	\N	N	\N
418	272 boul Sir-Wilfrid-Laurier	61	4	J3H 3N8	45.5620079	-73.19053889999998	(450) 464-8822	\N	N	\N
419	2046, rue Lapierre	60	4	H8N 2S2	45.4368219	-73.6150237	(514) 595-3444	info@souslepalmier.ca	Y	\N
421	3753, rue Ontario E	20	4	H1W 1S2	45.5467664	-73.54397569999998	(514) 521-2779	\N	N	\N
422	2685, avenue Van Horne	20	4	H3S 1P6	45.5088042	-73.62475410000002	(514) 344-5151	erikeli313@gmail.com	N	\N
423	1040, boulevard des Laurentides	57	4	H7G 2W1	45.5748007	-73.69743879999999	(450) 933-6999	\N	N	\N
424	\N	11	3	\N	45.4215296	-75.69719309999999	\N	\N	N	\N
425	267 Greenbank Rd	9	3	K2H 8K9	45.3238707	-75.77790279999999	(613) 828-2874	zeyad.kassis.ca@gmail.com	N	\N
426	9-4055 Carling Ave	4	3	K2K 2A4	45.3380829	-75.90774479999999	(613) 270-8999	leo801020@hotmail.com	N	\N
427	173, rue Saint Hubert	57	4	H7G 2Y3	45.5642874	-73.68345590000001	(450) 668-8787	\N	N	\N
428	4319, rue St-Denis	20	4	H2J 2K8	45.5227507	-73.57983990000002	(514) 678-4430	info@tomatopizza.ca	N	\N
429	3751, rue Saint Urbain	20	4	H2W 1T4	45.5139281	-73.57619190000003	(514) 227-1246	haiau_lam@yahoo.ca	N	\N
430	470, boul Harwood	74	4	J7V 7H4	45.3788972	-74.02045429999998	(450) 455-4040	ofarawi@gmail.com	N	\N
431	8200, boulevard Taschereau	52	4	J4X 2S6	45.4491816	-73.46969260000003	(450) 904-0660	\N	N	\N
432	161, rue Ontario Est	20	4	H2X 1H5	45.5131123	-73.56630860000001	(514) 657-7707	ahmed360@live.ca	N	\N
433	2673, c�te Saint Charles	62	4	J7T 2H8	45.4363253	-74.17332620000002	(450) 458-3232	moe.srour@hotmail.com	N	\N
434	48, boul de la Cit�-des-Jeunes	20	4	J7V 8B9	45.4152677	-74.02197389999998	(450) 510-2647	moe.srour69@gmail.com	N	\N
436	2157, boul des Laurentides	57	4	H7M 4M2	45.6106173	-73.73618320000003	(450) 669-4111	alielkerdi@gmail.com	N	\N
438	30 Byward Market	9	3	K1N 7A2	45.4277259	-75.692992	(613) 789-0944	a.karim@hotmail.ca	N	\N
439	132 Bank St	9	3	K1P 5N8	45.4193045	-75.6997078	(613) 286-6138	austinchen@live.ca	N	\N
441	4025 Innes Rd	10	3	K1C 1T1	45.4558772	-75.50618459999998	(613) 234-0234	azatahir@1for1pizza.com	N	\N
442	1574 Walkley Rd	9	3	K1V 6P5	45.3766025	-75.64794710000001	(613) 260-3456	menu@houseofpizzawalkley.com	N	\N
443	527 Bronson Ave	9	3	K1R 6J9	45.40598259999999	-75.7025645	(613) 688-5555	mike@papajoespizza.ca,support@menu.ca	N	\N
447	1828 ave du Mont-Royal E	20	4	H2H 1J1	45.5331962	-73.5741524	(514) 522-3811	bugsad@hotmail.com	N	\N
448	2895 Bank St	9	3	K1T 3M8	45.3608019	-75.65702110000001	(613) 739-6363	nhatnguyen1975@yahoo.com	N	\N
449	773 Bank St	9	3	K1S 3V5	45.4037	-75.68871469999999	(613) 421-6690	dheeraj.achra@gmail.com	N	\N
450	205 Dalhousie St	9	3	K1N 7C9	45.4387051	-75.6552762	(613) 695-7404	pilipili@rogers.com	N	\N
451	1571 Bank St	9	3	K1H 7Z3	45.3796726	-75.66741760000002	(613) 247-8766	\N	N	\N
452	2946 Baseline Rd	9	3	K2H 8T5	45.3356017	-75.80009319999999	(613) 820-9805	edm@fatalberts.ca	N	\N
453	1990 Russell Rd	9	3	K1G 4J6	45.4008417	-75.6241488	(613) 733-5995	\N	Y	\N
454	3915 Champlain Rd	35	3	K0A 1E0	45.4316482	-75.15617499999996	(613) 487-9989	ramigab.bourget@gmail.com	N	\N
455	5195, boul Saint-Laurent	20	4	H2T 1R9	45.5238362	-73.59452220000003	(514) 277-1515	mohsinchw123@hotmail.com	Y	\N
457	2143 Danforth Ave	12	3	M4C 1K1	43.6860159	-79.31126219999999	(416) 916-6438	tontonyton@yahoo.com	N	\N
458	2549 Yonge St	12	3	M4P 2H9	43.7132998	-79.3995817	(416) 322-3267	l.carvalho@bell.net	N	\N
459	937 Danforth Ave	12	3	M4J 1L8	43.6801301	-79.3380133	(416) 469-3777	support@menu.ca	N	\N
460	408 Dalhousie Street	9	3	K1N 9J9	45.4265278	-75.6894165	\N	\N	N	\N
461	2006 Robertson Rd	9	3	K2H 1A5	45.3238718	-75.82709820000002	(613) 422-4122	scottstatham@rogers.com	N	\N
462	4216, boul Saint-Laurent	20	4	H2W 1Z3	45.51802290000001	-73.5817328	(514) 844-4733	\N	N	\N
463	4403, boul St-Laurent	20	4	H2W 1Z8	45.5195835	-73.58485589999998	(514) 670-6770	arie_benhacoun@yahoo.com	N	\N
464	2754 Danforth Street	12	3	M4C 1L7	43.653226	-79.38318429999998	(416) 913-1742	\N	N	\N
466	1176 Danforth Ave	12	3	M4J 1M3	43.6814009	-79.332764	(416) 405-8877	greenladythaichinese@gmail.com	N	\N
468	1078 Danforth Ave	12	3	M4J 1M2	43.653226	-79.38318429999998	(416) 462-9000	\N	N	\N
469	385 Yonge St	12	3	M5B 1S1	43.6588619	-79.38184839999997	(416) 977-8451	thebigslicepizza@gmail.com	N	\N
470	872 Bloor St W	12	3	M6G 1M5	43.6622467	-79.424958	(416) 913-4227	labellamanagua@yahoo.com	N	\N
471	460 Bronson Ave	9	3	K1R 6J6	45.4079566	-75.70388309999998	(613) 565-5554	i_mackie@hotmail.com; alimackie74@hotmail.com	N	\N
472	64 B Queen St E	12	3	M5C 2T3	43.6532385	-79.37551350000001	(416) 368-9988	\N	N	\N
473	6-461 Park Rd S	63	3	L1J 8R3	43.8834696	-78.8676529	(905) 240-5700	fawad_mohammad@hotmail.ca	N	\N
474	2789 Danforth Ave	12	3	M4C 1L9	43.6892937	-79.29631549999999	(647) 341-1313	s.mirza1@yahoo.com	N	\N
475	7163, rue Saint-Hubert	20	4	H2R 2N2	45.5407877	-73.61343499999998	(514) 276-8188	\N	N	\N
476	429A Yonge St	30	3	M5B 1T1	43.6605499	-79.3827344	(416) 977-8989	\N	N	\N
477	915 Watters Rd	9	3	K4A 3K5	45.4839839	-75.47397649999999	(613) 424-2514	rgt@fatalberts.ca	N	\N
483	5303 Canotek Rd	9	3	K1J 9M1	45.4523927	-75.58917209999998	(613) 749-5269	rgt@fatalberts.ca	N	\N
484	471 Cosburn Ave	12	3	M4J 2N5	43.653226	-79.38318429999998	(416) 267-7236	info@corrados.ca	N	\N
485	460 Bronson Ave	9	3	K1R 6J6	45.4079566	-75.70388309999998	(613) 233-5777	i_mackie@hotmail.com	N	\N
486	9715 118 Ave	40	11	T5G 0P4	53.57032539999999	-113.49255929999998	(780) 448-0004	wishah13@hotmail.com	N	\N
487	7610, rue Saint-Hubert	20	4	H2R 2N6	45.5086699	-73.55399249999999	(514) 273-4446	\N	N	\N
488	637 Somerset St W	9	3	K1R 5K3	45.4119697	-75.7048628	(613) 237-7717	Dennis@mekong.ca	N	\N
489	1663 Cyrville Rd	9	3	K1B 3L7	45.4179366	-75.608113	(613) 745-3377	vivo555@hotmail.com	Y	\N
490	1682 Cyrville Rd	9	3	K1B 3L8	45.4175778	-75.60762669999997	(613) 741-2130	louissteakhouse@rogers.com	N	\N
492	1605, rue Dollard	60	4	H8N 1T7	45.4279666	-73.6292712	(514) 564-5449	\N	N	\N
493	80 A Dundas St E	12	3	M5B 2P5	43.6564122	-79.37801589999998	(416) 599-7899	sushistyle@live.com	N	\N
494	5751 Av de Monkland	20	4	H4A 1E8	45.4738975	-73.6246084	(514) 485-9999	basha_monkland@hotmail.com	N	\N
495	898 College St	12	3	M6H 1A4	43.6538897	-79.42558079999998	(416) 537-7133	\N	N	\N
496	\N	20	4	\N	45.5086699	-73.55399249999999	\N	\N	N	\N
497	930 King St W	12	3	M5V 1P5	43.6423272	-79.41115960000002	(416) 603-9992	tomasfood@gmail.com	N	\N
498	423 Queen Street West	12	3	M5V 1P6	43.6488366	-79.39517990000002	(416) 599-2688	\N	N	\N
499	746 Queen St W	12	3	M6J 1E9	43.6459885	-79.4100995	(416) 203-2229	\N	N	\N
500	641 Somerset St W	9	3	K1R 5K3	45.4119366	-75.70496589999999	(613) 321-3669	andyzeng12302001@hotmail.com	N	\N
501	1385 Baseline Rd	9	3	K2C 3G1	45.3626309	-75.7381944	(613) 225-8889	wang1980_ottawa@hotmail.com	N	\N
502	195 Kent St	9	3	K2P 1Z8	45.4174858	-75.7008854	(613) 233-8989	cafesaffron195@gmail.com	N	\N
504	2194 Robertson Rd	9	3	K2H 9J5	45.3187572	-75.8401723	(613) 820-1700	tej@urbanturbankanata.ca	N	\N
505	267 Bay St	9	3	K1R 5Z4	45.4150334	-75.70376490000001	(613) 233-1515	m_ost_bouchi@hotmail.com	N	\N
506	1300 Bank St	9	3	K1S 3Y4	45.3902096	-75.67938760000004	(613) 733-8424	barshadeb7@gmail.com	N	\N
507	323 Burnhamthorpe Rd	69	3	M9B 2A2	43.6488918	-79.5495654	(416) 239-4800	carolinascuisina@gmail.com	N	\N
508	4944 Dundas St W	69	3	M9A 1B7	43.6483207	-79.52935130000003	(416) 236-5400	durongjie2@hotmail.com	N	\N
509	354 Rideau St	9	3	K1N 5Y6	45.4294982	-75.68357300000002	(613) 860-1888	kpboyhua338@gmail.com	N	\N
510	2525, rue Provost	36	4	H8S 1R2	45.4417587	-73.68675089999999	(438) 793-6412	octaviusoctaly@gmail.com	N	\N
511	886 ch de Chambly	44	4	J4H 3M6	45.5353617	-73.49639130000003	(450) 670-7222	shen_yichao@hotmail.com	Y	\N
512	5516 Osgoode Main S	64	3	K0A 2W0	45.1516247	-75.59398650000003	(613) 826-3333	corporate@milanopizza.ca	Y	\N
513	506 Main St W	27	3	K0C 2K0	45.0930233	-75.3540615	(613) 774-2727	corporate@milanopizza.ca	Y	\N
514	33, rue Gamelin	21	4	J8Y 1V4	45.4328434	-75.73336819999997	(819) 771-4441	aliyaali214@hotmail.com	N	\N
515	654 Spadina Ave	12	3	M5S 2H7	43.6633959	-79.40235469999999	(416) 961-2222	sufisayed@hotmail.com	N	\N
516	571 College St	12	3	M6G 1B2	43.6553247	-79.41290049999998	(416) 535-1515	tonywang430@hotmail.com	N	\N
517	692 Yonge St	12	3	M4Y 2A6	43.6676511	-79.38590290000002	(647) 748-8573	kohli_sumit@rocketmail.com	N	\N
518	1950, ch du Fer � Cheval	65	4	J3E 2T6	45.5752707	-73.32786269999997	(450) 922-9494	\N	N	\N
519	50, rue Rachel E	20	4	H2W 1C6	45.5185089	-73.58122909999997	(514) 282-8088	angel3417@hotmail.com	Y	\N
520	1820, ch de Chambly	44	4	J4J 3X5	45.52978359999999	-73.48253369999998	(450) 332-9575	bobby6185@hotmail.com	N	\N
521	5164 Dundas St W	69	3	M9A 1C4	43.6430341	-79.5342349	(416) 236-2627	venka83@hotmail.ca	N	\N
523	2778, boul Jacques Cartier	44	4	J4N 1P8	45.5657638	-73.4501985	(450) 468-9888	miyukisushibar@hotmail.com	N	\N
524	6250, boul Cousineau	53	4	J3Y 8X9	45.4939542	-73.4064826	(450) 486-3939	moumen_med@yahoo.fr	N	\N
525	5250, rue Jarry E	20	4	H1R 3A9	45.5830116	-73.59208920000003	(514) 374-3833	\N	N	\N
527	5836, ch de Chambly	53	4	J3Y 6W9	45.4996574	-73.41002850000001	(450) 462-2424	amirtorbat@yahoo.ca	N	\N
528	4905 Boulevard Lapiniere 1700	52	4	J4Z 0G2	45.4498174	-73.43403169999999	(450) 678-8698	ohayo.info@gmail.com	N	\N
529	123 fake st	9	3	\N	45.4215296	-75.69719309999999	\N	\N	N	\N
530	37, route 132	49	4	J5B 1G9	45.3873914	-73.5692684	(450) 635-1188	\N	N	\N
531	5560 boul Grande All�e	53	4	J3Y 2W3	45.4757901	-73.44439740000001	(450) 341-2888	\N	N	\N
532	125 Preston St	9	3	K1R 7P3	45.4080827	-75.71384189999998	(613) 230-5555	mahde_ghandour@hotmail.com	Y	\N
533	1001 Queen Elizabeth Dr	9	3	K1S 5K7	45.3963486	-75.70570190000001	(613) 234-8156	dimo39@gmail.com	N	\N
534	1421, ch Gascon	43	4	J6X 4L9	45.7099118	-73.65216579999998	(450) 964-8825	restaurantajisushi@gmail.com	N	\N
535	11 Windsor Dr	66	3	K6B 3H5	44.6029415	-75.7021863	(613) 865-8582	\N	N	\N
537	4413 17 Ave SE	68	11	T2A 0T5	51.0378268	-113.97041810000002	(403) 460-8663	303kitchen@gmail.com	N	\N
538	2-4602 17 Ave SE	68	11	T2A 0V1	51.01329029999999	-114.10339520000002	(403) 273-3113	\N	N	\N
539	1A-5268 Marlborough Dr NE	68	11	T2A 5L5	51.0600701	-113.9585212	(403) 264-8488	nataliedaigneault@hotmail.com	N	\N
540	2641, rue Masson	20	4	H1Y 1W1	45.5457034	-73.57635829999998	(514) 223-5150	vang.lam@live.ca	N	\N
541	6078, ch de Chambly	53	4	J3Y 3R5	45.498023	-73.40586819999999	(450) 656-6565	yucarriecl@gmail.com	Y	\N
542	4931, rue Beaubien E	20	4	H1T 1V1	45.5708403	-73.57274029999996	(514) 376-8867	sachisushi@yahoo.com	Y	\N
543	4260, rue Beaubien E	20	4	H1T 1G7	45.5639675	-73.5783098	(514) 508-8798	minatomontreal@yahoo.com	N	\N
544	5320 8 Ave SE	68	11	T2A 3P5	51.0451911	-113.9574409	(403) 273-2692	moedees@hotmail.com	N	\N
545	214, boul Churchill	48	4	J4V 2M4	45.4929769	-73.48548619999997	(450) 923-0110	\N	N	\N
546	8265, boul Taschereau	52	4	J4Y 1A4	45.4464029	-73.47032660000002	(450) 678-0652	relsamra@live.com	N	\N
547	1356 Clyde Ave	9	3	K2C 3Z4	45.36320540000001	-75.74090919999998	(613) 820-8200	yorgosgreekfood@gmail.com	Y	\N
548	2900 Woodroffe Ave	9	3	K2J 4P7	45.292444	-75.72815120000001	(613) 627-3227	johndo@capitalcitysmokehouse.com	N	\N
549	3780 Fallowfield Rd	9	3	K2J 1A1	45.28701359999999	-75.75911559999997	(613) 825-7755	bkstravel1@live.ca	N	\N
550	1022 Pleasant Park Rd	9	3	K1G 2A1	45.3955253	-75.62197259999999	(613) 731-7421	johnjiang14@outlook.com	N	\N
551	1577 Alta Vista Dr	9	3	K1G 0E9	45.4086694	-75.65808429999998	(613) 248-8111	zeiti.n@hotmail.com	N	\N
552	3018 St Joseph Blvd	9	3	K1E 1E1	45.476845	-75.51394700000003	(613) 841-8181	dominican.ottawa@gmail.com	N	\N
553	223 Laurier Ave E	9	3	K1N 6P1	45.4258335	-75.68171410000002	(613) 680-5959	safdar.s@hotmail.com	Y	\N
554	589 Bank St	9	3	K1S 3T4	45.4078273	-75.6909809	(613) 230-4454	rezamusa18@gmail.com	N	\N
557	120, rue Grande-�le	71	4	J6S 3M6	45.2647464	-74.13347139999996	(450) 747-0822	\N	N	\N
558	835, boul Yvon L'Heureux	70	4	J3G 6P5	45.5806145	-73.21464430000003	(855) 665-4873	mackssime@gmail.com	N	\N
559	1165, boul Monseigneur Langlois	71	4	J6S 1B9	45.269918	-74.13630080000001	(450) 747-0311	\N	N	\N
560	425 McArthur Avenue	9	3	K1K 1G5	45.4322851	-75.64686419999998	\N	\N	N	\N
562	654 Montreal Rd	9	3	K1K 0T3	45.4430156	-75.64087660000001	(613) 695-6060	youssef2009@live.ca	N	\N
563	2108 Montreal Rd	9	3	K1J 6M8	45.448064	-75.59234979999997	(613) 745-9894	syszeto2002@hotmail.com	N	\N
564	239, boul St Luc	47	4	J2W 1C6	45.3518267	-73.29316619999997	(450) 348-2020	cjodoin75@hotmail.com	N	\N
565	501, boul du S�minaire N	47	4	J3B 5L7	45.32796279999999	-73.28308290000001	(450) 376-4004	jihad.tarabay123@hotmail.com	N	\N
566	1900 Innes Rd	9	3	K1B 3K5	45.4180182	-75.59605570000002	(613) 746-6111	lazizinc@gmail.com	N	\N
567	5524 Manotick Main St	9	3	K4M 1A4	45.2259821	-75.68547490000003	(613) 692-9999	jptheeban@gmail.com	N	\N
569	1319 Shillington Ave	9	3	K1Z 8A4	45.3791653	-75.7320909	(613) 695-7892	suya_spot@yahoo.com	N	\N
571	344, Mont�e du Comt�	73	4	J7X 1A8	45.2654982	-74.21973659999998	(450) 267-0004	\N	N	\N
572	1227 Kilborn Ave	9	3	K1H 8L4	45.3856616	-75.67074300000002	(613) 738-9999	carlospizzaottawa@gmail.com	N	\N
573	2701 St Joseph Blvd	9	3	K1C 1G4	45.4721189	-75.52299779999998	(613) 837-0518	goodtasteottawa@gmail.com	N	\N
575	2641, rue Masson	20	4	H1Y 1W1	45.5457034	-73.57635829999998	(514) 223-5150	suisensushi-pholamici@hotmail.com	N	\N
576	4303 17 Ave SE	68	11	T2A 0T3	51.0378262	-113.9726417	(403) 457-6200	tonyhage13@gmail.com	N	\N
577	7-5147 20 Ave SE	68	11	T2A 0V8	51.0113474	-114.1093836	(403) 452-3300	samir_ch1966@hotmail.com	N	\N
578	279, boul Jacques-Cartier	85	4	J4N 1P8	45.5960907	-73.4426517	(450) 448-8111	\N	N	\N
579	247-C, boul D'Anjou	76	4	J6J 2R3	45.3594243	-73.7235005	(450) 844-7575	Roland.mark24@gmail.com	N	\N
580	77, boul St-Jean-Baptiste	76	4	J6J 3H7	45.3625252	-73.71364599999998	(450) 716-1213	\N	N	\N
581	2835 - 37 St SW	68	11	T3E 3B3	51.0289832	-114.14116949999999	(403) 242-0468	kostasspoly@gmail.com	N	\N
582	356 Preston St	9	3	K1S 4M6	45.4017825	-75.71026310000002	(613) 749-7490	nick_lafavorita@hotmail.com	N	\N
583	2139 33 Ave SW	68	11	T2T 1Z7	51.0239742	-114.111762	(403) 805-2345	bebetiffany@live.com	N	\N
584	1101 14th St SW	68	11	T3C 1C2	51.04306829999999	-114.09498000000002	(403) 251-5252	babbisingh@tandoorigrill.ca;kuldeep8760@gmail.com;sahibc@tandoorigrill.ca	N	\N
585	72, rue St-Jean-Baptiste unit 123	76	4	J6K 4Y7	45.3616278	-73.7134767	(450) 699-8888	jewel.uddin514@gmail.com	N	\N
586	5611, av de Monkland	20	4	H4A 1E2	45.4755329	-73.62290659999996	(514) 419-6242	rmaadarani@hotmail.com	N	\N
587	2480, ch de Chambly	44	4	J4L 3Y4	45.5242879	-73.46950219999997	(579) 721-7277	michael.boutin@monithq.ca	N	\N
588	3838, boul Taschereau	53	4	J4V 2H9	45.4871921	-73.46998280000003	(450) 443-2647	\N	N	\N
589	1753�Avenue�Rd	30	3	M5M 3Y8	43.7293539	-79.4181893	(647) 350-8573	info@thekathirollexpress.com	N	\N
590	436 14 St NW	68	11	T2N 1Z7	51.0564016	-114.09448409999999	(403) 294-1144	amerqazi@shaw.ca	N	\N
591	4715 17 Ave SE	68	11	T2A 0T9	51.0378339	-113.96592550000003	(403) 273-2222	oilamoussa@hotmail.com	N	\N
592	86 Murray St	9	3	K1N 5M6	45.429737	-75.6936288	(613) 366-2266	info@fiazza.ca 	N	\N
593	3722 Innes Rd	10	3	K1W 0C8	45.4504607	-75.5175701	(613) 837-7388	saigonpho232bank@yahoo.ca	N	\N
594	1-1 Roydon Place	17	3	K2E 1A3	45.3382176	-75.72559569999999	(613) 366-2266	nepean@hardstonesgrill.com	N	\N
595	1434 17 Ave SW	68	11	T2T 0C8	51.0378357	-114.09504500000003	(403) 277-3000	jony@greenchili.ca; info@greenchili.ca; sur.shouvik08@googlemail.com	N	\N
596	643 Shawcliffe Gate SW	68	11	T2Y 1W1	50.911397	-114.07569660000001	(403) 870-6493	info@greatcanadianpizza.com	N	\N
597	643 Shawcliffe Gate SW	68	11	T2Y 1W1	50.911397	-114.07569660000001	(403) 474-8010	info@butterchickenhut.com	N	\N
599	1405 11 St SW	68	11	T2R 1G7	51.0403792	-114.08910730000002	(403) 453-0553	nickdoikas@gmail.com	N	\N
600	4000 Bridle Path Dr	9	3	K1T 1Z5	45.3487777	-75.64604500000002	(613) 680-8484	CALLAMER@GMAIL.COM	Y	\N
601	5630, Grande All�e	53	4	J3Y 1A9	45.4745601	-73.44282350000003	(450) 678-4280	\N	N	\N
602	13201, rue Sherbrooke E	20	4	H1A 1C2	45.6585033	-73.50892970000001	(514) 644-0999	\N	N	\N
603	3023 Cedarview Rd	9	3	K2J 4A8	45.2660084	-75.77142959999998	(613) 825-8080	luckypanda.ca@gmail.com	N	\N
604	223, boul Cartier	70	4	J3G 3R2	45.5535062	-73.21518809999998	(450) 281-1244	xmhassan@gmail.com	N	\N
606	213 Hunter St W	78	3	K9H 2L1	44.3056878	-78.322475	(705) 740-0707	bltheshooter@yahoo.ca	N	\N
607	437 Sunnyside Ave	9	3	K1S 4W9	45.3903642	-75.69291279999999	(613) 733-8226	Jacobhaydar@hotmail.com	N	\N
608	511 E Genessee St	\N	\N	13066	\N	\N	(315) 637-3212	\N	N	\N
609	415 George St N	78	3	K9H 3R4	44.30632	-78.32013419999998	(705) 743-8828	info@realthai-cuisine.com	N	\N
611	437 George St	78	3	K9H 3R4	44.3070739	-78.32021450000002	(705) 874-8882	\N	N	\N
612	527 Bronson Ave	9	3	K1R 6J9	45.40598259999999	-75.7025645	(613) 688-5555	Bartours1982@hotmail.com	Y	\N
613	1574 Walkley Rd	9	3	K1V 6P5	45.3766025	-75.64794710000001	(613) 260-3456	menu@houseofpizzawalkley.com	Y	\N
614	200 Deschamps Ave	9	3	K1L 5Z2	45.4367617	-75.66450099999997	(613) 255-6745	sergevanier@hotmail.com	N	\N
615	180 Preston St	9	3	K1R 7P8	45.4063221	-75.71298990000003	(613) 233-6239	paulajean029@gmail.com	N	\N
616	55 Byward Market Square	9	3	K1N 9C3	45.4270455	-75.69215159999999	(613) 244-1600	kcheatani@sympatico.ca	N	\N
618	365 Westwood Dr	79	3	K9A 4M5	43.9599575	-78.18863290000002	(905) 372-3334	ilirsino@hotmail.com	N	\N
620	4000 Bridle Path Dr	9	3	K1T 1Z5	45.3487777	-75.64604500000002	(613) 680-8484	CALLAMER@GMAIL.COM	Y	\N
623	33, rue de Valcourt, unit� 30	21	4	J8T 8G8	45.4765446	-75.70127230000003	(819) 246-6626	elie.choueiri@hotmail.com	N	\N
624	1741 Cyrville Rd	9	3	K1B 3L8	45.4168284	-75.6026693	(613) 216-4655	akbaritsa@gmail.com	N	\N
626	150 Queen St	80	3	K0L 2H0	44.4289742	-78.2672637	(705) 652-3131	ilirsino@hotmail.com	N	\N
627	512 George St	78	3	K9J 3E5	44.289171	-78.31727289999998	(705) 741-3334	ilirsino@hotmail.com	N	\N
628	476 Brant St	82	3	L7R 2G4	43.3270596	-79.79985970000001	(905) 966-5955	cornedbeefhut@hotmail.com	N	\N
629	3848 Innes Rd	9	3	K1W 0C8	45.4513594	-75.5152951	(613) 830-0888	kcheatani@sympatico.ca	N	\N
630	6075, ch de Chambly	53	4	J3Y 3R6	45.4982189	-73.40642689999999	(450) 656-2131	\N	N	\N
631	113 Peter St	81	3	L1A 1C5	43.9500251	-78.28314560000001	(905) 800-0746	papaspizzaland@hotmail.com	N	\N
633	253 West St N	83	3	L3V 5C9	44.6170072	-79.42694269999998	(705) 325-3771	s3har@hotmail.com	N	\N
635	98 Dunlop St E	84	3	L4M 1A4	44.38940119999999	-79.68662210000002	(705) 503-9300	thepizzajunction@outlook.com	N	\N
636	16 Dunlop St E	84	3	L4M 1A3	44.3893116	-79.68950530000001	(705) 734-2544	bijay@spiceforme.com	N	\N
637	276 Memorial Ave	83	3	L4B 5X6	44.596422	-79.4241773	(705) 327-8677	info@topsinpizza.com	N	\N
638	503 17 Ave SW	68	11	T2S 0A9	50.911397	-114.07569660000001	(403) 457-5557	info@greatcanadianpizza.com	N	\N
639	2695 Marsdale Rd	78	3	K9L 1Y4	44.2966376	-78.3004211	(705) 874-9898	papaspizzaland@hotmail.com	N	\N
642	5-3780 Fallowfield Rd	9	3	K2J 1A1	45.28701359999999	-75.75911559999997	(613) 825-5255	weicen@yahoo.com	N	\N
643	40 prom du portage	21	4	K1A 0N9	45.4249737	-75.71976619999998	(819) 771-7474	arthur@maconneriemac.ca	N	\N
644	79 Montreal Rd	9	3	K1L 6E8	45.4338992	-75.66736830000002	(613) 747-1111	pholaexpress@gmail.com	N	\N
645	1380 Clyde Ave, Unit B	9	3	K2G 3H9	45.3596385	-75.73933590000001	(613) 695-2288	admin@asianstarsrestaurant.com	N	\N
646	1750 Innes Rd	9	3	K1B 3K5	45.4163671	-75.60055829999999	(613) 321-1700	kcheatani@sympatico.ca	N	\N
649	2177 Ogilvie Rd	9	3	K1J 8Y7	45.444798	-75.59490549999998	(613) 745-8880	jaber.abeeat@gmail.com	N	\N
650	Elgin street	9	3	\N	45.4318813	-75.61001299999998	\N	kcheatani@sympatico.ca	N	\N
651	62 Maple Ave	84	3	L4N 1R8	44.3898658	-79.6921213	(705) 797-0052	\N	Y	\N
652	275 Bank St	9	3	K2P 2P1	45.4156771	-75.69638450000002	(613) 233-8717	\N	N	\N
654	328 Centre St S #101	68	11	T2G 4X6	51.0379546	-114.08239600000002	(403) 245-3854	FUJIYAMACALGARY@HOTMAIL.COM	N	\N
656	2138 St Joseph Blvd	10	3	K1C 1E6	45.46672530000001	-75.5345188	(613) 858-1111	linliangzuo@gmail.com	Y	\N
657	1390 Prince of Wales Dr	9	3	K2C 3N2	45.3693009	-75.703418	(613) 225-1238	thai.coconut.ottawa@outlook.com	N	\N
659	300 Sparks St	9	3	K1R 7S3	45.41942479999999	-75.70460049999997	(613) 563-4349	carmellos.sparks@rogers.com	N	\N
660	58 Dunlop St E	84	3	L4M 1A3	44.38929	-79.68704409999998	(705) 727-0189	yan_hoa@yahoo.com	N	\N
661	19 Concession St	86	3	K7K 2A5	44.2417115	-76.49549009999998	\N	\N	N	\N
662	3175 Rutherford Rd, Unit G34	87	3	L4K 5Y6	43.8285372	-79.53815320000001	(905) 660-9899	trung3636@rogers.com	N	\N
663	3175 Rutherford Rd, Unit 74	87	3	L4K 5Y6	43.8285372	-79.53815320000001	(905) 760-2060	quitemaple@yahoo.com	N	\N
664	1775 Carling Ave	\N	\N	\N	\N	\N	(613) 798-8088	\N	N	\N
665	185 Mackenzie Rd	89	24	X0E 0T0	68.3567291	-133.72121949999996	(867) 777-4900	fearlessleader@tonimoes.com	N	\N
666	101 Main St	88	23	Y1A 0G5	60.7478699	-135.14270620000002	\N	fearlessleader@tonimoes.com	N	\N
668	\N	\N	\N	\N	\N	\N	\N	\N	N	\N
669	2006 Robertson Rd	9	3	K2H 1A5	45.3238718	-75.82709820000002	(613) 596-0760	canadathai@yahoo.com	Y	\N
670	411 McArthur Ave	9	3	K1K 1G7	45.4322829	-75.64856850000001	(613) 680-5999	thilee.ram@gmail.com	N	\N
671	2920 Carling Ave	9	3	K2B 7J6	45.3569566	-75.8006618	(613) 828-7812	meeraranjan@gmail.com	N	\N
672	1896 Prince of Wales Dr	9	3	K2C 3W9	45.3537232	-75.70481699999999	(613) 695-9988	kenchowhum@hotmail.com	Y	\N
673	486 B Avenue de Buckingham	93	4	J8L 2G9	45.5871863	-75.41681389999997	(819) 281-9000	elie.choueiri@hotmail.com	N	\N
683	574, boul Saint-Joseph	21	4	J8Y 4A5	45.4499271	-75.73587739999999	(819) 777-7732	joebolahood@hotmail.com	N	\N
684	1980 Ogilvie Rd	9	3	K1J 9L3	45.4318813	-75.61001299999998	(613) 746-7287	gmeast@bellnet.ca	N	\N
686	40 Beech St	9	3	K1S 4M8	45.4012359	-75.70741720000001	(613) 237-1641	seanandnid@gmail.com	Y	\N
687	1519 Merivale Rd	9	3	K2G 3J3	45.3566437	-75.7368017	(613) 226-8812	mochan888888@gmail.com	N	\N
688	1060 Ogilvie Rd	9	3	K1J 7P8	45.4247253	-75.63527110000001	(613) 741-9191	arnab_619@hotmail.com	N	\N
692	169 York St	9	3	K1N 5T4	45.4299517	-75.68922950000001	(613) 232-3100	funkyimran57@hotmail.com	N	\N
694	3-701 Eagleson Rd	4	3	K2M 2G1	45.287869	-75.86776700000001	(613) 592-7888	Caiyang8602@gmail.com	Y	\N
695	730 Bank St	9	3	K1S 2G3	45.40409289999999	-75.68913909999998	(613) 563-4411	Barnali.deb@gmail.com	Y	\N
696	1525 Banks Street	9	3	K1H 7Z1	45.3809452	-75.6688246	(613) 733-0808	tasso@hometownsportsbar.ca	N	\N
697	775 Bank St	9	3	K1S 3V5	45.40361619999999	-75.6885547	(613) 565-8226	T@doughboyz.ca	N	\N
698	2950 Bank Street	9	3	K1T 1N8	45.3463044	-75.62613599999997	(613) 680-0811	falafoulgourmet@gmail.com	N	\N
699	622 Montreal Rd	9	3	K1K 0T6	45.4424217	-75.64174170000001	(613) 746-4678	hostindia_ottawa@yahoo.ca	N	\N
700	1463 Merivale Rd	9	3	K2E 5N9	45.3605838	-75.7330121	(613) 727-8686	colonnademerivale@gmail.com	N	\N
701	2491 St-Joseph Blvd	9	3	K1C 1G2	45.4702589	-75.5272732	(613) 834-4549	charanjit65@hotmail.com	Y	\N
703	1797, rte du Carrefour	90	4	J8N 7M7	45.59329229999999	-75.61734569999999	(819) 671-7111	hima.ca@hotmail.com	Y	\N
704	250 Centrum Blvd	10	3	K1E 3J1	45.48028710000001	-75.5106518	(613) 841-1111	ab.hkarimi@hotmail.com	N	\N
705	3777 Strandherd Dr	9	3	K2J 4B1	45.268134	-75.74952259999998	(613) 823-8688	\N	N	\N
706	57 chemin de la grande-cote	91	4	J7G 1G8	45.6187724	-73.81362089999999	(450) 419-4188	enshokugeisha@hotmail.com	N	\N
707	1433 Woodroffe Ave	9	3	K2G 2V5	45.3419357	-75.75605209999998	(613) 723-8808	jtam048@uottawa.ca	Y	\N
708	826 Somerset St West	9	3	K1R 6R5	45.4090841	-75.7114373	(613) 234-4567	allannguyen79@hotmail.com	N	\N
709	202 Bank St	9	3	K2P 2H6	45.4175154	-75.6983765	(613) 234-0888	weng9876@outlook.com	N	\N
710	824 Mountain Rd	92	6	E1C 2R8	46.0757655	-64.80433949999997	(506) 855-1700	\N	N	\N
711	427 Mcarthur Ave	9	3	K1K 1G5	45.4215296	-75.69719309999999	(613) 852-6693	Thebeermandelivery@gmail.com	N	\N
712	800 Hunt Club Road	9	3	K1V 1C3	45.3444296	-75.66635200000002	(613) 680-8959	sarwarhazara@hotmail.com	Y	\N
713	1947 Bank Street	9	3	K1V 8A4	45.3669743	-75.66106880000001	(613) 521-3868	\N	N	\N
714	700 March Rd	9	3	K2K 2V9	45.3496664	-75.92490559999999	(613) 599-0006	thanhtaynguyen@hotmail.com	N	\N
715	5507 Hazeldean Rd	9	3	K1V 8A4	45.28965549999999	-75.9025183	(613) 836-1688	yurongtcp@gmail.com	N	\N
716	261 Centrepointe drive	9	3	K2G 6E8	45.3391941	-75.77128160000001	(613) 226-3888	shi00063@algonquinlive.com	Y	\N
717	2525 Carling Ave	9	3	K2B 7Z2	45.3648572	-75.78611419999999	(613) 726-7726	store9.1for1@gmail.com	N	\N
718	2564 St. Joseph Blvd	10	3	K1C 1G3	45.47047600000001	-75.52506199999999	(613) 837-6600	nashs63@yahoo.com	N	\N
719	2564 St Joseph Boulevard	10	3	K1C 1G3	45.47047600000001	-75.52506199999999	(613) 424-5660	\N	N	\N
721	81 Richmond Rd	9	3	K1Z 6V8	45.3968601	-75.74337120000001	(613) 728-1973	ray_napolis@hotmail.com	Y	\N
722	1105 Cobden Road	9	3	K2C 2Z1	45.3521753	-75.77785440000002	(613) 828-2828	skarkache@gmail.com	N	\N
724	222 Hunt Club Road	9	3	K1V 1C1	45.3348789	-75.69204250000001	(613) 739-8687	yhasso2562@rogers.com	N	\N
726	1577 Laperriere	9	3	K1Z 7T3	45.3767393	-75.74573470000001	(613) 729-3882	Gar6139@gmail.com	N	\N
727	4312 Innes Road	10	3	K4A 5E6	45.4590133	-75.493424	(613) 590-1000	camvan73@gmail.com	Y	\N
728	874 Clyde ave	9	3	K1Z 5A2	45.3765423	-75.7486121	(613) 728-2391	gregaboukheir@gmail.com	N	\N
729	25 Tapiola Cres	9	3	K1T 2J7	45.3640104	-75.6466274	(613) 277-7774	eljammalali073@gmail.com	Y	\N
730	1463 Lasalle Blvd	94	3	P3A 1Z8	46.5216131	-80.94265659999996	(705) 560-2500	\N	N	\N
732	1856, Rue Sherbrooke	95	4	J1X 2T3	45.2785315	-72.12789250000003	(819) 769-0666	sabrigul@hotmail.com	N	\N
733	280 West Hunt Club Rd, Unit 3	9	3	K2E 0B7	45.3395082	-75.71205580000003	(613) 225-8777	kalamr@hotmail.com	N	\N
734	1 Tartan drive	9	3	K2J 2W7	45.26992680000001	-75.75404149999997	(613) 823-3333	ravii12@hotmail.com	N	\N
735	4055 Carling	4	3	K2K 2A4	45.337967	-75.907646	(613) 270-8866	bilalskabab@gmail.com	N	\N
736	1739 Walkley Rd	9	3	K1V 2P6	45.3779666	-75.64501989999997	(613) 680-8300	yhaydar78@gmail.com	N	\N
737	1202 Bank Street	9	3	K1S 3Y1	45.3918615	-75.68146179999997	(613) 260-9090	papagreeknet@gmail.com	N	\N
738	291 Queen Mary St	\N	\N	K1K 1X1	45.4251894	-75.65222560000001	(613) 741-2220	mohamed_tfaili@hotmail.com	N	\N
739	327 St Laurent Blvd	9	3	K1K 2Z5	45.4499891	-75.65164670000001	(613) 680-5353	eatatmias@gmail.com	N	\N
746	1846 Carling Av	9	3	K2A 1E3	45.37620219999999	-75.7566531	(613) 686-1740	pitabellcanada@gmail.com	N	\N
748	324 Bank Street	9	3	K2P 1Y1	45.414278	-75.69565499999999	(613) 565-3030	ccisottawa@gmail.com	N	\N
749	1385 Wellington St W	9	3	K1Y 2X2	45.39812939999999	-75.73955180000002	(613) 798-7800	cauzzinc@gmail.com	N	\N
750	69 rue Laurier	21	4	J8X 3V7	45.430415	-75.71037919999998	(819) 777-0404	Vincent.gobuyan@gmail.com	N	\N
752	425 Donald St	9	3	K1K 1L8	45.4284218	-75.6495936	(613) 741-7171	mchoukair@live.com	N	\N
753	870 Somerset Street West	9	3	K1R 6R7	45.4085955	-75.71337819999997	(613) 238-8828	huangao175@gmail.com	N	\N
754	291 Queen Mary	9	3	K1K 1X1	45.4251894	-75.65222560000001	(613) 741-2220	mohamed_tfaili@hotmail.com	N	\N
756	4 Rue Belmont	23	4	J9H 1E5	45.39506979999999	-75.8303042	(819) 682-1222	stefanovic60@yahoo.ca	Y	\N
757	576 Montreal Road	9	3	K1K 0T9	45.442078	-75.64393189999998	(613) 740-0888	jaber.abeeat@gmail.com	N	\N
758	22 rue des flandres	21	4	J8T 4R7	45.4710314	-75.7181754	(819) 246-3888	osman_moudi@hotmail.com	Y	\N
759	2672 Innes road	9	3	K1B 4Z5	45.4326316	-75.56216	(613) 837-3650	leilong@gmail.com	N	\N
760	292 Albert St	9	3	K1P 1H4	45.4192152	-75.70184369999998	(613) 234-5433	fahim_bakth@hotmail.com	N	\N
761	256 Preston Street	9	3	K1R 7R5	45.4045902	-75.71193900000003	(613) 231-8424	Vincent.gobuyan@gmail.com	N	\N
762	1374 Baseline Rd	9	3	K2C 0A9	45.3622429	-75.7370181	(613) 238-8424	Vincent.gobuyan@gmail.com	N	\N
763	3005 Edouard VII	96	4	J0L 2K0	45.3525911	-73.4739124	(450) 659-6944	marios157@hotmail.ca	N	\N
764	233 Laurier Ave E	9	3	K1N 6P1	45.4215296	-75.69719309999999	(613) 422-8734	nargesalamy@hotmail.com	Y	\N
766	250 Greenbank	9	3	K2H 8X4	45.3248566	-75.77956269999999	(613) 596-2888	\N	Y	\N
767	1577 Alta Vista Dr	9	3	K1G 0E9	45.4086694	-75.65808429999998	(613) 248-8111	zeiti.n@hotmail.com	N	\N
768	3320 McCarthy Road	9	3	K1V 0X3	45.3513347	-75.67026959999998	(613) 731-2828	\N	N	\N
769	873 Bank Street	9	3	K1S 2R5	45.400855	-75.6869615	(613) 421-5802	lesliecole@hotmail.com	N	\N
770	100 Castlefrank Road	4	3	K2L 2V6	45.29371099999999	-75.88181229999998	(613) 435-8388	nucaribbean@gmail.com	N	\N
771	109 mattingly way	9	3	K4M 0C5	45.2678465	-75.69710199999997	(613) 277-1558	mathieublake@gmail.com	N	\N
772	83 Holland Ave	9	3	K1Y 0Y1	45.40088	-75.73240899999996	(613) 792-4478	hollandgrill@hotmail.com	N	\N
773	819 Somerset St W	9	3	K1R 6R4	45.4094066	-75.71126609999999	(613) 238-6758	mtritran@yahoo.com	N	\N
774	152 Rue Montcalm	21	4	J8X 2M2	45.42942499999999	-75.72584289999998	(819) 205-6231	jbahamonde26@videotron.ca	N	\N
775	2950 Bank Street	9	3	K1T 1N8	45.4215296	-75.69719309999999	\N	\N	N	\N
776	1577 Alta Vista Dr	9	3	K1G 0E9	45.408276	-75.658345	(613) 248-8111	zeiti.n@hotmail.com	N	\N
777	1993 Robertson Road	9	3	K2H 5B7	45.3239879	-75.82856240000001	(613) 721-3777	anishmehra@hotmail.com	N	\N
778	6001 Hazeldean Road	15	3	K2S 1B9	45.275095	-75.92618290000001	(613) 314-9595	bonitascantina@gmail.com	N	\N
780	643, boul Saint-Ren� Ouest	21	4	J8T 8M4	45.4915035	-75.67676719999997	(819) 246-5000	khalifejack@gmail.com	N	\N
781	1573 Alta Vista Drive	9	3	K1G 0E9	45.4084149	-75.65822930000002	(613) 422-6644	rupinder.pal@hotmail.com	Y	\N
782	760 Boulevard des Hautes-Plaines	21	4	J8Z 3N3	45.474523	-75.7719161	(819) 772-9999	pizzadhp@hotmail.com	Y	\N
783	219 Fort York Blvd #8	12	3	M5V 1B1	43.6365914	-79.40551299999998	(647) 344-1155	\N	N	\N
784	129 York Street	9	3	K1N 5T4	45.4294128	-75.69020660000001	(613) 789-4245	smoque.shack@gmail.com	N	\N
785	4188 Spratt Rd	9	3	K1V 0Z6	45.28303270000001	-75.68641989999998	(613) 822-6757	corporate@milanopizza.ca	Y	\N
786	152 Rue Montcalm	21	4	J8X 2M2	45.42942499999999	-75.72584289999998	(819) 205-6231	jbahamonde26@videotron.ca	N	\N
787	62 Main Street	9	3	K1S 1B6	45.4125998	-75.6802333	(613) 695-0388	mohammed.bougataya@gmail.com	N	\N
788	4188 Spratt	9	3	K1V 0Z6	45.28303270000001	-75.68641989999998	(613) 822-6757	jrakowski23@hotmail.com	N	\N
789	2529 Baseline	9	3	K2C 0E3	45.3423588	-75.7854815	(613) 829-5777	corporate@milanopizza.ca	Y	\N
790	250 Boulevard Maisonneuve	21	4	J8X 3N8	45.4351224	-75.71196509999999	(819) 771-9111	marwanchwah@hotmail.com	Y	\N
791	311 Bank Street	9	3	K2P 1X9	45.4148179	-75.6944168	(613) 237-3737	hedii_70@yahoo.ca	N	\N
792	314, rue Notre-Dame	21	4	J8P 1L1	45.4812881	-75.6435616	(819) 483-3120	francois.perigny@videotron.ca	N	\N
793	6505 Jeanne d'Arc Blvd.	9	3	K1C 2R1	45.4799355	-75.5369293	(613) 700-7968	goldenfries@icloud.com	N	\N
794	102 rue de l'H�tel de Ville	21	4	J8X 2E6	45.427187	-75.71530559999997	(819) 600-1617	gynomachine69@live.ca;lineah.groskleg@gmail.com	N	\N
795	250 Centrum Blvd Orleans	9	3	K1E 3J1	45.48015849999999	-75.51059079999999	(613) 841-1111	bassam200@hotmail.com	N	\N
796	374 Elgin Street	9	3	K2P 1N1	45.4149372	-75.68799389999998	(613) 237-9700	\N	N	\N
797	418 Richmond Road	9	3	K2A 3X9	45.3900779	-75.75735680000003	(613) 680-5983	\N	N	\N
798	50 Rideau St	9	3	K1N 9J7	45.42509769999999	-75.69124970000001	\N	\N	N	\N
799	282 Kent St	9	3	K2P 2A4	45.4149827	-75.6991552	\N	\N	N	\N
800	600 terry fox drive	9	3	K2L 4B6	45.30038039999999	-75.90666240000002	(123) 456-7890	a@example.com	Y	\N
802	216 Elgin St Unit 2	9	3	K2P 1L7	45.4189724	-75.69150619999999	(613) 233-2525	fido_issa@hotmail.com	N	\N
803	866 Lakeshore Drive	97	3	P1A 2G7	46.259652	-79.429215	(705) 477-3100	beermanplus@hotmail.com	N	\N
804	331, rue Laviolette	21	4	J8P 5Z1	45.488791	-75.66080599999998	(819) 643-4444	\N	N	\N
805	1433 Woodrofe	9	3	K2G 2V5	45.3419389	-75.7560492	(613) 695-7575	m.lezzeik@gmail.com	Y	\N
806	73 Boulevard de la Gappe	21	4	J8T 2G1	45.46601200000001	-75.71731299999999	(819) 437-9191	Mantache.kamel@hotmail.com	N	\N
807	81 Madawaska Street	98	3	K7S 0G3	45.4352019	-76.3560942	(613) 623-2233	corporate@milanopizza.ca	Y	\N
808	68 Wylie Ave	9	3	K2B 6M4	45.3546121	-75.8065896	(613) 828-1111	corporate@milanopizza.ca	Y	\N
809	7-385 Tomkins Ave	9	3	K1E 3H4	45.4773384	-75.49847410000001	(613) 834-1444	bandar74@hotmail.ca	N	\N
810	779 Boulevard Maloney E	21	4	J8P 1G5	45.4830096	-75.6161237	(819) 893-5959	info@funjunction.ca	N	\N
811	1580 Chemin de Chambly	44	4	J4J 3X5	45.53040319999999	-73.4843722	(450) 321-4444	zuberi@live.ca	N	\N
812	283 Queen Mary	9	3	K1K 1X1	45.4251975	-75.65211260000001	(613) 740-9900	tasty2016burgers@hotmail.com	N	\N
813	60 Madawaska Street	98	3	K7S 1R9	45.4348693	-76.3544647	(613) 663-8399	phosaigonxpress@gmail.com	N	\N
815	1824 Beachburg	99	3	K0J 1C0	45.7347596	-76.85822789999997	(613) 582-3800	corporate@milanopizza.ca	Y	\N
816	1581 Bank Street	9	3	K1H 7Z3	45.379343	-75.6674529	(613) 695-6999	ibrahim_sam@hotmail.com	N	\N
817	425 Donald St	9	3	K1K 1L8	45.4284218	-75.6495936	(613) 741-7171	supremepizzadonald@gmail.com	Y	\N
818	2481 Fleury Est	20	4	H2B 1L4	45.574077	-73.64901499999996	(514) 382-7953	vutranmanhtuan@gmail.com	Y	\N
819	73 Boulevard de la Gappe #E5	21	4	J8T 0B5	45.46601200000001	-75.71731299999999	(819) 243-4790	papisd@gmail.com	N	\N
820	820 Somerset St W	9	3	K1R 6R5	45.409151	-75.7112239	(613) 230-1830	fernandanne@gmail.com	N	\N
821	8210 Victoria Street	9	3	K0A 2P0	45.2466473	-75.44742339999999	(613) 821-5557	8215557mainstreet@gmail.com	N	\N
822	1027 Teron Road	4	3	K2K 1R2	45.3304779	-75.90089290000003	(613) 592-2711	jessicaliu85@gmail.com	N	\N
824	1589 Main St	15	3	K2S 1Y1	45.2557047	-75.9175323	(613) 836-9966	corporate@milanopizza.ca	Y	\N
825	393 Mont�e de la Source	21	4	J8V 0J2	45.5375457	-75.7714149	(819) 607-1717	nicof1995@hotmail.com	Y	\N
826	2045 Meadowbrook Rd	9	3	K1B 4W7	45.441567	-75.642674	(613) 744-3300	roger_nemr@hotmail.com	Y	\N
827	714 Gladstone Ave	9	3	K1R 6X3	45.4073618	-75.70442650000001	(613) 230-9090	malnajjar3@gmail.com	N	\N
828	127 Holland Ave	9	3	K1Y 0Y2	45.3994777	-75.73148370000001	(613) 722-1663	phovanvan@gmail.com	N	\N
829	91 Holland Ave	9	3	K1Y 0Y1	45.4006225	-75.73228660000001	(613) 759-8472	phovanvan@gmail.com	N	\N
830	1 Rideaucrest Drive	101	3	K2G 6A4	45.28471529999999	-75.72276540000001	(613) 823-2224	happy_pat29@hotmail.com	Y	\N
831	1682 Cyrville Rd	9	3	K1B 3L8	45.4170335	-75.6074261	\N	\N	N	\N
832	1202 Bank Street	9	3	K1S 3Y1	45.3915776	-75.68134229999998	(613) 731-7777	dhia_alamidi@hotmail.com	N	\N
833	49 Raglan St S	58	3	K7V 1P8	45.4742107	-76.68660449999999	(613) 432-9090	corporate@milanopizza.ca	Y	\N
834	195 Rideau St	9	3	K1N 5X8	45.4276793	-75.68904429999998	(613) 234-0234	amastrmind32@gmail.com	N	\N
835	87 Rue Principale	23	4	J9H 3L9	45.3949232	-75.84635700000001	(819) 684-5558	\N	N	\N
836	300 River Road	9	3	K1V 1H2	45.3203505	-75.6906247	(613) 627-0013	angrydragonzottawa@gmail.com	N	\N
838	22 des Flandres	21	4	J8T 4R7	45.4710314	-75.7181754	(819) 561-3377	osman_moudi@hotmail.com	Y	\N
839	253, boul Maloney	21	4	J8P 1C3	45.4844975	-75.64676229999998	(819) 643-3377	osman_moudi@hotmail.com	Y	\N
840	253 Boul Maloney	21	4	J8P 1C3	45.4844975	-75.64676229999998	(819) 663-0000	osman_moudi@hotmail.com	Y	\N
841	701 Eagleson Rd	4	3	K2M 2G1	45.2874392	-75.8668452	(613) 435-5453	bigbonebbqkanata@gmail.com	N	\N
842	500 Gladstone Ave	9	3	K1R 5P1	45.4102482	-75.6979187	(613) 231-3636	info@threebites.ca	N	\N
843	178 Rideau Street	9	3	K1N 5XA	45.4329225	-75.67507460000002	(613) 216-2644	graceabide@hotmail.com	N	\N
844	73 Boulevard de la Gappe	21	4	J8T 2G1	45.46601200000001	-75.71731299999999	(819) 437-9191	shawarmahouse@hotmail.ca	N	\N
847	\N	\N	\N	\N	\N	\N	\N	\N	N	\N
848	102 rue de l'H�tel de Ville	21	4	J8X 2E6	45.427187	-75.71530559999997	(819) 600-1617	gynomachine69@live.ca;lineah.groskleg@gmail.com	N	\N
849	1020 St Laurent Blvd	9	3	K1K 4S2	45.428044	-75.63957300000004	(613) 747-4141	andy_yahia@hotmail.com	N	\N
850	350 St-Philippe Street	51	3	K0B 1A0	45.558418	-74.88158329999999	(613) 679-2929	corporate@milanopizza.ca	Y	\N
851	252 Bank Street	9	3	K2P 1X4	45.416131	-75.69718699999999	(613) 565-4747	Mybackground1980@gmail.com	N	\N
852	5373 Fernbank Rd.	15	3	K2S 1B6	45.27425299999999	-75.86989879999999	(613) 836-0404	info@jojospizza.ca,Rkassis@jojospizza.ca	N	\N
853	1573 Stittsville Main St.	15	3	K2S 1A6	45.25631749999999	-75.91804100000002	(613) 836-2210	info@jojospizza.ca,Rkassis@jojospizza.ca	N	\N
854	284 Pembroke Street West	9	3	K8A 5N2	45.4215296	-75.69719309999999	\N	rkassis0@hotmail.com	N	\N
855	4048 Carling Rd.	9	3	K2K 1Y1	45.3368037	-75.90717689999997	(613) 254-5554	info@jojospizza.ca,Rkassis@jojospizza.ca	N	\N
856	886 Dynes Road	9	3	K2C 0G8	45.3701829	-75.70479130000001	(613) 224-7343	asiagardenottawa@gmail.com	Y	\N
857	277 Bank St.	9	3	K2P 1P2	45.3503526	-75.7820294	(123) 456-7890	stefan@menu.ca,chris@menu.ca	N	\N
859	233 Laurier Avenue East	9	3	K1N 6P1	45.4260495	-75.68150830000002	(613) 695-4900	shagy_215@hotmail.com	N	\N
860	3615 Innes Rd	10	3	K1C 1T1	45.4494297	-75.5221191	(613) 841-3847	jcharliechan@yahoo.ca	N	\N
861	2201 Arch Street	9	3	K1G 2H5	45.3891724	-75.6305941	(613) 366-1661	maryanelkhatib@hotmail.ca	Y	\N
862	5935 Jeanne D'Arc Blvd S	10	3	K1C 2N1	45.4656108	-75.5421533	(613) 834-0503	lunasolerestobar@gmail.com	N	\N
863	284 Pembroke St W	102	3	K8A 5N2	45.8241705	-77.11931470000002	(613) 732-9900	joesfamilypizzeria@live.ca	Y	\N
864	303 Kendall Ave	9	3	K1L 7S2	45.4336387	-75.66445399999998	(613) 413-0183	rahman10113@yahoo.com	N	\N
865	300 Earl Grey Dr	4	3	K2T 1B6	45.3117398	-75.91578820000001	(613) 599-9800	almotayam20@hotmail.com	Y	\N
866	527 W Hunt Club Rd	17	3	K2G 5W5	45.3342489	-75.7262402	\N	\N	N	\N
868	1980 Ogilvie Rd	9	3	K1J 9L3	45.4325857	-75.61016510000002	(613) 695-9220	alamecobridge@gmail.com	N	\N
869	273 boul. St-Ren� Ouest	21	4	J8P 2V7	45.4919059	-75.6580371	(819) 663-7710	416100842@qq.com	Y	\N
870	118 Isabella St	\N	\N	K1S 1V5	45.4098695	-75.6882645	(613) 565-0200	vahidkh888@gmail.com	N	\N
871	103 Rue Frontenac	21	4	J8X 1Z4	45.429142	-75.71591560000002	\N	\N	N	\N
872	214 Boul de la Cit�-des-Jeunes	21	4	J8Y 6S8	45.4500325	-75.75490380000002	(819) 777-6699	mozzapizza@live.ca	Y	\N
873	1030 Adelaide St N Unit 8C	13	3	N5Y 2M9	43.0073097	-81.23941809999997	(519) 667-1828	\N	N	\N
874	100 Jamieson Pkwy, Unit 11	103	3	N3C 4B3	43.41707539999999	-80.3086932	(519) 260-2607	johnnyv@sentex.ca	Y	\N
875	69 rue Laurier	21	4	J8X 3V7	45.430415	-75.71037919999998	(819) 777-0404	Vincent.gobuyan@gmail.com	Y	\N
876	201 Eddy Street	21	4	J8X 2X5	45.4320163	-75.72051269999997	(819) 778-5225	trungvo120@gmail.com	N	\N
877	150 Peter Street	102	3	K8A 0G3	45.8274185	-77.10574589999999	(613) 732-7070	mattlemaybooking@hotmail.com	N	\N
878	19 Simcoe Street S	63	3	L1H 4G1	43.8965305	-78.8637276	(905) 240-7000	pizzarun19@gmail.com	Y	\N
879	2 Woodfield Dr	9	3	K2G 3Y3	45.3375409	-75.72648319999996	(613) 727-0900	corporate@milanopizza.ca	Y	\N
880	876 Montreal Rd	9	3	K1K 4L3	45.4459066	-75.63030549999996	(613) 741-4657	eidandre@hotmail.com	N	\N
882	464 Rideau Street	9	3	K1N 5Z3	45.4309573	-75.67990199999997	\N	\N	N	\N
883	714 Gladstone Ave	9	3	K1R 7B2	45.4073618	-75.70442650000001	(613) 234-7070	alrai1@yahoo.com	N	\N
884	1741 St Laurent Blvd	10	3	K1G 3V4	45.4558772	-75.50618459999998	(613) 234-0234	\N	N	\N
885	1173 Ogilvie Rd	9	3	K1J 1J9	45.4269867	-75.62959319999999	(613) 749-8838	nshienh@hotmail.com	N	\N
886	184 Main Street	9	3	K1S 1C2	45.4089542	-75.67822590000003	(613) 890-7852	andrew@sulawok.com	N	\N
887	4049 Carling Ave	4	3	K2K 2A4	45.2939368	-75.89470369999998	(613) 435-8817	ha@kanatanoodlehouse.com	N	\N
888	1091 St Laurent Blvd	9	3	K1K 3B1	45.4264595	-75.63807859999997	(613) 366-2353	tony10452@hotmail.com	N	\N
889	54 Wilson St W	104	3	K7H 2N4	44.9028611	-76.25576039999999	(613) 264-8883	corporate@milanopizza.ca	Y	\N
891	114 Gloucester	9	3	K1P 5Z9	45.418822	-75.69614869999998	(613) 231-6550	Indiancurryhouseottawa@gmail.com	N	\N
892	1115 Rue Saint-Louis	21	4	J8T 2R8	45.4622939	-75.69773499999997	(819) 205-6766	ilyqq@hotmail.com	Y	\N
893	\N	\N	\N	\N	\N	\N	\N	\N	N	\N
894	911 Richmond Road	9	3	K2A 0G8	45.3784387	-75.7746555	(613) 366-1974	gilldan143@gmail.com	Y	\N
895	1461 Mountain Road	21	4	J9J 3S5	45.4732855	-75.86106410000002	(819) 827-0330	lucd@bellnet.ca	N	\N
896	39 Clarence St	9	3	K1N 5P4	45.4286317	-75.6943645	(613) 680-0800	currynkabab5@gmail.com	N	\N
897	300 Eagleason Rd	4	3	K2M 1C9	45.3023709	-75.87776439999999	(613) 599-4393	chickenranchkanata@outlook.com	N	\N
898	420 Boulevard Wilfrid Lavigne	23	4	J9H 6W7	45.3986837	-75.83611350000001	(819) 682-7777	gussader@hotmail.com	N	\N
899	123 Astreet	9	3	\N	43.24601699999999	-79.818534	\N	\N	N	\N
900	1880 Ogilvie Rd	9	3	K1J 7P4	45.43263719999999	-75.61468530000002	(613) 742-1818	roy@caseysottawa.com	N	\N
901	1482 Merivale Road	17	3	K2E 6Z5	45.3601061	-75.73598570000001	(613) 224-3838	joey_bruins_19@hotmail.com	N	\N
902	4-951 Notre Dame Street	105	3	K0A 1W0	45.2720134	-75.2827795	(613) 370-2220	ahmedsaad03@live.com	N	\N
904	200 Kenevale Drive	101	3	K2J 0C3	45.2653836	-75.77690710000002	(613) 825-7599	info@sizzlengrill.com	N	\N
905	697 Principale Street	28	3	K0A 1M0	45.3117667	-75.0855679	(613) 764-1212	ahmedsaad03@live.com	N	\N
906	425 McArthur Ave	9	3	K1K 1G5	45.4325575	-75.64688890000002	(613) 741-2531	min.chen0@icloud.com	N	\N
907	283 Queen Mary St	9	3	K1K 1X1	45.4253259	-75.65310139999997	(613) 680-1117	hollandspizzeria@hotmail.com	N	\N
910	427 Mcarthur Ave	9	3	K1K 1G5	45.4215296	-75.69719309999999	\N	\N	N	\N
911	210 Somerset St W	9	3	K2P 0J4	45.4172328	-75.69140019999998	(613) 567-4634	\N	N	\N
912	3A - 250 Greenbank Rd	17	3	K2H 8X4	45.3247068	-75.7797172	(613) 721-0000	Talal.almezel@hotmail.com	Y	\N
913	643 Boulevard Saint-Ren� O	21	4	J8T 8M4	45.4909443	-75.67676059999997	(819) 246-5000	corporate@milanopizza.ca	Y	\N
914	1030 Boulevard Saint-Joseph	106	4	J8Z 1T3	45.4688908	-75.73704800000002	(819) 205-5959	mhamad.ko@live.com	Y	\N
915	2910 Woodroffe Ave Unit#3	9	3	K2J 4G3	45.2928505	-75.728655	(343) 488-2323	mrdental@live.ca	N	\N
916	48 Avenue	21	4	J8T 4J3	45.4782008	-75.72623120000003	\N	\N	N	\N
917	613 Longfields Dr Unit 107	101	3	K2J 6J2	45.284146	-75.74511970000003	(613) 440-7770	sales@ncalarm.net	N	\N
918	\N	9	3	\N	45.4215296	-75.69719309999999	\N	\N	N	\N
919	530 Rideau Street	9	3	K1N 5Z6	45.431847	-75.67783810000003	(613) 366-2257	brothers530@hotmail.com	N	\N
920	335 Montreal Rd	26	3	K6H 1B6	45.0183055	-74.7110672	(613) 938-9300	khatibali2@gmail.com	Y	\N
921	117 Rue Front	23	4	J9H 5S9	45.404186	-75.8554512	(819) 682-2222	pitaexpress@hotmail.com	Y	\N
922	389 Gladstone Ave	9	3	K2P 0Y9	45.4120815	-75.6943824	(613) 699-5008	eric.p_27@hotmail.com	N	\N
923	26 Northside Road	9	3	K2H 5Z3	45.3295166	-75.8138026	(613) 777-8440	\N	N	\N
924	1588 Walkley Road	9	3	K1V 6P5	45.3770269	-75.64655219999997	(613) 523-6969	bahowansa80@gmail.com	N	\N
925	300C Fourth Avenue	108	3	L2S 0E6	43.154986	-79.273549	(289) 639-9064	phonha2018@gmail.com	Y	\N
926	1202 Bank Street	9	3	K1S 3Y1	45.3915776	-75.68134229999998	(613) 523-2255	roostandgrills@gmail.com	N	\N
928	53 Rue Bellehumeur	21	4	J8T 1P8	45.4751516	-75.69263649999999	(819) 815-1331	portugalos2015@gmail.com	N	\N
929	320 St Joseph	21	4	J8Y 3Y8	45.4421361	-75.73282740000002	(819) 815-1333	dynapro@videotron.ca	N	\N
930	574 Boulevard Saint-Joseph	106	4	J8Y 4A6	45.4499725	-75.73566599999998	(819) 777-7732	Rabih2015_01@hotmail.com	Y	\N
931	22 Rue des Flandres	21	4	J8T 4R7	45.4711794	-75.71815529999998	(819) 561-8877	l.sonia@videotron.ca 	N	\N
934	3780 Fallowfield Rd	9	3	K2J 1A1	45.28701359999999	-75.75911559999997	(613) 825-7755	bkstravel1@live.ca	Y	\N
935	48 Avenue Gatineau	21	4	J8T 4J3	45.4782008	-75.72623120000003	(819) 568-4749	corporate@milanopizza.ca	N	\N
936	780 Baseline Rd	9	3	K2C 3V8	45.4215296	-75.69719309999999	(613) 680-2051	info@primeburgerbar.ca	N	\N
937	147 Main Street Unit 3	109	3	K0C 1X0	44.9007448	-75.18215370000001	(613) 643-2222	selmonum@gmail.com	Y	\N
938	303 St-Patrick St	9	3	K1N 5K4	45.2690632	-75.68034740000002	(613) 241-4444	georgeibrahim500@yahoo.com	N	\N
939	250 Centrum Blvd	10	3	K1E 3J1	45.48015849999999	-75.51059079999999	(613) 841-1111	geospizzaorleans@gmail.com	N	\N
940	3018 St Joseph Blvd	10	3	K1E 1E2	45.476685	-75.513552	(613) 424-7700	timathamniyom@hotmail.com	N	\N
941	1225 Kilborn Ave	9	3	K1H 7W8	45.3860369	-75.67032460000001	(613) 521-2222	\N	N	\N
942	1433 Woodroffe Ave	9	3	K2G 1W1	45.3419357	-75.75605209999998	(613) 226-9000	sumudu71@yahoo.com	N	\N
943	569 Gladstone	9	3	K1R 5P2	45.4095237	-75.7004569	(613) 680-7774	eljammalali073@gmail.com	N	\N
944	1 Tartan Drive	101	3	K2J 2W7	45.269927	-75.75404200000003	(613) 825-6565	mingrong2015@yahoo.com	N	\N
945	212 bank street	9	3	K2P 1X1	45.4171473	-75.6980446	(613) 680-0886	2828eddie@gmail.com	N	\N
946	110 Boulevard Gr�ber	21	4	J8T 6H5	45.4670767	-75.70085849999998	(819) 568-2121	huydo@live.com	N	\N
947	380 Chemin Vanier	23	4	J9J 3H8	45.4127014	-75.80895220000002	(819) 682-4749	joeayoub67@outlook.com	Y	\N
948	29 Chemin Eardley	23	4	J9H 4J9	45.3971676	-75.8476119	(819) 682-4603	patateloulou@hotmail.ca	Y	\N
949	68 Rue Main	21	4	J8P 4C8	45.4786901	-75.6499326	(819) 663-1266	fsayedd@hotmail.com	N	\N
951	631 Montreal Rd	9	3	K1K 0T4	45.4430861	-75.6420402	(613) 747-2444	hani_soueid613@live.com	Y	\N
952	1443 Ogilvie Rd	9	3	K1J 7P3	45.3770269	-75.64655219999997	(613) 366-3588	nathaliezaher@hotmail.com	Y	\N
953	253, boul Maloney	21	4	J8P 1C3	45.4852604	-75.60832579999999	(819) 663-3223	\N	Y	\N
954	2208 St Joseph Blvd	10	3	K1C 2E3	45.4671816	-75.53243570000001	(613) 424-2100	mirzarizwansharif@gmail.com	N	\N
955	\N	9	3	\N	45.4215296	-75.69719309999999	(519) 538-6805	\N	N	\N
956	470 Boulevard Gr�ber	21	4	J8T 6C7	45.4711794	-75.71815529999998	(819) 243-2003	l.sonia@videotron.ca 	N	\N
957	491 Chemin Vanier	21	4	J9J 3J1	45.41618219999999	-75.80703	(819) 684-8484	abbas_elarab@hotmail.com	N	\N
959	4 Rue Belmont	23	4	J9H 6J5	45.39506979999999	-75.8303042	(819) 682-8494	minhkhuu03@gmail.com	Y	\N
960	\N	\N	\N	\N	\N	\N	\N	\N	N	\N
961	3621 Innes Rd	10	3	K1C 1T1	47.902964	1.9092510000000402	\N	\N	N	\N
962	1896 Prince of Wales Drive	17	3	K2C 1P5	45.3538415	-75.7048504	(613) 224-1100	CALLAMER@GMAIL.COM	N	\N
963	1489 Merivale Rd	9	3	K2E 5P3	45.3591022	-75.73576330000003	(613) 723-2323	mohammednawabi711@gmail.com	Y	\N
964	229 Boulevard Saint-Ren� Ouest	21	4	J8P 2V5	45.4920324	-75.6557803	(819) 643-1222	danykanaan@hotmail.com	Y	\N
965	574 Boulevard Saint-Joseph	106	4	J8Y 4A5	45.4499787	-75.73563380000002	(819) 776-1600	Rabih2015_01@hotmail.com	Y	\N
966	277 A St Joseph Bl	106	4	J8Y 3Y2	45.4384237	-75.7330685	(819) 775-9558	\N	N	\N
967	792 Somerset St W	9	3	K1R 6R2	45.40963499999999	-75.7101679	(613) 366-2356	gaganvirk93@gmail.com	N	\N
968	1756 Laurier St	110	3	K4K 1L5	45.549015	-75.29133949999999	(613) 446-2867	info@friendlypizza.ca	Y	\N
969	541 Boulevard Saint-Joseph	106	4	J8Y 4A1	45.4489235	-75.73507889999999	(819) 777-4032	\N	N	\N
970	425 Chemin Vanier	23	4	J9J 3H9	45.4143342	-75.8078371	(819) 557-3868	\N	Y	\N
971	123 mcarthur	9	3	K1R 6R2	45.431037	-75.6650167	(555) 555-5555	\N	N	\N
972	1574 Walkley rd	9	3	K1V 6P5	45.3766289	-75.64689600000001	(819) 921-5111	\N	N	\N
973	2 Boulevard Louise-Campagna	21	4	J9A 2X1	45.4304611	-75.76305839999999	(819) 775-3355	michelkanaan@live.com	Y	\N
974	761 Boulevard Saint-Joseph	21	4	J8Y 4B7	45.4591246	-75.7421385	(819) 771-3333	francoiskharrat@gmail.com	Y	\N
975	178 Mcarthur ave	18	3	K1L 6P9	45.4309947	-75.662677	(613) 842-8118	\N	N	\N
976	956 Merivale Rd	9	3	K1Z 6A2	45.381564	-75.7335178	(613) 722-0888	zrf6479390334@gmail.com	N	\N
977	6004 Voyageur Dr	10	3	K1C 2K1	45.4757279	-75.5482985	(613) 824-9400	\N	N	\N
978	3515 Petawawa Blvd	111	3	K8H 1X1	45.9015423	-77.2839726	(613) 687-2080	\N	Y	\N
979	3617 Innes Rd	10	3	K1C 1T1	45.4493734	-75.52197079999999	\N	\N	N	\N
980	349 Dalhousie St	9	3	K1N 7G1	45.4282415	-75.6903765	(613) 315-2220	salimreza196@gmail.com	N	\N
981	779 Boulevard Maloney E	21	4	J8P 1G5	45.4830096	-75.6161237	(819) 893-5959	info@funjunction.ca	Y	\N
982	3256 River Road	77	3	K4M 1B4	45.1328554	-75.63289940000001	(613) 826-0029	\N	N	\N
983	2666 Alta Vista Dr	9	3	K1V 7T4	45.3735154	-75.6634584	(613) 521-1102	\N	Y	\N
984	5370 Canotek road	9	3	K1J 9E8	45.4553761	-75.58197229999999	\N	\N	N	\N
985	1766 Carling Ave	9	3	K2A 1E1	45.3773384	-75.75339699999999	(613) 798-5697	fullhouse888168@gmail.com	Y	\N
986	88 Jamie Avenue	17	3	K2E 6T6	45.3362414	-75.7156692	(613) 727-0702	admin@rinag.com	N	\N
987	105 Broadway West	112	3	K0G 1N0	44.9201661	-75.8397301	(613) 269-9393	\N	Y	\N
988	203 Chemin d'Aylmer	21	4	J9H 6H4	45.3965312	-75.8338989	(819) 684-4646	bayazid.bahramiwand@gmail.com	Y	\N
989	455 Boulevard Riel	106	4	J8Z 3P9	45.46494329999999	-75.7724102	(819) 772-0001	corporate@milanopizza.ca	Y	\N
991	643 Boulevard Saint-Ren� O	21	4	J8T 8M4	45.4909443	-75.67676059999997	(819) 246-5000	corporate@milanopizza.ca	Y	\N
995	85 Rue Bellehumeur	21	4	J8T 6K5	45.4760246	-75.69136569999999	(819) 282-1547	\N	N	\N
996	1209 Wellington St. W	9	3	K1Y 2Z8	45.4004212	-75.7306536	(613) 366-1975	info@filsdiner.ca	N	\N
997	212 Boulevard Saint-Joseph	21	4	J8Y 3X4	45.4347342	-75.7328138	(819) 770-0008	ladiffrence212@gmail.com	N	\N
998	10 Townsend Drive	113	3	N0B 1M0	43.4864092	-80.4150039	(519) 648-4976	info@littlegyrosgreek.ca	Y	\N
999	48 Avenue Gatineau	21	4	J8T 4J3	45.4782008	-75.7262312	(819) 568-4749	\N	N	\N
1000	70 Rue Montcalm	21	4	J8X 2L5	45.4268781	-75.7241387	(819) 777-8457	brothers530@hotmail.com	N	\N
1001	250 Greenbank Rd Unit 2A	17	3	K2H 8X4	45.3244028	-75.77956259999999	(613) 695-8388	\N	N	\N
1002	55 Montreal Rd	9	3	K1L 6E8	45.3521753	-75.77785440000002	(613) 366-1987	\N	N	\N
1003	5055 Innovation Dr	9	3	K2K 1X7	45.3439678	-75.9306033	(613) 271-1123	brothers530@hotmail.com	N	\N
1004	4235 Strandherd Dr	101	3	K2G 6E5	45.2689556	-75.78068999999999	(343) 547-0865	\N	N	\N
1005	5373 Fernbank Rd Unit C5	15	3	K2S 1B6	45.2735024	-75.8708989	(613) 836-8088	\N	N	\N
1006	870 Somerset Street West,	9	3	K1R 6R7	45.4215296	-75.69719309999999	(613) 680-1688	\N	N	\N
1007	474 Hazeldean Rd	4	3	K2L 4E5	45.2972911	-75.8884933	(613) 831-0525	\N	Y	\N
1008	137 Principale St	106	4	J9H 3M6	42.3020647	-70.9078346	(819) 635-6776	keolapoke@gmail.com	N	\N
1009	843 Somerset Street West	9	3	K1R 6R6	45.4090168	-75.71242749999999	(613) 230-6000	\N	Y	\N
1010	857 Somerset Street west	9	3	K1R 6R6	45.40903489999999	-75.71267499999999	(613) 695-7089	\N	Y	\N
1011	10 Rue Belmont	23	4	J9H 6J5	45.39423	-75.830209	(819) 684-4331	\N	N	\N
1012	862 Merivale Rd	9	3	K1Z 5Z6	45.38467070000001	-75.73283099999999	(613) 725-5665	\N	N	\N
1013	2560 Bank Street	9	3	K1T 1M9	45.353583	-75.6411234	(613) 733-4444	\N	Y	\N
1014	1588 Walkley Rd	9	3	K1V 6P5	45.3770269	-75.6465522	(613) 523-6969	\N	N	\N
1015	105 Shuttleworth Dr. Unit 3	22	3	K1T 0W7	45.31868069999999	-75.5915606	(343) 546-8189	\N	N	\N
1016	34 Highbury Park Dr Unit C5	9	3	K2J 5C6	45.27738979999999	-75.7497506	(613) 825-7755	\N	N	\N
1017	1250 Rue Crescent	20	4	H3G 2A9	45.4968784	-73.57537049999999	(514) 543-1522	info@restaurantmontako.com	N	\N
1018	1227 Bank St	9	3	K1S 3X7	45.3914883	-75.6807424	(613) 733-6161	\N	Y	\N
1019	245, rue de Cannes	21	4	J8T 8C5	45.4894734	-75.72356289999999	(819) 246-5251	\N	Y	\N
1020	1262 Wellington St. W	9	3	K1Y 3A5	45.3991856	-75.73333029999999	(613) 366-3012	\N	Y	\N
1021	\N	10	3	\N	39.2946989	-76.5991794	(613) 733-6161	\N	N	\N
1022	\N	9	3	\N	45.4215296	-75.69719309999999	\N	\N	N	\N
1023	1730 Montreal Rd	9	3	K1J 6N3	45.4456921	-75.6101624	(613) 695-9955	\N	Y	\N
1024	1463 Merivale Rd	9	3	K2E 5N9	45.4157708	-75.6916205	(613) 727-8686	\N	N	\N
1025	1500 Bank St	9	3	K1H 7Z2	45.4157708	-75.6916205	(613) 737-1107	Pulkit@colonnadepizzas.com	Y	\N
1027	2140 Carling Ave	9	3	K2A 1H1	45.4157708	-75.6916205	(613) 729-7000	\N	Y	\N
1028	896 Greenbank Rd	9	3	K2J 0R2	45.4157708	-75.6916205	(613) 825-8100	\N	Y	\N
1029	6179 Perth Street	37	3	K0A 2Z0	45.1929633	-75.84182659999999	(613) 838-5112	\N	Y	\N
1030	7255 Chambly Rd	53	4	J3Y 8C7	45.4927539	-73.3948971	(450) 443-2357	\N	N	\N
1031	5031 Bank St	22	3	K1X 1G8	45.2974272	-75.5795613	(613) 425-6600	\N	N	\N
1032	455 Boulevard Riel	106	4	J8Z 3P9	45.4648975	-75.772403	(819) 815-1345	\N	Y	\N
1033	455 Boulevard Riel	106	4	J8Z 3P9	45.4648975	-75.772403	(819) 815-1345	\N	Y	\N
1034	911 Richmond Road	9	3	K2A 0G8	45.3784387	-75.7746555	(613) 728-0909	\N	Y	\N
1035	730 Somerset	9	3	K1R 6P8	45.4215296	-75.69719309999999	(613) 680-8867	xibaoqin@yahoo.ca	Y	\N
1037	425 McArthur Ave 5	9	3	K1K 1G5	45.4325302	-75.64702319999999	(613) 842-9999	stackedsmokedmeatgrill@gmail.com	N	\N
1038	714 Gladstone Ave	9	3	K1R 7B2	45.353583	-75.6411234	(613) 233-1000	\N	Y	\N
1039	855 Chem. de Masson	93	4	J8M 1B2	45.54703809999999	-75.42178009999999	(819) 281-4004	\N	Y	\N
1040	1675 Tenth Line Rd	9	3	K1E 3P6	45.46851128110031	-75.49171212255695	(613) 834-1112	Pareaorleans@gmail.com	N	\N
1041	22, rue des Flandres	21	4	J8T 4R7	45.4711794	-75.71815529999999	(819) 246-0000	\N	Y	\N
1042	355 Bd Gr�ber	21	4	J8T 6H8	45.4765446	-75.7012723	(819) 246-1010	mohandkacimi@yahoo.com	Y	\N
1043	\N	\N	\N	\N	\N	\N	\N	\N	N	\N
1044	105 John St N	98	3	K7S 2N5	45.43350909999999	-76.3541889	(613) 622-3000	\N	Y	\N
1045	643 Boulevard Saint-Ren� O	21	4	J8T 8M4	45.4909443	-75.6767606	(819) 815-9990	\N	Y	\N
1046	643 Boulevard Saint-Ren� O	21	4	J8T 8M4	45.4909443	-75.6767606	(819) 246-5000	\N	Y	\N
1047	411 Saint-Ren�	21	4	J8P 8A5	45.4932738	-75.6407748	(819) 663-1717	\N	N	\N
1048	6179 Perth St. Unit 40	37	3	K0A 2Z0	45.1929633	-75.84182659999999	(613) 838-4646	\N	N	\N
1049	75 Elgin Street	98	3	K7S 3T9	45.4345455	-76.35553879999999	(613) 317-0327	\N	N	\N
1050	2446 Bank Street	9	3	K1V 1A4	45.3419389	-75.7560492	(613) 731-3535	m.lezzeik@gmail.com	Y	\N
1051	169 York St	9	3	K1N 5T4	45.4215296	-75.69719309999999	(613) 562-4545	\N	Y	\N
1052	786 Rue Main	21	4	J8R 1W7	45.505788	-75.65194939999999	(819) 663-1666	\N	N	\N
1053	2310 Rue Saint-Louis	21	4	J8T 5L8	45.4874348	-75.74577409999999	(819) 205-1666	\N	N	\N
1054	393 Mont�e de la Source	21	4	J8V 0J2	45.5375457	-75.7714149	(819) 607-1717	\N	Y	\N
1055	786 Rue Main	21	4	J8R 1W7	45.505788	-75.65194939999999	(819) 663-1666	\N	N	\N
1056	\N	21	4	J8T 5L8	45.4874348	-75.74577409999999	\N	\N	N	\N
1057	2310 Rue Saint-Louis	21	4	J8T 5L8	45.4874348	-75.74577409999999	(819) 205-1666	\N	N	\N
1058	1574 Walkley Rd	9	3	K1V 6P5	45.4215296	-75.69719309999999	(819) 921-5111	\N	Y	\N
1059	600 Rideau Street	9	3	K1N 6A2	45.4328184	-75.67523589999999	(613) 789-2020	\N	Y	\N
1060	428 Rue G�n�reux	21	4	J8P 6G5	45.4765446	-75.7012723	(819) 643-5555	\N	Y	\N
1061	1012 Merivale Road	9	3	K1Z 6A5	45.3795478	-75.73356890000001	(613) 729-9999	a1pizzatime@gmail.com	N	\N
1062	2609 Laurier St	110	3	K4K 1K6	45.5437052	-75.29785799999999	(613) 446-1291	dharmeshkathireeya143@gmail.com	Y	\N
1063	6594 4th Line Rd	114	3	K0A 2T0	45.1173092	-75.6984045	(613) 489-1444	corporate@milanopizza.ca	Y	\N
1064	574, boul Saint-Joseph	21	4	J8Y 4A5	45.4499787	-75.7356338	(819) 777-7736	\N	Y	\N
1065	83 Mill Street	115	3	K4R 1A2	45.256485	-75.358148	(613) 445-3131	\N	Y	\N
1066	253 Boul Maloney E	21	4	J8P 1C3	45.484538	-75.646757	(819) 643-3377	\N	Y	\N
1067	26 Northside Road	9	3	K2H 5Z3	45.3295166	-75.8138026	(613) 721-1999	\N	N	\N
1069	26 Northside Road	9	3	K2H 5Z3	45.3295166	-75.8138026	(613) 596-0006	pankitpvp@gmail.com	Y	\N
1070	1 Rue Cholette	21	4	J8Y 1J5	45.4765446	-75.7012723	(819) 775-4343	\N	Y	\N
1071	585 Montreal Road	9	3	K1K 4K3	45.4422399	-75.6447219	(613) 745-5555	\N	Y	\N
1072	1896 Prince of Wales Dr	9	3	K2C 3W9	45.3538415	-75.7048504	(613) 695-9988	\N	Y	\N
1073	577 Gladstone Ave	9	3	K1R 5P2	45.4094414	-75.70087760000001	(613) 518-7434	info@ottawakabab.com	Y	\N
1074	1009 Merivale Rd	9	3	K1Z 6A6	45.3797544	-75.7328209	(613) 728-5858	\N	Y	\N
1076	1797, rte du Carrefour	90	4	J8N 7M7	\N	\N	(819) 671-7111	\N	N	\N
1078	1012 Merivale Rd	9	3	K1Z 6A5	45.3796758829982	-75.73357963142554	(613) 715-9919	mapledelightpizza@gmail.com	N	\N
1079	1078 Merivale Rd	9	3	\N	45.3775136	-75.73359119999999	(613) 722-7777	\N	N	\N
1080	951 Notre-Dame St	105	3	K0A 1W0	45.2720134	-75.28277949999999	(613) 443-9111	\N	Y	\N
1081	39 Bedford St	116	3	K0G 1X0	44.6796128	-76.39954019999999	(613) 273-8883	corporate@milanopizza.ca	Y	\N
1082	1216 Bank St	9	3	K1S 3Y1	45.3914804	-75.6811092	(613) 260-7474	\N	Y	\N
1083	1216 Bank St	9	3	K1S 3Y1	45.3914804	-75.6811092	(613) 526-3456	\N	Y	\N
1084	6500 Russell Road	67	3	K0A 1K0	45.3689882	-75.455671	(343) 546-0222	corporate@milanopizza.ca	Y	\N
1085	95 Rue Saint-�tienne	21	4	J8X 1J7	45.4338677	-75.7157922	(819) 772-9883	\N	Y	\N
1086	\N	17	3	\N	45.33490459999999	-75.7241006	\N	\N	N	\N
1087	1896 Prince of Wales	17	3	K2C 3W9	45.33490459999999	-75.7241006	(613) 224-7700	\N	Y	\N
1088	3091 Strandherd, Dr.7	101	3	K2J 4R9	45.2634006	-75.7351024	(613) 825-8283	\N	Y	\N
1089	178 King St E	117	3	K0E 1T0	44.711129	-75.51201999999999	(613) 925-3330	MilanoPrescott@gmail.com	Y	\N
1090	105 Rue Bellehumeur	21	4	J8T 6K5	45.47643050000001	-75.6915334	(819) 246-4420	\N	Y	\N
1091	\N	\N	\N	\N	\N	\N	\N	\N	N	\N
1092	6594 Fourth Line Rd	9	3	K0A 2T0	45.1319739	-75.71693599999999	(613) 489-1444	mykonosgreekgrill@gmail.com	Y	\N
1093	2600 County Rd 43	25	3	K0G 1J0	45.018657	-75.6565067	(613) 258-4050	\N	Y	\N
1094	34 boul mont bleu	21	4	J8Z 1J1	45.4623457	-75.7465247	(819) 955-7777	sushiyanagatineau@gmail.com	Y	\N
\.


--
-- Data for Name: v2_restaurants; Type: TABLE DATA; Schema: staging; Owner: postgres
--

COPY staging.v2_restaurants (id, v1_id, name, pending, active, suspend_operation, suspended_at, added_at, updated_at, added_by, updated_by) FROM stdin;
1	0	RDFYjolff	y	y	\N	0	2016-02-13 08:38:34+00	\N	1	0
1025	72	Wok Bistro Noodles Bar and Grill (TEST)	n	n	0	0	2016-02-25 08:08:34+00	\N	1	0
1026	73	Sushi Help (TEST)	n	n	0	0	2016-02-25 08:08:34+00	\N	1	0
1027	79	Oriental Chu Shing Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1028	81	Pizza Shark	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1029	82	Cedar Valley	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1030	87	Kanata Noodle House	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1031	0	Imilio's Pizzeria	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1032	90	Lucky Star Chinese Food	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1033	91	Ho Ho Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1034	92	Salito Gourmet Specialty Pizza (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1035	93	Hello Sushi Man	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1036	94	Mama Rosa	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1037	95	Papa Joe's Pizza - Downtown	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1038	96	Kal's Place Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1039	101	New Mee Fung Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1040	109	Papa Joe's Pizza - Greely & Findlay Creek	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1041	0	Papa Joe's Pizza - Alta Vista	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1042	111	Papa Joe's Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1043	0	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1044	113	Gladstone Golden Grill (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1045	0	Pizza Lime	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1046	117	House of Lasagna	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1047	118	Pita Pit	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1048	120	Villa Pizzeria N The Greek Place	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1049	121	Mandarin Court ( closed sold)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1050	122	Hungry Sammys(sold)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1051	123	New Shawarma King	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1052	124	Eastview Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1053	125	Pizza Palace And Cafe (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1054	126	Vanier Grill	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1055	127	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1056	128	Golden Crust Pizzeria	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1057	130	Bien Pho Vietnamese and Thai Cuisine	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1058	131	Pizza Express Extra	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1059	132	Mozza Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1060	133	Taj Indian Cuisine	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1061	134	House of Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1062	135	Preston Pizza (CHANGED TO XTREME PIZZA)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1063	136	Lemon Grass Thai Food	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1064	137	Yang Sheng Restaurant	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1065	138	East India Co	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1066	140	Cypress Garden	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1067	0	Liu's Cuisine	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1068	142	Kiki Lebanese Pineview Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1069	143	Bobbie's Pizza & Subs	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1070	144	Koi Asia (CLOSED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1071	145	Mr Mozzarella - Nepean	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1072	146	Merivale Pizza & Wings	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1073	0	Mom's Chicken ( closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1074	151	Shawarma House	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1075	153	Dino's & Donald's Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1076	154	Wing Hing Chinese Food	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1077	155	Greekos	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1078	157	House of Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1079	161	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1080	162	House of Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1081	164	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1082	171	Greekos Souvlaki & Pizza (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1083	172	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1084	173	Opa's	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1085	174	Joe's Pizza and Subs	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1086	175	Vanier Pizza & Subs	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1087	177	Mr Mozzarella York	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1088	178	Willie's Chinese Food	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1089	179	Number One Chinese Take Out	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1090	180	Elegant Pizza (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1091	0	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1092	182	Pizzeria Riverview	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1093	183	Aylmer BBQ	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1094	184	Papa Pizza - Hull	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1095	186	Shawarma and Souvlaki House	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1096	187	Cathay Restaurants	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1097	188	Naked Fish Sushi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1098	189	Moe's Famous Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1099	190	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1100	191	Benji's Vietnamese Cuisine (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1101	192	Lorenzo's Pizzeria - Vanier	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1102	193	House Of Georgie - 'Sorento's'	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1103	194	Le Maillon Restaurant(sold)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1104	195	Pizza la Cite	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1105	197	Lunasole Restaurant & Bar (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1106	198	Wei's Noodle House	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1107	0	Season's Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1108	200	The Original Georgie's	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1109	201	Festival Japan	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1110	202	Popeye The Chef ( closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1111	203	Champa Thai Food	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1112	204	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1113	205	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1114	206	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1115	207	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1116	208	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1117	209	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1118	210	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1119	211	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1120	212	Pho Thu Do (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1121	213	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1122	215	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1123	216	do_not_delete	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1124	0	Bento Sushi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1125	218	Mukut Indian Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1126	219	Lemon Grass Restaurant	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1127	221	Golden India	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1128	223	Spice Express	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1129	224	Ginkgo Garden	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1130	225	Restaurant Le Choix	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1131	226	La Bella Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1132	227	Familia Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1133	228	Restaurant Chez Gerry	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1134	229	Pizza Mia	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1135	0	Paesano's Pizzeria	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1136	231	Papa Pizza - Gatineau Ouest	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1137	232	New Hong Shing	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1138	234	Restaurant Lasp�zia Caf�	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1139	235	Chillies Indian Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1140	236	El Greko	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1141	0	Shawarma's King	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1142	0	Milano City Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1143	239	Hung Mein	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1144	0	Piper's Pizzeria Bar & Grill	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1145	241	Shawarma Rosana	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1146	242	Chez Gaston Shawarma(stopped delivery)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1147	245	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1148	246	Carlo's Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1149	247	Roma Pizzeria	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1150	248	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1151	249	Restaurant Basha	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1152	251	Lac Vien Vietnamese Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1153	0	Shogun Japanese Steak House & Sushi Bar	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1154	254	Gio Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1155	255	Centertown Donair & Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1156	256	Shawarma De Roza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1157	257	Riverside Pizzeria	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1158	258	Sawa Sushi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1159	259	Malone's Lakeside Bar & Grill(dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1160	260	Buffalo Bill	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1161	262	Pho Dau Bo Restaurant - North York (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1162	263	Planet Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1163	264	Pizza Bravo	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1164	265	Pho Kinh Do Vietnamese Thai	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1165	273	Golden Bowl Restaurant	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1166	274	House of Greek (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1167	275	Tony's Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1168	276	Paradise Shawarma	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1169	277	Pho Viet 24 (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1170	278	Pho Lien Hung	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1171	280	Pho Dau Bo Restaurant - Kitchener	n	y	0	0	2016-02-25 08:08:34+00	\N	0	0
1172	281	Lorenzo's Pizzeria - Pinecrest (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1173	283	Porteree Pub & Restaurant (closed dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1174	284	Miki's Pizzeria (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1175	285	Rosabella Pizza (dropped changed to yessen)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1176	286	Pho Xua	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1177	287	Basmati	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1178	288	Habaybna  (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1179	289	Shawarma Rayan (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1180	290	Nhu Lan (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1181	291	Shawarma Station	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1182	292	Silk Road Kabob House - Kanata ( closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1183	293	Ariana Kabab House(dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1184	294	Hong Kong Chinese Food Takeout	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1185	295	OpenRice Asian Fusion & Lounge	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1186	0	King Wok	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1187	297	Buffalo Bills Wings Laval	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1188	298	Lac Vien Vietnamese Restaurant - Scarborough	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1189	299	Lac Vien Vietnamese Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1190	300	Toto Pizzeria Lachine(DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1191	303	Colonnade City Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1192	0	Hockey Sushi 	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1193	305	Urban Turban	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1194	306	Winner House	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1195	307	La Shish (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1196	308	Gloria's Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1197	310	Pho Com Vietnam (moved dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1198	311	Hao Sushi (On Hold)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1199	312	Lucky King Take Out	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1200	313	Indian Biriyani House	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1201	314	Brother Wu	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1202	315	Jwaya (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1203	0	Red Chili Garden	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1204	317	Pho Orchid	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1205	318	Indian Punjabi Clay Oven	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1206	319	Al-Amine (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1207	320	Metro Pizza (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1208	321	Forno's Pizzeria (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1209	322	Eastern City Restaurant (sold)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1210	323	Vietnamese Noodle House	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1211	0	Zeewan Eatery	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1212	325	Pavarazzi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1213	0	Al's Diner	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1214	327	Lai Lai Chinese Food	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1215	328	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1216	329	Jardin Thai ( dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1217	330	Pizza Dorval Express (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1218	331	test	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1219	332	Silk Road Kabob House	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1220	333	Chez Antonio Restaurant(sold now chez villa)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1221	334	Colonnade Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1222	335	Aahar The Taste of India	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1223	336	Wing Wah Take Out & Delivery (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1224	337	Pho Bo Ga King - Somerset	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1225	339	El-Indio Inc (CLOSED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1226	340	Cheezy Pizza & Pasta	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1227	341	Tandoori Fusion	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1228	342	Chez Raffino (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1229	343	Du Barry Restaurant (CLOSED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1230	344	Mont Liban Bakery & Shawarma	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1231	345	Maximo's Pizza & Donair (dropped sold )	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1232	346	Papa Pizza - Gatineau Est	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1233	347	Buffalo Bill Wings Montreal	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1234	348	Buffalo Bill	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1235	349	Pizz'Ami (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1236	350	Erman Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1237	351	Roma Pizza and Donair (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1238	352	Poukham Thai Cuisine ( closed )	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1239	353	Pizza Test	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1240	354	Istanbouli Shawarma House	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1241	355	Willy's Pizza (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1242	356	Pizza Welat (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1243	357	Lees Greek & Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1244	358	Greco on Bank	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1245	359	Pho Tien Phat (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1246	360	Carlsbad Pizza (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1247	361	Express Asian Food (Changed to A Plus sushi)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1248	362	2 for 1 Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1249	364	La Famiglia Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1250	365	Dana's Indian Cuisine	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1251	366	Old Man Pizza (DROPPED) 	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1252	367	Willy's Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1253	368	Restaurant Da Gunes (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1254	369	Tandoori Raj (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1255	370	Pizza Crave (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1256	0	Ceylonta - Somerset	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1257	372	Bar Burrito Downtown (HOLD)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1258	373	Ever Afters	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1259	374	New Mukut Restaurant Indian Cuisine	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1260	375	Pita Pizza plus Kebob King ( Replaced)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1261	376	Bangkok Thai Garden	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1262	0	Pho by Night - Sweet Art	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1263	0	Angelo's	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1264	379	Aunty Rosa (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1265	380	Tassot Creole	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1266	383	Beneci Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1267	384	Stuffed Burgers & Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1268	385	Pasta Tutti Giorni (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1269	386	Wontonmama (CLOSED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1270	387	Orchid Sushi	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1271	389	Pizz�ria Parenteau PJ	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1272	391	Restaurant Mario's	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1273	0	Le Tandoor	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1274	394	La Rumeur	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1275	395	Le palais des sous marins et pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1276	396	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1277	0	Hokkaido Sushi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1278	398	Pappas Souvlaki  (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1279	399	Grand Tandoori (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1280	400	Basha La Prairie (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1281	401	Greek Express (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1282	402	Forest Hill Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1283	404	Pho Haven	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1284	405	3 for 1 Pizza (Closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1285	406	Sushi Presse	n	y	0	0	2016-02-25 08:08:34+00	\N	0	0
1286	407	Medina Fried Chicken	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1287	408	CasaLuna Pizza(quit)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1288	409	Pure Joy Sushi & Bubble Tea	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1289	410	Milano Pizzeria (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1290	411	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1291	412	Ambala	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1292	413	Lucky Fortune	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1293	414	Le Ming Chuan (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1294	415	Shaan Tandoori	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1295	416	Fat Albert's	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1296	417	Sushi Presse LaSalle (dropped closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1297	0	Basha Mont-Saint-Hilaire	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1298	419	Sous Le Palmier	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1299	421	Michelle BBQ	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1300	422	Basha (Van Horne)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1301	423	Basha (Des Laurentides) (dropped) click my resto	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1302	424	I Went to Philly Yonge (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1303	425	Parti Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1304	426	Mr. Chopsticks	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1305	427	Taco Loco (dropped for clique my slice)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1306	428	Pizza Tomato (DROPPED CLOSED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1307	429	Ocean Sushi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1308	0	Amir Dorion	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1309	431	Mysore (Brossard) Dropped Closed down	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1310	432	Thali	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1311	433	Amir Saint-Lazare	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1312	434	Amir Vaudreuil	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1313	436	Amir Vimont	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1314	438	India Cafe	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1315	439	Miso Japanese Cuisine	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1316	441	1 for 1 Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1317	442	Chester's Country Fried Chicken( Changed to PFC)_	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1318	443	Chester's Country Fried Chicken(changed to pfc)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1319	447	Caf� Asia	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1320	448	Yaseen Halal Pizza - Bank	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1321	449	Marble Slab Ottawa	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1322	450	Pili Pili Grilled Chicken (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1323	451	Fat Albert's	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1324	452	Fat Albert's 	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1325	453	Fat Albert's	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1326	0	Ramigab	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1327	455	La Porte de L'Inde	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1328	457	Happy Sushi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1329	458	Classico Louie's Pizzeria	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1330	0	Indira's Caribbean Spot	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1331	460	Kothu Rotti	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1332	0	Grazie Kitchen and Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1333	462	Mysore Plateau (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1334	463	Sababa Grill (dropped closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1335	464	Yum Yum	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1336	466	Green Lady	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1337	468	Madina Pizza (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1338	469	The Big Slice Pizza (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1339	470	La Bella Managua (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1340	471	Dolmades ( closed for business)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1341	0	TCJ Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1342	473	European Pizza and Shawarma	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1343	0	Chicken'licious	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1344	475	Little Saigon ( closed )	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1345	476	Amato (dropped )	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1346	477	Fat Albert's (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1347	483	Fat Albert's	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1348	484	Corrado's Authentic Italian Cuisine(dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1349	485	Mackies Burger ( closed for business)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1350	486	New York Pizza & Donair	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1351	487	Solymar ( dropped closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1352	488	Mekong Restaurant (quit)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1353	489	JN Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1354	490	Louis Steak House & Pizza(dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1355	492	Chef De La Maison Roti	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1356	493	Sushi Style	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1357	0	Basha (Monkland)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1358	0	The Portuguese Chicken Guys	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1359	496	Basha La Jeunesse (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1360	497	Sushi 930	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1361	498	Sushi Xtra	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1362	499	One of a Kind Pasta & Grill ( closed )	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1363	500	Ju Xiang Yuan ( dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1364	0	Bai Du Sushi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1365	502	Caf� Saffron	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1366	504	Urban Tandoor	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1367	505	Ricardo's Pizza (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1368	506	Namaste India 	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1369	507	Carolina's Cuisina	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1370	508	I Love Sushi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1371	509	Thai Plus	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1372	510	Restaurant Anne (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1373	511	Sushi Express Fantasia	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1374	512	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1375	513	Milano	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1376	514	Les D�lices d'Ali	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1377	515	Papa Ceo Fine Italian Foods & Pizza (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1378	516	New Sushi Island	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1379	517	The Kathi Roll Express - Yonge St	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1380	0	Sushiya	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1381	519	Wow Sushi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1382	0	Tap Tap Express	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1383	521	Boar n Wing (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1384	523	Miyuki Sushi Bar	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1385	524	La Belle �poque (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1386	525	Resto Miramar (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1387	527	Pizza Rive-Sud	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1388	528	Cafe Bistro Ohayo (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1389	529	Beer Man and Liquor Lady	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1390	530	Sushi Kampai	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1391	531	Ici Express	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1392	532	Xtreme Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1393	533	Baja Grill	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1394	534	Aji Sushi (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1395	535	Milano (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1396	537	303 Fusion Kitchen (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1397	538	Eat-a-Pita (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1398	539	Reece's Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1399	540	Suisen Sushi - Pho lam Ici	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1400	541	Restaurant O'Wok	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1401	542	Sachi Sushi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1402	543	Minato closed	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1403	544	Western Style Chicken and Pizza ( dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1404	0	Casse-Cro�te Qu�bec	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1405	546	Restaurant Mazaj (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1406	547	Yorgo's - Nepean	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1407	548	Capital City Smokehouse ( closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1408	549	Yorgo's - Barrhaven	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1409	550	New Town Chinese Food	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1410	0	Via613	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1411	552	Dominican Express(sold)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1412	553	Pizza Lovers Laurier	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1413	554	Glebe Indian Cuisine	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1414	557	Ch�teau Venus de Valleyfield (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1415	558	Mack's Restaurant (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1416	0	Mia Pasta - Valleyfield	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1417	560	Greek to go	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1418	562	Crustini Pizza (closing out of business)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1419	563	Hung Fatt	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1420	564	Pizzaland (sold dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1421	565	Zone Shish Taouk	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1422	566	Laziz Broast & Mix Grill (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1423	0	Mr Mozzarella	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1424	569	The Suya Spot Restaurant (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1425	0	Mia Pasta - Les Coteaux	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1426	572	Chess Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1427	573	Good Taste Fusion Restaurant (CLOSED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1428	575	Pho Lam Ici	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1429	576	Just Chicken (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1430	577	Catalina Pizza & Chicken (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1431	578	Restaurant Bravi (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1432	579	Nouilles Zen	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1433	580	Coin M�choui (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1434	581	Plato Restaurant - DROPPED	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1435	582	La Favorita	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1436	583	Mazaya - DROPPED	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1437	584	Tandoori Grill - DROPPED	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1438	585	Indi Express	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1439	586	Massa Grilladerie Grecque(dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1440	587	Au Petit Charbon closed	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1441	588	Amir - Greenfield Park - (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1442	0	The Kathi Roll Express - North York	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1443	0	Aladdin Donair & Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1444	591	Kim's 2 for 1 Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1445	592	Fiazza Fresh Fired (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1446	593	Saigon Pho	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1447	594	Hard Stones Grill Nepean Restaurant (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1448	595	Green Chili - DROPPED	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1449	596	Great Canadian Pizza - Shawcliffe Gate - DROPPED	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1450	597	Butter Chicken Hut - DROPPED	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1451	599	Nikos Pizza - DROPPED	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1452	600	Papa Joe's Pizza - Bridle Path	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1453	601	Resto Delice (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1454	602	Le Royaume D'Angkor (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1455	603	Lucky Panda	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1456	0	Basha - Beloeil	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1457	606	The Newdle Bar & Bubble Tea Co ( out of business)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1458	607	Burrito Shack - Sunnyside	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1459	608	Pasquale's Pizzeria	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1460	609	Real Tha� (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1461	611	Madoi Sushi Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1462	612	Papa Joe's Fried Chicken - Downtown	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1463	0	Papa Joe's Fried Chicken - Alta Vista	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1464	614	The Great Canadian Poutinerie (QUIT)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1465	615	La Dolce Vita	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1466	616	Prince Gourmet - Market	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1467	618	The Original Spaghetti House Pizzeria - Cobourg	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1468	620	Papa Joe's Fried Chicken - Bridle Path	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1469	623	Chez Villa - Gatineau	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1470	624	Yaseen Halal Pizza - Cyrville	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1471	626	The Original Spaghetti House - Lakefield	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1472	627	The Original Spaghetti House - Peterborough	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1473	628	The Corned Beef Hut (dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1474	629	Prince Gourmet - Innes	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1475	630	Restaurant �toile de Chambly (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1476	631	Papa's Pizzaland - Port Hope (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1477	633	Grillers Pizza & Wings	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1478	635	The Pizza Junction	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1479	636	Spice Indian Cuisine & Wine Bar (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1480	637	Tops In Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1481	638	Great Canadian Pizza - 17 Ave (DROPPED)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1482	639	Papa's Pizzaland - Peterborough (Dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1483	0	Lotus Chinese Food	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1484	0	Galo Piri Piri	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1485	0	Pho La Express	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1486	645	Asian Stars Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1487	0	Prince Gourmet - Cyrville	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1488	649	Prince Gourmet - Ogilvie 	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1489	650	Prince Gourmet - open in May	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1490	651	Royal Thai Cuisine	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1491	652	Pho Bo Ga Truc	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1492	0	Fuji Yama Japanese Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1493	656	Just Wok	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1494	657	Thai Coconut	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1495	0	Carmello's Italian Restaurant & Bar	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1496	660	Fresh Pho U	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1497	661	Pizza by Adonis	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1498	662	Lucky Bamboo	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1499	663	Nowshak Restaurant ( dropped)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1500	664	Silver Spoon HOLD	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1501	665	Tonimoes - Inuvik  (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1502	666	Tonimoes - Whitehorse	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1503	668	Chalet de Hull - (Stalled)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1504	669	iCook Pho You	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1505	670	Reginos Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1506	0	Ceylonta - Carling	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1507	672	The Wok	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1508	673	Chez Villa - Buckingham	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1509	683	Pizza Maisonneuve	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1510	684	The Mongolian Village	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1511	686	Wandee Thai Cuisine Sept 2022	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1512	0	Merivale Noodle House	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1513	688	Palki Cuisine of India	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1514	692	Sopranos Pizza Ottawa	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1515	694	Thai to Go	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1516	695	Light of India	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1517	696	Hometown Sports and Grill	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1518	697	Burrito Shack - Bank	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1519	698	Falafoul Gourmet (closed )	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1520	699	Host India	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1521	0	Colonnade Pizza - Merivale Road	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1522	701	Rangoli	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1523	703	Papa Pizza - Val-des-Monts	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1524	0	Bilal Halal Pizza - Yaseen Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1525	705	Asian Dragon (Backed out)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1526	706	Sushi Enshoku	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1527	707	New Hong Kong	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1528	708	Pho Bo Ga King - Merivale 	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1529	709	A Plus Sushi	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1530	0	Patricio's 2 For 1 Pizza	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1531	711	The Beer Man	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1532	712	Pizza Lovers Hunt Club	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1533	713	Fusion House (closed)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1534	714	Phu-Yen Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1535	715	Fusion House Kanata	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1536	716	Egg Roll Factory	y	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1537	0	1 for 1 Pizza Carling	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1538	718	Mangiano Pizzeria	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1539	719	Marroush Orleans	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1540	721	Napolis	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1541	722	Beneci Pizza Cobden	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1542	724	Sbarro	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1543	726	Joe's Pizza and Subs Laperriere	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1544	727	HaNoi Pho	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1545	728	Reynolds	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1546	729	Palermo Pizzeria	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1547	730	P&M's Kouzzina	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1548	732	Pizza 2 Go	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1549	733	Bar Burrito South Nepean	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1550	734	Mr Mozzarella	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1551	735	Bilal's Kabab	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1552	736	Shawarma House Walkley	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1553	0	Papa Pizza Ottawa	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1554	738	King Kabab and Shawarma	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1555	739	Mia's Indian Cuisine - St Laurent	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1556	746	Pita Bell	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1557	748	Island Grill Ottawa	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1558	0	Wellington Diner	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1559	750	Papaye Verte	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1560	752	Palermo Pizzeria - Donald 	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1561	753	Yimin Dim Sum House	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1562	754	Pizza Pita	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1563	756	Pizza la Diff�rence	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1564	757	Prince Gourmet- Montreal Road	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1565	0	Papa Grecque des Flandres	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1566	0	Jumbo Chinese Food Restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1567	760	India Palace	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1568	761	Green Papaya Preston	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1569	762	Green Papaya Baseline	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1570	763	Mario's St Philippe de la Prairie	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1571	764	Burger Lovers	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1572	0	Prince Gourmet	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1573	767	Via613 Bis (ON HOLD)	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1574	768	Asian Palace Ottawa	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1575	769	Original Burger Joint	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1576	770	Nu Caribbean	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1577	771	Matts_TEST_restaurant	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1578	772	Holland Kisa Grill	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1579	773	Vietnam Palace	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1580	0	Petit Peru	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1581	775	Kallisto	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1582	0	Via613 New	n	n	0	0	2016-02-25 08:08:34+00	\N	0	0
1593	800	test stefan	n	n	0	0	2016-10-15 14:55:58+00	\N	1	0
1594	0	First Test on V2	n	n	0	0	2016-12-05 20:46:53+00	\N	24	0
1595	114	Test James - Dovercourt Pizza	n	y	0	0	2017-03-17 13:28:13+00	\N	24	0
1596	0	TEST JUNE 2018	n	n	0	0	2018-06-13 15:14:23+00	\N	24	0
1597	0	Milano 14 Main St	n	n	0	0	2019-05-01 09:25:41+00	\N	24	0
1598	0	trigger_test	n	n	0	0	2019-05-24 11:07:44+00	\N	1	0
1603	0	Milano Test 1/13/2020	y	n	0	0	2020-01-13 17:09:49+00	2021-01-26 10:28:54+00	24	40
1604	0	Restaurant Test 3/15/2020	n	n	0	0	2020-03-15 07:52:38+00	\N	24	0
1605	0	Restaurant Test 26 Aug 2020	n	n	0	0	2020-08-26 07:09:28+00	2020-11-12 12:34:51+00	24	1
1608	0	Menu TEST 07 Dec 2020	n	n	0	0	2020-12-07 16:44:22+00	2020-12-07 11:44:32+00	40	40
1609	0	Aahar The Taste of India	y	n	0	0	2021-01-26 14:38:36+00	2021-01-26 09:38:45+00	24	24
1610	0	1111	n	n	0	0	2021-01-26 15:47:16+00	2021-01-26 10:47:20+00	40	40
1611	0	All Out Burger Bank St.	n	y	\N	0	2021-05-26 11:39:41+00	2021-05-26 07:39:48+00	24	24
1612	0	Milano Baseline TEST	y	n	0	0	2021-12-08 11:13:19+00	2021-12-08 06:13:28+00	24	24
1613	0	First Test with Yanni	y	n	0	0	2022-01-05 17:35:38+00	2022-01-05 12:35:45+00	24	24
1614	0	1st test with George	y	n	0	0	2022-01-05 17:36:41+00	2022-01-05 12:36:49+00	24	24
1615	0	Vanier Pizza & Subs TEST	n	n	0	0	2022-01-10 17:46:51+00	2022-01-10 12:47:03+00	40	40
1616	0	Tony's Pizza	y	n	0	0	2022-01-11 17:22:37+00	2022-01-11 12:22:44+00	44	44
1617	0	Ginkgo Garden	y	n	0	0	2022-01-13 17:34:09+00	2022-01-13 12:34:13+00	44	44
1618	0	Yorgos Yanni Practice	n	n	0	0	2022-01-19 20:00:59+00	2022-01-19 15:01:03+00	44	44
1619	0	Beneci Pizza Yanni Practice	y	n	0	0	2022-01-19 20:01:38+00	2022-01-19 15:01:42+00	44	44
1620	0	Xtreme Pizza Yanni Practice	y	n	0	0	2022-01-26 17:54:25+00	2022-01-26 12:54:31+00	44	44
1621	0	Mama Rosa Yanni Practice	y	n	0	0	2022-01-27 18:40:29+00	2022-01-27 13:40:32+00	44	44
1622	0	Papa Pizza Yanni	n	n	0	0	2022-01-31 18:08:21+00	2022-01-31 13:08:25+00	44	44
1623	0	Pizza Rama Yanni	y	n	0	0	2022-01-31 18:15:12+00	2022-01-31 13:15:16+00	44	44
1624	0	Yanni Bouziotas	n	n	0	0	2022-02-07 18:01:44+00	2022-02-07 13:01:48+00	44	44
1625	0	Aroy Thai	y	n	0	0	2022-02-22 18:16:17+00	2022-02-22 13:16:22+00	44	44
1626	0	La Maison Pho	y	n	0	0	2022-02-25 20:06:21+00	2022-02-25 15:06:27+00	44	44
1627	0	Sala Thai	y	n	0	0	2022-03-03 19:27:38+00	2022-03-03 14:27:42+00	44	44
1628	0	Ting's Kitchen	y	n	0	0	2022-03-08 18:57:24+00	2022-03-08 13:57:28+00	44	44
1629	0	Asia Garden Ottawa	y	n	0	0	2022-03-10 17:40:31+00	2022-03-10 12:40:34+00	44	44
1630	0	NANA Thai Cuisine	y	n	0	0	2022-03-15 17:37:46+00	2022-03-15 13:37:51+00	44	44
1631	0	China Moon	y	n	0	0	2022-03-15 18:13:02+00	2022-03-15 14:13:05+00	44	44
1632	0	Papa Joe's Pizza - Prince of Wales	y	n	0	0	2022-03-24 16:44:58+00	2022-03-24 12:45:02+00	44	44
1633	0	Mehfil Indian Cuisine	y	n	0	0	2022-03-30 18:50:47+00	2022-03-30 14:50:50+00	44	44
1634	0	Thai Coconut	n	n	0	0	2022-10-12 09:22:15+00	2022-10-12 05:22:32+00	24	24
1635	0	All Out Burger Gladstone	n	y	0	0	2023-04-24 09:41:24+00	2023-04-24 05:41:39+00	40	40
1636	0	All Out Burger Montreal Rd	n	y	0	0	2023-04-25 10:13:59+00	2023-04-25 06:14:07+00	40	40
1637	0	Kirkwood Pizza	n	y	1	1757650182	2023-08-04 04:37:30+00	2023-08-04 00:37:45+00	40	40
1638	0	Shawarma Depot	y	n	0	0	2023-09-06 09:33:18+00	2023-09-06 05:33:25+00	40	40
1639	0	River Pizza	n	y	0	0	2023-11-13 09:21:23+00	2023-11-13 04:21:33+00	40	40
1640	0	Genki Sushi ( dropped)	n	n	0	0	2023-12-18 10:41:18+00	2023-12-18 05:41:32+00	40	40
1641	0	Wandee Thai	n	y	0	0	2023-12-20 06:41:01+00	2023-12-20 01:41:07+00	40	40
1642	0	La Nawab	n	y	0	0	2024-01-04 08:44:23+00	2024-01-04 03:44:29+00	40	40
1643	0	Tony's Pizza	y	n	0	0	2024-01-10 09:28:34+00	2024-01-10 04:28:41+00	40	40
1654	0	Cosenza	n	y	0	0	2024-02-05 12:32:39+00	2024-02-05 07:32:48+00	40	40
1655	0	Merivale Pizza & Wings	y	n	0	0	2024-02-15 10:50:34+00	2024-02-15 05:50:59+00	40	40
1656	0	Shawarma Shish	y	n	0	0	2024-02-20 05:58:18+00	2024-02-20 00:58:29+00	40	40
1657	0	Cuisine Bombay Indienne	n	y	0	0	2024-03-12 11:45:55+00	2024-03-12 07:46:07+00	40	40
1658	0	Chicco Shawarma Cantley	n	y	0	0	2024-03-19 08:07:33+00	2024-03-19 04:07:42+00	40	40
1659	0	Chicco Pizza & Shawarma Buckingham	n	y	0	0	2024-03-19 13:50:25+00	2024-03-19 09:50:31+00	40	40
1660	0	Chicco Pizza Shawarma Anger	n	y	1	1757634187	2024-03-19 13:51:22+00	2024-03-19 09:51:30+00	40	40
1661	0	Chicco Pizza Maloney	n	y	0	0	2024-03-19 13:52:09+00	2024-03-19 09:52:15+00	40	40
1662	0	Chicco Shawarma Maloney	n	y	0	0	2024-03-19 13:52:48+00	2024-03-19 09:52:53+00	40	40
1663	0	Chicco Pizza de l�Hopital	n	y	1	1757638840	2024-03-19 13:54:33+00	2024-03-19 09:54:38+00	40	40
1664	0	Chicco Pizza St-Louis	n	y	1	1757547468	2024-03-19 13:55:09+00	2024-03-19 09:55:14+00	40	40
1665	0	Zait and Zaatar	n	y	0	0	2024-04-22 18:40:35+00	2024-04-22 14:40:43+00	45	45
1666	0	Mia Pizza Grec	n	n	0	0	2024-06-01 03:21:29+00	2024-05-31 23:22:23+00	40	40
1667	0	Le Hibou Qui Rit	n	n	0	0	2024-07-17 18:11:04+00	2024-07-17 14:11:11+00	45	45
1668	0	Little Gyros Greek Grill	n	y	0	0	2024-07-17 18:18:35+00	2024-07-17 14:18:41+00	45	45
1669	0	Bistro 548	n	n	0	0	2024-08-13 12:50:34+00	2024-08-13 08:50:49+00	40	40
1670	0	Capital Bites	n	y	0	0	2024-09-04 10:33:45+00	2024-09-04 06:33:53+00	40	40
1671	0	Pachino Pizza	n	y	0	0	2024-10-03 19:25:13+00	2024-10-03 15:25:47+00	40	40
1672	0	Pizza Marie	y	n	0	0	2024-11-07 13:55:08+00	\N	2	0
1673	0	Pizza Marie	n	y	0	0	2024-11-07 13:57:55+00	2024-11-07 08:58:06+00	40	40
1674	0	Capri Pizza	n	y	0	0	2025-01-29 10:40:54+00	2025-01-29 05:41:00+00	40	40
1675	0	Riverside Pizzeria	n	y	0	0	2025-02-11 10:12:26+00	2025-02-11 05:12:31+00	40	40
1676	0	Routine Poutine	n	y	0	0	2025-02-13 07:21:26+00	2025-02-13 02:21:49+00	40	40
1677	0	Chef Rad Halal Pizza & Burgers	n	y	0	0	2025-05-06 12:04:09+00	2025-05-06 08:04:14+00	45	45
1678	0	Al-s Drive In	n	y	0	0	2025-06-10 13:05:28+00	2025-06-10 09:05:34+00	45	45
\.


--
-- Data for Name: v2_restaurants_domain; Type: TABLE DATA; Schema: staging; Owner: postgres
--

COPY staging.v2_restaurants_domain (id, restaurant_id, domain, type, enabled, added_by, added_at, disabled_by, disabled_at) FROM stdin;
1	1	pizzalime.menu.ca	main	false	1	2016-11-01 19:35:59+00	1	2016-11-01 20:00:15+00
2	1	m.pizzalime.ca	mobile	false	1	2016-11-01 19:35:59+00	1	2016-11-01 20:00:15+00
3	1	pizzalime.ca	other	false	1	2016-11-01 19:35:59+00	1	2016-11-01 20:00:15+00
4	1	pizzalime.menu.ca	main	false	1	2016-11-01 20:00:15+00	1	2016-11-21 17:11:57+00
5	1	m.pizzalime.ca	mobile	false	1	2016-11-01 20:00:15+00	1	2016-11-21 17:11:57+00
6	1	pizzalime.ca	other	false	1	2016-11-01 20:00:15+00	1	2016-11-21 17:11:57+00
7	1	pizzalime1.ca	other	false	1	2016-11-01 20:00:15+00	1	2016-11-21 17:11:57+00
9	1	m.pizzalime.ca	mobile	true	1	2016-11-21 17:11:57+00	0	\N
10	1	pizzalime.ca	other	true	1	2016-11-21 17:11:57+00	0	\N
11	1	pizzalime1.ca	other	true	1	2016-11-21 17:11:57+00	0	\N
12	1595	landing.first-pizza-restaurant	main	false	1	2019-05-01 00:46:00+00	36	2019-07-04 06:32:00+00
13	1595	pizzalime.com	main	false	36	2019-07-04 06:32:00+00	1	2019-07-10 08:37:38+00
14	1595	order.pizzalime.com	main	false	1	2019-07-10 08:37:38+00	1	2019-07-10 08:46:43+00
15	1595	landing.menu	main	false	1	2019-07-10 08:46:43+00	1	2019-07-10 11:50:42+00
16	1595	landing1.menu	main	false	1	2019-07-10 11:50:42+00	1	2019-07-10 11:52:01+00
17	1595	landing.menu	main	false	1	2019-07-10 11:52:01+00	1	2019-07-16 07:00:20+00
18	1595	landing.menu	main	false	1	2019-07-16 07:00:20+00	0	\N
19	1595	lou.hopto.org:8080	other	false	1	2019-07-16 07:00:20+00	1	2020-03-09 10:39:04+00
21	1603	landing.menu	main	false	1	2020-03-05 04:28:28+00	1	2020-03-05 04:31:39+00
22	1603	landing.menu	main	false	1	2020-03-05 04:31:39+00	1	2020-03-05 04:31:54+00
23	1603	landing.menu	main	false	1	2020-03-05 04:31:54+00	1	2020-03-05 04:34:29+00
24	1603	landing.menu	main	false	1	2020-03-05 04:34:29+00	1	2020-03-05 04:40:57+00
25	1603	landing.menu	main	false	1	2020-03-05 04:40:57+00	1	2020-03-09 10:38:59+00
26	1603	landing1.menu	main	false	1	2020-03-09 10:38:59+00	1	2020-03-09 10:39:28+00
27	1595	landing.menu	main	false	1	2020-03-09 10:39:04+00	1	2020-03-09 10:39:24+00
28	1595	lou.hopto.org:8080	other	false	1	2020-03-09 10:39:04+00	1	2020-03-09 10:39:24+00
29	1595	landing.menu1	main	false	1	2020-03-09 10:39:24+00	1	2020-03-25 12:27:58+00
30	1595	lou.hopto.org:8080	other	false	1	2020-03-09 10:39:24+00	1	2020-03-25 12:27:58+00
31	1603	landing.menu	main	false	1	2020-03-09 10:39:28+00	1	2023-02-03 16:01:39+00
32	1595	landing.menu1	main	false	1	2020-03-25 12:27:58+00	1	2020-04-28 07:49:58+00
33	1595	lou.hopto.org:8080	other	false	1	2020-03-25 12:27:58+00	1	2020-04-28 07:49:58+00
34	1595	landing.menu1	main	false	1	2020-04-28 07:49:58+00	1	2020-06-10 08:12:43+00
35	1595	LANDING.LINKPC.NET:8080	other	false	1	2020-04-28 07:49:58+00	1	2020-06-10 08:12:43+00
36	1604	landing	main	false	1	2020-06-10 08:12:18+00	1	2020-06-10 08:16:45+00
37	1604	landing.linkpc.net:8080	other	false	1	2020-06-10 08:12:18+00	1	2020-06-10 08:16:45+00
38	1595	landing.menu1	main	false	1	2020-06-10 08:12:43+00	1	2020-06-10 08:12:47+00
39	1595	LANDING.LINKPC.NET:8081	other	false	1	2020-06-10 08:12:43+00	1	2020-06-10 08:12:47+00
40	1595	landing.menu12	main	false	1	2020-06-10 08:12:47+00	1	2020-06-10 08:17:06+00
41	1595	LANDING.LINKPC.NET:8081	other	false	1	2020-06-10 08:12:47+00	1	2020-06-10 08:17:06+00
42	1604	landing	main	true	1	2020-06-10 08:16:45+00	0	\N
43	1604	landing.linkpc.net:8081	other	true	1	2020-06-10 08:16:45+00	0	\N
44	1595	landing.menu12	main	false	1	2020-06-10 08:17:06+00	1	2021-03-30 14:22:57+00
45	1595	LANDING.LINKPC.NET:8080	other	false	1	2020-06-10 08:17:06+00	1	2021-03-30 14:22:57+00
46	1605	mclanding.ydns.eu:8080	main	true	1	2020-09-22 07:43:56+00	0	\N
47	1595	aggregator-landing.menu.ca	main	false	1	2021-03-30 14:22:57+00	1	2021-06-21 10:22:35+00
48	1595	LANDING.LINKPC.NET:8080	other	false	1	2021-03-30 14:22:57+00	1	2021-06-21 10:22:35+00
49	1611	order.alloutburger.com	main	false	24	2021-06-03 10:15:47+00	1	2021-06-21 10:22:51+00
50	1611	m.order.alloutburger.com	mobile	false	24	2021-06-03 10:15:47+00	1	2021-06-21 10:22:51+00
51	1595	aggregator1-landing.menu.ca	main	false	1	2021-06-21 10:22:35+00	1	2021-11-29 06:13:47+00
52	1595	LANDING.LINKPC.NET:8080	other	false	1	2021-06-21 10:22:35+00	1	2021-11-29 06:13:47+00
53	1611	aggregator-landing.menu.ca	main	false	1	2021-06-21 10:22:51+00	1	2021-11-29 06:13:26+00
54	1611	m.order.alloutburger.com	mobile	false	1	2021-06-21 10:22:51+00	1	2021-11-29 06:13:26+00
56	1595	aggregator-landing.menu.ca	main	false	1	2021-11-29 06:13:47+00	1	2022-01-27 14:35:01+00
57	1615	george.menu.ca	main	false	40	2022-01-10 15:47:59+00	1	2022-01-27 14:35:19+00
58	1595	aggregator1-landing.menu.ca	main	false	1	2022-01-27 14:35:01+00	1	2022-02-03 10:16:02+00
59	1615	aggregator-landing.menu.ca	main	false	1	2022-01-27 14:35:19+00	1	2022-02-03 10:15:59+00
60	1615	aggregator12-landing.menu.ca	main	true	1	2022-02-03 10:15:59+00	0	\N
61	1595	aggregator-landing.menu.ca	main	false	1	2022-02-03 10:16:02+00	24	2022-11-22 12:13:52+00
62	1039	new-mee-fung.menu.ca	main	true	1	2022-06-01 14:53:13+00	0	\N
63	1511	wandeethai.com	main	false	40	2022-09-14 05:48:28+00	40	2025-03-16 11:23:21+00
64	1452	bridlepath.papajoespizza.ca	main	true	40	2022-09-19 02:27:26+00	0	\N
65	1632	princeofwales.papajoespizza.ca	main	true	40	2022-09-21 04:56:35+00	0	\N
66	1634	order.thaicoconut.ca	main	false	24	2022-10-12 05:48:26+00	1	2022-10-13 10:59:51+00
67	1634	mthaicoconut.menu.ca	mobile	false	24	2022-10-12 05:48:26+00	1	2022-10-13 10:59:51+00
68	1634	order.thaicoconut.ca	other	false	24	2022-10-12 05:48:26+00	1	2022-10-13 10:59:51+00
69	1634	thai-coconut.menu.ca	main	false	1	2022-10-13 10:59:51+00	24	2022-11-22 12:14:10+00
70	1595	aggregator-landing1.menu.ca	main	false	24	2022-11-22 12:13:52+00	45	2023-04-27 11:09:20+00
71	1634	aggregator-landing.menu.ca	main	false	24	2022-11-22 12:14:10+00	1	2022-12-12 08:28:47+00
72	1634	thai-coconut.menu.ca	main	false	1	2022-12-12 08:28:47+00	1	2022-12-20 02:22:54+00
73	1634	aggregator-landing.menu.ca	main	false	1	2022-12-20 02:22:54+00	1	2023-04-27 13:12:02+00
74	1634	thai-coconut.menu.ca	other	false	1	2022-12-20 02:22:54+00	1	2023-04-27 13:12:02+00
75	1171	pho-dau-bo.menu.ca	main	true	1	2023-02-01 15:34:58+00	0	\N
76	1603	landing.menu1	main	false	1	2023-02-03 16:01:39+00	40	2023-04-05 11:43:56+00
77	1603	landing.menu.ca	main	false	40	2023-04-05 11:43:56+00	40	2023-04-05 11:44:09+00
78	1603	landing.menu1	main	true	40	2023-04-05 11:44:09+00	0	\N
79	1595	aggregator.menu.ca/index.php/restaurant/all-out-burger-gladstone	main	false	45	2023-04-27 11:09:20+00	1	2023-08-14 08:42:27+00
80	1634	aggregator1-landing.menu.ca	main	true	1	2023-04-27 13:12:02+00	0	\N
81	1634	thai-coconut.menu.ca	other	true	1	2023-04-27 13:12:02+00	0	\N
82	1635	aggregator-landing.menu.ca	main	false	1	2023-04-27 13:12:12+00	45	2023-05-17 02:12:29+00
83	1611	bank-alloutburger.menu.ca	main	false	45	2023-05-08 08:47:10+00	45	2023-05-17 02:06:54+00
84	1611	bank-alloutburger.menu.ca	main	true	45	2023-05-17 02:06:54+00	0	\N
85	1635	gladstone-alloutburger.menu.ca	main	true	45	2023-05-17 02:12:29+00	0	\N
86	1636	montreal-alloutburger.menu.ca	main	true	45	2023-05-17 02:13:44+00	0	\N
87	1637	george.menu.ca	main	false	40	2023-08-09 00:35:53+00	45	2023-08-09 08:55:57+00
88	1637	kirkwoodpizza.ca	main	false	45	2023-08-09 08:55:57+00	45	2024-12-18 15:37:13+00
89	1595	aggregator-landing.menu.ca	main	false	1	2023-08-14 08:42:27+00	1	2024-01-09 08:15:38+00
90	1638	shawarma-depot.ca	main	true	45	2023-09-13 08:49:28+00	0	\N
91	1639	order.riverpizza.ca	main	true	45	2023-11-16 15:07:54+00	0	\N
92	1595	aggregator-landing.menu1.ca	main	false	1	2024-01-09 08:15:38+00	1	2024-01-09 08:17:46+00
93	1642	aggregator-landing.menu.ca	main	false	1	2024-01-09 08:15:40+00	1	2024-01-09 08:17:39+00
94	1642	aggregator-landing.menu.ca	main	false	1	2024-01-09 08:17:39+00	1	2024-01-18 11:06:42+00
95	1595	aggregator-landing.menu.ca	main	false	1	2024-01-09 08:17:46+00	1	2024-01-18 11:06:39+00
96	1640	genki-sushi.ca	main	true	45	2024-01-16 07:49:08+00	0	\N
97	1640	genki-sushi.ca	other	true	45	2024-01-16 07:49:08+00	0	\N
98	1595	aggregator-landing.menu.ca	main	false	1	2024-01-18 11:06:39+00	1	2024-01-18 16:25:54+00
99	1642	aggregator-landing.menu.ca	main	false	1	2024-01-18 11:06:42+00	1	2024-01-18 16:25:52+00
100	1642	aggregator-landing.menu.ca	main	false	1	2024-01-18 16:25:52+00	45	2024-02-13 09:24:59+00
101	1595	aggregator-landing.menu.ca	main	true	1	2024-01-18 16:25:54+00	0	\N
102	1654	cosenzapizzancalzones.ca	main	true	45	2024-02-06 10:15:37+00	0	\N
103	1642	lanawab.com	main	true	45	2024-02-13 09:24:59+00	0	\N
104	1642	lanawab.com	other	true	45	2024-02-13 09:24:59+00	0	\N
105	1656	order.shawarmashish.ca	main	false	45	2024-02-20 08:21:23+00	45	2024-02-26 03:18:46+00
106	1656	order.shawarmashish.ca	other	false	45	2024-02-20 08:21:23+00	45	2024-02-26 03:18:46+00
107	1656	shawarmashish.menu.ca	main	false	45	2024-02-26 03:18:46+00	2	2024-05-29 13:59:28+00
108	1656	shawarmashish.menu.ca	other	false	45	2024-02-26 03:18:46+00	2	2024-05-29 13:59:28+00
109	1657	bombayindienne.ca	main	true	45	2024-03-14 14:52:31+00	0	\N
110	1657	bombayindienne.ca	other	true	45	2024-03-14 14:52:31+00	0	\N
111	1658	435monteedelasource.chiccopizzashawarma.com	main	true	45	2024-03-21 07:01:28+00	0	\N
112	1658	435monteedelasource.chiccopizzashawarma.com	other	true	45	2024-03-21 07:01:28+00	0	\N
113	1662	992boulevardmaloneyest.chiccopizzashawarma.com	main	true	45	2024-03-21 07:15:16+00	0	\N
114	1662	992boulevardmaloneyest.chiccopizzashawarma.com	other	true	45	2024-03-21 07:15:16+00	0	\N
115	1660	1096chemindemontrealo.chiccopizzashawarma.com	main	true	45	2024-03-21 10:07:15+00	0	\N
116	1660	1096chemindemontrealo.chiccopizzashawarma.com	other	true	45	2024-03-21 10:07:15+00	0	\N
117	1659	1009chemdemasson.chiccopizzashawarma.com	main	true	45	2024-03-21 10:10:58+00	0	\N
118	1659	1009chemdemasson.chiccopizzashawarma.com	other	true	45	2024-03-21 10:10:58+00	0	\N
119	1663	405bouldelhopital.chiccopizzashawarma.com	main	true	45	2024-03-21 10:15:23+00	0	\N
120	1663	405bouldelhopital.chiccopizzashawarma.com	other	true	45	2024-03-21 10:15:23+00	0	\N
121	1661	842boulevardmaloneyest.chiccopizzashawarma.com	main	true	45	2024-03-21 10:18:36+00	0	\N
122	1661	842boulevardmaloneyest.chiccopizzashawarma.com	other	true	45	2024-03-21 10:18:36+00	0	\N
123	1664	1783ruesaint-louis.chiccopizzashawarma.com	main	true	45	2024-03-21 10:21:05+00	0	\N
124	1664	1783ruesaint-louis.chiccopizzashawarma.com	other	true	45	2024-03-21 10:21:05+00	0	\N
125	1665	zaitandzaatar.ca	main	false	45	2024-04-22 14:53:38+00	2	2024-04-24 14:57:43+00
126	1665	zaitandzaatar.ca	other	false	45	2024-04-22 14:53:38+00	2	2024-04-24 14:57:43+00
127	1665	zaitandzaatar.ca	main	false	2	2024-04-24 14:57:43+00	2	2024-04-24 14:58:06+00
128	1665	zaitandzaatar.ca	other	false	2	2024-04-24 14:57:43+00	2	2024-04-24 14:58:06+00
129	1665	matt.menu.ca	other	false	2	2024-04-24 14:57:43+00	2	2024-04-24 14:58:06+00
130	1665	zaitandzaatar.ca	main	false	2	2024-04-24 14:58:06+00	2	2024-04-24 14:58:11+00
131	1665	zaitandzaatar.ca	other	false	2	2024-04-24 14:58:06+00	2	2024-04-24 14:58:11+00
132	1665	zaitandzaatar.ca	main	true	2	2024-04-24 14:58:11+00	0	\N
133	1665	zaitandzaatar.ca	other	true	2	2024-04-24 14:58:11+00	0	\N
134	1656	shawarmashish1.menu.ca	main	true	2	2024-05-29 13:59:28+00	0	\N
135	1656	shawarmashish1.menu.ca	other	true	2	2024-05-29 13:59:28+00	0	\N
136	1666	miapizzagrec.com	main	false	45	2024-06-05 04:55:12+00	2	2025-02-25 11:48:46+00
137	1666	miapizzagrec.com	mobile	false	45	2024-06-05 04:55:12+00	2	2025-02-25 11:48:46+00
138	1666	miapizzagrec.com	other	false	45	2024-06-05 04:55:12+00	2	2025-02-25 11:48:46+00
139	1668	kitchener.littlegyrosgreek.ca	main	true	45	2024-07-17 14:22:03+00	0	\N
140	1668	kitchener.littlegyrosgreek.ca	other	true	45	2024-07-17 14:22:03+00	0	\N
141	1285	sushipressebeaubien.com	main	true	45	2024-08-01 07:32:44+00	0	\N
142	1285	sushipressebeaubien.com	other	true	45	2024-08-01 07:32:44+00	0	\N
143	1669	matt.menu.ca	main	false	2	2024-08-13 08:59:52+00	45	2024-08-21 11:27:49+00
144	1669	matt.menu.ca	other	false	2	2024-08-13 08:59:52+00	45	2024-08-21 11:27:49+00
145	1669	bistro548.com	main	false	45	2024-08-21 11:27:49+00	45	2024-08-21 11:29:11+00
146	1669	bistro548.com	other	false	45	2024-08-21 11:27:49+00	45	2024-08-21 11:29:11+00
147	1669	bistro548.com	main	true	45	2024-08-21 11:29:11+00	0	\N
148	1669	bistro548.com	mobile	true	45	2024-08-21 11:29:11+00	0	\N
149	1669	bistro548.com	other	true	45	2024-08-21 11:29:11+00	0	\N
150	1671	pacinopizza.ca	main	false	45	2024-10-07 11:06:48+00	45	2024-10-09 13:31:52+00
151	1671	pacinopizza.ca	mobile	false	45	2024-10-07 11:06:48+00	45	2024-10-09 13:31:52+00
152	1671	pacinopizza.ca	other	false	45	2024-10-07 11:06:48+00	45	2024-10-09 13:31:52+00
153	1670	capitalbitespizza.ca	main	false	45	2024-10-09 10:38:05+00	45	2024-11-07 11:06:24+00
154	1670	capitalbitespizza.ca	mobile	false	45	2024-10-09 10:38:05+00	45	2024-11-07 11:06:24+00
155	1670	capitalbitespizza.ca	other	false	45	2024-10-09 10:38:05+00	45	2024-11-07 11:06:24+00
156	1671	pachinopizza.ca	main	false	45	2024-10-09 13:31:52+00	45	2024-10-09 15:34:53+00
157	1671	pachinopizza.ca	mobile	false	45	2024-10-09 13:31:52+00	45	2024-10-09 15:34:53+00
158	1671	pachinopizza.ca	other	false	45	2024-10-09 13:31:52+00	45	2024-10-09 15:34:53+00
159	1671	pacinopizza.ca	main	false	45	2024-10-09 15:34:53+00	2	2024-10-10 06:48:05+00
160	1671	pacinopizza.ca	mobile	false	45	2024-10-09 15:34:53+00	2	2024-10-10 06:48:05+00
161	1671	pacinopizza.ca	other	false	45	2024-10-09 15:34:53+00	2	2024-10-10 06:48:05+00
162	1671	pachinopizza.ca	main	false	2	2024-10-10 06:48:05+00	2	2025-02-10 16:06:09+00
163	1671	pachinopizza.ca	mobile	false	2	2024-10-10 06:48:05+00	2	2025-02-10 16:06:09+00
164	1671	pachinopizza.ca	other	false	2	2024-10-10 06:48:05+00	2	2025-02-10 16:06:09+00
165	1670	capitalbitespizza.ca	main	false	45	2024-11-07 11:06:24+00	45	2024-11-07 11:07:16+00
166	1670	capitalbitespizza.ca	mobile	false	45	2024-11-07 11:06:24+00	45	2024-11-07 11:07:16+00
167	1670	capitalbitespizza.ca	other	false	45	2024-11-07 11:06:24+00	45	2024-11-07 11:07:16+00
168	1670	capitalbites.ca	other	false	45	2024-11-07 11:06:24+00	45	2024-11-07 11:07:16+00
169	1670	capitalbitespizza.ca	main	true	45	2024-11-07 11:07:16+00	0	\N
170	1670	capitalbitespizza.ca	mobile	true	45	2024-11-07 11:07:16+00	0	\N
171	1670	capitalbitespizza.ca	other	true	45	2024-11-07 11:07:16+00	0	\N
172	1670	capitalbites.ca	other	true	45	2024-11-07 11:07:16+00	0	\N
173	1673	pizzamarie.ca	main	true	45	2024-11-18 07:15:50+00	0	\N
174	1673	pizzamarie.ca	mobile	true	45	2024-11-18 07:15:50+00	0	\N
175	1673	pizzamarie.ca	other	true	45	2024-11-18 07:15:50+00	0	\N
176	1637	order.kirkwoodpizza.ca	main	false	45	2024-12-18 15:37:13+00	45	2024-12-30 11:49:13+00
177	1637	order.kirkwoodpizza.ca	mobile	false	45	2024-12-18 15:37:13+00	45	2024-12-30 11:49:13+00
178	1637	order.kirkwoodpizza.ca	other	false	45	2024-12-18 15:37:13+00	45	2024-12-30 11:49:13+00
179	1637	order.kirkwoodpizza.ca	main	false	45	2024-12-30 11:49:13+00	45	2025-01-07 02:21:08+00
180	1637	order.kirkwoodpizza.ca	mobile	false	45	2024-12-30 11:49:13+00	45	2025-01-07 02:21:08+00
181	1637	order.kirkwoodpizza.ca	other	false	45	2024-12-30 11:49:13+00	45	2025-01-07 02:21:08+00
182	1637	kirkwoodpizza.ca	other	false	45	2024-12-30 11:49:13+00	45	2025-01-07 02:21:08+00
183	1637	kirkwoodpizza.ca	main	true	45	2025-01-07 02:21:08+00	0	\N
184	1637	kirkwoodpizza.ca	mobile	true	45	2025-01-07 02:21:08+00	0	\N
185	1637	kirkwoodpizza.ca	other	true	45	2025-01-07 02:21:08+00	0	\N
186	1674	testv2.menu.ca	main	false	45	2025-02-03 02:41:05+00	45	2025-02-03 02:41:36+00
187	1674	testv2.menu.ca	main	false	45	2025-02-03 02:41:36+00	45	2025-02-03 12:54:36+00
188	1674	testv2.menu.ca	other	false	45	2025-02-03 02:41:36+00	45	2025-02-03 12:54:36+00
189	1674	capripizzaottawa.com	main	true	45	2025-02-03 12:54:36+00	0	\N
190	1674	capripizzaottawa.com	other	true	45	2025-02-03 12:54:36+00	0	\N
191	1671	order.pachinopizza.ca	main	true	2	2025-02-10 16:06:09+00	0	\N
192	1671	order.pachinopizza.ca	mobile	true	2	2025-02-10 16:06:09+00	0	\N
193	1671	order.pachinopizza.ca	other	true	2	2025-02-10 16:06:09+00	0	\N
194	1675	testv2.menu.ca	main	false	45	2025-02-20 08:58:30+00	45	2025-02-24 11:32:43+00
196	1641	testv2.menu.ca	main	false	45	2025-02-24 11:33:36+00	40	2025-03-16 11:23:59+00
197	1666	matt.menu.ca	main	true	2	2025-02-25 11:48:46+00	0	\N
198	1666	matt.menu.ca	mobile	true	2	2025-02-25 11:48:46+00	0	\N
199	1666	matt.menu.ca	other	true	2	2025-02-25 11:48:46+00	0	\N
201	1641	wandeethai.com	main	true	40	2025-03-16 11:23:59+00	0	\N
202	1677	testv2.menu.ca	main	false	45	2025-05-08 06:42:26+00	45	2025-05-08 10:10:11+00
203	1677	testv2.menu.ca	other	false	45	2025-05-08 06:42:26+00	45	2025-05-08 10:10:11+00
204	1677	chefradpizza.ca	main	false	45	2025-05-08 10:10:11+00	0	2025-05-08 12:51:30+00
205	1677	chefradpizza.ca	other	false	45	2025-05-08 10:10:11+00	0	2025-05-08 12:51:30+00
206	1677	chefradpizza.ca	main	false	0	2025-05-08 12:51:30+00	0	2025-05-08 12:51:53+00
207	1677	chefradpizza.ca	main	true	0	2025-05-08 12:51:53+00	0	\N
208	1677	chefradpizza.ca	other	true	0	2025-05-08 12:51:53+00	0	\N
209	1678	alsdrivein.ca	main	true	45	2025-06-10 09:06:50+00	0	\N
210	1670	capitalbites.ca	mobile	true	45	2024-11-07 11:07:16+00	0	\N
\.


--
-- Data for Name: v2_restaurants_locations; Type: TABLE DATA; Schema: staging; Owner: postgres
--

COPY staging.v2_restaurants_locations (id, v1_id, address, city_id, province_id, zip, lat, lng, phone, email, active, updated_at) FROM stdin;
1	0	3137 Laguna Street	9	3	A1A 2A3	999.9999999000	1.0000000000	(555) 666-0605	testing@example.com	y	\N
1025	72	1615 Orleans Blvd. 	10	3	\N	45.4609985000	-75.5239029000	\N	\N	n	\N
1026	73	600 Terry Fox Drive	9	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	stefan@menu.ca	n	\N
1027	79	691 Somerset St W	9	3	\N	45.4110985000	-75.7069016000	\N	\N	n	\N
1028	81	569 Gladstone	9	3	\N	45.4094009000	-75.7003021000	\N	\N	n	\N
1029	82	1615 Orleans Blvd.	10	3	\N	45.4609985000	-75.5239029000	\N	\N	n	\N
1030	87	500 Hazeldean Rd	4	3	\N	45.2938995000	-75.8946991000	\N	\N	n	\N
1031	0	110 Bearbrook Road	22	3	K1B 5R2	45.4319000000	-75.5654984000	(072) 045-6789	\N	n	\N
1032	90	1615 Orleans Blvd.	9	3	K1C 7E2	45.4609985000	-75.5239029000	(613) 830-1808	noemail@noemail.com	n	\N
1033	91	875 Richmond Rd	9	3	\N	45.3792992000	-75.7733994000	\N	\N	n	\N
1034	92	223 Laurier Avenue East	9	3	\N	45.4259987000	-75.6817017000	\N	\N	n	\N
1035	93	3885 Innes Road	10	3	\N	45.4530983000	-75.5112000000	\N	\N	n	\N
1036	94	375 Des Epinettes Ave	10	3	\N	45.4656982000	-75.4953995000	\N	\N	n	\N
1037	95	527 Bronson Ave	9	3	\N	45.4059982000	-75.7025986000	\N	\N	n	\N
1038	96	5517 Hazeldean Rd	15	3	\N	45.2863998000	-75.9068985000	\N	\N	n	\N
1039	101	350 Booth St	9	3	K1R 7K1	45.4073982000	-75.7098007000	(613) 567-8228	noemail@noemail.ca	n	\N
1040	109	5669 Bank St	9	3	\N	45.2771988000	-75.5682983000	\N	\N	n	\N
1041	0	1574 Walkley Rd	9	3	\N	45.3768997000	-75.6471024000	\N	\N	n	\N
1042	111	127 Bridge St	14	3	\N	45.2230988000	-76.1949005000	\N	\N	n	\N
1043	0	1143 Baxter Rd	9	3	\N	45.3503990000	-75.7819977000	\N	\N	n	\N
1044	113	523 Gladstone Ave	9	3	\N	45.4100990000	-75.6987991000	\N	\N	n	\N
1045	0	277  Bank St. Ottawa	9	3	\N	45.3503990000	-75.7819977000	\N	\N	n	\N
1046	117	984 Merivale Rd	9	3	\N	45.3810005000	-75.7332001000	\N	\N	n	\N
1047	118	373 Dalhousie St	9	3	\N	45.4276009000	-75.6899033000	\N	\N	n	\N
1048	120	1009 Merivale Rd	9	3	\N	45.3793983000	-75.7331009000	\N	\N	n	\N
1049	121	1374 Baseline Rd	9	3	\N	45.3624992000	-75.7369995000	\N	\N	n	\N
1050	122	4000 Bridle Path Dr	9	3	\N	45.3487015000	-75.6454010000	\N	\N	n	\N
1051	123	530 Rideau St	9	3	\N	45.4320984000	-75.6778030000	\N	\N	n	\N
1052	124	251 Montreal Rd	9	3	\N	45.4362984000	-75.6613007000	\N	\N	n	\N
1053	125	411 McArthur Ave	9	3	\N	45.4322014000	-75.6483002000	\N	\N	n	\N
1054	126	159 Montreal Rd	18	3	\N	45.4347992000	-75.6651001000	\N	\N	n	\N
1055	127	876 Montreal Rd.	9	3	\N	45.4462013000	-75.6308975000	\N	\N	n	\N
1056	128	353 St Laurent Blvd	9	3	\N	45.4491005000	-75.6511993000	\N	\N	n	\N
1057	130	5929 Jeanne D'Arc Blvd S	9	3	\N	45.4649010000	-75.5409012000	\N	\N	n	\N
1058	131	175, boul Maloney E	21	4	\N	45.4840012000	-75.6494980000	\N	\N	n	\N
1059	132	425, boul La V�rendrye E	21	4	\N	45.5009003000	-75.6425018000	\N	\N	n	\N
1060	133	3009 Carling Ave	9	3	\N	45.3552017000	-75.8052979000	\N	\N	n	\N
1061	134	6505 Jeanne D'Arc Blvd. N.	10	3	\N	45.4793015000	-75.5361023000	\N	\N	n	\N
1062	135	125 Preston Street 	9	3	\N	45.4081001000	-75.7138977000	\N	\N	n	\N
1063	136	1055 Somerset St W	9	3	\N	45.4067993000	-75.7199020000	\N	\N	n	\N
1064	137	662 Somerset St W	9	3	K1R 5K4	45.4114990000	-75.7054977000	(613) 216-1220	no@no.ca	n	\N
1065	138	210 Somerset St W	9	3	\N	45.4171982000	-75.6913986000	\N	\N	n	\N
1066	140	937 Carling Ave	9	3	K1Y 4E4	45.3953018000	-75.7132034000	(613) 728-3749	noemail@noemail.com	n	\N
1067	0	3570 Strandherd Dr	9	3	\N	45.2747993000	-75.7368011000	\N	\N	n	\N
1068	142	2045 Meadowbrook Rd	9	3	\N	45.4269981000	-75.6009979000	\N	\N	n	\N
1069	143	1443 Ogilvie Rd	9	3	\N	45.4317017000	-75.6183014000	\N	\N	n	\N
1070	144	2006 Robertson Rd	17	3	\N	45.3246002000	-75.8271027000	\N	\N	n	\N
1071	145	1433 Woodroffe Ave	17	3	\N	45.3418999000	-75.7559967000	\N	\N	n	\N
1072	146	1610 Merivale Rd	17	3	\N	45.3483009000	-75.7322998000	\N	\N	n	\N
1073	0	2795 St. Joseph Blvd	10	3	\N	45.4734001000	-75.5205994000	\N	\N	n	\N
1074	151	3059 Carling Ave	9	3	K2L 4B6	45.3544006000	-75.8071976000	(072) 045-6789	\N	n	\N
1075	153	425 Donald St	9	3	\N	45.4285011000	-75.6493988000	\N	\N	n	\N
1076	154	2 Woodfield Dr	17	3	\N	45.3380013000	-75.7260971000	\N	\N	n	\N
1077	155	1224 Shillington Ave	9	3	\N	45.3805008000	-75.7283020000	\N	\N	n	\N
1078	157	1574 Walkley Rd	9	3	\N	45.3768997000	-75.6471024000	\N	\N	n	\N
1079	161	1078 Merivale Rd	9	3	\N	45.3773003000	-75.7332993000	\N	\N	n	\N
1080	162	747 Richmond Rd	9	3	\N	45.3828011000	-75.7698975000	\N	\N	n	\N
1081	164	3848 Innes Rd	10	3	\N	45.4514008000	-75.5152969000	\N	\N	n	\N
1082	171	25 Tapiola Cres	9	3	\N	45.3637009000	-75.6471024000	\N	\N	n	\N
1083	172	385 Tompkins Ave	10	3	\N	45.4771996000	-75.4981995000	\N	\N	n	\N
1084	173	245, rue de Cannes	21	4	\N	45.4902992000	-75.7238998000	\N	\N	n	\N
1085	174	68 Wylie Ave	9	3	\N	45.3545990000	-75.8066025000	\N	\N	n	\N
1086	175	201 Marier Ave	18	3	\N	45.4392014000	-75.6632996000	\N	\N	n	\N
1087	177	169 York St	9	3	\N	45.4299011000	-75.6891022000	\N	\N	n	\N
1088	178	2908 St. Joseph Blvd	10	3	\N	45.4746017000	-75.5179977000	\N	\N	n	\N
1089	179	988 Wellington St	9	3	K1Y 2X8	45.4056015000	-75.7227020000	(613) 722-5995	n@n.ca	n	\N
1090	180	250 Centrum Blvd	10	3	\N	45.4804001000	-75.5104980000	\N	\N	n	\N
1091	0	2 Woodfield Dr	9	3	\N	45.3375015000	-75.7263031000	\N	\N	n	\N
1092	182	117 Rue Front	19	4	\N	45.4043007000	-75.8546982000	\N	\N	n	\N
1093	183	134, rue Principale	23	4	\N	45.3950005000	-75.8430023000	\N	\N	n	\N
1094	184	574, boul Saint-Joseph	21	4	\N	45.4499016000	-75.7359009000	\N	\N	n	\N
1095	186	1730 Montreal Rd	22	3	\N	51.8642006000	-2.2381599000	\N	\N	n	\N
1096	187	1423 Woodroffe Ave	17	3	K2G 1V9	45.3432007000	-75.7570038000	(613) 228-2228	noemail@noemail.com	n	\N
1097	188	342 Richmond Rd	9	3	\N	45.3919983000	-75.7540970000	\N	\N	n	\N
1098	189	102B McEwen Ave	9	3	\N	45.3711014000	-75.7819977000	\N	\N	n	\N
1099	190	2430 Bank St	9	3	\N	45.3540001000	-75.6489029000	\N	\N	n	\N
1100	191	2750-B Iris St	9	3	\N	45.3479004000	-75.7872009000	\N	\N	n	\N
1101	192	94 Montreal Rd	18	3	\N	45.4339981000	-75.6668015000	\N	\N	n	\N
1102	193	211 Gilmour St	9	3	\N	45.4164009000	-75.6897964000	\N	\N	n	\N
1103	194	408, boul La V�rendrye E	21	4	\N	45.5009003000	-75.6416016000	\N	\N	n	\N
1104	195	455, boul Riel	21	4	\N	45.4650002000	-75.7731018000	\N	\N	n	\N
1105	197	5935 Jeanne D'Arc Blvd S	10	3	\N	45.4659004000	-75.5419006000	\N	\N	n	\N
1106	198	726 Somerset St W	9	3	\N	45.4104004000	-75.7079010000	\N	\N	n	\N
1107	0	826 Somerset St W	9	3	\N	45.4090996000	-75.7116013000	\N	\N	n	\N
1108	200	1661 Carling Ave	9	3	\N	45.3797989000	-75.7490005000	\N	\N	n	\N
1109	201	149 Kent Street	9	3	\N	45.4188995000	-75.7021027000	\N	\N	n	\N
1110	202	2241 St Laurent Blvd	9	3	\N	45.3889008000	-75.6175003000	\N	\N	n	\N
1111	203	193 King Edward Ave	9	3	\N	45.4325981000	-75.6889038000	\N	\N	n	\N
1112	204	14 Main St E	24	3	\N	44.8997002000	-76.0221024000	\N	\N	n	\N
1113	205	777 Principale St	28	3	\N	45.3153992000	-75.0894012000	\N	\N	n	\N
1114	206	3796 Champlain Rd	35	3	\N	45.4351006000	-75.1584015000	\N	\N	n	\N
1115	207	339 Dalhousie St	9	3	\N	45.4283981000	-75.6905975000	\N	\N	n	\N
1116	208	2241 St Laurent Blvd	9	3	\N	45.3903008000	-75.6183014000	\N	\N	n	\N
1117	209	990 River Rd	9	3	\N	45.2341003000	-75.6772995000	\N	\N	n	\N
1118	210	44 Seneca St	9	3	\N	45.3914986000	-75.6900024000	\N	\N	n	\N
1119	211	3050 Woodroffe Ave	17	3	\N	45.2845001000	-75.7238007000	\N	\N	n	\N
1120	212	3987 Riverside Dr	9	3	\N	45.3330994000	-75.6923981000	\N	\N	n	\N
1121	213	2600 County Rd 43	25	3	\N	45.0218010000	-75.6261978000	\N	\N	n	\N
1122	215	335 Montreal Rd	26	3	\N	45.0185013000	-74.7109985000	\N	\N	n	\N
1123	216	600 terry fox drive	4	3	\N	45.3008995000	-75.9063034000	\N	\N	n	\N
1124	0	606 Rideau St	9	3	\N	45.4329987000	-75.6752014000	\N	\N	n	\N
1125	218	610 Rideau St	9	3	\N	45.4331017000	-75.6750031000	\N	\N	n	\N
1126	219	331 Elgin St	9	3	K2P 1M5	45.4159012000	-75.6884995000	(613) 233-5000	no@thai.ca	n	\N
1127	221	408 McArthur Ave	9	3	\N	45.4319992000	-75.6485977000	\N	\N	n	\N
1128	223	1128 Cadboro Road	9	3	\N	45.4306984000	-75.6207962000	\N	\N	n	\N
1129	224	600 Terry Fox Drive	9	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	n	\N
1213	0	834 Clyde Ave	9	3	\N	45.3778000000	-75.7494965000	\N	\N	n	\N
1130	225	600 Terry Fox Drive	9	4	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	n	\N
1131	226	600 Terry Fox Drive	9	4	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	n	\N
1132	227	600 Terry Fox Drive	9	4	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	n	\N
1133	228	600 Terry Fox Drive	9	4	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	n	\N
1134	229	600 Terry Fox Drive	9	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	n	\N
1135	0	500 Old St Patrick St	9	3	\N	45.4347992000	-75.6837006000	\N	\N	n	\N
1136	231	22, rue des Flandres	21	4	\N	45.4705009000	-75.7186966000	\N	\N	n	\N
1137	232	285 Greenbank Rd	9	3	\N	45.3241997000	-75.7774963000	\N	\N	n	\N
1138	234	147, boul d'Europe	21	4	\N	45.4421997000	-75.7954025000	\N	\N	n	\N
1139	235	1581 Greenbank Rd	9	3	\N	45.2739983000	-75.7470016000	\N	\N	n	\N
1140	236	201 rue Eddy	21	4	\N	45.4319992000	-75.7204971000	\N	\N	n	\N
1141	0	395 Bank St	9	3	\N	45.4132996000	-75.6945038000	\N	\N	n	\N
1142	0	5511 Manotick Main St	9	3	\N	45.2271004000	-75.6862030000	\N	\N	n	\N
1143	239	2567 Baseline Rd	9	3	K2H 7B3	45.3414001000	-75.7873001000	(613) 828-7926	no@no.ca	n	\N
1144	0	1133 St Laurent Blvd	9	3	\N	45.4245987000	-75.6372986000	\N	\N	n	\N
1145	241	2219 Arch St	9	3	\N	45.3891983000	-75.6306000000	\N	\N	n	\N
1146	242	195 Rue Principale	23	4	\N	45.3956985000	-75.8343964000	\N	\N	n	\N
1147	245	26 Bridge St	29	3	\N	45.1372986000	-76.1429977000	\N	\N	n	\N
1148	246	60 Harmer Ave	9	3	\N	45.3968010000	-75.7326965000	\N	\N	n	\N
1149	247	1 Rue Hobin Unit 5	9	3	\N	45.2645988000	-75.9288025000	\N	\N	n	\N
1150	248	471 Hazeldean Rd	4	3	\N	45.2981987000	-75.8887024000	\N	\N	n	\N
1151	249	73, boul de la Gappe	21	4	\N	45.4654999000	-75.7169037000	\N	\N	n	\N
1152	251	1580 Dundas St	31	3	\N	43.6136017000	-79.5786972000	\N	\N	n	\N
1153	0	1671 Carling Ave	11	3	\N	45.3796997000	-75.7492981000	\N	\N	n	\N
1154	254	1896 Prince of Wales Dr	9	3	\N	45.3539009000	-75.7040024000	\N	\N	n	\N
1155	255	422 Bronson Ave	9	3	\N	45.4086990000	-75.7042007000	\N	\N	n	\N
1156	256	1896 Prince of Wales Dr	9	3	\N	45.3539009000	-75.7040024000	\N	\N	n	\N
1157	257	3679 Riverside Dr	9	3	\N	45.3434982000	-75.6909027000	\N	\N	n	\N
1158	258	250 Centrum Blvd	9	3	\N	45.4803009000	-75.5106964000	\N	\N	n	\N
1159	259	1001 Queen Elizabeth Drive	9	3	\N	45.3963013000	-75.7057037000	\N	\N	n	\N
1160	260	1440 Rue de l'Eglise	0	0	\N	0.0000000000	0.0000000000	\N	\N	n	\N
1161	262	4-2437 Finch Ave W	30	3	\N	43.7503014000	-79.5502014000	\N	\N	n	\N
1162	263	1009 Merivale Rd	9	3	\N	45.3793983000	-75.7331009000	\N	\N	n	\N
1163	264	108, boul Lorrain	21	4	\N	45.4949989000	-75.6073990000	\N	\N	n	\N
1164	265	650 Woodlawn Rd W	33	3	\N	43.5425987000	-80.3076019000	\N	\N	n	\N
1165	273	1598 Cyrville Rd	22	3	K1B 3L8	45.4180984000	-75.6106033000	(613) 744-2865	noemail@noemail.ca	n	\N
1166	274	1200 Prince of Wales	9	3	\N	45.3745003000	-75.7086029000	\N	\N	n	\N
1167	275	7772 Jeanne d'Arc Blvd	9	3	\N	45.4822998000	-75.5276031000	\N	\N	n	\N
1168	276	1441 Ogilvie Rd.	9	3	\N	45.4315987000	-75.6181030000	\N	\N	n	\N
1169	277	3415 Dixie Rd Unit 4A	31	3	\N	43.6178017000	-79.5951996000	\N	\N	n	\N
1170	278	1300 Finch Ave W	30	3	\N	43.7640991000	-79.4897003000	\N	\N	n	\N
1171	280	685 Fischer Hallman Rd, Unit G	34	3	N2E 4E9	43.4155998000	-80.5108032000	(519) 576-9996	noemail@noemial.ca	y	\N
1172	281	1105 Cobden Rd	9	3	\N	45.3521996000	-75.7779007000	\N	\N	n	\N
1173	283	583 College St.	12	3	\N	43.6553001000	-79.4132996000	\N	\N	n	\N
1174	284	26 Northside Rd	9	3	\N	45.3286018000	-75.8167038000	\N	\N	n	\N
1175	285	2895 Bank St	9	3	\N	45.3485985000	-75.6268997000	\N	\N	n	\N
1176	286	1768 St. Clair Ave W	12	3	\N	43.6739998000	-79.4610977000	\N	\N	n	\N
1177	287	373 Somerset St W	9	3	\N	45.4152985000	-75.6967010000	\N	\N	n	\N
1178	288	1581 Bank Street	9	3	\N	45.3792000000	-75.6676025000	\N	\N	n	\N
1179	289	1611c Bank Street	9	3	\N	45.3782997000	-75.6668015000	\N	\N	n	\N
1180	290	1949 Finch Ave W. Unit C	30	3	\N	43.7615013000	-79.4111023000	\N	\N	n	\N
1181	291	2446 Bank St	9	3	\N	45.3526001000	-75.6468964000	\N	\N	n	\N
1182	292	4055 Carling Ave Unit 3	9	3	\N	45.3381004000	-75.9076996000	\N	\N	n	\N
1183	293	2677 Alta Vista Road	9	3	\N	45.3727989000	-75.6641998000	\N	\N	n	\N
1184	294	800 Hunt Club Rd	9	3	\N	45.3443985000	-75.6663971000	\N	\N	n	\N
1185	295	1755 St Laurent Blvd	9	3	\N	45.4048996000	-75.6264038000	\N	\N	n	\N
1186	0	3891 Innes Rd	10	3	\N	45.4343987000	-75.5586014000	\N	\N	n	\N
1187	297	87 Boulevard des Laurentides	57	4	\N	45.5625000000	-73.6834030000	\N	\N	n	\N
1188	298	2270 Markham Rd	32	3	\N	43.8110008000	-79.2429962000	\N	\N	n	\N
1189	299	141 Cartwright Ave	30	3	\N	43.7211990000	-79.4684982000	\N	\N	n	\N
1190	300	1380 Notre Dame	36	4	\N	45.4348984000	-73.6753998000	\N	\N	n	\N
1191	303	2564 St. Joseph Blvd	10	3	\N	45.4706001000	-75.5257034000	\N	\N	n	\N
1192	0	4055 Carling Ave	4	3	\N	45.3381004000	-75.9076996000	\N	\N	n	\N
1193	305	591 March Rd	4	3	\N	45.3475990000	-75.9233017000	\N	\N	n	\N
1194	306	1 Tartan Drive	0	0	\N	0.0000000000	0.0000000000	\N	\N	n	\N
1195	307	1383 Clyde Ave	9	3	\N	45.3596001000	-75.7384033000	\N	\N	n	\N
1196	308	1588 Walkley Rd	9	3	\N	45.3769989000	-75.6470032000	\N	\N	n	\N
1197	310	1991-A Finch Ave W	12	3	\N	43.7570000000	-79.5196991000	\N	\N	n	\N
1198	311	1580 Merivale Rd	9	3	\N	45.3512993000	-75.7344971000	\N	\N	n	\N
1199	312	1134 Cadboro Rd	9	3	K1J 9K4	45.4309998000	-75.6211014000	(613) 564-9888	noemail@noemail.ca	n	\N
1200	313	1589 Bank St	9	3	\N	45.3787994000	-75.6675034000	\N	\N	n	\N
1201	314	1060 St Laurent Blvd	9	3	\N	45.4268990000	-75.6389008000	\N	\N	n	\N
1202	315	5831 Boul. Monk	20	4	\N	45.4599991000	-73.5967026000	\N	\N	n	\N
1203	0	178 McArthur Ave	9	3	\N	45.4310989000	-75.6626968000	\N	\N	n	\N
1204	317	124 Chestnut St	12	3	\N	43.6551018000	-79.3861008000	\N	\N	n	\N
1205	318	6-4055 Carling Ave.	4	3	K2K 2A4	45.3381004000	-75.9076996000	(613) 963-0625	no@no.ca	n	\N
1206	319	3549 Av Lacombe	20	4	\N	45.4971008000	-73.6231003000	\N	\N	n	\N
1207	320	4886 Boul. Saint Charles	38	4	\N	45.4668007000	-73.8744965000	\N	\N	n	\N
1208	321	683 Bronson Ave	9	3	\N	45.4021988000	-75.7003021000	\N	\N	n	\N
1209	322	2701 St Joseph Boul	9	3	\N	45.4720001000	-75.5231018000	\N	\N	n	\N
1210	323	121 Preston St	9	3	\N	45.4082985000	-75.7142029000	\N	\N	n	\N
1211	0	2916 Carling Ave	9	3	\N	45.3567009000	-75.8010025000	\N	\N	n	\N
1212	325	491 Somerset St W	9	3	\N	45.4138985000	-75.7003021000	\N	\N	n	\N
1214	327	449 McArthur Ave	9	3	\N	45.4325981000	-75.6444016000	\N	\N	n	\N
1215	328	5925 Perth St.	37	3	\N	45.1935997000	-75.8395996000	\N	\N	n	\N
1216	329	270, boul Labelle	41	4	\N	45.6273003000	-73.8075027000	\N	\N	n	\N
1217	330	208, ave Dorval	39	4	\N	45.4417992000	-73.7403030000	\N	\N	n	\N
1218	331	\N	0	0	\N	0.0000000000	0.0000000000	\N	\N	n	\N
1219	332	1021 Cyrville Rd	9	3	\N	45.4257011000	-75.6380005000	\N	\N	n	\N
1220	333	30, rue de Valcourt, unit� 30	21	4	\N	45.4924011000	-75.7074966000	\N	\N	n	\N
1221	334	461 Hazeldean Rd	4	3	\N	45.2994995000	-75.8865967000	\N	\N	n	\N
1222	335	727 Churchill Ave	9	3	\N	45.3810997000	-75.7470016000	\N	\N	n	\N
1223	336	261 Centrepointe Dr	9	3	\N	45.3390999000	-75.7711029000	\N	\N	n	\N
1224	337	778 Somerset St W	9	3	\N	45.4099007000	-75.7097015000	\N	\N	n	\N
1225	339	1 Rideaucrest Drive	17	3	\N	45.2848015000	-75.7225037000	\N	\N	n	\N
1226	340	111 Albert St	9	3	\N	45.4215012000	-75.6971970000	\N	\N	n	\N
1227	341	2130 Robertson Rd	9	3	\N	45.3213005000	-75.8351974000	\N	\N	n	\N
1228	342	4742, ch de la Cote-des-Neiges	20	4	\N	45.4956017000	-73.6107025000	\N	\N	n	\N
1229	343	343, boul Greber	21	4	\N	45.4788017000	-75.7009964000	\N	\N	n	\N
1230	344	351 Montreal Rd	18	3	\N	45.4380989000	-75.6559982000	\N	\N	n	\N
1231	345	11729 Jasper Ave	40	11	\N	53.5407982000	-113.5240021000	\N	\N	n	\N
1232	346	257, boul Maloney	21	4	\N	45.4845009000	-75.6466980000	\N	\N	n	\N
1233	347	5248 ch Queen Mary	20	4	\N	45.5625000000	-73.6832962000	\N	\N	n	\N
1234	348	232 Rue Jean Talon Ouest	20	4	\N	45.5625000000	-73.6832962000	\N	\N	n	\N
1235	349	2266, ch de Chambly	44	4	\N	45.5262985000	-73.4741974000	\N	\N	n	\N
1236	350	3628, av des �glises 	42	4	\N	46.7181015000	-71.2683029000	\N	\N	n	\N
1237	351	11819 40 Ave NW	0	0	\N	53.4762001000	-113.5380020000	\N	\N	n	\N
1238	352	110 rue Eddy	21	4	\N	45.4285011000	-75.7201004000	\N	\N	n	\N
1239	353	123 rue Saint Pas-Vrais	43	4	\N	45.6991997000	-73.8118973000	\N	\N	n	\N
1240	354	81 Holland Ave	9	3	\N	45.4010010000	-75.7324982000	\N	\N	n	\N
1241	355	1315 Richmond Road	9	3	\N	45.3680000000	-75.7860031000	\N	\N	n	\N
1242	356	2182 Marie-Victorin	19	4	\N	46.7779999000	-71.2601013000	\N	\N	n	\N
1243	357	106 - 180 Lees Ave	9	3	\N	45.4155006000	-75.6712036000	\N	\N	n	\N
1244	358	212 Bank St	9	3	\N	45.4170990000	-75.6979980000	\N	\N	n	\N
1245	359	2133 Jane St	30	3	\N	43.7197990000	-79.5083008000	\N	\N	n	\N
1246	360	6500 Russell Rd	67	3	\N	45.3692017000	-75.4559021000	\N	\N	n	\N
1247	361	202 Bank St	9	3	\N	45.4175987000	-75.6983032000	\N	\N	n	\N
1248	362	320 Bank St	9	3	\N	45.4143982000	-75.6957016000	\N	\N	n	\N
1249	364	1555 O'Connor Dr	12	3	\N	43.7150993000	-79.3051987000	\N	\N	n	\N
1250	365	101 - 340 Queen St 	9	3	\N	45.4184990000	-75.7053986000	\N	\N	n	\N
1251	366	223 Jameson Ave. 	12	3	\N	43.6403999000	-79.4372025000	\N	\N	n	\N
1252	367	3023 Cedarview Rd	17	3	\N	45.2659988000	-75.7714005000	\N	\N	n	\N
1253	368	233, boul. St-Anne	19	4	\N	45.8503990000	-73.4947968000	\N	\N	n	\N
1254	369	689 E65th Avenue 	46	8	\N	49.2120018000	-123.0920029000	\N	\N	n	\N
1255	370	244, 70 Shawville Blvd	9	3	\N	45.4215012000	-75.6971970000	\N	\N	n	\N
1256	0	403 Somerset St W	9	3	\N	45.4150009000	-75.6977005000	\N	\N	n	\N
1257	372	176 Rideau St	9	3	\N	45.4272003000	-75.6893997000	\N	\N	n	\N
1258	373	319 Rideau St	9	3	\N	45.4292984000	-75.6847992000	\N	\N	n	\N
1259	374	1968 Portobello Blvd	10	3	\N	45.4669991000	-75.4667969000	\N	\N	n	\N
1260	375	291 Queen Mary St	9	3	\N	45.4252014000	-75.6521988000	\N	\N	n	\N
1261	376	370 Dalhousie St	9	3	\N	45.4275017000	-75.6900024000	\N	\N	n	\N
1262	0	309 Dalhousie St	9	3	\N	45.4291992000	-75.6913986000	\N	\N	n	\N
1263	0	303 St-Patrick St	9	3	\N	45.4317017000	-75.6912994000	\N	\N	n	\N
1264	379	1025, boul du Seminaire N	47	4	\N	45.3372993000	-73.2677002000	\N	\N	n	\N
1265	380	3005, boul Taschereau	48	4	\N	45.4982986000	-73.4858017000	\N	\N	n	\N
1266	383	4 Lorry Greenberg Dr	9	3	\N	45.3698006000	-75.6211014000	\N	\N	n	\N
1267	384	912 St Laurent Blvd	9	3	\N	45.4313011000	-75.6414032000	\N	\N	n	\N
1268	385	\N	19	4	\N	52.9398994000	-73.5491028000	\N	\N	n	\N
1269	386	109 Clarence St	9	3	\N	45.4295998000	-75.6918030000	\N	\N	n	\N
1270	387	445 Laurier Ave W	9	3	K1R 0A2	45.4169006000	-75.7034988000	(613) 695-5588	noemail@noemail.ca	n	\N
1271	389	2630, rue Dessaulles	50	4	\N	45.6221008000	-72.9564972000	\N	\N	n	\N
1272	391	157, rue Saint-Jacques	47	4	\N	45.3060989000	-73.2561035000	\N	\N	n	\N
1273	0	1555, boul Provencher	52	4	J4W 1Z3	45.4733009000	-73.4748001000	(450) 672-6112	no@no.ca	n	\N
1274	394	3140, ch de Chambly	44	4	\N	45.5368996000	-73.5106964000	\N	\N	n	\N
1275	395	2860, rue de lyon	44	4	\N	45.5144005000	-73.4634018000	\N	\N	n	\N
1276	396	50 Main Street S	55	3	\N	45.3092003000	-74.6352005000	\N	\N	n	\N
1277	0	272 Dalhousie St	9	3	\N	45.4300003000	-75.6921997000	\N	\N	n	\N
1278	398	380, Route 132, St-Constant Suite 220	20	4	\N	45.3919983000	-73.5791016000	\N	\N	n	\N
1279	399	Grande Allee	53	4	\N	45.4682007000	-73.4332962000	\N	\N	n	\N
1280	400	1016 Boulevard Taschereau	54	4	\N	45.4132004000	-73.4921036000	\N	\N	n	\N
1281	401	3018 St Joseph Boulevard	10	3	\N	45.4767990000	-75.5139008000	\N	\N	n	\N
1282	402	868 Eglington Ave W.	12	3	\N	43.7010002000	-79.4262009000	\N	\N	n	\N
1283	404	2900 Woodroffe Ave	17	3	\N	45.2924995000	-75.7279968000	\N	\N	n	\N
1284	405	62 Main St	9	3	\N	45.4126015000	-75.6800995000	\N	\N	n	\N
1285	406	6497, rue Beaubien Est	4	4	H1M 1B1	45.5872002000	-73.5614014000	(514) 313-6291	laura_paniagua513@hotmail.com	y	\N
1286	407	170 Lees Ave	9	3	\N	45.4145012000	-75.6715012000	\N	\N	n	\N
1287	408	173 Hinchey Ave	9	3	\N	45.4071999000	-75.7306976000	\N	\N	n	\N
1288	409	2010 Trim Rd	10	3	\N	45.4705009000	-75.4542999000	\N	\N	n	\N
1289	410	49 Raglan S	58	3	\N	45.4747009000	-76.6875992000	\N	\N	n	\N
1290	411	2 Pembroke St ( Highway 17 )	59	3	\N	45.6258011000	-76.8768005000	\N	\N	n	\N
1291	412	600 Terry Fox Drive	9	4	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	example@example.com	n	\N
1292	413	1970 Trim Rd	10	3	\N	45.4715004000	-75.4549026000	\N	\N	n	\N
1293	414	8200, boul tashereau	52	4	\N	45.4491997000	-73.4697037000	\N	\N	n	\N
1294	415	2550, boul Lapini�re	52	4	J4Z 2M2	45.4682999000	-73.4625015000	(450) 678-9322	no@no.ca	n	\N
1295	416	245 Laurier Ave	9	3	\N	45.4194984000	-75.6968994000	\N	\N	n	\N
1296	417	7763, boul Newman	60	4	\N	45.4375992000	-73.6242981000	\N	\N	n	\N
1297	0	272 boul Sir-Wilfrid-Laurier	61	4	\N	45.5620003000	-73.1904984000	\N	\N	n	\N
1298	419	2038, rue Lapierre	60	4	\N	45.4367981000	-73.6149979000	\N	\N	n	\N
1299	421	3753, rue Ontario E	20	4	\N	45.5467987000	-73.5439987000	\N	\N	n	\N
1300	422	2685, avenue Van Horne	20	4	\N	45.5088005000	-73.6248016000	\N	\N	n	\N
1301	423	1040, boulevard des Laurentides	57	4	\N	45.5747986000	-73.6974030000	\N	\N	n	\N
1302	424	\N	11	3	\N	45.4215012000	-75.6971970000	\N	\N	n	\N
1303	425	267 Greenbank Rd	9	3	\N	45.3238983000	-75.7779007000	\N	\N	n	\N
1304	426	9-4055 Carling Ave 	4	3	\N	45.3381004000	-75.9076996000	\N	\N	n	\N
1305	427	173, rue Saint Hubert	57	4	\N	45.5643005000	-73.6835022000	\N	\N	n	\N
1306	428	4319, rue St-Denis	20	4	\N	45.5228004000	-73.5798035000	\N	\N	n	\N
1307	429	3751, rue Saint Urbain	20	4	\N	45.5139008000	-73.5762024000	\N	\N	n	\N
1308	0	470, boul Harwood	74	4	\N	45.3788986000	-74.0205002000	\N	\N	n	\N
1309	431	8200, boulevard Taschereau	52	4	\N	45.4491997000	-73.4697037000	\N	\N	n	\N
1310	432	161, rue Ontario Est	20	4	\N	45.5130997000	-73.5662994000	\N	\N	n	\N
1311	433	2673, c�te Saint Charles local 204	62	4	\N	45.4362984000	-74.1733017000	\N	\N	n	\N
1312	434	48, boul de la Cit�-des-Jeunes	20	4	\N	45.4152985000	-74.0220032000	\N	\N	n	\N
1313	436	2157, boul des Laurentides	57	4	\N	45.6105995000	-73.7361984000	\N	\N	n	\N
1314	438	30 Byward Market	9	3	\N	45.4277000000	-75.6930008000	\N	\N	n	\N
1315	439	132 Bank St	9	3	\N	45.4193001000	-75.6996994000	\N	\N	n	\N
1316	441	4025 Innes Rd	4	3	K2L 4B6	45.4558983000	-75.5062027000	(123) 456-7890	s@example.com	n	\N
1317	442	1574 Walkley Rd	9	3	\N	45.3765984000	-75.6479034000	\N	\N	n	\N
1318	443	527 Bronson Ave	9	3	\N	45.4059982000	-75.7025986000	\N	\N	n	\N
1319	447	1828 ave du Mont-Royal E	20	4	\N	45.5331993000	-73.5742035000	\N	\N	n	\N
1320	448	2895 Bank St	9	3	\N	45.3608017000	-75.6569977000	\N	\N	n	\N
1321	449	773 Bank St	9	3	\N	45.4037018000	-75.6886978000	\N	\N	n	\N
1322	450	355 Montreal Rd	9	3	\N	45.4387016000	-75.6552963000	\N	\N	n	\N
1323	451	1571 Bank St	9	3	\N	45.3796997000	-75.6673965000	\N	\N	n	\N
1324	452	2946 Baseline Rd	9	3	\N	45.3356018000	-75.8001022000	\N	\N	n	\N
1325	453	1990 Russell Rd	9	3	\N	45.4007988000	-75.6240997000	\N	\N	n	\N
1326	0	3915 Champlain Rd	35	3	\N	45.4315987000	-75.1561966000	\N	\N	n	\N
1327	455	5195, boul Saint-Laurent	20	4	\N	45.5237999000	-73.5944977000	\N	\N	n	\N
1328	457	2143 Danforth Ave	12	3	\N	43.6860008000	-79.3113022000	\N	\N	n	\N
1329	458	2549 Yonge St	12	3	\N	43.7132988000	-79.3995972000	\N	\N	n	\N
1330	0	937 Danforth Ave	12	3	\N	43.6800995000	-79.3379974000	\N	\N	n	\N
1331	460	408 Dalhousie Street	9	3	\N	45.4264984000	-75.6893997000	\N	\N	n	\N
1332	0	2006 Robertson Rd	9	3	\N	45.3238983000	-75.8271027000	\N	\N	n	\N
1333	462	4216, boul Saint-Laurent	20	4	\N	45.5180016000	-73.5817032000	\N	\N	n	\N
1334	463	4403, boul St-Laurent	20	4	\N	45.5195999000	-73.5848999000	\N	\N	n	\N
1335	464	2754 Danforth Street	12	3	\N	43.6531982000	-79.3832016000	\N	\N	n	\N
1336	466	1176 Danforth Ave	12	3	K2L 4B6	43.6814003000	-79.3328018000	(072) 045-6789	\N	n	\N
1337	468	1078 Danforth Ave	12	3	\N	43.6531982000	-79.3832016000	\N	\N	n	\N
1338	469	385 Yonge St	12	3	\N	43.6589012000	-79.3818970000	\N	\N	n	\N
1339	470	872 Bloor St W	12	3	\N	43.6622009000	-79.4250031000	\N	\N	n	\N
1340	471	460 Bronson Ave	9	3	\N	45.4080009000	-75.7039032000	\N	\N	n	\N
1341	0	64 B Queen St E	12	3	\N	43.6531982000	-79.3755035000	\N	\N	n	\N
1342	473	6-461 Park Rd S	63	3	\N	43.8834991000	-78.8676987000	\N	\N	n	\N
1343	0	2789 Danforth Ave	12	3	\N	43.6893005000	-79.2963028000	\N	\N	n	\N
1344	475	7163, rue Saint-Hubert	20	4	\N	45.5407982000	-73.6134033000	\N	\N	n	\N
1345	476	429A Yonge St	30	3	\N	43.6604996000	-79.3826981000	\N	\N	n	\N
1346	477	915 Watters Rd	9	3	\N	45.4840012000	-75.4739990000	\N	\N	n	\N
1347	483	5303 Canotek Rd	9	3	\N	45.4524002000	-75.5892029000	\N	\N	n	\N
1348	484	471 Cosburn Ave	12	3	\N	43.6531982000	-79.3832016000	\N	\N	n	\N
1349	485	460 Bronson Ave	9	3	\N	45.4080009000	-75.7039032000	\N	\N	n	\N
1350	486	9715 118 Ave	40	11	\N	53.5703011000	-113.4929962000	\N	\N	n	\N
1351	487	7610, rue Saint-Hubert	20	4	\N	45.5087013000	-73.5540009000	\N	\N	n	\N
1352	488	637 Somerset St W	9	3	\N	45.4119987000	-75.7049026000	\N	\N	n	\N
1353	489	1663 Cyrville Rd	9	3	\N	45.4179001000	-75.6081009000	\N	\N	n	\N
1354	490	1682 Cyrville Rd	9	3	\N	45.4175987000	-75.6075974000	\N	\N	n	\N
1355	492	1605, rue Dollard	60	4	\N	45.4280014000	-73.6293030000	\N	\N	n	\N
1356	493	80 A Dundas St E	12	3	\N	43.6563988000	-79.3779984000	\N	\N	n	\N
1357	0	5751 Av de Monkland	20	4	\N	45.4738998000	-73.6246033000	\N	\N	n	\N
1358	0	898 College St	12	3	\N	43.6539001000	-79.4255981000	\N	\N	n	\N
1359	496	\N	20	4	\N	45.5087013000	-73.5540009000	\N	\N	n	\N
1360	497	930 King St W	12	3	\N	43.6422997000	-79.4112015000	\N	\N	n	\N
1361	498	423 Queen Street West	12	3	\N	43.6487999000	-79.3952026000	\N	\N	n	\N
1362	499	746 Queen St W	12	3	\N	43.6459999000	-79.4101028000	\N	\N	n	\N
1363	500	641 Somerset St W	9	3	\N	45.4118996000	-75.7050018000	\N	\N	n	\N
1364	0	600 Terry Fox Drive	9	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@example.com	n	\N
1365	502	195 Kent St	9	3	\N	45.4174995000	-75.7008972000	\N	\N	n	\N
1366	504	2194 Robertson Rd	9	3	\N	45.3188019000	-75.8402023000	\N	\N	n	\N
1367	505	267 Bay St	9	3	\N	45.4150009000	-75.7037964000	\N	\N	n	\N
1368	506	1300 Bank St	9	3	\N	45.3902016000	-75.6793976000	\N	\N	n	\N
1369	507	600 Terry Fox Drive	9	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	n	\N
1370	508	4944 Dundas St W	69	3	\N	43.6483002000	-79.5294037000	\N	\N	n	\N
1371	509	354 Rideau St	9	3	\N	45.4295006000	-75.6836014000	\N	\N	n	\N
1372	510	2525, rue Provost	36	4	\N	45.4417992000	-73.6867981000	\N	\N	n	\N
1373	511	886 ch de Chambly	44	4	\N	45.5354004000	-73.4963989000	\N	\N	n	\N
1374	512	5516 Osgoode Main S	64	3	\N	45.1515999000	-75.5940018000	\N	\N	n	\N
1375	513	506 Main St W	27	3	\N	45.0929985000	-75.3541031000	\N	\N	n	\N
1376	514	33, rue Gamelin	21	4	\N	45.4328003000	-75.7333984000	\N	\N	n	\N
1377	515	654 Spadina Ave	12	3	\N	43.6633987000	-79.4023972000	\N	\N	n	\N
1378	516	571 College St	12	3	\N	43.6553001000	-79.4129028000	\N	\N	n	\N
1379	517	692 Yonge St	12	3	\N	43.6677017000	-79.3859024000	\N	\N	n	\N
1380	0	1950, ch du Fer � Cheval	65	4	\N	45.5752983000	-73.3279037000	\N	\N	n	\N
1381	519	50, rue Rachel E	20	4	\N	45.5185013000	-73.5811996000	\N	\N	n	\N
1382	0	1820, ch de Chambly	44	4	\N	45.5298004000	-73.4824982000	\N	\N	n	\N
1383	521	5164 Dundas St W	69	3	\N	43.6430016000	-79.5342026000	\N	\N	n	\N
1384	523	2778, boul Jacques Cartier	44	4	\N	45.5657997000	-73.4502029000	\N	\N	n	\N
1385	524	6250, boul Cousineau	53	4	\N	45.4939995000	-73.4065018000	\N	\N	n	\N
1386	525	5250, rue Jarry E	20	4	\N	45.5830002000	-73.5921021000	\N	\N	n	\N
1387	527	5836, ch de Chambly	53	4	\N	45.4996986000	-73.4100037000	\N	\N	n	\N
1388	528	4905 Boulevard Lapiniere 1700	52	4	\N	45.4497986000	-73.4339981000	\N	\N	n	\N
1389	529	123 fake st	9	3	\N	45.4215012000	-75.6971970000	\N	\N	n	\N
1390	530	37, route 132	49	4	\N	45.3874016000	-73.5692978000	\N	\N	n	\N
1391	531	5560 boul Grande All�e	53	4	\N	45.4757996000	-73.4443970000	\N	\N	n	\N
1392	532	125 Preston St	9	3	\N	45.4081001000	-75.7137985000	\N	\N	n	\N
1393	533	1001 Queen Elizabeth Dr	9	3	\N	45.3963013000	-75.7057037000	\N	\N	n	\N
1394	534	1421, ch Gascon	43	4	\N	45.7098999000	-73.6521988000	\N	\N	n	\N
1395	535	11 Windsor Dr	66	3	\N	44.6029015000	-75.7022018000	\N	\N	n	\N
1396	537	4413 17 Ave SE 	68	11	\N	51.0377998000	-113.9700012000	\N	\N	n	\N
1397	538	2-4602 17 Ave SE	68	11	\N	51.0133018000	-114.1029968000	\N	\N	n	\N
1398	539	1A-5268 Marlborough Dr NE	68	11	\N	51.0601006000	-113.9589996000	\N	\N	n	\N
1399	540	2641, rue Masson	20	4	\N	45.5457001000	-73.5764008000	\N	\N	n	\N
1400	541	6078, ch de Chambly	53	4	\N	45.4980011000	-73.4058990000	\N	\N	n	\N
1401	542	4931, rue Beaubien E	20	4	\N	45.5708008000	-73.5727005000	\N	\N	n	\N
1402	543	4260, rue Beaubien E	20	4	\N	45.5639992000	-73.5783005000	\N	\N	n	\N
1403	544	5320 8 Ave SE	68	11	\N	51.0452003000	-113.9570007000	\N	\N	n	\N
1404	0	214, boul Churchill	48	4	\N	45.4930000000	-73.4854965000	\N	\N	n	\N
1405	546	8265, boul Taschereau	52	4	\N	45.4463997000	-73.4702988000	\N	\N	n	\N
1406	547	1356 Clyde Ave	9	3	\N	45.3632011000	-75.7408981000	\N	\N	n	\N
1407	548	2900 Woodroffe Ave	9	3	\N	45.2924004000	-75.7281036000	\N	\N	n	\N
1408	549	3780 Fallowfield Rd	9	3	\N	45.2869987000	-75.7591019000	\N	\N	n	\N
1409	550	1022 Pleasant Park Rd	9	3	\N	45.3955002000	-75.6220016000	\N	\N	n	\N
1410	0	1577 Alta Vista Dr	9	3	\N	45.4086990000	-75.6580963000	\N	\N	n	\N
1411	552	3018 St Joseph Blvd	9	3	\N	45.4767990000	-75.5139008000	\N	\N	n	\N
1412	553	223 Laurier Ave E	9	3	\N	45.4258003000	-75.6817017000	\N	\N	n	\N
1413	554	589 Bank St	9	3	\N	45.4077988000	-75.6910019000	\N	\N	n	\N
1414	557	120, rue Grande-�le	71	4	\N	45.2647018000	-74.1334991000	\N	\N	n	\N
1415	558	835, boul Yvon L'Heureux	70	4	\N	45.5806007000	-73.2145996000	\N	\N	n	\N
1416	0	1165, boul Monseigneur Langlois	71	4	\N	45.2699013000	-74.1362991000	\N	\N	n	\N
1417	560	425 McArthur Avenue	9	3	\N	45.4323006000	-75.6468964000	\N	\N	n	\N
1418	562	654 Montreal Rd	9	3	\N	45.4430008000	-75.6408997000	\N	\N	n	\N
1419	563	2108 Montreal Rd	9	3	\N	45.4481010000	-75.5923004000	\N	\N	n	\N
1420	564	239, boul St Luc	47	4	\N	45.3517990000	-73.2931976000	\N	\N	n	\N
1421	565	501, boul du S�minaire N	47	4	\N	45.3279991000	-73.2830963000	\N	\N	n	\N
1422	566	1900 Innes Rd	9	3	\N	45.4179993000	-75.5960999000	\N	\N	n	\N
1423	0	5524 Manotick Main St	9	3	\N	45.2260017000	-75.6855011000	\N	\N	n	\N
1424	569	1319 Shillington Ave	9	3	\N	45.3792000000	-75.7321014000	\N	\N	n	\N
1425	0	344, Mont�e du Comt�	73	4	\N	45.2654991000	-74.2197037000	\N	\N	n	\N
1426	572	1227 Kilborn Ave	9	3	\N	45.3857002000	-75.6707001000	\N	\N	n	\N
1427	573	2701 St Joseph Blvd	9	3	\N	45.4720993000	-75.5230026000	\N	\N	n	\N
1428	575	2641, rue Masson	20	4	\N	45.5457001000	-73.5764008000	\N	\N	n	\N
1429	576	4303 17 Ave SE	68	11	\N	51.0377998000	-113.9729996000	\N	\N	n	\N
1430	577	7-5147 20 Ave SE	68	11	\N	51.0112991000	-114.1090012000	\N	\N	n	\N
1431	578	279, boul Jacques-Cartier	85	4	\N	45.5960999000	-73.4425964000	\N	\N	n	\N
1432	579	247-C, boul D'Anjou	76	4	\N	45.3594017000	-73.7235031000	\N	\N	n	\N
1433	580	77, boul St-Jean-Baptiste	76	4	\N	45.3624992000	-73.7136002000	\N	\N	n	\N
1434	581	2835 - 37 St SW	68	11	\N	51.0289993000	-114.1409988000	\N	\N	n	\N
1435	582	356 Preston St	9	3	\N	45.4017982000	-75.7102966000	\N	\N	n	\N
1436	583	2139 33 Ave SW	68	11	\N	51.0239983000	-114.1119995000	\N	\N	n	\N
1437	584	1101 14th St SW	68	11	\N	51.0430984000	-114.0950012000	\N	\N	n	\N
1438	585	72, rue St-Jean-Baptiste unit 123	76	4	\N	45.3615990000	-73.7135010000	\N	\N	n	\N
1439	586	5611, av de Monkland	20	4	\N	45.4754982000	-73.6229019000	\N	\N	n	\N
1440	587	2480, ch de Chambly	44	4	\N	45.5242996000	-73.4694977000	\N	\N	n	\N
1441	588	3838, boul Taschereau	53	4	\N	45.4872017000	-73.4700012000	\N	\N	n	\N
1442	0	1753�Avenue�Rd	30	3	\N	43.7294006000	-79.4181976000	\N	\N	n	\N
1443	0	436 14 St NW	68	11	\N	51.0564003000	-114.0940018000	\N	\N	n	\N
1444	591	4715 17 Ave SE	68	11	\N	51.0377998000	-113.9660034000	\N	\N	n	\N
1445	592	86 Murray St	9	3	\N	45.4296989000	-75.6936035000	\N	\N	n	\N
1446	593	3722 Innes Rd	10	3	\N	45.4505005000	-75.5176010000	\N	\N	n	\N
1447	594	1-1 Roydon Place 	17	3	\N	45.3381996000	-75.7256012000	\N	\N	n	\N
1448	595	1434 17 Ave SW	68	11	\N	51.0377998000	-114.0950012000	\N	\N	n	\N
1449	596	643 Shawcliffe Gate SW	68	11	\N	50.9113998000	-114.0759964000	\N	\N	n	\N
1450	597	643 Shawcliffe Gate SW	68	11	\N	50.9113998000	-114.0759964000	\N	\N	n	\N
1451	599	1405 11 St SW	68	11	\N	51.0404015000	-114.0889969000	\N	\N	n	\N
1452	600	4000 Bridle Path Dr	9	3	K1T 1Z5	45.3488007000	-75.6460037000	(613) 680-8484	CALLAMER@GMAIL.COM	n	\N
1453	601	5630, Grande All�e	53	4	\N	45.4746017000	-73.4428024000	\N	\N	n	\N
1454	602	13201, rue Sherbrooke E	20	4	\N	45.6585007000	-73.5089035000	\N	\N	n	\N
1455	603	3023 Cedarview Rd	9	3	\N	45.2659988000	-75.7714005000	\N	\N	n	\N
1456	0	223, boul Cartier	70	4	\N	45.5535011000	-73.2152023000	\N	\N	n	\N
1457	606	213 Hunter St W	78	3	\N	44.3056984000	-78.3225021000	\N	\N	n	\N
1458	607	437 Sunnyside Ave	9	3	\N	45.3903999000	-75.6929016000	\N	\N	n	\N
1459	608	511 E Genessee St	0	0	\N	0.0000000000	0.0000000000	\N	\N	n	\N
1460	609	415 George St N	78	3	\N	44.3063011000	-78.3200989000	\N	\N	n	\N
1461	611	437 George St	78	3	\N	44.3070984000	-78.3201981000	\N	\N	n	\N
1462	612	527 Bronson Ave	9	3	\N	45.4059982000	-75.7025986000	\N	\N	n	\N
1463	0	1574 Walkley Rd	9	3	\N	45.3765984000	-75.6479034000	\N	\N	n	\N
1464	614	200 Deschamps Ave	9	3	\N	45.4367981000	-75.6644974000	\N	\N	n	\N
1465	615	180 Preston St	9	3	\N	45.4062996000	-75.7129974000	\N	\N	n	\N
1466	616	55 Byward Market Square	9	3	\N	45.4269981000	-75.6921997000	\N	\N	n	\N
1467	618	365 Westwood Dr	79	3	\N	43.9599991000	-78.1885986000	\N	\N	n	\N
1468	620	4000 Bridle Path Dr	9	3	\N	45.3488007000	-75.6460037000	\N	\N	n	\N
1469	623	33, rue de Valcourt, unit� 30	21	4	\N	45.4765015000	-75.7013016000	\N	\N	n	\N
1470	624	1741 Cyrville Rd	9	3	\N	45.4168015000	-75.6026993000	\N	\N	n	\N
1471	626	150 Queen St	80	3	\N	44.4290009000	-78.2673035000	\N	\N	n	\N
1472	627	512 George St	78	3	\N	44.2891998000	-78.3172989000	\N	\N	n	\N
1473	628	476 Brant St	82	3	\N	43.3270988000	-79.7998962000	\N	\N	n	\N
1474	629	3848 Innes Rd	9	3	\N	45.4514008000	-75.5152969000	\N	\N	n	\N
1475	630	6075, ch de Chambly	53	4	\N	45.4981995000	-73.4064026000	\N	\N	n	\N
1476	631	113 Peter St	81	3	\N	43.9500008000	-78.2830963000	\N	\N	n	\N
1477	633	253 West St N	83	3	\N	44.6170006000	-79.4269028000	\N	\N	n	\N
1478	635	98 Dunlop St E	84	3	\N	44.3894005000	-79.6865997000	\N	\N	n	\N
1479	636	16 Dunlop St E	84	3	\N	44.3893013000	-79.6894989000	\N	\N	n	\N
1480	637	276 Memorial Ave	83	3	\N	44.5964012000	-79.4242020000	\N	\N	n	\N
1481	638	503 17 Ave SW	68	11	\N	50.9113998000	-114.0759964000	\N	\N	n	\N
1482	639	2695 Marsdale Rd	78	3	\N	44.2966003000	-78.3003998000	\N	\N	n	\N
1483	0	5-3780 Fallowfield Rd 	9	3	\N	45.2869987000	-75.7591019000	\N	\N	n	\N
1484	0	40 prom du portage	21	4	\N	45.4249992000	-75.7198029000	\N	\N	n	\N
1485	0	79 Montreal Rd	9	3	\N	45.4338989000	-75.6673965000	\N	\N	n	\N
1486	645	1380 Clyde Ave, Unit B	9	3	\N	45.3596001000	-75.7393036000	\N	\N	n	\N
1487	0	1750 Innes Rd	9	3	\N	45.4164009000	-75.6006012000	\N	\N	n	\N
1488	649	2177 Ogilvie Rd	9	3	\N	45.4448013000	-75.5949020000	\N	\N	n	\N
1489	650	Elgin street	9	3	\N	45.4319000000	-75.6100006000	\N	\N	n	\N
1490	651	62 Maple Ave	84	3	\N	44.3899002000	-79.6921005000	\N	\N	n	\N
1491	652	275 Bank St	9	3	\N	45.4156990000	-75.6964035000	\N	\N	n	\N
1492	0	908 17 Ave SW	68	11	\N	51.0379982000	-114.0820007000	\N	\N	n	\N
1493	656	2138 St Joseph Blvd	10	3	\N	45.4667015000	-75.5345001000	\N	\N	n	\N
1494	657	1390 Prince of Wales Dr	9	3	\N	45.3693008000	-75.7033997000	\N	\N	n	\N
1495	0	300 Sparks St	9	3	\N	45.4193993000	-75.7045975000	\N	\N	n	\N
1496	660	58 Dunlop St E	84	3	\N	44.3893013000	-79.6869965000	\N	\N	n	\N
1497	661	19 Concession St	86	3	\N	44.2416992000	-76.4954987000	\N	\N	n	\N
1498	662	3175 Rutherford Rd, Unit G34	87	3	\N	43.8284988000	-79.5382004000	\N	\N	n	\N
1499	663	3175 Rutherford Rd, Unit 74	87	3	\N	43.8284988000	-79.5382004000	\N	\N	n	\N
1500	664	1775 Carling Ave	0	0	\N	0.0000000000	0.0000000000	\N	\N	n	\N
1501	665	185 Mackenzie Rd	89	24	\N	68.3566971000	-133.7209930000	\N	\N	n	\N
1502	666	101 Main St	88	23	\N	60.7478981000	-135.1430054000	\N	\N	n	\N
1503	668	\N	0	0	\N	0.0000000000	0.0000000000	\N	\N	n	\N
1504	669	2006 Robertson Rd	9	3	\N	45.3238983000	-75.8271027000	\N	\N	n	\N
1505	670	411 McArthur Ave 	9	3	\N	45.4323006000	-75.6485977000	\N	\N	n	\N
1506	0	2920 Carling Ave	9	3	\N	45.3569984000	-75.8006973000	\N	\N	n	\N
1507	672	1896 Prince of Wales Dr	9	3	\N	45.3536987000	-75.7048035000	\N	\N	n	\N
1508	673	486 B Avenue de Buckingham	93	4	\N	45.5872002000	-75.4168015000	\N	\N	n	\N
1509	683	574, boul Saint-Joseph	21	4	\N	45.4499016000	-75.7359009000	\N	\N	n	\N
1510	684	1980 Ogilvie Rd	9	3	\N	45.4319000000	-75.6100006000	\N	\N	n	\N
1511	686	40 Beech St	9	3	K1S 4M8	45.4011993000	-75.7073975000	(613) 237-1641	noemail@noemail.ca	n	\N
1512	0	1519 Merivale Rd	9	3	\N	45.3566017000	-75.7368011000	\N	\N	n	\N
1513	688	1060 Ogilvie Rd	9	3	\N	45.4247017000	-75.6352997000	\N	\N	n	\N
1514	692	169 York St 	9	3	\N	45.4300003000	-75.6892014000	\N	\N	n	\N
1515	694	3-701 Eagleson Rd	4	3	\N	45.2878990000	-75.8677979000	\N	\N	n	\N
1516	695	730 Bank St	9	3	K1S 2G3	45.4040985000	-75.6891022000	(613) 563-4411	no@no.ca	n	\N
1517	696	1525 Banks Street	9	3	\N	45.3809013000	-75.6688004000	\N	\N	n	\N
1518	697	775 Bank St	9	3	\N	45.4035988000	-75.6885986000	\N	\N	n	\N
1519	698	2950 Bank Street	9	3	\N	45.3462982000	-75.6260986000	\N	\N	n	\N
1520	699	622 Montreal Rd	9	3	\N	45.4424019000	-75.6417007000	\N	\N	n	\N
1521	0	1463 Merivale Rd	9	3	\N	45.3605995000	-75.7330017000	\N	\N	n	\N
1522	701	2491 St-Joseph Blvd	10	3	\N	45.4700012000	-75.5272980000	\N	\N	n	\N
1523	703	1797, rte du Carrefour	90	4	\N	45.5932999000	-75.6173019000	\N	\N	n	\N
1524	0	250 Centrum Blvd	10	3	\N	45.4803009000	-75.5106964000	\N	\N	n	\N
1525	705	3777 Strandherd Dr	9	3	\N	45.2681007000	-75.7494965000	\N	\N	n	\N
1526	706	57 chemin de la grande-cote	91	4	\N	45.6188011000	-73.8135986000	\N	\N	n	\N
1527	707	1433 Woodroffe Ave	9	3	\N	45.3422012000	-75.7555008000	\N	\N	n	\N
1528	708	1-1234 Merivale Road	9	3	\N	45.3707008000	-75.7332993000	\N	\N	n	\N
1529	709	202 Bank St	9	3	\N	45.4174995000	-75.6984024000	\N	\N	n	\N
1530	0	824  Mountain Rd	92	6	\N	46.0758018000	-64.8042984000	\N	\N	n	\N
1531	711	427 Mcarthur Ave	9	3	K1K 1G5	45.4215012000	-75.6971970000	(613) 852-6693	noemail@noemail.com	n	\N
1532	712	800 Hunt Club Road	9	3	\N	45.3443985000	-75.6663971000	\N	\N	n	\N
1533	713	1947 Bank Street	9	3	\N	45.3670006000	-75.6611023000	\N	\N	n	\N
1534	714	700 March Rd	9	3	\N	45.3497009000	-75.9248962000	\N	\N	n	\N
1535	715	5507 Hazeldean Rd	9	3	\N	45.2896996000	-75.9024963000	\N	\N	n	\N
1536	716	261 Centrepointe drive	9	3	K2G 6E8	45.3391991000	-75.7713013000	(613) 226-3888	noemail@noemail.ca	n	\N
1537	0	 2525 Carling Ave	9	3	\N	45.3648987000	-75.7861023000	\N	\N	n	\N
1538	718	2564 St. Joseph Blvd	10	3	\N	45.4705009000	-75.5251007000	\N	\N	n	\N
1539	719	2564 St Joseph Boulevard	10	3	\N	45.4705009000	-75.5251007000	\N	\N	n	\N
1540	721	81 Richmond Rd	9	3	\N	45.3969002000	-75.7434006000	\N	\N	n	\N
1541	722	1105 Cobden Road	9	3	\N	45.3521996000	-75.7779007000	\N	\N	n	\N
1542	724	222 Hunt Club Road	9	3	\N	45.3348999000	-75.6920013000	\N	\N	n	\N
1543	726	1577 Laperriere	9	3	\N	45.3767014000	-75.7456970000	\N	\N	n	\N
1544	727	4312 Innes Road	10	3	\N	45.4589996000	-75.4934006000	\N	\N	n	\N
1545	728	874 Clyde ave	9	3	\N	45.3764992000	-75.7485962000	\N	\N	n	\N
1546	729	25 Tapiola Cres	9	3	\N	45.3639984000	-75.6465988000	\N	\N	n	\N
1547	730	1463 Lasalle Blvd	94	3	\N	46.5215988000	-80.9427032000	\N	\N	n	\N
1548	732	1856, Rue Sherbrooke	95	4	\N	45.2784996000	-72.1278992000	\N	\N	n	\N
1549	733	600 Terry Fox Drive	9	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	e@e.com	n	\N
1550	734	1 Tartan drive	9	3	\N	45.2699013000	-75.7539978000	\N	\N	n	\N
1551	735	4055 Carling	4	3	\N	45.3380013000	-75.9076004000	\N	\N	n	\N
1552	736	1739 Walkley Rd	9	3	\N	45.3779984000	-75.6449966000	\N	\N	n	\N
1553	0	1202 Bank Street	9	3	\N	45.3918991000	-75.6815033000	\N	\N	n	\N
1554	738	291 Queen Mary St	9	3	\N	45.4252014000	-75.6521988000	\N	\N	n	\N
1555	739	327 St Laurent Blvd	9	3	\N	45.4500008000	-75.6516037000	\N	\N	n	\N
1556	746	1846 Carling Av	9	3	\N	45.3762016000	-75.7566986000	\N	\N	n	\N
1557	748	324 Bank Street	9	3	\N	45.4142990000	-75.6957016000	\N	\N	n	\N
1558	0	1385 Wellington St W	9	3	\N	45.3981018000	-75.7396011000	\N	\N	n	\N
1559	750	69 rue Laurier	21	4	\N	45.4304008000	-75.7104034000	\N	\N	n	\N
1560	752	425 Donald St	9	3	\N	45.4283981000	-75.6495972000	\N	\N	n	\N
1561	753	870 Somerset Street West	9	3	\N	45.4085999000	-75.7134018000	\N	\N	n	\N
1562	754	291 Queen Mary	9	3	\N	45.4252014000	-75.6521988000	\N	\N	n	\N
1563	756	4 Rue Belmont	23	4	\N	45.3950996000	-75.8302994000	\N	\N	n	\N
1564	757	576 Montreal Road	9	3	\N	45.4421005000	-75.6438980000	\N	\N	n	\N
1565	0	22 rue des flandres #7	21	4	\N	45.4710007000	-75.7182007000	\N	\N	n	\N
1566	0	2672 Innes road	9	3	\N	45.4325981000	-75.5622025000	\N	\N	n	\N
1567	760	292 Albert St	9	3	\N	45.4192009000	-75.7017975000	\N	\N	n	\N
1568	761	256 Preston Street	9	3	\N	45.4045982000	-75.7118988000	\N	\N	n	\N
1569	762	1374 Baseline Rd	9	3	\N	45.3622017000	-75.7369995000	\N	\N	n	\N
1570	763	3005 Edouard VII 	96	4	\N	45.3525009000	-73.4741974000	\N	\N	n	\N
1571	764	233 Laurier Ave E	9	3	\N	45.4215012000	-75.6971970000	\N	\N	n	\N
1572	0	250 Greenbank	9	3	\N	45.3249016000	-75.7796021000	\N	\N	n	\N
1573	767	1577 Alta Vista Dr	9	3	\N	45.4086990000	-75.6580963000	\N	\N	n	\N
1574	768	3320 McCarthy Road	9	3	\N	45.3512993000	-75.6703033000	\N	\N	n	\N
1575	769	873 Bank Street	9	3	\N	45.4009018000	-75.6869965000	\N	\N	n	\N
1576	770	100 Castlefrank Road	4	3	\N	45.2937012000	-75.8817978000	\N	\N	n	\N
1577	771	109 mattingly way	9	3	\N	45.2677994000	-75.6970978000	\N	\N	n	\N
1578	772	83 Holland Ave	9	3	\N	45.4009018000	-75.7323990000	\N	\N	n	\N
1579	773	819 Somerset St W	9	3	\N	45.4094009000	-75.7113037000	\N	\N	n	\N
1580	0	792 Somerset St W	9	3	\N	45.4095993000	-75.7099991000	\N	\N	n	\N
1581	775	2950 Bank Street	9	3	\N	45.4215012000	-75.6971970000	\N	\N	n	\N
1582	0	\N	9	3	\N	45.4215012000	-75.6971970000	\N	\N	n	\N
1593	800	600 Terry Fox Drive	4	3	K2L 4B6	45.3003998000	-75.9067993000	(072) 045-6789	stefan1@menu.ca1	n	\N
1594	0	600 Terry Fox Drive	9	3	K2L 4B6	45.2997054000	-75.9048498000	(123) 456-7890	example@menu.ca	n	\N
1595	114	2047 Dovercourt Avenue	9	4	K2A 0X2	45.3784528000	-75.7689956000	(001) 123-4567	stefan@menu.ca	y	\N
1596	0	1st Street	101	0	\N	45.3444726000	-75.6340193000	(613) 222-3333	\N	n	\N
1597	0	600 Terry Fox Drive	4	0	K2L 4B6	45.3003900000	-75.9069158000	(123) 456-7890	example@menu.ca	n	\N
1598	0	600 Terry Fox Drive	101	0	K2L 4B6	45.3003900000	-75.9069158000	(072) 045-6789	\N	n	\N
1603	0	600 Terry Fox Drive	4	3	K2L 4B6	45.3003900000	-75.9069158000	(613) 680-2050	root@example.com	n	2021-01-26 10:28:54+00
1604	0	600 Terry Fox Drive	9	0	K2L 4B6	45.3003900000	-75.9069158000	(613) 123-4567	george.nicolae85@yahoo.com	n	\N
1605	0	600 Terry Fox Drive	4	3	K2L 4B6	45.3003900000	-75.9069158000	(613) 123-4567	george.nicolae85@yahoo.com	n	2020-11-12 12:34:51+00
1608	0	600 Terry Fox Drive	4	3	K2L 4B6	45.3003900000	-75.9069158000	(613) 123-4567	george@menu.ca	n	2020-12-07 11:44:32+00
1609	0	727 Churchill Avenue	9	3	P3A 3Z7	46.5125390000	-80.9345621000	(613) 688-4444	rupinder.pal@hotmail.com	n	2021-01-26 09:38:45+00
1610	0	600 Terry Fox Drive	101	11	K2L 4B6	45.3003900000	-75.9069158000	(613) 680-2050	\N	n	2021-01-26 10:47:20+00
1611	0	2560 Bank Street	9	3	K1T 1M9	45.3535830000	-75.6411234000	(613) 733-4444	george@menu.ca	y	2021-05-26 07:39:48+00
1612	0	2529 Baseline Road	9	3	K2C 0E3	45.3423601000	-75.7854845000	(613) 829-5777	george@menu.ca	n	2021-12-08 06:13:28+00
1613	0	123 Terry Fox Street	101	3	L6B 0R1	43.8870468000	-79.2283879000	(613) 825-7755	\N	n	2022-01-05 12:35:45+00
1614	0	2126 Apple Leaf Way	101	3	\N	0.0000000000	0.0000000000	(613) 123-1123	\N	n	2022-01-05 12:36:49+00
1615	0	201 Marier Avenue	18	3	K1L 5R6	45.4391141000	-75.6632652000	(613) 742-4411	samir1boulos@hotmail.com	n	2022-01-10 12:47:03+00
1616	0	7772 Jeanne d'Arc Boulevard North	101	3	K1C 2J1	45.4823197000	-75.5279578000	\N	\N	n	2022-01-11 12:22:44+00
1617	0	2225 Saint Laurent Boulevard	0	3	K1G 1B2	45.3895818000	-75.6173986000	(613) 737-3198	\N	n	2022-01-13 12:34:13+00
1618	0	1536 Clyde Avenue	9	3	K2C 3Z4	45.3619189000	-75.7406477000	(613) 123-4567	george@menu.ca	n	2022-01-19 15:01:03+00
1619	0	1105 Cobden Road	0	3	K2C 2Z1	45.3529962000	-75.7779981000	\N	\N	n	2022-01-19 15:01:42+00
1620	0	125 Preston Street	0	3	K1R 7P3	45.4080395000	-75.7138457000	\N	\N	n	2022-01-26 12:54:31+00
1621	0	375 Des �pinettes Avenue	101	3	K1E 3E6	45.4661877000	-75.4957745000	\N	\N	n	2022-01-27 13:40:32+00
1622	0	2126 Apple Leaf Way	9	4	K1W 1J7	45.4845380000	-75.6467570000	(613) 413-2250	yanni.bouziotas@gmail.com	n	2022-01-31 13:08:25+00
1623	0	2126 Apple Leaf Way	101	4	\N	0.0000000000	0.0000000000	(613) 413-2250	\N	n	2022-01-31 13:15:16+00
1624	0	2126 Apple Leaf Way	9	3	K1W 1J7	0.0000000000	0.0000000000	(161) 341-3225	yanni.bouziotas@gmail.com	n	2022-02-07 13:01:48+00
1625	0	1 Rideaucrest Drive, Barrhaven, ON	9	3	K2G 6A4	0.0000000000	0.0000000000	(613) 823-2224	noemail@noemail.ca	n	2022-02-22 13:16:22+00
1626	0	4 Rue Belmont	23	4	J9H 6J5	45.3950698000	-75.8303042000	(819) 682-8494	noname@noname.ca	n	2022-02-25 15:06:27+00
1627	0	2666 Alta Vista Dr, Ottawa, ON	9	3	K1V 7T4	0.0000000000	0.0000000000	(613) 521-1102	noemail@noemail.ca	n	2022-03-03 14:27:42+00
1628	0	3-701 Eagleson Road	4	3	K2M 2G1	45.2874392000	-75.8668453000	(613) 592-7888	no@no.ca	n	2022-03-08 13:57:28+00
1629	0	886 Dynes Road, Ottawa, On	9	3	K2C 0G8	0.0000000000	0.0000000000	(613) 224-7343	no@no.ca	n	2022-03-10 12:40:34+00
1630	0	121 Preston Street	9	3	K1R 7P3	45.4081470000	-75.7137981000	(613) 421-1777	no@no.ca	n	2022-03-15 13:37:51+00
1631	0	273 Boulevard Saint-Ren� Ouest	21	4	J8P 2V7	45.4919059000	-75.6580371000	(819) 663-7710	no@no.ca	n	2022-03-15 14:13:05+00
1632	0	1896 Prince of Wales Drive	9	3	K2C 1P5	45.3538415000	-75.7048504000	(613) 224-7700	No@no.ca	n	2022-03-24 12:45:02+00
1633	0	792 Somerset Street West	11	3	K1R 6R2	45.4096257000	-75.7101526000	(613) 366-2356	no@no.ca	n	2022-03-30 14:50:50+00
1634	0	1390 Prince of Wales Drive	9	3	K2C 3N2	45.3692644000	-75.7033982000	(613) 225-1238	jayjaylu34@gmail.com	n	2022-10-12 05:22:32+00
1635	0	714 Gladstone Avenue	9	3	K1R 6X3	45.4073655000	-75.7044226000	(613) 233-1000	george@menu.ca	y	2023-04-24 05:41:39+00
1636	0	585 Montr�al Road	9	3	K1K 4K3	45.4422399000	-75.6447219000	(613) 745-5555	mahde_ghandour@hotmail.com	y	2023-04-25 06:14:07+00
1637	0	1078 Merivale Road	9	3	K1Z 6A8	45.3775136000	-75.7335912000	(613) 722-7777	kirkwoodottawapizza@gmail.com	y	2023-08-04 00:37:45+00
1638	0	87 Main Street	103	3	K0C 1X0	44.9009657000	-75.1819458000	(343) 483-0143	Shawarma_depot@hotmail.com	n	2023-09-06 05:33:25+00
1639	0	4042 Innes Road	10	3	K1C 1T1	45.4551013000	-75.5051859000	(613) 841-4999	info@riverpizza.ca	y	2023-11-13 04:21:33+00
1640	0	5960 Rue Sherbrooke Est	20	4	H1N 1B8	45.5762856000	-73.5466542000	(514) 254-7002	contact@genki-sushi.ca	n	2023-12-18 05:41:32+00
1641	0	40 Beech Street	9	3	K1S 4M8	45.4009072000	-75.7078263000	(613) 237-1641	george@menu.ca	y	2023-12-20 01:41:07+00
1642	0	1 Rue Cholette	21	4	J8Y 1J5	45.4534376000	-75.7519970000	(819) 775-4343	lanawab4@gmail.com	y	2024-01-04 03:44:29+00
1643	0	Jeanne-d' Arc Boulevard	9	3	K1C 2R5	45.4846138000	-75.5189704000	(613) 830-3276	george@menu.ca	n	2024-01-10 04:28:41+00
1654	0	6505 Jeanne d'Arc Boulevard North	10	3	K1C 2R1	45.4799512000	-75.5369210000	(613) 837-8000	cosenzapizzas@gmail.com	y	2024-02-05 07:32:48+00
1655	0	1610 Merivale Road	17	3	K2G 4A1	45.3484699000	-75.7324186000	(613) 225-3297	george@menu.ca	n	2024-02-15 05:50:59+00
1656	0	1831 Robertson Road	17	3	K2H 8X3	45.3282713000	-75.8194738000	(613) 721-0007	george@menu.ca	n	2024-02-20 00:58:29+00
1657	0	120 Rue Richelieu	47	4	J3B 6X4	45.3047677000	-73.2511136000	(450) 346-5535	uddinsantino@gmail.com	y	2024-03-12 07:46:07+00
1658	0	435 Mont�e de la Source	104	4	J8V 3B5	45.5394242000	-75.7727738000	(819) 607-0712	alexandra@menu.ca	y	2024-03-19 04:07:42+00
1659	0	1009 Chemin de Masson	21	4	J8M 1R4	45.5578100000	-75.4197700000	(819) 986-2222	alexandra@menu.ca	y	2024-03-19 09:50:31+00
1660	0	1096 Chemin de Montr�al Ouest	21	4	J8M 2C1	45.5225471000	-75.4909607000	(819) 617-3434	alexandra@menu.ca	y	2024-03-19 09:51:30+00
1661	0	842 Boulevard Maloney Est	21	4	J8P 1H1	45.4847804000	-75.6077643000	(819) 893-1555	alexandra@menu.ca	y	2024-03-19 09:52:15+00
1662	0	922 Boulevard Maloney Est	21	4	J8P 1H5	45.4900364000	-75.5945722000	(819) 893-3434	alexandra@menu.ca	y	2024-03-19 09:52:53+00
1663	0	405 Boulevard de l'H�pital	21	4	J8T 8E2	45.4898982000	-75.6891636000	(819) 568-1109	alexandra@menu.ca	y	2024-03-19 09:54:38+00
1664	0	1783 Rue Saint-Louis	21	4	J8T 4H2	45.4678122000	-75.7247304000	(819) 568-0000	alexandra@menu.ca	y	2024-03-19 09:55:14+00
1665	0	3515 Albion Road South	9	3	K1T 1P1	45.3543030000	-75.6427761000	(613) 248-1111	albionzwz@gmail.com	y	2024-04-22 14:40:43+00
1666	0	250 Boulevard Maisonneuve	21	4	J8X 3N8	45.4352647000	-75.7119544000	(819) 243-8181	george@menu.ca	n	2024-05-31 23:22:23+00
1667	0	95 Rue Saint-�tienne	21	4	J8X 1J7	45.4338677000	-75.7157922000	(819) 772-9883	alexandra@menu.ca	n	2024-07-17 14:11:11+00
1668	0	1606 Battler Road	34	3	N2R 1J6	43.3964233000	-80.4625586000	(519) 894-0002	farid0823@yahoo.com	y	2024-07-17 14:18:41+00
1669	0	548 Chemin d'Aylmer	21	4	J9H 1B1	45.3981499000	-75.8114176000	(819) 684-2289	tony_geara@hotmail.com	n	2024-08-13 08:50:49+00
1670	0	34 Grenfell Crescent	9	3	K2G 0G2	45.3222117000	-75.7212497000	(613) 225-2224	capitalbites2@gmail.com	y	2024-09-04 06:33:53+00
1671	0	3515 Albion Road South	9	3	K1T 1P1	45.3542895000	-75.6427696000	(613) 248-1111	yassernazar@hotmail.com	y	2024-10-03 15:25:47+00
1672	0	4 Rue d'Orl�ans	108	0	J8T 5V1	45.4811876000	-75.7009465000	(819) 568-8333	\N	n	\N
1673	0	4 Rue d'Orl�ans	21	4	J8T 5V1	45.4811876000	-75.7009465000	(819) 568-8333	michel_sabbagh63@hotmail.com	y	2024-11-07 08:58:06+00
1674	0	4000 Bridle Path Drive	9	3	K1T 2C4	45.3484472000	-75.6453447000	(613) 680-8484	callamer@gmail.com	y	2025-01-29 05:41:00+00
1675	0	3679 Riverside Drive	9	3	K1V 0K8	45.3435952000	-75.6904654000	(613) 260-8555	riversidepizzathebest@gmail.com	y	2025-02-11 05:12:31+00
1676	0	4000 Bridle Path Drive, Gloucester, ON, Canada	22	3	K1T 2C4	0.0000000000	0.0000000000	(613) 680-8484	george@menu.ca	y	2025-02-13 02:21:49+00
1677	0	1730 Montr�al Road	22	3	K1J 6N3	45.4456163000	-75.6097334000	(613) 695-9966	raficwz@hotmail.com	y	2025-05-06 08:04:14+00
1678	0	5474 Osgoode Main Street	64	3	K0A 2W0	45.1433906000	-75.6117300000	(613) 878-9898	callamer@gmail.com	y	2025-06-10 09:05:34+00
\.


--
-- Data for Name: buckets; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.buckets (id, name, owner, created_at, updated_at, public, avif_autodetection, file_size_limit, allowed_mime_types, owner_id, type) FROM stdin;
restaurant-assets	restaurant-assets	\N	2025-08-27 17:34:11.8669+00	2025-08-27 17:34:11.8669+00	t	f	\N	\N	\N	STANDARD
\.


--
-- Data for Name: buckets_analytics; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.buckets_analytics (id, type, format, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: migrations; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.migrations (id, name, hash, executed_at) FROM stdin;
0	create-migrations-table	e18db593bcde2aca2a408c4d1100f6abba2195df	2025-08-15 15:59:21.161602
1	initialmigration	6ab16121fbaa08bbd11b712d05f358f9b555d777	2025-08-15 15:59:21.178145
2	storage-schema	5c7968fd083fcea04050c1b7f6253c9771b99011	2025-08-15 15:59:21.183305
3	pathtoken-column	2cb1b0004b817b29d5b0a971af16bafeede4b70d	2025-08-15 15:59:21.233043
4	add-migrations-rls	427c5b63fe1c5937495d9c635c263ee7a5905058	2025-08-15 15:59:21.335147
5	add-size-functions	79e081a1455b63666c1294a440f8ad4b1e6a7f84	2025-08-15 15:59:21.338326
6	change-column-name-in-get-size	f93f62afdf6613ee5e7e815b30d02dc990201044	2025-08-15 15:59:21.341956
7	add-rls-to-buckets	e7e7f86adbc51049f341dfe8d30256c1abca17aa	2025-08-15 15:59:21.346866
8	add-public-to-buckets	fd670db39ed65f9d08b01db09d6202503ca2bab3	2025-08-15 15:59:21.35063
9	fix-search-function	3a0af29f42e35a4d101c259ed955b67e1bee6825	2025-08-15 15:59:21.354219
10	search-files-search-function	68dc14822daad0ffac3746a502234f486182ef6e	2025-08-15 15:59:21.358923
11	add-trigger-to-auto-update-updated_at-column	7425bdb14366d1739fa8a18c83100636d74dcaa2	2025-08-15 15:59:21.36512
12	add-automatic-avif-detection-flag	8e92e1266eb29518b6a4c5313ab8f29dd0d08df9	2025-08-15 15:59:21.373686
13	add-bucket-custom-limits	cce962054138135cd9a8c4bcd531598684b25e7d	2025-08-15 15:59:21.378465
14	use-bytes-for-max-size	941c41b346f9802b411f06f30e972ad4744dad27	2025-08-15 15:59:21.381965
15	add-can-insert-object-function	934146bc38ead475f4ef4b555c524ee5d66799e5	2025-08-15 15:59:21.41538
16	add-version	76debf38d3fd07dcfc747ca49096457d95b1221b	2025-08-15 15:59:21.436011
17	drop-owner-foreign-key	f1cbb288f1b7a4c1eb8c38504b80ae2a0153d101	2025-08-15 15:59:21.439963
18	add_owner_id_column_deprecate_owner	e7a511b379110b08e2f214be852c35414749fe66	2025-08-15 15:59:21.46051
19	alter-default-value-objects-id	02e5e22a78626187e00d173dc45f58fa66a4f043	2025-08-15 15:59:21.472046
20	list-objects-with-delimiter	cd694ae708e51ba82bf012bba00caf4f3b6393b7	2025-08-15 15:59:21.480576
21	s3-multipart-uploads	8c804d4a566c40cd1e4cc5b3725a664a9303657f	2025-08-15 15:59:21.495925
22	s3-multipart-uploads-big-ints	9737dc258d2397953c9953d9b86920b8be0cdb73	2025-08-15 15:59:21.608258
23	optimize-search-function	9d7e604cddc4b56a5422dc68c9313f4a1b6f132c	2025-08-15 15:59:21.706135
24	operation-function	8312e37c2bf9e76bbe841aa5fda889206d2bf8aa	2025-08-15 15:59:21.714182
25	custom-metadata	d974c6057c3db1c1f847afa0e291e6165693b990	2025-08-15 15:59:21.768538
26	objects-prefixes	ef3f7871121cdc47a65308e6702519e853422ae2	2025-08-27 16:18:05.758602
27	search-v2	33b8f2a7ae53105f028e13e9fcda9dc4f356b4a2	2025-08-27 16:18:05.959249
28	object-bucket-name-sorting	ba85ec41b62c6a30a3f136788227ee47f311c436	2025-08-27 16:18:05.973038
29	create-prefixes	a7b1a22c0dc3ab630e3055bfec7ce7d2045c5b7b	2025-08-27 16:18:05.99188
30	update-object-levels	6c6f6cc9430d570f26284a24cf7b210599032db7	2025-08-27 16:18:05.998288
31	objects-level-index	33f1fef7ec7fea08bb892222f4f0f5d79bab5eb8	2025-08-27 16:18:06.01481
32	backward-compatible-index-on-objects	2d51eeb437a96868b36fcdfb1ddefdf13bef1647	2025-08-27 16:18:06.030086
33	backward-compatible-index-on-prefixes	fe473390e1b8c407434c0e470655945b110507bf	2025-08-27 16:18:06.037034
34	optimize-search-function-v1	82b0e469a00e8ebce495e29bfa70a0797f7ebd2c	2025-08-27 16:18:06.039554
35	add-insert-trigger-prefixes	63bb9fd05deb3dc5e9fa66c83e82b152f0caf589	2025-08-27 16:18:06.050245
36	optimise-existing-functions	81cf92eb0c36612865a18016a38496c530443899	2025-08-27 16:18:06.055042
37	add-bucket-name-length-trigger	3944135b4e3e8b22d6d4cbb568fe3b0b51df15c1	2025-08-27 16:18:06.081205
38	iceberg-catalog-flag-on-buckets	19a8bd89d5dfa69af7f222a46c726b7c41e462c5	2025-08-27 16:18:06.088412
\.


--
-- Data for Name: objects; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.objects (id, bucket_id, name, owner, created_at, updated_at, last_accessed_at, metadata, version, owner_id, user_metadata, level) FROM stdin;
ce70061a-c84c-4a3a-a740-01501c91c7f6	restaurant-assets	restaurant-images/35d07d40-2bd4-4df7-8bc6-a12ee874df0f-1756316051566.png	\N	2025-08-27 17:34:12.100725+00	2025-08-27 17:34:12.100725+00	2025-08-27 17:34:12.100725+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-08-27T17:34:13.000Z", "contentLength": 55679, "httpStatusCode": 200}	0f4ef8ca-af80-490c-9596-aa375bb9d815	\N	{}	2
a7f62e9f-4fa3-439e-9e53-98f707a267a8	restaurant-assets	restaurant-images/35d07d40-2bd4-4df7-8bc6-a12ee874df0f-1756316052508.png	\N	2025-08-27 17:34:12.672563+00	2025-08-27 17:34:12.672563+00	2025-08-27 17:34:12.672563+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-08-27T17:34:13.000Z", "contentLength": 203176, "httpStatusCode": 200}	67a753aa-b1d1-4cc1-8bce-de2695096419	\N	{}	2
8af58bb8-b037-4937-97e9-d5c32cfadfb9	restaurant-assets	restaurant-images/5b49a173-388b-4532-af0a-46bbf7884e05-1756323175836.webp	\N	2025-08-27 19:32:56.284224+00	2025-08-27 19:32:56.284224+00	2025-08-27 19:32:56.284224+00	{"eTag": "\\"55f6cad489bf0cebe671b1fada9b02af\\"", "size": 10058, "mimetype": "image/webp", "cacheControl": "max-age=3600", "lastModified": "2025-08-27T19:32:57.000Z", "contentLength": 10058, "httpStatusCode": 200}	4426ed13-c24e-4051-b696-9e2e8bcd7574	\N	{}	2
24e7c6c8-edff-4e7a-a3a0-8e947f13a0ed	restaurant-assets	restaurant-images/5b49a173-388b-4532-af0a-46bbf7884e05-1756323176573.png	\N	2025-08-27 19:32:56.792582+00	2025-08-27 19:32:56.792582+00	2025-08-27 19:32:56.792582+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-08-27T19:32:57.000Z", "contentLength": 203176, "httpStatusCode": 200}	3789337a-8c0c-4c9a-af47-c56d266fcf89	\N	{}	2
b2a916c7-39f8-4784-98c9-08f9c9a24e0f	restaurant-assets	restaurant-images/22b1dc67-5cef-4425-91e2-eddf70a8dcef-1756929379421.png	\N	2025-09-03 19:56:19.695899+00	2025-09-03 19:56:19.695899+00	2025-09-03 19:56:19.695899+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-03T19:56:20.000Z", "contentLength": 55679, "httpStatusCode": 200}	aa686137-5393-4fb2-b128-c2f4cfd2ce79	\N	{}	2
636ddd52-faf2-482a-a30b-174fd76a2e67	restaurant-assets	restaurant-images/22b1dc67-5cef-4425-91e2-eddf70a8dcef-1756929380179.png	\N	2025-09-03 19:56:20.356129+00	2025-09-03 19:56:20.356129+00	2025-09-03 19:56:20.356129+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-03T19:56:21.000Z", "contentLength": 203176, "httpStatusCode": 200}	52d668cd-bc96-41fb-813b-2fb651c3483a	\N	{}	2
3ba281d1-ee7a-4edb-ad43-997d5a081896	restaurant-assets	restaurant-images/5814708d-bfc4-44bf-bd82-7c96ec7969da-1756990970141.png	\N	2025-09-04 13:02:50.597665+00	2025-09-04 13:02:50.597665+00	2025-09-04 13:02:50.597665+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:02:51.000Z", "contentLength": 55679, "httpStatusCode": 200}	4ddea02b-582d-45f0-8fbb-384e127273b7	\N	{}	2
074bec11-2263-4569-bd22-4fa36d3c3541	restaurant-assets	restaurant-images/5814708d-bfc4-44bf-bd82-7c96ec7969da-1756990970923.png	\N	2025-09-04 13:02:51.084584+00	2025-09-04 13:02:51.084584+00	2025-09-04 13:02:51.084584+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:02:52.000Z", "contentLength": 203176, "httpStatusCode": 200}	1fc4fb9d-b649-4ebe-a58d-22093662d5e8	\N	{}	2
b9d867e0-ec1a-4407-864c-a27fe39c4f58	restaurant-assets	restaurant-images/31a66847-cf79-4c91-84a9-a774d401175d-1756991442190.png	\N	2025-09-04 13:10:42.993992+00	2025-09-04 13:10:42.993992+00	2025-09-04 13:10:42.993992+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:10:43.000Z", "contentLength": 55679, "httpStatusCode": 200}	32f2c8bf-09d2-41c4-8175-d3c208bde337	\N	{}	2
951e2f23-a314-4d26-9962-8a6fcccc8126	restaurant-assets	restaurant-images/31a66847-cf79-4c91-84a9-a774d401175d-1756991443491.png	\N	2025-09-04 13:10:43.707036+00	2025-09-04 13:10:43.707036+00	2025-09-04 13:10:43.707036+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:10:44.000Z", "contentLength": 203176, "httpStatusCode": 200}	b8831c66-02b9-4ace-a209-65c5dddc721a	\N	{}	2
f28c5ecd-b3e3-403a-98b7-83111b6f925d	restaurant-assets	restaurant-images/14412d6b-1a7d-4de4-94c9-fa65cf14e14c-1756991986031.png	\N	2025-09-04 13:19:46.395254+00	2025-09-04 13:19:46.395254+00	2025-09-04 13:19:46.395254+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:19:47.000Z", "contentLength": 55679, "httpStatusCode": 200}	94973214-7100-4bb8-9287-d677fc3e2db3	\N	{}	2
5b63b445-67c7-405e-8413-6d6920856709	restaurant-assets	restaurant-images/14412d6b-1a7d-4de4-94c9-fa65cf14e14c-1756991986946.png	\N	2025-09-04 13:19:47.157679+00	2025-09-04 13:19:47.157679+00	2025-09-04 13:19:47.157679+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:19:48.000Z", "contentLength": 203176, "httpStatusCode": 200}	f5068522-b792-4445-a704-5514244b2aa9	\N	{}	2
952898fc-31e5-421d-a393-a8c1ee6cace5	restaurant-assets	restaurant-images/df25c824-f7ab-44c7-b50b-0f3eab2b8734-1756993150564.png	\N	2025-09-04 13:39:10.864116+00	2025-09-04 13:39:10.864116+00	2025-09-04 13:39:10.864116+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:39:11.000Z", "contentLength": 55679, "httpStatusCode": 200}	0c394ede-47b2-436f-b0af-e423858c1964	\N	{}	2
2e8e4da6-b34a-4edc-b1f8-1c6ce68467ce	restaurant-assets	restaurant-images/df25c824-f7ab-44c7-b50b-0f3eab2b8734-1756993151198.png	\N	2025-09-04 13:39:11.391111+00	2025-09-04 13:39:11.391111+00	2025-09-04 13:39:11.391111+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:39:12.000Z", "contentLength": 203176, "httpStatusCode": 200}	934f3fec-5525-4dc4-aa3d-689c4e4ad1e1	\N	{}	2
c3d7b9e9-3d89-4cf9-a2ad-99071c51eb3f	restaurant-assets	restaurant-images/b7d7090b-4620-4556-82b5-ff6a1ae310aa-1756993652075.png	\N	2025-09-04 13:47:32.509434+00	2025-09-04 13:47:32.509434+00	2025-09-04 13:47:32.509434+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:47:33.000Z", "contentLength": 55679, "httpStatusCode": 200}	082f5e92-677c-453e-8339-36b8529d03e4	\N	{}	2
6285b2c5-2be1-47e6-ae18-9ec59b1eae2b	restaurant-assets	restaurant-images/b7d7090b-4620-4556-82b5-ff6a1ae310aa-1756993653003.png	\N	2025-09-04 13:47:33.228615+00	2025-09-04 13:47:33.228615+00	2025-09-04 13:47:33.228615+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:47:34.000Z", "contentLength": 203176, "httpStatusCode": 200}	b4ab8618-853e-4d0b-a698-46abe0b00c78	\N	{}	2
b463d359-d329-4c2b-858f-d8a0d306614f	restaurant-assets	restaurant-images/34ccadf6-656b-4a08-a2eb-3f29e098b06b-1756994357618.png	\N	2025-09-04 13:59:17.972354+00	2025-09-04 13:59:17.972354+00	2025-09-04 13:59:17.972354+00	{"eTag": "\\"1485e7ffbe3d3d7f7688848f0c06e07a\\"", "size": 203139, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:59:18.000Z", "contentLength": 203139, "httpStatusCode": 200}	cbd8600d-b850-4d0c-9dee-c1f6ade4562d	\N	{}	2
74904e96-d5c8-4d60-a8aa-70c0514a8aaa	restaurant-assets	restaurant-images/34ccadf6-656b-4a08-a2eb-3f29e098b06b-1756994358207.png	\N	2025-09-04 13:59:18.377117+00	2025-09-04 13:59:18.377117+00	2025-09-04 13:59:18.377117+00	{"eTag": "\\"1485e7ffbe3d3d7f7688848f0c06e07a\\"", "size": 203139, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T13:59:19.000Z", "contentLength": 203139, "httpStatusCode": 200}	8852a99f-052c-419a-a9da-391c409282fa	\N	{}	2
b9be3dd0-d89c-47d3-93f7-1aa0eeea3f9f	restaurant-assets	restaurant-images/4cfa78fe-434f-4c7d-b50a-18aef174cf16-1757014435014.png	\N	2025-09-04 19:33:55.333796+00	2025-09-04 19:33:55.333796+00	2025-09-04 19:33:55.333796+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T19:33:56.000Z", "contentLength": 55679, "httpStatusCode": 200}	d6a33f4f-0f5e-4c78-a027-49ece359be94	\N	{}	2
c73928d9-bee2-47c0-b9b4-da22fa1f0092	restaurant-assets	restaurant-images/4cfa78fe-434f-4c7d-b50a-18aef174cf16-1757014437263.png	\N	2025-09-04 19:33:57.402747+00	2025-09-04 19:33:57.402747+00	2025-09-04 19:33:57.402747+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T19:33:58.000Z", "contentLength": 203176, "httpStatusCode": 200}	cfe03f82-af47-4b99-bbbd-ece338f8a42f	\N	{}	2
cdbba742-ee18-4830-9b0b-031ed3931e03	restaurant-assets	restaurant-images/c0dc6672-ca79-43a2-b533-4278c209e3e6-1757016764513.png	\N	2025-09-04 20:12:44.86919+00	2025-09-04 20:12:44.86919+00	2025-09-04 20:12:44.86919+00	{"eTag": "\\"df0b6f49b8d21a0881bd45ff3cfde681\\"", "size": 13870, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T20:12:45.000Z", "contentLength": 13870, "httpStatusCode": 200}	4da928e8-dee7-4b98-8247-5927ff602ba1	\N	{}	2
f7c2b93f-00a7-493c-b524-d5ca2d3fde7f	restaurant-assets	restaurant-images/c0dc6672-ca79-43a2-b533-4278c209e3e6-1757016765138.jpeg	\N	2025-09-04 20:12:45.298899+00	2025-09-04 20:12:45.298899+00	2025-09-04 20:12:45.298899+00	{"eTag": "\\"15dfa4ab20d81dd320ad5699bdc6c9f7\\"", "size": 51052, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T20:12:46.000Z", "contentLength": 51052, "httpStatusCode": 200}	082223e9-39b2-4632-b059-68048c08559f	\N	{}	2
a2d6b173-c9da-4100-860f-142efbe7a4f9	restaurant-assets	restaurant-images/c0dc6672-ca79-43a2-b533-4278c209e3e6-1757017260230.png	\N	2025-09-04 20:21:00.820864+00	2025-09-04 20:21:00.820864+00	2025-09-04 20:21:00.820864+00	{"eTag": "\\"df0b6f49b8d21a0881bd45ff3cfde681\\"", "size": 13870, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-04T20:21:01.000Z", "contentLength": 13870, "httpStatusCode": 200}	60c45ece-733b-4dc9-920b-80d4625e089c	\N	{}	2
b8844a54-543f-4171-bdce-4b3ff07ad77e	restaurant-assets	restaurant-images/3d4b55e3-db34-4917-8c91-a84978b06418-1757084872346.png	\N	2025-09-05 15:07:52.630366+00	2025-09-05 15:07:52.630366+00	2025-09-05 15:07:52.630366+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-05T15:07:53.000Z", "contentLength": 55679, "httpStatusCode": 200}	7ffc1d14-d5e0-4f10-a649-22e928939840	\N	{}	2
e9f863a9-2f04-4e8a-8e67-1cba8490cc49	restaurant-assets	restaurant-images/3d4b55e3-db34-4917-8c91-a84978b06418-1757084873143.png	\N	2025-09-05 15:07:53.287045+00	2025-09-05 15:07:53.287045+00	2025-09-05 15:07:53.287045+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-05T15:07:54.000Z", "contentLength": 203176, "httpStatusCode": 200}	d12d3468-a4f8-44db-a98f-232187afaa65	\N	{}	2
426b280e-0d44-43a2-bf94-69f3b7ce9937	restaurant-assets	restaurant-images/1f8ed54d-96cb-4699-b723-af0552ba7692-1757362076768.png	\N	2025-09-08 20:07:57.076232+00	2025-09-08 20:07:57.076232+00	2025-09-08 20:07:57.076232+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-08T20:07:58.000Z", "contentLength": 55679, "httpStatusCode": 200}	fa29b1e7-836c-4bcc-9d11-dc87dbc23eba	\N	{}	2
d879e760-6b7f-4232-bc96-ea3478031697	restaurant-assets	restaurant-images/1f8ed54d-96cb-4699-b723-af0552ba7692-1757362077594.png	\N	2025-09-08 20:07:57.764101+00	2025-09-08 20:07:57.764101+00	2025-09-08 20:07:57.764101+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-08T20:07:58.000Z", "contentLength": 203176, "httpStatusCode": 200}	e2576583-f8ac-4ee7-9c1e-7c2982acb33d	\N	{}	2
0f2aa5e8-1662-4c90-a2d8-dbb50354abc2	restaurant-assets	restaurant-images/77e386dc-b0f9-45c5-aeb5-972e63a59b52-1757428038358.png	\N	2025-09-09 14:27:18.737896+00	2025-09-09 14:27:18.737896+00	2025-09-09 14:27:18.737896+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-09T14:27:19.000Z", "contentLength": 55679, "httpStatusCode": 200}	6f8f7034-aceb-461a-acfe-f816d64dfd16	\N	{}	2
3d0657e2-25f1-4db9-9a42-f99a2cc317e1	restaurant-assets	restaurant-images/77e386dc-b0f9-45c5-aeb5-972e63a59b52-1757428039134.png	\N	2025-09-09 14:27:19.267314+00	2025-09-09 14:27:19.267314+00	2025-09-09 14:27:19.267314+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-09T14:27:20.000Z", "contentLength": 203176, "httpStatusCode": 200}	e00d261d-13b5-4e21-9000-1f2ad5e6d778	\N	{}	2
182a709b-11bc-442a-a69d-29877be06d83	restaurant-assets	restaurant-images/023436b5-1423-4e32-86ae-4ea66a491c1d-1757428866527.png	\N	2025-09-09 14:41:06.732928+00	2025-09-09 14:41:06.732928+00	2025-09-09 14:41:06.732928+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-09T14:41:07.000Z", "contentLength": 55679, "httpStatusCode": 200}	e8437af2-c8d3-483b-9e0c-58626e5fd823	\N	{}	2
514cb8fd-8911-444c-a0ba-29f36b264dea	restaurant-assets	restaurant-images/023436b5-1423-4e32-86ae-4ea66a491c1d-1757428867121.png	\N	2025-09-09 14:41:07.304565+00	2025-09-09 14:41:07.304565+00	2025-09-09 14:41:07.304565+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-09T14:41:08.000Z", "contentLength": 203176, "httpStatusCode": 200}	a4dd3d38-a06f-46b5-b635-52d107054327	\N	{}	2
5174582d-503c-4cb4-9963-5cc3eeea3f54	restaurant-assets	restaurant-images/ee5a15fc-2ffa-4d82-b0a6-90c77ece46d8-1757429865344.png	\N	2025-09-09 14:57:45.63435+00	2025-09-09 14:57:45.63435+00	2025-09-09 14:57:45.63435+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-09T14:57:46.000Z", "contentLength": 55679, "httpStatusCode": 200}	18e38e65-b4a0-461a-91f8-0e72ffac7c77	\N	{}	2
cfc1c22f-54f5-4bfb-a344-733622036e2f	restaurant-assets	restaurant-images/ee5a15fc-2ffa-4d82-b0a6-90c77ece46d8-1757429865916.png	\N	2025-09-09 14:57:46.070634+00	2025-09-09 14:57:46.070634+00	2025-09-09 14:57:46.070634+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-09T14:57:46.000Z", "contentLength": 203176, "httpStatusCode": 200}	4e6ee3e7-1563-413b-9026-abf5d2e9a026	\N	{}	2
934f01da-82b0-4c61-8638-25a5ff4cdb5a	restaurant-assets	restaurant-images/0f7468fb-9812-4756-894c-7e16a33f4e87-1757514634262.png	\N	2025-09-10 14:30:34.589049+00	2025-09-10 14:30:34.589049+00	2025-09-10 14:30:34.589049+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-10T14:30:35.000Z", "contentLength": 55679, "httpStatusCode": 200}	c9b4c5a0-7c7f-42b1-b437-a98a0121c3e4	\N	{}	2
b431cf64-f02c-4910-bdfd-548df5db20c2	restaurant-assets	restaurant-images/0f7468fb-9812-4756-894c-7e16a33f4e87-1757514635002.png	\N	2025-09-10 14:30:35.193473+00	2025-09-10 14:30:35.193473+00	2025-09-10 14:30:35.193473+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-10T14:30:36.000Z", "contentLength": 203176, "httpStatusCode": 200}	1d25b19c-95d9-4515-a695-adc66df1ea09	\N	{}	2
fe202c2a-1e3f-4e23-8626-ae297d715400	restaurant-assets	restaurant-images/6361333b-5365-474f-833b-ab8fde1be5a6-1757532679723.png	\N	2025-09-10 19:31:20.334692+00	2025-09-10 19:31:20.334692+00	2025-09-10 19:31:20.334692+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-10T19:31:21.000Z", "contentLength": 55679, "httpStatusCode": 200}	821b150a-51d2-437c-94e6-0e308dd98cd1	\N	{}	2
796fcfd0-1f4a-4770-9700-3b460620ca26	restaurant-assets	restaurant-images/6361333b-5365-474f-833b-ab8fde1be5a6-1757532680686.png	\N	2025-09-10 19:31:20.81543+00	2025-09-10 19:31:20.81543+00	2025-09-10 19:31:20.81543+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-10T19:31:21.000Z", "contentLength": 203176, "httpStatusCode": 200}	2d1e308b-2533-463b-ae2e-a7db02511400	\N	{}	2
c1cf6f3f-2844-47b7-ba40-8dce68769f5b	restaurant-assets	restaurant-images/0486a1f6-db88-4569-b96c-bf6cdc8ca63e-1757609102550.png	\N	2025-09-11 16:45:02.987126+00	2025-09-11 16:45:02.987126+00	2025-09-11 16:45:02.987126+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T16:45:03.000Z", "contentLength": 55679, "httpStatusCode": 200}	2814da4f-5478-41a6-bceb-08ff2dab77f3	\N	{}	2
b80d9b5a-f233-4d16-b699-c0e00e5aef68	restaurant-assets	restaurant-images/0486a1f6-db88-4569-b96c-bf6cdc8ca63e-1757609103459.png	\N	2025-09-11 16:45:03.644786+00	2025-09-11 16:45:03.644786+00	2025-09-11 16:45:03.644786+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T16:45:04.000Z", "contentLength": 203176, "httpStatusCode": 200}	82b67ec6-b3fd-4466-9b23-e17a46d5bc88	\N	{}	2
307f2f44-637b-44d1-86e5-75eb83ecbb16	restaurant-assets	restaurant-images/fa787d1a-fd5f-4828-a57e-54c0d02686e2-1757610073816.png	\N	2025-09-11 17:01:14.054322+00	2025-09-11 17:01:14.054322+00	2025-09-11 17:01:14.054322+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T17:01:14.000Z", "contentLength": 55679, "httpStatusCode": 200}	557fad2d-6d0a-4db1-a9bd-f7bc81c83bc4	\N	{}	2
03cc5243-4697-4e24-b48b-9ee74df1939e	restaurant-assets	restaurant-images/fa787d1a-fd5f-4828-a57e-54c0d02686e2-1757610074353.png	\N	2025-09-11 17:01:14.516735+00	2025-09-11 17:01:14.516735+00	2025-09-11 17:01:14.516735+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T17:01:15.000Z", "contentLength": 203176, "httpStatusCode": 200}	4dd04464-6904-4381-92fa-536376923176	\N	{}	2
528ac547-2732-42d8-a4b5-a73b445b8381	restaurant-assets	restaurant-images/00f3a011-a6e9-4057-a2b2-67ff4196419c-1757614166402.png	\N	2025-09-11 18:09:26.614669+00	2025-09-11 18:09:26.614669+00	2025-09-11 18:09:26.614669+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T18:09:27.000Z", "contentLength": 55679, "httpStatusCode": 200}	1cedd954-4c35-4e8f-a346-247c2c13e069	\N	{}	2
c7193826-869a-4a25-8c96-8c4b8fb8ca42	restaurant-assets	restaurant-images/00f3a011-a6e9-4057-a2b2-67ff4196419c-1757614166875.png	\N	2025-09-11 18:09:26.990904+00	2025-09-11 18:09:26.990904+00	2025-09-11 18:09:26.990904+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T18:09:27.000Z", "contentLength": 203176, "httpStatusCode": 200}	868f2022-4c97-4049-9851-36c884e7fdc4	\N	{}	2
57d20c19-e144-42fc-bbcb-403500f39f6d	restaurant-assets	restaurant-images/9c63ae90-ab67-4b38-bfa7-bcef70881176-1757615050623.png	\N	2025-09-11 18:24:10.944921+00	2025-09-11 18:24:10.944921+00	2025-09-11 18:24:10.944921+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T18:24:11.000Z", "contentLength": 55679, "httpStatusCode": 200}	19e5ec58-ad61-495a-929e-4370ba4f40d2	\N	{}	2
9a49e597-43f4-4b4b-95e0-dacd5ee84c58	restaurant-assets	restaurant-images/9c63ae90-ab67-4b38-bfa7-bcef70881176-1757615051460.png	\N	2025-09-11 18:24:11.565281+00	2025-09-11 18:24:11.565281+00	2025-09-11 18:24:11.565281+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T18:24:12.000Z", "contentLength": 203176, "httpStatusCode": 200}	7ce938c6-1e16-4c47-952c-9e1bb345f044	\N	{}	2
2b96c00b-8ca6-4d24-b45e-4012e574a4f9	restaurant-assets	restaurant-images/af3de59f-fb92-4022-9e53-55dd76d12731-1757615652761.png	\N	2025-09-11 18:34:13.140899+00	2025-09-11 18:34:13.140899+00	2025-09-11 18:34:13.140899+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T18:34:14.000Z", "contentLength": 55679, "httpStatusCode": 200}	dc596773-9c27-4c9c-8c84-c67a659d980a	\N	{}	2
55dcf5aa-e6a9-4b9c-b045-c1ee7499dbc8	restaurant-assets	restaurant-images/af3de59f-fb92-4022-9e53-55dd76d12731-1757615653682.png	\N	2025-09-11 18:34:13.891015+00	2025-09-11 18:34:13.891015+00	2025-09-11 18:34:13.891015+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T18:34:14.000Z", "contentLength": 203176, "httpStatusCode": 200}	67b0501d-331f-4533-a9a9-314ba4665a3b	\N	{}	2
1911512d-10f2-4f39-a5cd-269cb5f58cbc	restaurant-assets	restaurant-images/d5409c04-5bfe-4d72-9722-3cbb484dc8be-1757620077110.png	\N	2025-09-11 19:47:57.402033+00	2025-09-11 19:47:57.402033+00	2025-09-11 19:47:57.402033+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T19:47:58.000Z", "contentLength": 55679, "httpStatusCode": 200}	e7b1f601-539b-4c7e-98dd-e1a60a0d071c	\N	{}	2
5ff148c2-0801-49bf-b873-f376ef028620	restaurant-assets	restaurant-images/d5409c04-5bfe-4d72-9722-3cbb484dc8be-1757620077932.png	\N	2025-09-11 19:47:58.061006+00	2025-09-11 19:47:58.061006+00	2025-09-11 19:47:58.061006+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T19:47:59.000Z", "contentLength": 203176, "httpStatusCode": 200}	dd8f37dd-07af-4935-8cc6-47643e79c0dc	\N	{}	2
9877f727-75c0-45d9-a716-4c9132e98030	restaurant-assets	restaurant-images/6832f2aa-3d0a-4ab6-acc8-d60edf9dde24-1757621658361.png	\N	2025-09-11 20:14:18.691947+00	2025-09-11 20:14:18.691947+00	2025-09-11 20:14:18.691947+00	{"eTag": "\\"ee805dde9a4afdefd5706b81e8029ecc\\"", "size": 55679, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T20:14:19.000Z", "contentLength": 55679, "httpStatusCode": 200}	fda39406-0b0a-4cd3-a893-da86ec074c8f	\N	{}	2
7c1bdda0-06a6-457a-8c87-bfb1781d62de	restaurant-assets	restaurant-images/6832f2aa-3d0a-4ab6-acc8-d60edf9dde24-1757621659223.png	\N	2025-09-11 20:14:19.340005+00	2025-09-11 20:14:19.340005+00	2025-09-11 20:14:19.340005+00	{"eTag": "\\"48f3efd449e24053ad66b8991dd7be4a\\"", "size": 203176, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-09-11T20:14:20.000Z", "contentLength": 203176, "httpStatusCode": 200}	ca198f77-1e9a-4b4c-90fd-b01606d18345	\N	{}	2
\.


--
-- Data for Name: prefixes; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.prefixes (bucket_id, name, created_at, updated_at) FROM stdin;
restaurant-assets	restaurant-images	2025-08-27 17:34:12.100725+00	2025-08-27 17:34:12.100725+00
\.


--
-- Data for Name: s3_multipart_uploads; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.s3_multipart_uploads (id, in_progress_size, upload_signature, bucket_id, key, version, owner_id, created_at, user_metadata) FROM stdin;
\.


--
-- Data for Name: s3_multipart_uploads_parts; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.s3_multipart_uploads_parts (id, upload_id, size, part_number, bucket_id, key, etag, owner_id, version, created_at) FROM stdin;
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: supabase_migrations; Owner: postgres
--

COPY supabase_migrations.schema_migrations (version, statements, name, created_by, idempotency_key) FROM stdin;
20250909123908	{"alter table if exists public.menu_imports add column if not exists agent_run_id text; alter table if exists public.menu_imports add column if not exists agent_cost_usd numeric(10,4);"}	add_agent_columns_to_menu_imports	brian.lapp@gmail.com	\N
\.


--
-- Data for Name: secrets; Type: TABLE DATA; Schema: vault; Owner: supabase_admin
--

COPY vault.secrets (id, name, description, secret, key_id, nonce, created_at, updated_at) FROM stdin;
\.


--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE SET; Schema: auth; Owner: supabase_auth_admin
--

SELECT pg_catalog.setval('auth.refresh_tokens_id_seq', 82, true);


--
-- Name: cities_id_seq; Type: SEQUENCE SET; Schema: menuca_v3; Owner: postgres
--

SELECT pg_catalog.setval('menuca_v3.cities_id_seq', 119, true);


--
-- Name: restaurant_admin_users_id_seq; Type: SEQUENCE SET; Schema: menuca_v3; Owner: postgres
--

SELECT pg_catalog.setval('menuca_v3.restaurant_admin_users_id_seq', 1, false);


--
-- Name: restaurant_contacts_id_seq; Type: SEQUENCE SET; Schema: menuca_v3; Owner: postgres
--

SELECT pg_catalog.setval('menuca_v3.restaurant_contacts_id_seq', 1, false);


--
-- Name: restaurant_domains_id_seq; Type: SEQUENCE SET; Schema: menuca_v3; Owner: postgres
--

SELECT pg_catalog.setval('menuca_v3.restaurant_domains_id_seq', 2873, true);


--
-- Name: restaurant_locations_id_seq; Type: SEQUENCE SET; Schema: menuca_v3; Owner: postgres
--

SELECT pg_catalog.setval('menuca_v3.restaurant_locations_id_seq', 5485, true);


--
-- Name: restaurant_schedules_id_seq; Type: SEQUENCE SET; Schema: menuca_v3; Owner: postgres
--

SELECT pg_catalog.setval('menuca_v3.restaurant_schedules_id_seq', 1, false);


--
-- Name: restaurants_id_seq; Type: SEQUENCE SET; Schema: menuca_v3; Owner: postgres
--

SELECT pg_catalog.setval('menuca_v3.restaurants_id_seq', 981, true);


--
-- Name: subscription_id_seq; Type: SEQUENCE SET; Schema: realtime; Owner: supabase_admin
--

SELECT pg_catalog.setval('realtime.subscription_id_seq', 1, false);


--
-- Name: cities_v1_id_seq; Type: SEQUENCE SET; Schema: staging; Owner: postgres
--

SELECT pg_catalog.setval('staging.cities_v1_id_seq', 1, false);


--
-- Name: cities_v2_id_seq; Type: SEQUENCE SET; Schema: staging; Owner: postgres
--

SELECT pg_catalog.setval('staging.cities_v2_id_seq', 1, false);


--
-- Name: mfa_amr_claims amr_id_pk; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT amr_id_pk PRIMARY KEY (id);


--
-- Name: audit_log_entries audit_log_entries_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.audit_log_entries
    ADD CONSTRAINT audit_log_entries_pkey PRIMARY KEY (id);


--
-- Name: flow_state flow_state_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.flow_state
    ADD CONSTRAINT flow_state_pkey PRIMARY KEY (id);


--
-- Name: identities identities_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_pkey PRIMARY KEY (id);


--
-- Name: identities identities_provider_id_provider_unique; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_provider_id_provider_unique UNIQUE (provider_id, provider);


--
-- Name: instances instances_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.instances
    ADD CONSTRAINT instances_pkey PRIMARY KEY (id);


--
-- Name: mfa_amr_claims mfa_amr_claims_session_id_authentication_method_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT mfa_amr_claims_session_id_authentication_method_pkey UNIQUE (session_id, authentication_method);


--
-- Name: mfa_challenges mfa_challenges_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_challenges
    ADD CONSTRAINT mfa_challenges_pkey PRIMARY KEY (id);


--
-- Name: mfa_factors mfa_factors_last_challenged_at_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_last_challenged_at_key UNIQUE (last_challenged_at);


--
-- Name: mfa_factors mfa_factors_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_pkey PRIMARY KEY (id);


--
-- Name: oauth_clients oauth_clients_client_id_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.oauth_clients
    ADD CONSTRAINT oauth_clients_client_id_key UNIQUE (client_id);


--
-- Name: oauth_clients oauth_clients_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.oauth_clients
    ADD CONSTRAINT oauth_clients_pkey PRIMARY KEY (id);


--
-- Name: one_time_tokens one_time_tokens_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.one_time_tokens
    ADD CONSTRAINT one_time_tokens_pkey PRIMARY KEY (id);


--
-- Name: refresh_tokens refresh_tokens_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_pkey PRIMARY KEY (id);


--
-- Name: refresh_tokens refresh_tokens_token_unique; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_token_unique UNIQUE (token);


--
-- Name: saml_providers saml_providers_entity_id_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_entity_id_key UNIQUE (entity_id);


--
-- Name: saml_providers saml_providers_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_pkey PRIMARY KEY (id);


--
-- Name: saml_relay_states saml_relay_states_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: sessions sessions_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);


--
-- Name: sso_domains sso_domains_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_domains
    ADD CONSTRAINT sso_domains_pkey PRIMARY KEY (id);


--
-- Name: sso_providers sso_providers_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_providers
    ADD CONSTRAINT sso_providers_pkey PRIMARY KEY (id);


--
-- Name: users users_phone_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.users
    ADD CONSTRAINT users_phone_key UNIQUE (phone);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: cities cities_pkey; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.cities
    ADD CONSTRAINT cities_pkey PRIMARY KEY (id);


--
-- Name: provinces provinces_pkey; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.provinces
    ADD CONSTRAINT provinces_pkey PRIMARY KEY (id);


--
-- Name: restaurant_admin_users restaurant_admin_users_pkey; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_admin_users
    ADD CONSTRAINT restaurant_admin_users_pkey PRIMARY KEY (id);


--
-- Name: restaurant_admin_users restaurant_admin_users_uuid_key; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_admin_users
    ADD CONSTRAINT restaurant_admin_users_uuid_key UNIQUE (uuid);


--
-- Name: restaurant_contacts restaurant_contacts_pkey; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_contacts
    ADD CONSTRAINT restaurant_contacts_pkey PRIMARY KEY (id);


--
-- Name: restaurant_contacts restaurant_contacts_uuid_key; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_contacts
    ADD CONSTRAINT restaurant_contacts_uuid_key UNIQUE (uuid);


--
-- Name: restaurant_domains restaurant_domains_pkey; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_domains
    ADD CONSTRAINT restaurant_domains_pkey PRIMARY KEY (id);


--
-- Name: restaurant_locations restaurant_locations_pkey; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_locations
    ADD CONSTRAINT restaurant_locations_pkey PRIMARY KEY (id);


--
-- Name: restaurant_locations restaurant_locations_uuid_key; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_locations
    ADD CONSTRAINT restaurant_locations_uuid_key UNIQUE (uuid);


--
-- Name: restaurant_schedules restaurant_schedules_pkey; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_schedules
    ADD CONSTRAINT restaurant_schedules_pkey PRIMARY KEY (id);


--
-- Name: restaurant_schedules restaurant_schedules_uuid_key; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_schedules
    ADD CONSTRAINT restaurant_schedules_uuid_key UNIQUE (uuid);


--
-- Name: restaurants restaurants_pkey; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurants
    ADD CONSTRAINT restaurants_pkey PRIMARY KEY (id);


--
-- Name: restaurants restaurants_uuid_key; Type: CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurants
    ADD CONSTRAINT restaurants_uuid_key UNIQUE (uuid);


--
-- Name: messages messages_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER TABLE ONLY realtime.messages
    ADD CONSTRAINT messages_pkey PRIMARY KEY (id, inserted_at);


--
-- Name: subscription pk_subscription; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.subscription
    ADD CONSTRAINT pk_subscription PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: cities_v1 cities_v1_pkey; Type: CONSTRAINT; Schema: staging; Owner: postgres
--

ALTER TABLE ONLY staging.cities_v1
    ADD CONSTRAINT cities_v1_pkey PRIMARY KEY (id);


--
-- Name: cities_v2 cities_v2_pkey; Type: CONSTRAINT; Schema: staging; Owner: postgres
--

ALTER TABLE ONLY staging.cities_v2
    ADD CONSTRAINT cities_v2_pkey PRIMARY KEY (id);


--
-- Name: provinces_v2 provinces_v2_pkey; Type: CONSTRAINT; Schema: staging; Owner: postgres
--

ALTER TABLE ONLY staging.provinces_v2
    ADD CONSTRAINT provinces_v2_pkey PRIMARY KEY (id);


--
-- Name: v1_restaurant_domains v1_restaurant_domains_pkey; Type: CONSTRAINT; Schema: staging; Owner: postgres
--

ALTER TABLE ONLY staging.v1_restaurant_domains
    ADD CONSTRAINT v1_restaurant_domains_pkey PRIMARY KEY (id);


--
-- Name: v1_restaurants_locations v1_restaurants_locations_pkey; Type: CONSTRAINT; Schema: staging; Owner: postgres
--

ALTER TABLE ONLY staging.v1_restaurants_locations
    ADD CONSTRAINT v1_restaurants_locations_pkey PRIMARY KEY (id);


--
-- Name: v1_restaurants v1_restaurants_pkey; Type: CONSTRAINT; Schema: staging; Owner: postgres
--

ALTER TABLE ONLY staging.v1_restaurants
    ADD CONSTRAINT v1_restaurants_pkey PRIMARY KEY (id);


--
-- Name: v2_restaurants_domain v2_restaurants_domain_pkey; Type: CONSTRAINT; Schema: staging; Owner: postgres
--

ALTER TABLE ONLY staging.v2_restaurants_domain
    ADD CONSTRAINT v2_restaurants_domain_pkey PRIMARY KEY (id);


--
-- Name: v2_restaurants_locations v2_restaurants_locations_pkey; Type: CONSTRAINT; Schema: staging; Owner: postgres
--

ALTER TABLE ONLY staging.v2_restaurants_locations
    ADD CONSTRAINT v2_restaurants_locations_pkey PRIMARY KEY (id);


--
-- Name: v2_restaurants v2_restaurants_pkey; Type: CONSTRAINT; Schema: staging; Owner: postgres
--

ALTER TABLE ONLY staging.v2_restaurants
    ADD CONSTRAINT v2_restaurants_pkey PRIMARY KEY (id);


--
-- Name: buckets_analytics buckets_analytics_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.buckets_analytics
    ADD CONSTRAINT buckets_analytics_pkey PRIMARY KEY (id);


--
-- Name: buckets buckets_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.buckets
    ADD CONSTRAINT buckets_pkey PRIMARY KEY (id);


--
-- Name: migrations migrations_name_key; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.migrations
    ADD CONSTRAINT migrations_name_key UNIQUE (name);


--
-- Name: migrations migrations_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);


--
-- Name: objects objects_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.objects
    ADD CONSTRAINT objects_pkey PRIMARY KEY (id);


--
-- Name: prefixes prefixes_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.prefixes
    ADD CONSTRAINT prefixes_pkey PRIMARY KEY (bucket_id, level, name);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_pkey PRIMARY KEY (id);


--
-- Name: s3_multipart_uploads s3_multipart_uploads_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads
    ADD CONSTRAINT s3_multipart_uploads_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_idempotency_key_key; Type: CONSTRAINT; Schema: supabase_migrations; Owner: postgres
--

ALTER TABLE ONLY supabase_migrations.schema_migrations
    ADD CONSTRAINT schema_migrations_idempotency_key_key UNIQUE (idempotency_key);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: supabase_migrations; Owner: postgres
--

ALTER TABLE ONLY supabase_migrations.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: audit_logs_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX audit_logs_instance_id_idx ON auth.audit_log_entries USING btree (instance_id);


--
-- Name: confirmation_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX confirmation_token_idx ON auth.users USING btree (confirmation_token) WHERE ((confirmation_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: email_change_token_current_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX email_change_token_current_idx ON auth.users USING btree (email_change_token_current) WHERE ((email_change_token_current)::text !~ '^[0-9 ]*$'::text);


--
-- Name: email_change_token_new_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX email_change_token_new_idx ON auth.users USING btree (email_change_token_new) WHERE ((email_change_token_new)::text !~ '^[0-9 ]*$'::text);


--
-- Name: factor_id_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX factor_id_created_at_idx ON auth.mfa_factors USING btree (user_id, created_at);


--
-- Name: flow_state_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX flow_state_created_at_idx ON auth.flow_state USING btree (created_at DESC);


--
-- Name: identities_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX identities_email_idx ON auth.identities USING btree (email text_pattern_ops);


--
-- Name: INDEX identities_email_idx; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON INDEX auth.identities_email_idx IS 'Auth: Ensures indexed queries on the email column';


--
-- Name: identities_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX identities_user_id_idx ON auth.identities USING btree (user_id);


--
-- Name: idx_auth_code; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX idx_auth_code ON auth.flow_state USING btree (auth_code);


--
-- Name: idx_user_id_auth_method; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX idx_user_id_auth_method ON auth.flow_state USING btree (user_id, authentication_method);


--
-- Name: mfa_challenge_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX mfa_challenge_created_at_idx ON auth.mfa_challenges USING btree (created_at DESC);


--
-- Name: mfa_factors_user_friendly_name_unique; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX mfa_factors_user_friendly_name_unique ON auth.mfa_factors USING btree (friendly_name, user_id) WHERE (TRIM(BOTH FROM friendly_name) <> ''::text);


--
-- Name: mfa_factors_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX mfa_factors_user_id_idx ON auth.mfa_factors USING btree (user_id);


--
-- Name: oauth_clients_client_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX oauth_clients_client_id_idx ON auth.oauth_clients USING btree (client_id);


--
-- Name: oauth_clients_deleted_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX oauth_clients_deleted_at_idx ON auth.oauth_clients USING btree (deleted_at);


--
-- Name: one_time_tokens_relates_to_hash_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX one_time_tokens_relates_to_hash_idx ON auth.one_time_tokens USING hash (relates_to);


--
-- Name: one_time_tokens_token_hash_hash_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX one_time_tokens_token_hash_hash_idx ON auth.one_time_tokens USING hash (token_hash);


--
-- Name: one_time_tokens_user_id_token_type_key; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX one_time_tokens_user_id_token_type_key ON auth.one_time_tokens USING btree (user_id, token_type);


--
-- Name: reauthentication_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX reauthentication_token_idx ON auth.users USING btree (reauthentication_token) WHERE ((reauthentication_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: recovery_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX recovery_token_idx ON auth.users USING btree (recovery_token) WHERE ((recovery_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: refresh_tokens_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_instance_id_idx ON auth.refresh_tokens USING btree (instance_id);


--
-- Name: refresh_tokens_instance_id_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_instance_id_user_id_idx ON auth.refresh_tokens USING btree (instance_id, user_id);


--
-- Name: refresh_tokens_parent_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_parent_idx ON auth.refresh_tokens USING btree (parent);


--
-- Name: refresh_tokens_session_id_revoked_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_session_id_revoked_idx ON auth.refresh_tokens USING btree (session_id, revoked);


--
-- Name: refresh_tokens_updated_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_updated_at_idx ON auth.refresh_tokens USING btree (updated_at DESC);


--
-- Name: saml_providers_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_providers_sso_provider_id_idx ON auth.saml_providers USING btree (sso_provider_id);


--
-- Name: saml_relay_states_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_created_at_idx ON auth.saml_relay_states USING btree (created_at DESC);


--
-- Name: saml_relay_states_for_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_for_email_idx ON auth.saml_relay_states USING btree (for_email);


--
-- Name: saml_relay_states_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_sso_provider_id_idx ON auth.saml_relay_states USING btree (sso_provider_id);


--
-- Name: sessions_not_after_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sessions_not_after_idx ON auth.sessions USING btree (not_after DESC);


--
-- Name: sessions_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sessions_user_id_idx ON auth.sessions USING btree (user_id);


--
-- Name: sso_domains_domain_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX sso_domains_domain_idx ON auth.sso_domains USING btree (lower(domain));


--
-- Name: sso_domains_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sso_domains_sso_provider_id_idx ON auth.sso_domains USING btree (sso_provider_id);


--
-- Name: sso_providers_resource_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX sso_providers_resource_id_idx ON auth.sso_providers USING btree (lower(resource_id));


--
-- Name: sso_providers_resource_id_pattern_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sso_providers_resource_id_pattern_idx ON auth.sso_providers USING btree (resource_id text_pattern_ops);


--
-- Name: unique_phone_factor_per_user; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX unique_phone_factor_per_user ON auth.mfa_factors USING btree (user_id, phone);


--
-- Name: user_id_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX user_id_created_at_idx ON auth.sessions USING btree (user_id, created_at);


--
-- Name: users_email_partial_key; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX users_email_partial_key ON auth.users USING btree (email) WHERE (is_sso_user = false);


--
-- Name: INDEX users_email_partial_key; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON INDEX auth.users_email_partial_key IS 'Auth: A partial unique index that applies only when is_sso_user is false';


--
-- Name: users_instance_id_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_instance_id_email_idx ON auth.users USING btree (instance_id, lower((email)::text));


--
-- Name: users_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_instance_id_idx ON auth.users USING btree (instance_id);


--
-- Name: users_is_anonymous_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_is_anonymous_idx ON auth.users USING btree (is_anonymous);


--
-- Name: idx_cities_province_id; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE INDEX idx_cities_province_id ON menuca_v3.cities USING btree (province_id);


--
-- Name: idx_contacts_email; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE INDEX idx_contacts_email ON menuca_v3.restaurant_contacts USING btree (email);


--
-- Name: idx_contacts_restaurant; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE INDEX idx_contacts_restaurant ON menuca_v3.restaurant_contacts USING btree (restaurant_id);


--
-- Name: idx_locations_city_id; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE INDEX idx_locations_city_id ON menuca_v3.restaurant_locations USING btree (city_id);


--
-- Name: idx_locations_coords; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE INDEX idx_locations_coords ON menuca_v3.restaurant_locations USING btree (latitude, longitude);


--
-- Name: idx_locations_restaurant; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE INDEX idx_locations_restaurant ON menuca_v3.restaurant_locations USING btree (restaurant_id);


--
-- Name: idx_restaurants_legacy; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE INDEX idx_restaurants_legacy ON menuca_v3.restaurants USING btree (legacy_v1_id, legacy_v2_id);


--
-- Name: idx_restaurants_status; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE INDEX idx_restaurants_status ON menuca_v3.restaurants USING btree (status);


--
-- Name: idx_schedules_restaurant; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE INDEX idx_schedules_restaurant ON menuca_v3.restaurant_schedules USING btree (restaurant_id);


--
-- Name: u_admin_email_per_restaurant; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE UNIQUE INDEX u_admin_email_per_restaurant ON menuca_v3.restaurant_admin_users USING btree (restaurant_id, email);


--
-- Name: u_cities_name_province; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE UNIQUE INDEX u_cities_name_province ON menuca_v3.cities USING btree (lower((name)::text), COALESCE((province_id)::integer, 0));


--
-- Name: u_provinces_name; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE UNIQUE INDEX u_provinces_name ON menuca_v3.provinces USING btree (lower((name)::text));


--
-- Name: u_provinces_name_en; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE UNIQUE INDEX u_provinces_name_en ON menuca_v3.provinces USING btree (lower((name)::text));


--
-- Name: u_provinces_short_name; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE UNIQUE INDEX u_provinces_short_name ON menuca_v3.provinces USING btree (lower((short_name)::text));


--
-- Name: u_restaurant_domains_restaurant_domain; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE UNIQUE INDEX u_restaurant_domains_restaurant_domain ON menuca_v3.restaurant_domains USING btree (restaurant_id, lower((domain)::text));


--
-- Name: u_sched_restaurant_service_day; Type: INDEX; Schema: menuca_v3; Owner: postgres
--

CREATE UNIQUE INDEX u_sched_restaurant_service_day ON menuca_v3.restaurant_schedules USING btree (restaurant_id, type, day_start, time_start, time_stop);


--
-- Name: ix_realtime_subscription_entity; Type: INDEX; Schema: realtime; Owner: supabase_admin
--

CREATE INDEX ix_realtime_subscription_entity ON realtime.subscription USING btree (entity);


--
-- Name: messages_inserted_at_topic_index; Type: INDEX; Schema: realtime; Owner: supabase_realtime_admin
--

CREATE INDEX messages_inserted_at_topic_index ON ONLY realtime.messages USING btree (inserted_at DESC, topic) WHERE ((extension = 'broadcast'::text) AND (private IS TRUE));


--
-- Name: subscription_subscription_id_entity_filters_key; Type: INDEX; Schema: realtime; Owner: supabase_admin
--

CREATE UNIQUE INDEX subscription_subscription_id_entity_filters_key ON realtime.subscription USING btree (subscription_id, entity, filters);


--
-- Name: idx_cities_v2_province_id; Type: INDEX; Schema: staging; Owner: postgres
--

CREATE INDEX idx_cities_v2_province_id ON staging.cities_v2 USING btree (province_id);


--
-- Name: bname; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX bname ON storage.buckets USING btree (name);


--
-- Name: bucketid_objname; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX bucketid_objname ON storage.objects USING btree (bucket_id, name);


--
-- Name: idx_multipart_uploads_list; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_multipart_uploads_list ON storage.s3_multipart_uploads USING btree (bucket_id, key, created_at);


--
-- Name: idx_name_bucket_level_unique; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX idx_name_bucket_level_unique ON storage.objects USING btree (name COLLATE "C", bucket_id, level);


--
-- Name: idx_objects_bucket_id_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_objects_bucket_id_name ON storage.objects USING btree (bucket_id, name COLLATE "C");


--
-- Name: idx_objects_lower_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_objects_lower_name ON storage.objects USING btree ((path_tokens[level]), lower(name) text_pattern_ops, bucket_id, level);


--
-- Name: idx_prefixes_lower_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_prefixes_lower_name ON storage.prefixes USING btree (bucket_id, level, ((string_to_array(name, '/'::text))[level]), lower(name) text_pattern_ops);


--
-- Name: name_prefix_search; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX name_prefix_search ON storage.objects USING btree (name text_pattern_ops);


--
-- Name: objects_bucket_id_level_idx; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX objects_bucket_id_level_idx ON storage.objects USING btree (bucket_id, level, name COLLATE "C");


--
-- Name: restaurant_admin_users trg_admin_users_updated_at; Type: TRIGGER; Schema: menuca_v3; Owner: postgres
--

CREATE TRIGGER trg_admin_users_updated_at BEFORE UPDATE ON menuca_v3.restaurant_admin_users FOR EACH ROW EXECUTE FUNCTION menuca_v3.set_updated_at();


--
-- Name: restaurant_contacts trg_contacts_updated_at; Type: TRIGGER; Schema: menuca_v3; Owner: postgres
--

CREATE TRIGGER trg_contacts_updated_at BEFORE UPDATE ON menuca_v3.restaurant_contacts FOR EACH ROW EXECUTE FUNCTION menuca_v3.set_updated_at();


--
-- Name: restaurant_locations trg_locations_updated_at; Type: TRIGGER; Schema: menuca_v3; Owner: postgres
--

CREATE TRIGGER trg_locations_updated_at BEFORE UPDATE ON menuca_v3.restaurant_locations FOR EACH ROW EXECUTE FUNCTION menuca_v3.set_updated_at();


--
-- Name: restaurants trg_restaurants_updated_at; Type: TRIGGER; Schema: menuca_v3; Owner: postgres
--

CREATE TRIGGER trg_restaurants_updated_at BEFORE UPDATE ON menuca_v3.restaurants FOR EACH ROW EXECUTE FUNCTION menuca_v3.set_updated_at();


--
-- Name: restaurant_schedules trg_schedules_updated_at; Type: TRIGGER; Schema: menuca_v3; Owner: postgres
--

CREATE TRIGGER trg_schedules_updated_at BEFORE UPDATE ON menuca_v3.restaurant_schedules FOR EACH ROW EXECUTE FUNCTION menuca_v3.set_updated_at();


--
-- Name: subscription tr_check_filters; Type: TRIGGER; Schema: realtime; Owner: supabase_admin
--

CREATE TRIGGER tr_check_filters BEFORE INSERT OR UPDATE ON realtime.subscription FOR EACH ROW EXECUTE FUNCTION realtime.subscription_check_filters();


--
-- Name: buckets enforce_bucket_name_length_trigger; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER enforce_bucket_name_length_trigger BEFORE INSERT OR UPDATE OF name ON storage.buckets FOR EACH ROW EXECUTE FUNCTION storage.enforce_bucket_name_length();


--
-- Name: objects objects_delete_delete_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_delete_delete_prefix AFTER DELETE ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger();


--
-- Name: objects objects_insert_create_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_insert_create_prefix BEFORE INSERT ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.objects_insert_prefix_trigger();


--
-- Name: objects objects_update_create_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_update_create_prefix BEFORE UPDATE ON storage.objects FOR EACH ROW WHEN (((new.name <> old.name) OR (new.bucket_id <> old.bucket_id))) EXECUTE FUNCTION storage.objects_update_prefix_trigger();


--
-- Name: prefixes prefixes_create_hierarchy; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER prefixes_create_hierarchy BEFORE INSERT ON storage.prefixes FOR EACH ROW WHEN ((pg_trigger_depth() < 1)) EXECUTE FUNCTION storage.prefixes_insert_trigger();


--
-- Name: prefixes prefixes_delete_hierarchy; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER prefixes_delete_hierarchy AFTER DELETE ON storage.prefixes FOR EACH ROW EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger();


--
-- Name: objects update_objects_updated_at; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER update_objects_updated_at BEFORE UPDATE ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.update_updated_at_column();


--
-- Name: identities identities_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: mfa_amr_claims mfa_amr_claims_session_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT mfa_amr_claims_session_id_fkey FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE;


--
-- Name: mfa_challenges mfa_challenges_auth_factor_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_challenges
    ADD CONSTRAINT mfa_challenges_auth_factor_id_fkey FOREIGN KEY (factor_id) REFERENCES auth.mfa_factors(id) ON DELETE CASCADE;


--
-- Name: mfa_factors mfa_factors_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: one_time_tokens one_time_tokens_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.one_time_tokens
    ADD CONSTRAINT one_time_tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: refresh_tokens refresh_tokens_session_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_session_id_fkey FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE;


--
-- Name: saml_providers saml_providers_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: saml_relay_states saml_relay_states_flow_state_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_flow_state_id_fkey FOREIGN KEY (flow_state_id) REFERENCES auth.flow_state(id) ON DELETE CASCADE;


--
-- Name: saml_relay_states saml_relay_states_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: sessions sessions_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sessions
    ADD CONSTRAINT sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: sso_domains sso_domains_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_domains
    ADD CONSTRAINT sso_domains_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: cities cities_province_id_fkey; Type: FK CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.cities
    ADD CONSTRAINT cities_province_id_fkey FOREIGN KEY (province_id) REFERENCES menuca_v3.provinces(id);


--
-- Name: restaurant_admin_users restaurant_admin_users_restaurant_id_fkey; Type: FK CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_admin_users
    ADD CONSTRAINT restaurant_admin_users_restaurant_id_fkey FOREIGN KEY (restaurant_id) REFERENCES menuca_v3.restaurants(id) ON DELETE CASCADE;


--
-- Name: restaurant_contacts restaurant_contacts_restaurant_id_fkey; Type: FK CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_contacts
    ADD CONSTRAINT restaurant_contacts_restaurant_id_fkey FOREIGN KEY (restaurant_id) REFERENCES menuca_v3.restaurants(id) ON DELETE CASCADE;


--
-- Name: restaurant_domains restaurant_domains_restaurant_id_fkey; Type: FK CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_domains
    ADD CONSTRAINT restaurant_domains_restaurant_id_fkey FOREIGN KEY (restaurant_id) REFERENCES menuca_v3.restaurants(id) ON DELETE CASCADE;


--
-- Name: restaurant_locations restaurant_locations_city_id_fkey; Type: FK CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_locations
    ADD CONSTRAINT restaurant_locations_city_id_fkey FOREIGN KEY (city_id) REFERENCES menuca_v3.cities(id) ON UPDATE RESTRICT ON DELETE RESTRICT NOT VALID;


--
-- Name: restaurant_locations restaurant_locations_restaurant_id_fkey; Type: FK CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_locations
    ADD CONSTRAINT restaurant_locations_restaurant_id_fkey FOREIGN KEY (restaurant_id) REFERENCES menuca_v3.restaurants(id) ON DELETE CASCADE;


--
-- Name: restaurant_schedules restaurant_schedules_restaurant_id_fkey; Type: FK CONSTRAINT; Schema: menuca_v3; Owner: postgres
--

ALTER TABLE ONLY menuca_v3.restaurant_schedules
    ADD CONSTRAINT restaurant_schedules_restaurant_id_fkey FOREIGN KEY (restaurant_id) REFERENCES menuca_v3.restaurants(id) ON DELETE CASCADE;


--
-- Name: objects objects_bucketId_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.objects
    ADD CONSTRAINT "objects_bucketId_fkey" FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: prefixes prefixes_bucketId_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.prefixes
    ADD CONSTRAINT "prefixes_bucketId_fkey" FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads s3_multipart_uploads_bucket_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads
    ADD CONSTRAINT s3_multipart_uploads_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_bucket_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_upload_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_upload_id_fkey FOREIGN KEY (upload_id) REFERENCES storage.s3_multipart_uploads(id) ON DELETE CASCADE;


--
-- Name: audit_log_entries; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.audit_log_entries ENABLE ROW LEVEL SECURITY;

--
-- Name: flow_state; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.flow_state ENABLE ROW LEVEL SECURITY;

--
-- Name: identities; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.identities ENABLE ROW LEVEL SECURITY;

--
-- Name: instances; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.instances ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_amr_claims; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_amr_claims ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_challenges; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_challenges ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_factors; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_factors ENABLE ROW LEVEL SECURITY;

--
-- Name: one_time_tokens; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.one_time_tokens ENABLE ROW LEVEL SECURITY;

--
-- Name: refresh_tokens; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.refresh_tokens ENABLE ROW LEVEL SECURITY;

--
-- Name: saml_providers; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.saml_providers ENABLE ROW LEVEL SECURITY;

--
-- Name: saml_relay_states; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.saml_relay_states ENABLE ROW LEVEL SECURITY;

--
-- Name: schema_migrations; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.schema_migrations ENABLE ROW LEVEL SECURITY;

--
-- Name: sessions; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sessions ENABLE ROW LEVEL SECURITY;

--
-- Name: sso_domains; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sso_domains ENABLE ROW LEVEL SECURITY;

--
-- Name: sso_providers; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sso_providers ENABLE ROW LEVEL SECURITY;

--
-- Name: users; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.users ENABLE ROW LEVEL SECURITY;

--
-- Name: messages; Type: ROW SECURITY; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER TABLE realtime.messages ENABLE ROW LEVEL SECURITY;

--
-- Name: buckets; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.buckets ENABLE ROW LEVEL SECURITY;

--
-- Name: buckets_analytics; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.buckets_analytics ENABLE ROW LEVEL SECURITY;

--
-- Name: migrations; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.migrations ENABLE ROW LEVEL SECURITY;

--
-- Name: objects; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.objects ENABLE ROW LEVEL SECURITY;

--
-- Name: prefixes; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.prefixes ENABLE ROW LEVEL SECURITY;

--
-- Name: s3_multipart_uploads; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.s3_multipart_uploads ENABLE ROW LEVEL SECURITY;

--
-- Name: s3_multipart_uploads_parts; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.s3_multipart_uploads_parts ENABLE ROW LEVEL SECURITY;

--
-- Name: supabase_realtime; Type: PUBLICATION; Schema: -; Owner: postgres
--

CREATE PUBLICATION supabase_realtime WITH (publish = 'insert, update, delete, truncate');


ALTER PUBLICATION supabase_realtime OWNER TO postgres;

--
-- Name: SCHEMA auth; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA auth TO anon;
GRANT USAGE ON SCHEMA auth TO authenticated;
GRANT USAGE ON SCHEMA auth TO service_role;
GRANT ALL ON SCHEMA auth TO supabase_auth_admin;
GRANT ALL ON SCHEMA auth TO dashboard_user;
GRANT USAGE ON SCHEMA auth TO postgres;


--
-- Name: SCHEMA extensions; Type: ACL; Schema: -; Owner: postgres
--

GRANT USAGE ON SCHEMA extensions TO anon;
GRANT USAGE ON SCHEMA extensions TO authenticated;
GRANT USAGE ON SCHEMA extensions TO service_role;
GRANT ALL ON SCHEMA extensions TO dashboard_user;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: pg_database_owner
--

GRANT USAGE ON SCHEMA public TO postgres;
GRANT USAGE ON SCHEMA public TO anon;
GRANT USAGE ON SCHEMA public TO authenticated;
GRANT USAGE ON SCHEMA public TO service_role;


--
-- Name: SCHEMA realtime; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA realtime TO postgres;
GRANT USAGE ON SCHEMA realtime TO anon;
GRANT USAGE ON SCHEMA realtime TO authenticated;
GRANT USAGE ON SCHEMA realtime TO service_role;
GRANT ALL ON SCHEMA realtime TO supabase_realtime_admin;


--
-- Name: SCHEMA storage; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA storage TO postgres WITH GRANT OPTION;
GRANT USAGE ON SCHEMA storage TO anon;
GRANT USAGE ON SCHEMA storage TO authenticated;
GRANT USAGE ON SCHEMA storage TO service_role;
GRANT ALL ON SCHEMA storage TO supabase_storage_admin;
GRANT ALL ON SCHEMA storage TO dashboard_user;


--
-- Name: SCHEMA vault; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA vault TO postgres WITH GRANT OPTION;
GRANT USAGE ON SCHEMA vault TO service_role;


--
-- Name: FUNCTION box2d_in(cstring); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box2d_in(cstring) TO postgres;
GRANT ALL ON FUNCTION public.box2d_in(cstring) TO anon;
GRANT ALL ON FUNCTION public.box2d_in(cstring) TO authenticated;
GRANT ALL ON FUNCTION public.box2d_in(cstring) TO service_role;


--
-- Name: FUNCTION box2d_out(public.box2d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box2d_out(public.box2d) TO postgres;
GRANT ALL ON FUNCTION public.box2d_out(public.box2d) TO anon;
GRANT ALL ON FUNCTION public.box2d_out(public.box2d) TO authenticated;
GRANT ALL ON FUNCTION public.box2d_out(public.box2d) TO service_role;


--
-- Name: FUNCTION box2df_in(cstring); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box2df_in(cstring) TO postgres;
GRANT ALL ON FUNCTION public.box2df_in(cstring) TO anon;
GRANT ALL ON FUNCTION public.box2df_in(cstring) TO authenticated;
GRANT ALL ON FUNCTION public.box2df_in(cstring) TO service_role;


--
-- Name: FUNCTION box2df_out(public.box2df); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box2df_out(public.box2df) TO postgres;
GRANT ALL ON FUNCTION public.box2df_out(public.box2df) TO anon;
GRANT ALL ON FUNCTION public.box2df_out(public.box2df) TO authenticated;
GRANT ALL ON FUNCTION public.box2df_out(public.box2df) TO service_role;


--
-- Name: FUNCTION box3d_in(cstring); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box3d_in(cstring) TO postgres;
GRANT ALL ON FUNCTION public.box3d_in(cstring) TO anon;
GRANT ALL ON FUNCTION public.box3d_in(cstring) TO authenticated;
GRANT ALL ON FUNCTION public.box3d_in(cstring) TO service_role;


--
-- Name: FUNCTION box3d_out(public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box3d_out(public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.box3d_out(public.box3d) TO anon;
GRANT ALL ON FUNCTION public.box3d_out(public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.box3d_out(public.box3d) TO service_role;


--
-- Name: FUNCTION geography_analyze(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_analyze(internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_analyze(internal) TO anon;
GRANT ALL ON FUNCTION public.geography_analyze(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_analyze(internal) TO service_role;


--
-- Name: FUNCTION geography_in(cstring, oid, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_in(cstring, oid, integer) TO postgres;
GRANT ALL ON FUNCTION public.geography_in(cstring, oid, integer) TO anon;
GRANT ALL ON FUNCTION public.geography_in(cstring, oid, integer) TO authenticated;
GRANT ALL ON FUNCTION public.geography_in(cstring, oid, integer) TO service_role;


--
-- Name: FUNCTION geography_out(public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_out(public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geography_out(public.geography) TO anon;
GRANT ALL ON FUNCTION public.geography_out(public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geography_out(public.geography) TO service_role;


--
-- Name: FUNCTION geography_recv(internal, oid, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_recv(internal, oid, integer) TO postgres;
GRANT ALL ON FUNCTION public.geography_recv(internal, oid, integer) TO anon;
GRANT ALL ON FUNCTION public.geography_recv(internal, oid, integer) TO authenticated;
GRANT ALL ON FUNCTION public.geography_recv(internal, oid, integer) TO service_role;


--
-- Name: FUNCTION geography_send(public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_send(public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geography_send(public.geography) TO anon;
GRANT ALL ON FUNCTION public.geography_send(public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geography_send(public.geography) TO service_role;


--
-- Name: FUNCTION geography_typmod_in(cstring[]); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_typmod_in(cstring[]) TO postgres;
GRANT ALL ON FUNCTION public.geography_typmod_in(cstring[]) TO anon;
GRANT ALL ON FUNCTION public.geography_typmod_in(cstring[]) TO authenticated;
GRANT ALL ON FUNCTION public.geography_typmod_in(cstring[]) TO service_role;


--
-- Name: FUNCTION geography_typmod_out(integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_typmod_out(integer) TO postgres;
GRANT ALL ON FUNCTION public.geography_typmod_out(integer) TO anon;
GRANT ALL ON FUNCTION public.geography_typmod_out(integer) TO authenticated;
GRANT ALL ON FUNCTION public.geography_typmod_out(integer) TO service_role;


--
-- Name: FUNCTION geometry_analyze(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_analyze(internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_analyze(internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_analyze(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_analyze(internal) TO service_role;


--
-- Name: FUNCTION geometry_in(cstring); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_in(cstring) TO postgres;
GRANT ALL ON FUNCTION public.geometry_in(cstring) TO anon;
GRANT ALL ON FUNCTION public.geometry_in(cstring) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_in(cstring) TO service_role;


--
-- Name: FUNCTION geometry_out(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_out(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_out(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_out(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_out(public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_recv(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_recv(internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_recv(internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_recv(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_recv(internal) TO service_role;


--
-- Name: FUNCTION geometry_send(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_send(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_send(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_send(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_send(public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_typmod_in(cstring[]); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_typmod_in(cstring[]) TO postgres;
GRANT ALL ON FUNCTION public.geometry_typmod_in(cstring[]) TO anon;
GRANT ALL ON FUNCTION public.geometry_typmod_in(cstring[]) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_typmod_in(cstring[]) TO service_role;


--
-- Name: FUNCTION geometry_typmod_out(integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_typmod_out(integer) TO postgres;
GRANT ALL ON FUNCTION public.geometry_typmod_out(integer) TO anon;
GRANT ALL ON FUNCTION public.geometry_typmod_out(integer) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_typmod_out(integer) TO service_role;


--
-- Name: FUNCTION gidx_in(cstring); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.gidx_in(cstring) TO postgres;
GRANT ALL ON FUNCTION public.gidx_in(cstring) TO anon;
GRANT ALL ON FUNCTION public.gidx_in(cstring) TO authenticated;
GRANT ALL ON FUNCTION public.gidx_in(cstring) TO service_role;


--
-- Name: FUNCTION gidx_out(public.gidx); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.gidx_out(public.gidx) TO postgres;
GRANT ALL ON FUNCTION public.gidx_out(public.gidx) TO anon;
GRANT ALL ON FUNCTION public.gidx_out(public.gidx) TO authenticated;
GRANT ALL ON FUNCTION public.gidx_out(public.gidx) TO service_role;


--
-- Name: FUNCTION spheroid_in(cstring); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.spheroid_in(cstring) TO postgres;
GRANT ALL ON FUNCTION public.spheroid_in(cstring) TO anon;
GRANT ALL ON FUNCTION public.spheroid_in(cstring) TO authenticated;
GRANT ALL ON FUNCTION public.spheroid_in(cstring) TO service_role;


--
-- Name: FUNCTION spheroid_out(public.spheroid); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.spheroid_out(public.spheroid) TO postgres;
GRANT ALL ON FUNCTION public.spheroid_out(public.spheroid) TO anon;
GRANT ALL ON FUNCTION public.spheroid_out(public.spheroid) TO authenticated;
GRANT ALL ON FUNCTION public.spheroid_out(public.spheroid) TO service_role;


--
-- Name: FUNCTION box3d(public.box2d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box3d(public.box2d) TO postgres;
GRANT ALL ON FUNCTION public.box3d(public.box2d) TO anon;
GRANT ALL ON FUNCTION public.box3d(public.box2d) TO authenticated;
GRANT ALL ON FUNCTION public.box3d(public.box2d) TO service_role;


--
-- Name: FUNCTION geometry(public.box2d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry(public.box2d) TO postgres;
GRANT ALL ON FUNCTION public.geometry(public.box2d) TO anon;
GRANT ALL ON FUNCTION public.geometry(public.box2d) TO authenticated;
GRANT ALL ON FUNCTION public.geometry(public.box2d) TO service_role;


--
-- Name: FUNCTION box(public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box(public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.box(public.box3d) TO anon;
GRANT ALL ON FUNCTION public.box(public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.box(public.box3d) TO service_role;


--
-- Name: FUNCTION box2d(public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box2d(public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.box2d(public.box3d) TO anon;
GRANT ALL ON FUNCTION public.box2d(public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.box2d(public.box3d) TO service_role;


--
-- Name: FUNCTION geometry(public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry(public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.geometry(public.box3d) TO anon;
GRANT ALL ON FUNCTION public.geometry(public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.geometry(public.box3d) TO service_role;


--
-- Name: FUNCTION geography(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography(bytea) TO postgres;
GRANT ALL ON FUNCTION public.geography(bytea) TO anon;
GRANT ALL ON FUNCTION public.geography(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.geography(bytea) TO service_role;


--
-- Name: FUNCTION geometry(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry(bytea) TO postgres;
GRANT ALL ON FUNCTION public.geometry(bytea) TO anon;
GRANT ALL ON FUNCTION public.geometry(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.geometry(bytea) TO service_role;


--
-- Name: FUNCTION bytea(public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.bytea(public.geography) TO postgres;
GRANT ALL ON FUNCTION public.bytea(public.geography) TO anon;
GRANT ALL ON FUNCTION public.bytea(public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.bytea(public.geography) TO service_role;


--
-- Name: FUNCTION geography(public.geography, integer, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography(public.geography, integer, boolean) TO postgres;
GRANT ALL ON FUNCTION public.geography(public.geography, integer, boolean) TO anon;
GRANT ALL ON FUNCTION public.geography(public.geography, integer, boolean) TO authenticated;
GRANT ALL ON FUNCTION public.geography(public.geography, integer, boolean) TO service_role;


--
-- Name: FUNCTION geometry(public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry(public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geometry(public.geography) TO anon;
GRANT ALL ON FUNCTION public.geometry(public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geometry(public.geography) TO service_role;


--
-- Name: FUNCTION box(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.box(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.box(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.box(public.geometry) TO service_role;


--
-- Name: FUNCTION box2d(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box2d(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.box2d(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.box2d(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.box2d(public.geometry) TO service_role;


--
-- Name: FUNCTION box3d(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box3d(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.box3d(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.box3d(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.box3d(public.geometry) TO service_role;


--
-- Name: FUNCTION bytea(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.bytea(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.bytea(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.bytea(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.bytea(public.geometry) TO service_role;


--
-- Name: FUNCTION geography(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geography(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geography(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geography(public.geometry) TO service_role;


--
-- Name: FUNCTION geometry(public.geometry, integer, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry(public.geometry, integer, boolean) TO postgres;
GRANT ALL ON FUNCTION public.geometry(public.geometry, integer, boolean) TO anon;
GRANT ALL ON FUNCTION public.geometry(public.geometry, integer, boolean) TO authenticated;
GRANT ALL ON FUNCTION public.geometry(public.geometry, integer, boolean) TO service_role;


--
-- Name: FUNCTION "json"(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public."json"(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public."json"(public.geometry) TO anon;
GRANT ALL ON FUNCTION public."json"(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public."json"(public.geometry) TO service_role;


--
-- Name: FUNCTION jsonb(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.jsonb(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.jsonb(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.jsonb(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.jsonb(public.geometry) TO service_role;


--
-- Name: FUNCTION path(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.path(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.path(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.path(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.path(public.geometry) TO service_role;


--
-- Name: FUNCTION point(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.point(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.point(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.point(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.point(public.geometry) TO service_role;


--
-- Name: FUNCTION polygon(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.polygon(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.polygon(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.polygon(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.polygon(public.geometry) TO service_role;


--
-- Name: FUNCTION text(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.text(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.text(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.text(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.text(public.geometry) TO service_role;


--
-- Name: FUNCTION geometry(path); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry(path) TO postgres;
GRANT ALL ON FUNCTION public.geometry(path) TO anon;
GRANT ALL ON FUNCTION public.geometry(path) TO authenticated;
GRANT ALL ON FUNCTION public.geometry(path) TO service_role;


--
-- Name: FUNCTION geometry(point); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry(point) TO postgres;
GRANT ALL ON FUNCTION public.geometry(point) TO anon;
GRANT ALL ON FUNCTION public.geometry(point) TO authenticated;
GRANT ALL ON FUNCTION public.geometry(point) TO service_role;


--
-- Name: FUNCTION geometry(polygon); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry(polygon) TO postgres;
GRANT ALL ON FUNCTION public.geometry(polygon) TO anon;
GRANT ALL ON FUNCTION public.geometry(polygon) TO authenticated;
GRANT ALL ON FUNCTION public.geometry(polygon) TO service_role;


--
-- Name: FUNCTION geometry(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry(text) TO postgres;
GRANT ALL ON FUNCTION public.geometry(text) TO anon;
GRANT ALL ON FUNCTION public.geometry(text) TO authenticated;
GRANT ALL ON FUNCTION public.geometry(text) TO service_role;


--
-- Name: FUNCTION email(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.email() TO dashboard_user;


--
-- Name: FUNCTION jwt(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.jwt() TO postgres;
GRANT ALL ON FUNCTION auth.jwt() TO dashboard_user;


--
-- Name: FUNCTION role(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.role() TO dashboard_user;


--
-- Name: FUNCTION uid(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.uid() TO dashboard_user;


--
-- Name: FUNCTION armor(bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.armor(bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.armor(bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.armor(bytea) TO dashboard_user;


--
-- Name: FUNCTION armor(bytea, text[], text[]); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.armor(bytea, text[], text[]) FROM postgres;
GRANT ALL ON FUNCTION extensions.armor(bytea, text[], text[]) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.armor(bytea, text[], text[]) TO dashboard_user;


--
-- Name: FUNCTION crypt(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.crypt(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.crypt(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.crypt(text, text) TO dashboard_user;


--
-- Name: FUNCTION dearmor(text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.dearmor(text) FROM postgres;
GRANT ALL ON FUNCTION extensions.dearmor(text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.dearmor(text) TO dashboard_user;


--
-- Name: FUNCTION decrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION decrypt_iv(bytea, bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION digest(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.digest(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.digest(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.digest(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION digest(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.digest(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.digest(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.digest(text, text) TO dashboard_user;


--
-- Name: FUNCTION encrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION encrypt_iv(bytea, bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION gen_random_bytes(integer); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_random_bytes(integer) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_random_bytes(integer) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_random_bytes(integer) TO dashboard_user;


--
-- Name: FUNCTION gen_random_uuid(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_random_uuid() FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_random_uuid() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_random_uuid() TO dashboard_user;


--
-- Name: FUNCTION gen_salt(text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_salt(text) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_salt(text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_salt(text) TO dashboard_user;


--
-- Name: FUNCTION gen_salt(text, integer); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_salt(text, integer) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_salt(text, integer) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_salt(text, integer) TO dashboard_user;


--
-- Name: FUNCTION grant_pg_cron_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION extensions.grant_pg_cron_access() FROM supabase_admin;
GRANT ALL ON FUNCTION extensions.grant_pg_cron_access() TO supabase_admin WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.grant_pg_cron_access() TO dashboard_user;


--
-- Name: FUNCTION grant_pg_graphql_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.grant_pg_graphql_access() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION grant_pg_net_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION extensions.grant_pg_net_access() FROM supabase_admin;
GRANT ALL ON FUNCTION extensions.grant_pg_net_access() TO supabase_admin WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.grant_pg_net_access() TO dashboard_user;


--
-- Name: FUNCTION hmac(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.hmac(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.hmac(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.hmac(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION hmac(text, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.hmac(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.hmac(text, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.hmac(text, text, text) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) TO dashboard_user;


--
-- Name: FUNCTION pgp_armor_headers(text, OUT key text, OUT value text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) TO dashboard_user;


--
-- Name: FUNCTION pgp_key_id(bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_key_id(bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_key_id(bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_key_id(bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt(text, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt(text, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt_bytea(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt_bytea(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt_bytea(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt_bytea(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt(text, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt_bytea(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt_bytea(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgrst_ddl_watch(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.pgrst_ddl_watch() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION pgrst_drop_watch(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.pgrst_drop_watch() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION set_graphql_placeholder(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.set_graphql_placeholder() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION uuid_generate_v1(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v1() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v1mc(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v1mc() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1mc() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1mc() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v3(namespace uuid, name text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v4(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v4() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v4() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v4() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v5(namespace uuid, name text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) TO dashboard_user;


--
-- Name: FUNCTION uuid_nil(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_nil() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_nil() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_nil() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_dns(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_dns() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_dns() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_dns() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_oid(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_oid() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_oid() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_oid() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_url(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_url() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_url() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_url() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_x500(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_x500() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_x500() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_x500() TO dashboard_user;


--
-- Name: FUNCTION graphql("operationName" text, query text, variables jsonb, extensions jsonb); Type: ACL; Schema: graphql_public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO postgres;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO anon;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO authenticated;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO service_role;


--
-- Name: FUNCTION get_auth(p_usename text); Type: ACL; Schema: pgbouncer; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION pgbouncer.get_auth(p_usename text) FROM PUBLIC;
GRANT ALL ON FUNCTION pgbouncer.get_auth(p_usename text) TO pgbouncer;
GRANT ALL ON FUNCTION pgbouncer.get_auth(p_usename text) TO postgres;


--
-- Name: FUNCTION _ensure_item_and_link(p_category_id uuid, p_item_name text, p_item_desc text, p_item_price numeric); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public._ensure_item_and_link(p_category_id uuid, p_item_name text, p_item_desc text, p_item_price numeric) TO anon;
GRANT ALL ON FUNCTION public._ensure_item_and_link(p_category_id uuid, p_item_name text, p_item_desc text, p_item_price numeric) TO authenticated;
GRANT ALL ON FUNCTION public._ensure_item_and_link(p_category_id uuid, p_item_name text, p_item_desc text, p_item_price numeric) TO service_role;


--
-- Name: FUNCTION _on_menu_categories_ai(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public._on_menu_categories_ai() TO anon;
GRANT ALL ON FUNCTION public._on_menu_categories_ai() TO authenticated;
GRANT ALL ON FUNCTION public._on_menu_categories_ai() TO service_role;


--
-- Name: FUNCTION _on_menu_items_ai(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public._on_menu_items_ai() TO anon;
GRANT ALL ON FUNCTION public._on_menu_items_ai() TO authenticated;
GRANT ALL ON FUNCTION public._on_menu_items_ai() TO service_role;


--
-- Name: FUNCTION _postgis_deprecate(oldname text, newname text, version text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._postgis_deprecate(oldname text, newname text, version text) TO postgres;
GRANT ALL ON FUNCTION public._postgis_deprecate(oldname text, newname text, version text) TO anon;
GRANT ALL ON FUNCTION public._postgis_deprecate(oldname text, newname text, version text) TO authenticated;
GRANT ALL ON FUNCTION public._postgis_deprecate(oldname text, newname text, version text) TO service_role;


--
-- Name: FUNCTION _postgis_index_extent(tbl regclass, col text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._postgis_index_extent(tbl regclass, col text) TO postgres;
GRANT ALL ON FUNCTION public._postgis_index_extent(tbl regclass, col text) TO anon;
GRANT ALL ON FUNCTION public._postgis_index_extent(tbl regclass, col text) TO authenticated;
GRANT ALL ON FUNCTION public._postgis_index_extent(tbl regclass, col text) TO service_role;


--
-- Name: FUNCTION _postgis_join_selectivity(regclass, text, regclass, text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._postgis_join_selectivity(regclass, text, regclass, text, text) TO postgres;
GRANT ALL ON FUNCTION public._postgis_join_selectivity(regclass, text, regclass, text, text) TO anon;
GRANT ALL ON FUNCTION public._postgis_join_selectivity(regclass, text, regclass, text, text) TO authenticated;
GRANT ALL ON FUNCTION public._postgis_join_selectivity(regclass, text, regclass, text, text) TO service_role;


--
-- Name: FUNCTION _postgis_pgsql_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._postgis_pgsql_version() TO postgres;
GRANT ALL ON FUNCTION public._postgis_pgsql_version() TO anon;
GRANT ALL ON FUNCTION public._postgis_pgsql_version() TO authenticated;
GRANT ALL ON FUNCTION public._postgis_pgsql_version() TO service_role;


--
-- Name: FUNCTION _postgis_scripts_pgsql_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._postgis_scripts_pgsql_version() TO postgres;
GRANT ALL ON FUNCTION public._postgis_scripts_pgsql_version() TO anon;
GRANT ALL ON FUNCTION public._postgis_scripts_pgsql_version() TO authenticated;
GRANT ALL ON FUNCTION public._postgis_scripts_pgsql_version() TO service_role;


--
-- Name: FUNCTION _postgis_selectivity(tbl regclass, att_name text, geom public.geometry, mode text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._postgis_selectivity(tbl regclass, att_name text, geom public.geometry, mode text) TO postgres;
GRANT ALL ON FUNCTION public._postgis_selectivity(tbl regclass, att_name text, geom public.geometry, mode text) TO anon;
GRANT ALL ON FUNCTION public._postgis_selectivity(tbl regclass, att_name text, geom public.geometry, mode text) TO authenticated;
GRANT ALL ON FUNCTION public._postgis_selectivity(tbl regclass, att_name text, geom public.geometry, mode text) TO service_role;


--
-- Name: FUNCTION _postgis_stats(tbl regclass, att_name text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._postgis_stats(tbl regclass, att_name text, text) TO postgres;
GRANT ALL ON FUNCTION public._postgis_stats(tbl regclass, att_name text, text) TO anon;
GRANT ALL ON FUNCTION public._postgis_stats(tbl regclass, att_name text, text) TO authenticated;
GRANT ALL ON FUNCTION public._postgis_stats(tbl regclass, att_name text, text) TO service_role;


--
-- Name: FUNCTION _st_3ddfullywithin(geom1 public.geometry, geom2 public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_3ddfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public._st_3ddfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public._st_3ddfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public._st_3ddfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION _st_3ddwithin(geom1 public.geometry, geom2 public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_3ddwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public._st_3ddwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public._st_3ddwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public._st_3ddwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION _st_3dintersects(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_3dintersects(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_3dintersects(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_3dintersects(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_3dintersects(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_asgml(integer, public.geometry, integer, integer, text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_asgml(integer, public.geometry, integer, integer, text, text) TO postgres;
GRANT ALL ON FUNCTION public._st_asgml(integer, public.geometry, integer, integer, text, text) TO anon;
GRANT ALL ON FUNCTION public._st_asgml(integer, public.geometry, integer, integer, text, text) TO authenticated;
GRANT ALL ON FUNCTION public._st_asgml(integer, public.geometry, integer, integer, text, text) TO service_role;


--
-- Name: FUNCTION _st_asx3d(integer, public.geometry, integer, integer, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_asx3d(integer, public.geometry, integer, integer, text) TO postgres;
GRANT ALL ON FUNCTION public._st_asx3d(integer, public.geometry, integer, integer, text) TO anon;
GRANT ALL ON FUNCTION public._st_asx3d(integer, public.geometry, integer, integer, text) TO authenticated;
GRANT ALL ON FUNCTION public._st_asx3d(integer, public.geometry, integer, integer, text) TO service_role;


--
-- Name: FUNCTION _st_bestsrid(public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_bestsrid(public.geography) TO postgres;
GRANT ALL ON FUNCTION public._st_bestsrid(public.geography) TO anon;
GRANT ALL ON FUNCTION public._st_bestsrid(public.geography) TO authenticated;
GRANT ALL ON FUNCTION public._st_bestsrid(public.geography) TO service_role;


--
-- Name: FUNCTION _st_bestsrid(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_bestsrid(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public._st_bestsrid(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public._st_bestsrid(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public._st_bestsrid(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION _st_contains(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_contains(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_contains(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_contains(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_contains(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_containsproperly(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_containsproperly(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_containsproperly(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_containsproperly(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_containsproperly(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_coveredby(geog1 public.geography, geog2 public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_coveredby(geog1 public.geography, geog2 public.geography) TO postgres;
GRANT ALL ON FUNCTION public._st_coveredby(geog1 public.geography, geog2 public.geography) TO anon;
GRANT ALL ON FUNCTION public._st_coveredby(geog1 public.geography, geog2 public.geography) TO authenticated;
GRANT ALL ON FUNCTION public._st_coveredby(geog1 public.geography, geog2 public.geography) TO service_role;


--
-- Name: FUNCTION _st_coveredby(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_coveredby(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_coveredby(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_coveredby(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_coveredby(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_covers(geog1 public.geography, geog2 public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_covers(geog1 public.geography, geog2 public.geography) TO postgres;
GRANT ALL ON FUNCTION public._st_covers(geog1 public.geography, geog2 public.geography) TO anon;
GRANT ALL ON FUNCTION public._st_covers(geog1 public.geography, geog2 public.geography) TO authenticated;
GRANT ALL ON FUNCTION public._st_covers(geog1 public.geography, geog2 public.geography) TO service_role;


--
-- Name: FUNCTION _st_covers(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_covers(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_covers(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_covers(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_covers(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_crosses(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_crosses(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_crosses(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_crosses(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_crosses(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_dfullywithin(geom1 public.geometry, geom2 public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_dfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public._st_dfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public._st_dfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public._st_dfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION _st_distancetree(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_distancetree(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public._st_distancetree(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public._st_distancetree(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public._st_distancetree(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION _st_distancetree(public.geography, public.geography, double precision, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_distancetree(public.geography, public.geography, double precision, boolean) TO postgres;
GRANT ALL ON FUNCTION public._st_distancetree(public.geography, public.geography, double precision, boolean) TO anon;
GRANT ALL ON FUNCTION public._st_distancetree(public.geography, public.geography, double precision, boolean) TO authenticated;
GRANT ALL ON FUNCTION public._st_distancetree(public.geography, public.geography, double precision, boolean) TO service_role;


--
-- Name: FUNCTION _st_distanceuncached(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION _st_distanceuncached(public.geography, public.geography, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography, boolean) TO postgres;
GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography, boolean) TO anon;
GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography, boolean) TO authenticated;
GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography, boolean) TO service_role;


--
-- Name: FUNCTION _st_distanceuncached(public.geography, public.geography, double precision, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography, double precision, boolean) TO postgres;
GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography, double precision, boolean) TO anon;
GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography, double precision, boolean) TO authenticated;
GRANT ALL ON FUNCTION public._st_distanceuncached(public.geography, public.geography, double precision, boolean) TO service_role;


--
-- Name: FUNCTION _st_dwithin(geom1 public.geometry, geom2 public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_dwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public._st_dwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public._st_dwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public._st_dwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION _st_dwithin(geog1 public.geography, geog2 public.geography, tolerance double precision, use_spheroid boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_dwithin(geog1 public.geography, geog2 public.geography, tolerance double precision, use_spheroid boolean) TO postgres;
GRANT ALL ON FUNCTION public._st_dwithin(geog1 public.geography, geog2 public.geography, tolerance double precision, use_spheroid boolean) TO anon;
GRANT ALL ON FUNCTION public._st_dwithin(geog1 public.geography, geog2 public.geography, tolerance double precision, use_spheroid boolean) TO authenticated;
GRANT ALL ON FUNCTION public._st_dwithin(geog1 public.geography, geog2 public.geography, tolerance double precision, use_spheroid boolean) TO service_role;


--
-- Name: FUNCTION _st_dwithinuncached(public.geography, public.geography, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_dwithinuncached(public.geography, public.geography, double precision) TO postgres;
GRANT ALL ON FUNCTION public._st_dwithinuncached(public.geography, public.geography, double precision) TO anon;
GRANT ALL ON FUNCTION public._st_dwithinuncached(public.geography, public.geography, double precision) TO authenticated;
GRANT ALL ON FUNCTION public._st_dwithinuncached(public.geography, public.geography, double precision) TO service_role;


--
-- Name: FUNCTION _st_dwithinuncached(public.geography, public.geography, double precision, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_dwithinuncached(public.geography, public.geography, double precision, boolean) TO postgres;
GRANT ALL ON FUNCTION public._st_dwithinuncached(public.geography, public.geography, double precision, boolean) TO anon;
GRANT ALL ON FUNCTION public._st_dwithinuncached(public.geography, public.geography, double precision, boolean) TO authenticated;
GRANT ALL ON FUNCTION public._st_dwithinuncached(public.geography, public.geography, double precision, boolean) TO service_role;


--
-- Name: FUNCTION _st_equals(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_equals(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_equals(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_equals(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_equals(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_expand(public.geography, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_expand(public.geography, double precision) TO postgres;
GRANT ALL ON FUNCTION public._st_expand(public.geography, double precision) TO anon;
GRANT ALL ON FUNCTION public._st_expand(public.geography, double precision) TO authenticated;
GRANT ALL ON FUNCTION public._st_expand(public.geography, double precision) TO service_role;


--
-- Name: FUNCTION _st_geomfromgml(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_geomfromgml(text, integer) TO postgres;
GRANT ALL ON FUNCTION public._st_geomfromgml(text, integer) TO anon;
GRANT ALL ON FUNCTION public._st_geomfromgml(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public._st_geomfromgml(text, integer) TO service_role;


--
-- Name: FUNCTION _st_intersects(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_intersects(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_intersects(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_intersects(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_intersects(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_linecrossingdirection(line1 public.geometry, line2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_linecrossingdirection(line1 public.geometry, line2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_linecrossingdirection(line1 public.geometry, line2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_linecrossingdirection(line1 public.geometry, line2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_linecrossingdirection(line1 public.geometry, line2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_longestline(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_longestline(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_longestline(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_longestline(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_longestline(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_maxdistance(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_maxdistance(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_maxdistance(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_maxdistance(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_maxdistance(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_orderingequals(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_orderingequals(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_orderingequals(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_orderingequals(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_orderingequals(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_overlaps(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_overlaps(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_overlaps(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_overlaps(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_overlaps(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_pointoutside(public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_pointoutside(public.geography) TO postgres;
GRANT ALL ON FUNCTION public._st_pointoutside(public.geography) TO anon;
GRANT ALL ON FUNCTION public._st_pointoutside(public.geography) TO authenticated;
GRANT ALL ON FUNCTION public._st_pointoutside(public.geography) TO service_role;


--
-- Name: FUNCTION _st_sortablehash(geom public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_sortablehash(geom public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_sortablehash(geom public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_sortablehash(geom public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_sortablehash(geom public.geometry) TO service_role;


--
-- Name: FUNCTION _st_touches(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_touches(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_touches(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_touches(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_touches(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION _st_voronoi(g1 public.geometry, clip public.geometry, tolerance double precision, return_polygons boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_voronoi(g1 public.geometry, clip public.geometry, tolerance double precision, return_polygons boolean) TO postgres;
GRANT ALL ON FUNCTION public._st_voronoi(g1 public.geometry, clip public.geometry, tolerance double precision, return_polygons boolean) TO anon;
GRANT ALL ON FUNCTION public._st_voronoi(g1 public.geometry, clip public.geometry, tolerance double precision, return_polygons boolean) TO authenticated;
GRANT ALL ON FUNCTION public._st_voronoi(g1 public.geometry, clip public.geometry, tolerance double precision, return_polygons boolean) TO service_role;


--
-- Name: FUNCTION _st_within(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public._st_within(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public._st_within(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public._st_within(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public._st_within(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION addauth(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.addauth(text) TO postgres;
GRANT ALL ON FUNCTION public.addauth(text) TO anon;
GRANT ALL ON FUNCTION public.addauth(text) TO authenticated;
GRANT ALL ON FUNCTION public.addauth(text) TO service_role;


--
-- Name: FUNCTION addgeometrycolumn(table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.addgeometrycolumn(table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean) TO postgres;
GRANT ALL ON FUNCTION public.addgeometrycolumn(table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean) TO anon;
GRANT ALL ON FUNCTION public.addgeometrycolumn(table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean) TO authenticated;
GRANT ALL ON FUNCTION public.addgeometrycolumn(table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean) TO service_role;


--
-- Name: FUNCTION addgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.addgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean) TO postgres;
GRANT ALL ON FUNCTION public.addgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean) TO anon;
GRANT ALL ON FUNCTION public.addgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean) TO authenticated;
GRANT ALL ON FUNCTION public.addgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean) TO service_role;


--
-- Name: FUNCTION addgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer, new_type character varying, new_dim integer, use_typmod boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.addgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer, new_type character varying, new_dim integer, use_typmod boolean) TO postgres;
GRANT ALL ON FUNCTION public.addgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer, new_type character varying, new_dim integer, use_typmod boolean) TO anon;
GRANT ALL ON FUNCTION public.addgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer, new_type character varying, new_dim integer, use_typmod boolean) TO authenticated;
GRANT ALL ON FUNCTION public.addgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer, new_type character varying, new_dim integer, use_typmod boolean) TO service_role;


--
-- Name: FUNCTION box3dtobox(public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.box3dtobox(public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.box3dtobox(public.box3d) TO anon;
GRANT ALL ON FUNCTION public.box3dtobox(public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.box3dtobox(public.box3d) TO service_role;


--
-- Name: FUNCTION checkauth(text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.checkauth(text, text) TO postgres;
GRANT ALL ON FUNCTION public.checkauth(text, text) TO anon;
GRANT ALL ON FUNCTION public.checkauth(text, text) TO authenticated;
GRANT ALL ON FUNCTION public.checkauth(text, text) TO service_role;


--
-- Name: FUNCTION checkauth(text, text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.checkauth(text, text, text) TO postgres;
GRANT ALL ON FUNCTION public.checkauth(text, text, text) TO anon;
GRANT ALL ON FUNCTION public.checkauth(text, text, text) TO authenticated;
GRANT ALL ON FUNCTION public.checkauth(text, text, text) TO service_role;


--
-- Name: FUNCTION checkauthtrigger(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.checkauthtrigger() TO postgres;
GRANT ALL ON FUNCTION public.checkauthtrigger() TO anon;
GRANT ALL ON FUNCTION public.checkauthtrigger() TO authenticated;
GRANT ALL ON FUNCTION public.checkauthtrigger() TO service_role;


--
-- Name: FUNCTION contains_2d(public.box2df, public.box2df); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.contains_2d(public.box2df, public.box2df) TO postgres;
GRANT ALL ON FUNCTION public.contains_2d(public.box2df, public.box2df) TO anon;
GRANT ALL ON FUNCTION public.contains_2d(public.box2df, public.box2df) TO authenticated;
GRANT ALL ON FUNCTION public.contains_2d(public.box2df, public.box2df) TO service_role;


--
-- Name: FUNCTION contains_2d(public.box2df, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.contains_2d(public.box2df, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.contains_2d(public.box2df, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.contains_2d(public.box2df, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.contains_2d(public.box2df, public.geometry) TO service_role;


--
-- Name: FUNCTION contains_2d(public.geometry, public.box2df); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.contains_2d(public.geometry, public.box2df) TO postgres;
GRANT ALL ON FUNCTION public.contains_2d(public.geometry, public.box2df) TO anon;
GRANT ALL ON FUNCTION public.contains_2d(public.geometry, public.box2df) TO authenticated;
GRANT ALL ON FUNCTION public.contains_2d(public.geometry, public.box2df) TO service_role;


--
-- Name: FUNCTION delete_unused_modifier_options(p_group_id uuid, p_keep_names text[]); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.delete_unused_modifier_options(p_group_id uuid, p_keep_names text[]) TO anon;
GRANT ALL ON FUNCTION public.delete_unused_modifier_options(p_group_id uuid, p_keep_names text[]) TO authenticated;
GRANT ALL ON FUNCTION public.delete_unused_modifier_options(p_group_id uuid, p_keep_names text[]) TO service_role;


--
-- Name: FUNCTION disablelongtransactions(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.disablelongtransactions() TO postgres;
GRANT ALL ON FUNCTION public.disablelongtransactions() TO anon;
GRANT ALL ON FUNCTION public.disablelongtransactions() TO authenticated;
GRANT ALL ON FUNCTION public.disablelongtransactions() TO service_role;


--
-- Name: FUNCTION dropgeometrycolumn(table_name character varying, column_name character varying); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.dropgeometrycolumn(table_name character varying, column_name character varying) TO postgres;
GRANT ALL ON FUNCTION public.dropgeometrycolumn(table_name character varying, column_name character varying) TO anon;
GRANT ALL ON FUNCTION public.dropgeometrycolumn(table_name character varying, column_name character varying) TO authenticated;
GRANT ALL ON FUNCTION public.dropgeometrycolumn(table_name character varying, column_name character varying) TO service_role;


--
-- Name: FUNCTION dropgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.dropgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying) TO postgres;
GRANT ALL ON FUNCTION public.dropgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying) TO anon;
GRANT ALL ON FUNCTION public.dropgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying) TO authenticated;
GRANT ALL ON FUNCTION public.dropgeometrycolumn(schema_name character varying, table_name character varying, column_name character varying) TO service_role;


--
-- Name: FUNCTION dropgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.dropgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying) TO postgres;
GRANT ALL ON FUNCTION public.dropgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying) TO anon;
GRANT ALL ON FUNCTION public.dropgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying) TO authenticated;
GRANT ALL ON FUNCTION public.dropgeometrycolumn(catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying) TO service_role;


--
-- Name: FUNCTION dropgeometrytable(table_name character varying); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.dropgeometrytable(table_name character varying) TO postgres;
GRANT ALL ON FUNCTION public.dropgeometrytable(table_name character varying) TO anon;
GRANT ALL ON FUNCTION public.dropgeometrytable(table_name character varying) TO authenticated;
GRANT ALL ON FUNCTION public.dropgeometrytable(table_name character varying) TO service_role;


--
-- Name: FUNCTION dropgeometrytable(schema_name character varying, table_name character varying); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.dropgeometrytable(schema_name character varying, table_name character varying) TO postgres;
GRANT ALL ON FUNCTION public.dropgeometrytable(schema_name character varying, table_name character varying) TO anon;
GRANT ALL ON FUNCTION public.dropgeometrytable(schema_name character varying, table_name character varying) TO authenticated;
GRANT ALL ON FUNCTION public.dropgeometrytable(schema_name character varying, table_name character varying) TO service_role;


--
-- Name: FUNCTION dropgeometrytable(catalog_name character varying, schema_name character varying, table_name character varying); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.dropgeometrytable(catalog_name character varying, schema_name character varying, table_name character varying) TO postgres;
GRANT ALL ON FUNCTION public.dropgeometrytable(catalog_name character varying, schema_name character varying, table_name character varying) TO anon;
GRANT ALL ON FUNCTION public.dropgeometrytable(catalog_name character varying, schema_name character varying, table_name character varying) TO authenticated;
GRANT ALL ON FUNCTION public.dropgeometrytable(catalog_name character varying, schema_name character varying, table_name character varying) TO service_role;


--
-- Name: FUNCTION enablelongtransactions(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.enablelongtransactions() TO postgres;
GRANT ALL ON FUNCTION public.enablelongtransactions() TO anon;
GRANT ALL ON FUNCTION public.enablelongtransactions() TO authenticated;
GRANT ALL ON FUNCTION public.enablelongtransactions() TO service_role;


--
-- Name: FUNCTION equals(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.equals(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.equals(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.equals(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.equals(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION find_srid(character varying, character varying, character varying); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.find_srid(character varying, character varying, character varying) TO postgres;
GRANT ALL ON FUNCTION public.find_srid(character varying, character varying, character varying) TO anon;
GRANT ALL ON FUNCTION public.find_srid(character varying, character varying, character varying) TO authenticated;
GRANT ALL ON FUNCTION public.find_srid(character varying, character varying, character varying) TO service_role;


--
-- Name: FUNCTION geog_brin_inclusion_add_value(internal, internal, internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geog_brin_inclusion_add_value(internal, internal, internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geog_brin_inclusion_add_value(internal, internal, internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geog_brin_inclusion_add_value(internal, internal, internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geog_brin_inclusion_add_value(internal, internal, internal, internal) TO service_role;


--
-- Name: FUNCTION geography_cmp(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_cmp(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geography_cmp(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public.geography_cmp(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geography_cmp(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION geography_distance_knn(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_distance_knn(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geography_distance_knn(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public.geography_distance_knn(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geography_distance_knn(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION geography_eq(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_eq(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geography_eq(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public.geography_eq(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geography_eq(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION geography_ge(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_ge(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geography_ge(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public.geography_ge(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geography_ge(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION geography_gist_compress(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_gist_compress(internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_gist_compress(internal) TO anon;
GRANT ALL ON FUNCTION public.geography_gist_compress(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_gist_compress(internal) TO service_role;


--
-- Name: FUNCTION geography_gist_consistent(internal, public.geography, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_gist_consistent(internal, public.geography, integer) TO postgres;
GRANT ALL ON FUNCTION public.geography_gist_consistent(internal, public.geography, integer) TO anon;
GRANT ALL ON FUNCTION public.geography_gist_consistent(internal, public.geography, integer) TO authenticated;
GRANT ALL ON FUNCTION public.geography_gist_consistent(internal, public.geography, integer) TO service_role;


--
-- Name: FUNCTION geography_gist_decompress(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_gist_decompress(internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_gist_decompress(internal) TO anon;
GRANT ALL ON FUNCTION public.geography_gist_decompress(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_gist_decompress(internal) TO service_role;


--
-- Name: FUNCTION geography_gist_distance(internal, public.geography, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_gist_distance(internal, public.geography, integer) TO postgres;
GRANT ALL ON FUNCTION public.geography_gist_distance(internal, public.geography, integer) TO anon;
GRANT ALL ON FUNCTION public.geography_gist_distance(internal, public.geography, integer) TO authenticated;
GRANT ALL ON FUNCTION public.geography_gist_distance(internal, public.geography, integer) TO service_role;


--
-- Name: FUNCTION geography_gist_penalty(internal, internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_gist_penalty(internal, internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_gist_penalty(internal, internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geography_gist_penalty(internal, internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_gist_penalty(internal, internal, internal) TO service_role;


--
-- Name: FUNCTION geography_gist_picksplit(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_gist_picksplit(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_gist_picksplit(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geography_gist_picksplit(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_gist_picksplit(internal, internal) TO service_role;


--
-- Name: FUNCTION geography_gist_same(public.box2d, public.box2d, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_gist_same(public.box2d, public.box2d, internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_gist_same(public.box2d, public.box2d, internal) TO anon;
GRANT ALL ON FUNCTION public.geography_gist_same(public.box2d, public.box2d, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_gist_same(public.box2d, public.box2d, internal) TO service_role;


--
-- Name: FUNCTION geography_gist_union(bytea, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_gist_union(bytea, internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_gist_union(bytea, internal) TO anon;
GRANT ALL ON FUNCTION public.geography_gist_union(bytea, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_gist_union(bytea, internal) TO service_role;


--
-- Name: FUNCTION geography_gt(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_gt(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geography_gt(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public.geography_gt(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geography_gt(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION geography_le(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_le(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geography_le(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public.geography_le(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geography_le(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION geography_lt(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_lt(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geography_lt(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public.geography_lt(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geography_lt(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION geography_overlaps(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_overlaps(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geography_overlaps(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public.geography_overlaps(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geography_overlaps(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION geography_spgist_choose_nd(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_spgist_choose_nd(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_spgist_choose_nd(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geography_spgist_choose_nd(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_spgist_choose_nd(internal, internal) TO service_role;


--
-- Name: FUNCTION geography_spgist_compress_nd(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_spgist_compress_nd(internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_spgist_compress_nd(internal) TO anon;
GRANT ALL ON FUNCTION public.geography_spgist_compress_nd(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_spgist_compress_nd(internal) TO service_role;


--
-- Name: FUNCTION geography_spgist_config_nd(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_spgist_config_nd(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_spgist_config_nd(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geography_spgist_config_nd(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_spgist_config_nd(internal, internal) TO service_role;


--
-- Name: FUNCTION geography_spgist_inner_consistent_nd(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_spgist_inner_consistent_nd(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_spgist_inner_consistent_nd(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geography_spgist_inner_consistent_nd(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_spgist_inner_consistent_nd(internal, internal) TO service_role;


--
-- Name: FUNCTION geography_spgist_leaf_consistent_nd(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_spgist_leaf_consistent_nd(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_spgist_leaf_consistent_nd(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geography_spgist_leaf_consistent_nd(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_spgist_leaf_consistent_nd(internal, internal) TO service_role;


--
-- Name: FUNCTION geography_spgist_picksplit_nd(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geography_spgist_picksplit_nd(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geography_spgist_picksplit_nd(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geography_spgist_picksplit_nd(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geography_spgist_picksplit_nd(internal, internal) TO service_role;


--
-- Name: FUNCTION geom2d_brin_inclusion_add_value(internal, internal, internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geom2d_brin_inclusion_add_value(internal, internal, internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geom2d_brin_inclusion_add_value(internal, internal, internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geom2d_brin_inclusion_add_value(internal, internal, internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geom2d_brin_inclusion_add_value(internal, internal, internal, internal) TO service_role;


--
-- Name: FUNCTION geom3d_brin_inclusion_add_value(internal, internal, internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geom3d_brin_inclusion_add_value(internal, internal, internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geom3d_brin_inclusion_add_value(internal, internal, internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geom3d_brin_inclusion_add_value(internal, internal, internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geom3d_brin_inclusion_add_value(internal, internal, internal, internal) TO service_role;


--
-- Name: FUNCTION geom4d_brin_inclusion_add_value(internal, internal, internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geom4d_brin_inclusion_add_value(internal, internal, internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geom4d_brin_inclusion_add_value(internal, internal, internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geom4d_brin_inclusion_add_value(internal, internal, internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geom4d_brin_inclusion_add_value(internal, internal, internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_above(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_above(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_above(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_above(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_above(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_below(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_below(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_below(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_below(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_below(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_cmp(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_cmp(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_cmp(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_cmp(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_cmp(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_contained_3d(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_contained_3d(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_contained_3d(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_contained_3d(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_contained_3d(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_contains(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_contains(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_contains(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_contains(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_contains(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_contains_3d(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_contains_3d(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_contains_3d(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_contains_3d(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_contains_3d(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_contains_nd(public.geometry, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_contains_nd(public.geometry, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_contains_nd(public.geometry, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_contains_nd(public.geometry, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_contains_nd(public.geometry, public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_distance_box(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_distance_box(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_distance_box(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_distance_box(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_distance_box(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_distance_centroid(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_distance_centroid(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_distance_centroid(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_distance_centroid(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_distance_centroid(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_distance_centroid_nd(public.geometry, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_distance_centroid_nd(public.geometry, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_distance_centroid_nd(public.geometry, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_distance_centroid_nd(public.geometry, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_distance_centroid_nd(public.geometry, public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_distance_cpa(public.geometry, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_distance_cpa(public.geometry, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_distance_cpa(public.geometry, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_distance_cpa(public.geometry, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_distance_cpa(public.geometry, public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_eq(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_eq(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_eq(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_eq(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_eq(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_ge(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_ge(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_ge(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_ge(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_ge(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_gist_compress_2d(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_compress_2d(internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_compress_2d(internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_compress_2d(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_compress_2d(internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_compress_nd(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_compress_nd(internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_compress_nd(internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_compress_nd(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_compress_nd(internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_consistent_2d(internal, public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_consistent_2d(internal, public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_consistent_2d(internal, public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_consistent_2d(internal, public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_consistent_2d(internal, public.geometry, integer) TO service_role;


--
-- Name: FUNCTION geometry_gist_consistent_nd(internal, public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_consistent_nd(internal, public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_consistent_nd(internal, public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_consistent_nd(internal, public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_consistent_nd(internal, public.geometry, integer) TO service_role;


--
-- Name: FUNCTION geometry_gist_decompress_2d(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_decompress_2d(internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_decompress_2d(internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_decompress_2d(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_decompress_2d(internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_decompress_nd(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_decompress_nd(internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_decompress_nd(internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_decompress_nd(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_decompress_nd(internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_distance_2d(internal, public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_distance_2d(internal, public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_distance_2d(internal, public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_distance_2d(internal, public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_distance_2d(internal, public.geometry, integer) TO service_role;


--
-- Name: FUNCTION geometry_gist_distance_nd(internal, public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_distance_nd(internal, public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_distance_nd(internal, public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_distance_nd(internal, public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_distance_nd(internal, public.geometry, integer) TO service_role;


--
-- Name: FUNCTION geometry_gist_penalty_2d(internal, internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_penalty_2d(internal, internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_penalty_2d(internal, internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_penalty_2d(internal, internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_penalty_2d(internal, internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_penalty_nd(internal, internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_penalty_nd(internal, internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_penalty_nd(internal, internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_penalty_nd(internal, internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_penalty_nd(internal, internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_picksplit_2d(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_picksplit_2d(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_picksplit_2d(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_picksplit_2d(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_picksplit_2d(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_picksplit_nd(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_picksplit_nd(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_picksplit_nd(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_picksplit_nd(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_picksplit_nd(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_same_2d(geom1 public.geometry, geom2 public.geometry, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_same_2d(geom1 public.geometry, geom2 public.geometry, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_same_2d(geom1 public.geometry, geom2 public.geometry, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_same_2d(geom1 public.geometry, geom2 public.geometry, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_same_2d(geom1 public.geometry, geom2 public.geometry, internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_same_nd(public.geometry, public.geometry, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_same_nd(public.geometry, public.geometry, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_same_nd(public.geometry, public.geometry, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_same_nd(public.geometry, public.geometry, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_same_nd(public.geometry, public.geometry, internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_sortsupport_2d(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_sortsupport_2d(internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_sortsupport_2d(internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_sortsupport_2d(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_sortsupport_2d(internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_union_2d(bytea, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_union_2d(bytea, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_union_2d(bytea, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_union_2d(bytea, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_union_2d(bytea, internal) TO service_role;


--
-- Name: FUNCTION geometry_gist_union_nd(bytea, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gist_union_nd(bytea, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gist_union_nd(bytea, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_gist_union_nd(bytea, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gist_union_nd(bytea, internal) TO service_role;


--
-- Name: FUNCTION geometry_gt(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_gt(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_gt(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_gt(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_gt(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_hash(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_hash(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_hash(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_hash(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_hash(public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_le(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_le(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_le(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_le(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_le(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_left(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_left(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_left(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_left(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_left(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_lt(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_lt(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_lt(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_lt(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_lt(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_overabove(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_overabove(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_overabove(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_overabove(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_overabove(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_overbelow(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_overbelow(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_overbelow(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_overbelow(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_overbelow(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_overlaps(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_overlaps(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_overlaps(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_overlaps(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_overlaps(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_overlaps_3d(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_overlaps_3d(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_overlaps_3d(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_overlaps_3d(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_overlaps_3d(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_overlaps_nd(public.geometry, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_overlaps_nd(public.geometry, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_overlaps_nd(public.geometry, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_overlaps_nd(public.geometry, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_overlaps_nd(public.geometry, public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_overleft(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_overleft(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_overleft(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_overleft(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_overleft(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_overright(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_overright(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_overright(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_overright(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_overright(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_right(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_right(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_right(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_right(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_right(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_same(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_same(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_same(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_same(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_same(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_same_3d(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_same_3d(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_same_3d(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_same_3d(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_same_3d(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_same_nd(public.geometry, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_same_nd(public.geometry, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_same_nd(public.geometry, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_same_nd(public.geometry, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_same_nd(public.geometry, public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_sortsupport(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_sortsupport(internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_sortsupport(internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_sortsupport(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_sortsupport(internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_choose_2d(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_choose_2d(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_choose_2d(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_choose_2d(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_choose_2d(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_choose_3d(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_choose_3d(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_choose_3d(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_choose_3d(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_choose_3d(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_choose_nd(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_choose_nd(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_choose_nd(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_choose_nd(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_choose_nd(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_compress_2d(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_compress_2d(internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_compress_2d(internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_compress_2d(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_compress_2d(internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_compress_3d(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_compress_3d(internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_compress_3d(internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_compress_3d(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_compress_3d(internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_compress_nd(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_compress_nd(internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_compress_nd(internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_compress_nd(internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_compress_nd(internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_config_2d(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_config_2d(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_config_2d(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_config_2d(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_config_2d(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_config_3d(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_config_3d(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_config_3d(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_config_3d(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_config_3d(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_config_nd(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_config_nd(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_config_nd(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_config_nd(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_config_nd(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_inner_consistent_2d(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_2d(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_2d(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_2d(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_2d(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_inner_consistent_3d(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_3d(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_3d(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_3d(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_3d(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_inner_consistent_nd(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_nd(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_nd(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_nd(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_inner_consistent_nd(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_leaf_consistent_2d(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_2d(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_2d(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_2d(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_2d(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_leaf_consistent_3d(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_3d(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_3d(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_3d(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_3d(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_leaf_consistent_nd(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_nd(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_nd(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_nd(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_leaf_consistent_nd(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_picksplit_2d(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_2d(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_2d(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_2d(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_2d(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_picksplit_3d(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_3d(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_3d(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_3d(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_3d(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_spgist_picksplit_nd(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_nd(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_nd(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_nd(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_spgist_picksplit_nd(internal, internal) TO service_role;


--
-- Name: FUNCTION geometry_within(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_within(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_within(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_within(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_within(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION geometry_within_nd(public.geometry, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometry_within_nd(public.geometry, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometry_within_nd(public.geometry, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometry_within_nd(public.geometry, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometry_within_nd(public.geometry, public.geometry) TO service_role;


--
-- Name: FUNCTION geometrytype(public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometrytype(public.geography) TO postgres;
GRANT ALL ON FUNCTION public.geometrytype(public.geography) TO anon;
GRANT ALL ON FUNCTION public.geometrytype(public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.geometrytype(public.geography) TO service_role;


--
-- Name: FUNCTION geometrytype(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geometrytype(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.geometrytype(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.geometrytype(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.geometrytype(public.geometry) TO service_role;


--
-- Name: FUNCTION geomfromewkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geomfromewkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.geomfromewkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.geomfromewkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.geomfromewkb(bytea) TO service_role;


--
-- Name: FUNCTION geomfromewkt(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.geomfromewkt(text) TO postgres;
GRANT ALL ON FUNCTION public.geomfromewkt(text) TO anon;
GRANT ALL ON FUNCTION public.geomfromewkt(text) TO authenticated;
GRANT ALL ON FUNCTION public.geomfromewkt(text) TO service_role;


--
-- Name: FUNCTION get_proj4_from_srid(integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.get_proj4_from_srid(integer) TO postgres;
GRANT ALL ON FUNCTION public.get_proj4_from_srid(integer) TO anon;
GRANT ALL ON FUNCTION public.get_proj4_from_srid(integer) TO authenticated;
GRANT ALL ON FUNCTION public.get_proj4_from_srid(integer) TO service_role;


--
-- Name: FUNCTION gettransactionid(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.gettransactionid() TO postgres;
GRANT ALL ON FUNCTION public.gettransactionid() TO anon;
GRANT ALL ON FUNCTION public.gettransactionid() TO authenticated;
GRANT ALL ON FUNCTION public.gettransactionid() TO service_role;


--
-- Name: FUNCTION gserialized_gist_joinsel_2d(internal, oid, internal, smallint); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.gserialized_gist_joinsel_2d(internal, oid, internal, smallint) TO postgres;
GRANT ALL ON FUNCTION public.gserialized_gist_joinsel_2d(internal, oid, internal, smallint) TO anon;
GRANT ALL ON FUNCTION public.gserialized_gist_joinsel_2d(internal, oid, internal, smallint) TO authenticated;
GRANT ALL ON FUNCTION public.gserialized_gist_joinsel_2d(internal, oid, internal, smallint) TO service_role;


--
-- Name: FUNCTION gserialized_gist_joinsel_nd(internal, oid, internal, smallint); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.gserialized_gist_joinsel_nd(internal, oid, internal, smallint) TO postgres;
GRANT ALL ON FUNCTION public.gserialized_gist_joinsel_nd(internal, oid, internal, smallint) TO anon;
GRANT ALL ON FUNCTION public.gserialized_gist_joinsel_nd(internal, oid, internal, smallint) TO authenticated;
GRANT ALL ON FUNCTION public.gserialized_gist_joinsel_nd(internal, oid, internal, smallint) TO service_role;


--
-- Name: FUNCTION gserialized_gist_sel_2d(internal, oid, internal, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.gserialized_gist_sel_2d(internal, oid, internal, integer) TO postgres;
GRANT ALL ON FUNCTION public.gserialized_gist_sel_2d(internal, oid, internal, integer) TO anon;
GRANT ALL ON FUNCTION public.gserialized_gist_sel_2d(internal, oid, internal, integer) TO authenticated;
GRANT ALL ON FUNCTION public.gserialized_gist_sel_2d(internal, oid, internal, integer) TO service_role;


--
-- Name: FUNCTION gserialized_gist_sel_nd(internal, oid, internal, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.gserialized_gist_sel_nd(internal, oid, internal, integer) TO postgres;
GRANT ALL ON FUNCTION public.gserialized_gist_sel_nd(internal, oid, internal, integer) TO anon;
GRANT ALL ON FUNCTION public.gserialized_gist_sel_nd(internal, oid, internal, integer) TO authenticated;
GRANT ALL ON FUNCTION public.gserialized_gist_sel_nd(internal, oid, internal, integer) TO service_role;


--
-- Name: FUNCTION has_role(r_id uuid, role text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.has_role(r_id uuid, role text) TO anon;
GRANT ALL ON FUNCTION public.has_role(r_id uuid, role text) TO authenticated;
GRANT ALL ON FUNCTION public.has_role(r_id uuid, role text) TO service_role;


--
-- Name: FUNCTION is_admin(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.is_admin() TO anon;
GRANT ALL ON FUNCTION public.is_admin() TO authenticated;
GRANT ALL ON FUNCTION public.is_admin() TO service_role;


--
-- Name: FUNCTION is_contained_2d(public.box2df, public.box2df); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.is_contained_2d(public.box2df, public.box2df) TO postgres;
GRANT ALL ON FUNCTION public.is_contained_2d(public.box2df, public.box2df) TO anon;
GRANT ALL ON FUNCTION public.is_contained_2d(public.box2df, public.box2df) TO authenticated;
GRANT ALL ON FUNCTION public.is_contained_2d(public.box2df, public.box2df) TO service_role;


--
-- Name: FUNCTION is_contained_2d(public.box2df, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.is_contained_2d(public.box2df, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.is_contained_2d(public.box2df, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.is_contained_2d(public.box2df, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.is_contained_2d(public.box2df, public.geometry) TO service_role;


--
-- Name: FUNCTION is_contained_2d(public.geometry, public.box2df); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.is_contained_2d(public.geometry, public.box2df) TO postgres;
GRANT ALL ON FUNCTION public.is_contained_2d(public.geometry, public.box2df) TO anon;
GRANT ALL ON FUNCTION public.is_contained_2d(public.geometry, public.box2df) TO authenticated;
GRANT ALL ON FUNCTION public.is_contained_2d(public.geometry, public.box2df) TO service_role;


--
-- Name: FUNCTION lockrow(text, text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.lockrow(text, text, text) TO postgres;
GRANT ALL ON FUNCTION public.lockrow(text, text, text) TO anon;
GRANT ALL ON FUNCTION public.lockrow(text, text, text) TO authenticated;
GRANT ALL ON FUNCTION public.lockrow(text, text, text) TO service_role;


--
-- Name: FUNCTION lockrow(text, text, text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.lockrow(text, text, text, text) TO postgres;
GRANT ALL ON FUNCTION public.lockrow(text, text, text, text) TO anon;
GRANT ALL ON FUNCTION public.lockrow(text, text, text, text) TO authenticated;
GRANT ALL ON FUNCTION public.lockrow(text, text, text, text) TO service_role;


--
-- Name: FUNCTION lockrow(text, text, text, timestamp without time zone); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.lockrow(text, text, text, timestamp without time zone) TO postgres;
GRANT ALL ON FUNCTION public.lockrow(text, text, text, timestamp without time zone) TO anon;
GRANT ALL ON FUNCTION public.lockrow(text, text, text, timestamp without time zone) TO authenticated;
GRANT ALL ON FUNCTION public.lockrow(text, text, text, timestamp without time zone) TO service_role;


--
-- Name: FUNCTION lockrow(text, text, text, text, timestamp without time zone); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.lockrow(text, text, text, text, timestamp without time zone) TO postgres;
GRANT ALL ON FUNCTION public.lockrow(text, text, text, text, timestamp without time zone) TO anon;
GRANT ALL ON FUNCTION public.lockrow(text, text, text, text, timestamp without time zone) TO authenticated;
GRANT ALL ON FUNCTION public.lockrow(text, text, text, text, timestamp without time zone) TO service_role;


--
-- Name: FUNCTION longtransactionsenabled(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.longtransactionsenabled() TO postgres;
GRANT ALL ON FUNCTION public.longtransactionsenabled() TO anon;
GRANT ALL ON FUNCTION public.longtransactionsenabled() TO authenticated;
GRANT ALL ON FUNCTION public.longtransactionsenabled() TO service_role;


--
-- Name: FUNCTION overlaps_2d(public.box2df, public.box2df); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.overlaps_2d(public.box2df, public.box2df) TO postgres;
GRANT ALL ON FUNCTION public.overlaps_2d(public.box2df, public.box2df) TO anon;
GRANT ALL ON FUNCTION public.overlaps_2d(public.box2df, public.box2df) TO authenticated;
GRANT ALL ON FUNCTION public.overlaps_2d(public.box2df, public.box2df) TO service_role;


--
-- Name: FUNCTION overlaps_2d(public.box2df, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.overlaps_2d(public.box2df, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.overlaps_2d(public.box2df, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.overlaps_2d(public.box2df, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.overlaps_2d(public.box2df, public.geometry) TO service_role;


--
-- Name: FUNCTION overlaps_2d(public.geometry, public.box2df); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.overlaps_2d(public.geometry, public.box2df) TO postgres;
GRANT ALL ON FUNCTION public.overlaps_2d(public.geometry, public.box2df) TO anon;
GRANT ALL ON FUNCTION public.overlaps_2d(public.geometry, public.box2df) TO authenticated;
GRANT ALL ON FUNCTION public.overlaps_2d(public.geometry, public.box2df) TO service_role;


--
-- Name: FUNCTION overlaps_geog(public.geography, public.gidx); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.overlaps_geog(public.geography, public.gidx) TO postgres;
GRANT ALL ON FUNCTION public.overlaps_geog(public.geography, public.gidx) TO anon;
GRANT ALL ON FUNCTION public.overlaps_geog(public.geography, public.gidx) TO authenticated;
GRANT ALL ON FUNCTION public.overlaps_geog(public.geography, public.gidx) TO service_role;


--
-- Name: FUNCTION overlaps_geog(public.gidx, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.overlaps_geog(public.gidx, public.geography) TO postgres;
GRANT ALL ON FUNCTION public.overlaps_geog(public.gidx, public.geography) TO anon;
GRANT ALL ON FUNCTION public.overlaps_geog(public.gidx, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.overlaps_geog(public.gidx, public.geography) TO service_role;


--
-- Name: FUNCTION overlaps_geog(public.gidx, public.gidx); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.overlaps_geog(public.gidx, public.gidx) TO postgres;
GRANT ALL ON FUNCTION public.overlaps_geog(public.gidx, public.gidx) TO anon;
GRANT ALL ON FUNCTION public.overlaps_geog(public.gidx, public.gidx) TO authenticated;
GRANT ALL ON FUNCTION public.overlaps_geog(public.gidx, public.gidx) TO service_role;


--
-- Name: FUNCTION overlaps_nd(public.geometry, public.gidx); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.overlaps_nd(public.geometry, public.gidx) TO postgres;
GRANT ALL ON FUNCTION public.overlaps_nd(public.geometry, public.gidx) TO anon;
GRANT ALL ON FUNCTION public.overlaps_nd(public.geometry, public.gidx) TO authenticated;
GRANT ALL ON FUNCTION public.overlaps_nd(public.geometry, public.gidx) TO service_role;


--
-- Name: FUNCTION overlaps_nd(public.gidx, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.overlaps_nd(public.gidx, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.overlaps_nd(public.gidx, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.overlaps_nd(public.gidx, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.overlaps_nd(public.gidx, public.geometry) TO service_role;


--
-- Name: FUNCTION overlaps_nd(public.gidx, public.gidx); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.overlaps_nd(public.gidx, public.gidx) TO postgres;
GRANT ALL ON FUNCTION public.overlaps_nd(public.gidx, public.gidx) TO anon;
GRANT ALL ON FUNCTION public.overlaps_nd(public.gidx, public.gidx) TO authenticated;
GRANT ALL ON FUNCTION public.overlaps_nd(public.gidx, public.gidx) TO service_role;


--
-- Name: FUNCTION pgis_asflatgeobuf_finalfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_finalfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_finalfn(internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_finalfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_finalfn(internal) TO service_role;


--
-- Name: FUNCTION pgis_asflatgeobuf_transfn(internal, anyelement); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement) TO anon;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement) TO service_role;


--
-- Name: FUNCTION pgis_asflatgeobuf_transfn(internal, anyelement, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement, boolean) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement, boolean) TO anon;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement, boolean) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement, boolean) TO service_role;


--
-- Name: FUNCTION pgis_asflatgeobuf_transfn(internal, anyelement, boolean, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement, boolean, text) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement, boolean, text) TO anon;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement, boolean, text) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asflatgeobuf_transfn(internal, anyelement, boolean, text) TO service_role;


--
-- Name: FUNCTION pgis_asgeobuf_finalfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asgeobuf_finalfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asgeobuf_finalfn(internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_asgeobuf_finalfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asgeobuf_finalfn(internal) TO service_role;


--
-- Name: FUNCTION pgis_asgeobuf_transfn(internal, anyelement); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asgeobuf_transfn(internal, anyelement) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asgeobuf_transfn(internal, anyelement) TO anon;
GRANT ALL ON FUNCTION public.pgis_asgeobuf_transfn(internal, anyelement) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asgeobuf_transfn(internal, anyelement) TO service_role;


--
-- Name: FUNCTION pgis_asgeobuf_transfn(internal, anyelement, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asgeobuf_transfn(internal, anyelement, text) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asgeobuf_transfn(internal, anyelement, text) TO anon;
GRANT ALL ON FUNCTION public.pgis_asgeobuf_transfn(internal, anyelement, text) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asgeobuf_transfn(internal, anyelement, text) TO service_role;


--
-- Name: FUNCTION pgis_asmvt_combinefn(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asmvt_combinefn(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asmvt_combinefn(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_asmvt_combinefn(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asmvt_combinefn(internal, internal) TO service_role;


--
-- Name: FUNCTION pgis_asmvt_deserialfn(bytea, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asmvt_deserialfn(bytea, internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asmvt_deserialfn(bytea, internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_asmvt_deserialfn(bytea, internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asmvt_deserialfn(bytea, internal) TO service_role;


--
-- Name: FUNCTION pgis_asmvt_finalfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asmvt_finalfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asmvt_finalfn(internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_asmvt_finalfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asmvt_finalfn(internal) TO service_role;


--
-- Name: FUNCTION pgis_asmvt_serialfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asmvt_serialfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asmvt_serialfn(internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_asmvt_serialfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asmvt_serialfn(internal) TO service_role;


--
-- Name: FUNCTION pgis_asmvt_transfn(internal, anyelement); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement) TO anon;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement) TO service_role;


--
-- Name: FUNCTION pgis_asmvt_transfn(internal, anyelement, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text) TO anon;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text) TO service_role;


--
-- Name: FUNCTION pgis_asmvt_transfn(internal, anyelement, text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer) TO anon;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer) TO service_role;


--
-- Name: FUNCTION pgis_asmvt_transfn(internal, anyelement, text, integer, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer, text) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer, text) TO anon;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer, text) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer, text) TO service_role;


--
-- Name: FUNCTION pgis_asmvt_transfn(internal, anyelement, text, integer, text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer, text, text) TO postgres;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer, text, text) TO anon;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer, text, text) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_asmvt_transfn(internal, anyelement, text, integer, text, text) TO service_role;


--
-- Name: FUNCTION pgis_geometry_accum_transfn(internal, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry) TO service_role;


--
-- Name: FUNCTION pgis_geometry_accum_transfn(internal, public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION pgis_geometry_accum_transfn(internal, public.geometry, double precision, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry, double precision, integer) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry, double precision, integer) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry, double precision, integer) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_accum_transfn(internal, public.geometry, double precision, integer) TO service_role;


--
-- Name: FUNCTION pgis_geometry_clusterintersecting_finalfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_clusterintersecting_finalfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_clusterintersecting_finalfn(internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_clusterintersecting_finalfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_clusterintersecting_finalfn(internal) TO service_role;


--
-- Name: FUNCTION pgis_geometry_clusterwithin_finalfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_clusterwithin_finalfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_clusterwithin_finalfn(internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_clusterwithin_finalfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_clusterwithin_finalfn(internal) TO service_role;


--
-- Name: FUNCTION pgis_geometry_collect_finalfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_collect_finalfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_collect_finalfn(internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_collect_finalfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_collect_finalfn(internal) TO service_role;


--
-- Name: FUNCTION pgis_geometry_makeline_finalfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_makeline_finalfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_makeline_finalfn(internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_makeline_finalfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_makeline_finalfn(internal) TO service_role;


--
-- Name: FUNCTION pgis_geometry_polygonize_finalfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_polygonize_finalfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_polygonize_finalfn(internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_polygonize_finalfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_polygonize_finalfn(internal) TO service_role;


--
-- Name: FUNCTION pgis_geometry_union_parallel_combinefn(internal, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_combinefn(internal, internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_combinefn(internal, internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_combinefn(internal, internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_combinefn(internal, internal) TO service_role;


--
-- Name: FUNCTION pgis_geometry_union_parallel_deserialfn(bytea, internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_deserialfn(bytea, internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_deserialfn(bytea, internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_deserialfn(bytea, internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_deserialfn(bytea, internal) TO service_role;


--
-- Name: FUNCTION pgis_geometry_union_parallel_finalfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_finalfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_finalfn(internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_finalfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_finalfn(internal) TO service_role;


--
-- Name: FUNCTION pgis_geometry_union_parallel_serialfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_serialfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_serialfn(internal) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_serialfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_serialfn(internal) TO service_role;


--
-- Name: FUNCTION pgis_geometry_union_parallel_transfn(internal, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_transfn(internal, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_transfn(internal, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_transfn(internal, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_transfn(internal, public.geometry) TO service_role;


--
-- Name: FUNCTION pgis_geometry_union_parallel_transfn(internal, public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_transfn(internal, public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_transfn(internal, public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_transfn(internal, public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.pgis_geometry_union_parallel_transfn(internal, public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION populate_geometry_columns(use_typmod boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.populate_geometry_columns(use_typmod boolean) TO postgres;
GRANT ALL ON FUNCTION public.populate_geometry_columns(use_typmod boolean) TO anon;
GRANT ALL ON FUNCTION public.populate_geometry_columns(use_typmod boolean) TO authenticated;
GRANT ALL ON FUNCTION public.populate_geometry_columns(use_typmod boolean) TO service_role;


--
-- Name: FUNCTION populate_geometry_columns(tbl_oid oid, use_typmod boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.populate_geometry_columns(tbl_oid oid, use_typmod boolean) TO postgres;
GRANT ALL ON FUNCTION public.populate_geometry_columns(tbl_oid oid, use_typmod boolean) TO anon;
GRANT ALL ON FUNCTION public.populate_geometry_columns(tbl_oid oid, use_typmod boolean) TO authenticated;
GRANT ALL ON FUNCTION public.populate_geometry_columns(tbl_oid oid, use_typmod boolean) TO service_role;


--
-- Name: FUNCTION postgis_addbbox(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_addbbox(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.postgis_addbbox(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.postgis_addbbox(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_addbbox(public.geometry) TO service_role;


--
-- Name: FUNCTION postgis_cache_bbox(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_cache_bbox() TO postgres;
GRANT ALL ON FUNCTION public.postgis_cache_bbox() TO anon;
GRANT ALL ON FUNCTION public.postgis_cache_bbox() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_cache_bbox() TO service_role;


--
-- Name: FUNCTION postgis_constraint_dims(geomschema text, geomtable text, geomcolumn text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_constraint_dims(geomschema text, geomtable text, geomcolumn text) TO postgres;
GRANT ALL ON FUNCTION public.postgis_constraint_dims(geomschema text, geomtable text, geomcolumn text) TO anon;
GRANT ALL ON FUNCTION public.postgis_constraint_dims(geomschema text, geomtable text, geomcolumn text) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_constraint_dims(geomschema text, geomtable text, geomcolumn text) TO service_role;


--
-- Name: FUNCTION postgis_constraint_srid(geomschema text, geomtable text, geomcolumn text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_constraint_srid(geomschema text, geomtable text, geomcolumn text) TO postgres;
GRANT ALL ON FUNCTION public.postgis_constraint_srid(geomschema text, geomtable text, geomcolumn text) TO anon;
GRANT ALL ON FUNCTION public.postgis_constraint_srid(geomschema text, geomtable text, geomcolumn text) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_constraint_srid(geomschema text, geomtable text, geomcolumn text) TO service_role;


--
-- Name: FUNCTION postgis_constraint_type(geomschema text, geomtable text, geomcolumn text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_constraint_type(geomschema text, geomtable text, geomcolumn text) TO postgres;
GRANT ALL ON FUNCTION public.postgis_constraint_type(geomschema text, geomtable text, geomcolumn text) TO anon;
GRANT ALL ON FUNCTION public.postgis_constraint_type(geomschema text, geomtable text, geomcolumn text) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_constraint_type(geomschema text, geomtable text, geomcolumn text) TO service_role;


--
-- Name: FUNCTION postgis_dropbbox(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_dropbbox(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.postgis_dropbbox(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.postgis_dropbbox(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_dropbbox(public.geometry) TO service_role;


--
-- Name: FUNCTION postgis_extensions_upgrade(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_extensions_upgrade() TO postgres;
GRANT ALL ON FUNCTION public.postgis_extensions_upgrade() TO anon;
GRANT ALL ON FUNCTION public.postgis_extensions_upgrade() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_extensions_upgrade() TO service_role;


--
-- Name: FUNCTION postgis_full_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_full_version() TO postgres;
GRANT ALL ON FUNCTION public.postgis_full_version() TO anon;
GRANT ALL ON FUNCTION public.postgis_full_version() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_full_version() TO service_role;


--
-- Name: FUNCTION postgis_geos_noop(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_geos_noop(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.postgis_geos_noop(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.postgis_geos_noop(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_geos_noop(public.geometry) TO service_role;


--
-- Name: FUNCTION postgis_geos_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_geos_version() TO postgres;
GRANT ALL ON FUNCTION public.postgis_geos_version() TO anon;
GRANT ALL ON FUNCTION public.postgis_geos_version() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_geos_version() TO service_role;


--
-- Name: FUNCTION postgis_getbbox(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_getbbox(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.postgis_getbbox(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.postgis_getbbox(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_getbbox(public.geometry) TO service_role;


--
-- Name: FUNCTION postgis_hasbbox(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_hasbbox(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.postgis_hasbbox(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.postgis_hasbbox(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_hasbbox(public.geometry) TO service_role;


--
-- Name: FUNCTION postgis_index_supportfn(internal); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_index_supportfn(internal) TO postgres;
GRANT ALL ON FUNCTION public.postgis_index_supportfn(internal) TO anon;
GRANT ALL ON FUNCTION public.postgis_index_supportfn(internal) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_index_supportfn(internal) TO service_role;


--
-- Name: FUNCTION postgis_lib_build_date(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_lib_build_date() TO postgres;
GRANT ALL ON FUNCTION public.postgis_lib_build_date() TO anon;
GRANT ALL ON FUNCTION public.postgis_lib_build_date() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_lib_build_date() TO service_role;


--
-- Name: FUNCTION postgis_lib_revision(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_lib_revision() TO postgres;
GRANT ALL ON FUNCTION public.postgis_lib_revision() TO anon;
GRANT ALL ON FUNCTION public.postgis_lib_revision() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_lib_revision() TO service_role;


--
-- Name: FUNCTION postgis_lib_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_lib_version() TO postgres;
GRANT ALL ON FUNCTION public.postgis_lib_version() TO anon;
GRANT ALL ON FUNCTION public.postgis_lib_version() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_lib_version() TO service_role;


--
-- Name: FUNCTION postgis_libjson_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_libjson_version() TO postgres;
GRANT ALL ON FUNCTION public.postgis_libjson_version() TO anon;
GRANT ALL ON FUNCTION public.postgis_libjson_version() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_libjson_version() TO service_role;


--
-- Name: FUNCTION postgis_liblwgeom_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_liblwgeom_version() TO postgres;
GRANT ALL ON FUNCTION public.postgis_liblwgeom_version() TO anon;
GRANT ALL ON FUNCTION public.postgis_liblwgeom_version() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_liblwgeom_version() TO service_role;


--
-- Name: FUNCTION postgis_libprotobuf_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_libprotobuf_version() TO postgres;
GRANT ALL ON FUNCTION public.postgis_libprotobuf_version() TO anon;
GRANT ALL ON FUNCTION public.postgis_libprotobuf_version() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_libprotobuf_version() TO service_role;


--
-- Name: FUNCTION postgis_libxml_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_libxml_version() TO postgres;
GRANT ALL ON FUNCTION public.postgis_libxml_version() TO anon;
GRANT ALL ON FUNCTION public.postgis_libxml_version() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_libxml_version() TO service_role;


--
-- Name: FUNCTION postgis_noop(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_noop(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.postgis_noop(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.postgis_noop(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_noop(public.geometry) TO service_role;


--
-- Name: FUNCTION postgis_proj_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_proj_version() TO postgres;
GRANT ALL ON FUNCTION public.postgis_proj_version() TO anon;
GRANT ALL ON FUNCTION public.postgis_proj_version() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_proj_version() TO service_role;


--
-- Name: FUNCTION postgis_scripts_build_date(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_scripts_build_date() TO postgres;
GRANT ALL ON FUNCTION public.postgis_scripts_build_date() TO anon;
GRANT ALL ON FUNCTION public.postgis_scripts_build_date() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_scripts_build_date() TO service_role;


--
-- Name: FUNCTION postgis_scripts_installed(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_scripts_installed() TO postgres;
GRANT ALL ON FUNCTION public.postgis_scripts_installed() TO anon;
GRANT ALL ON FUNCTION public.postgis_scripts_installed() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_scripts_installed() TO service_role;


--
-- Name: FUNCTION postgis_scripts_released(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_scripts_released() TO postgres;
GRANT ALL ON FUNCTION public.postgis_scripts_released() TO anon;
GRANT ALL ON FUNCTION public.postgis_scripts_released() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_scripts_released() TO service_role;


--
-- Name: FUNCTION postgis_svn_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_svn_version() TO postgres;
GRANT ALL ON FUNCTION public.postgis_svn_version() TO anon;
GRANT ALL ON FUNCTION public.postgis_svn_version() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_svn_version() TO service_role;


--
-- Name: FUNCTION postgis_transform_geometry(geom public.geometry, text, text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_transform_geometry(geom public.geometry, text, text, integer) TO postgres;
GRANT ALL ON FUNCTION public.postgis_transform_geometry(geom public.geometry, text, text, integer) TO anon;
GRANT ALL ON FUNCTION public.postgis_transform_geometry(geom public.geometry, text, text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_transform_geometry(geom public.geometry, text, text, integer) TO service_role;


--
-- Name: FUNCTION postgis_type_name(geomname character varying, coord_dimension integer, use_new_name boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_type_name(geomname character varying, coord_dimension integer, use_new_name boolean) TO postgres;
GRANT ALL ON FUNCTION public.postgis_type_name(geomname character varying, coord_dimension integer, use_new_name boolean) TO anon;
GRANT ALL ON FUNCTION public.postgis_type_name(geomname character varying, coord_dimension integer, use_new_name boolean) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_type_name(geomname character varying, coord_dimension integer, use_new_name boolean) TO service_role;


--
-- Name: FUNCTION postgis_typmod_dims(integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_typmod_dims(integer) TO postgres;
GRANT ALL ON FUNCTION public.postgis_typmod_dims(integer) TO anon;
GRANT ALL ON FUNCTION public.postgis_typmod_dims(integer) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_typmod_dims(integer) TO service_role;


--
-- Name: FUNCTION postgis_typmod_srid(integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_typmod_srid(integer) TO postgres;
GRANT ALL ON FUNCTION public.postgis_typmod_srid(integer) TO anon;
GRANT ALL ON FUNCTION public.postgis_typmod_srid(integer) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_typmod_srid(integer) TO service_role;


--
-- Name: FUNCTION postgis_typmod_type(integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_typmod_type(integer) TO postgres;
GRANT ALL ON FUNCTION public.postgis_typmod_type(integer) TO anon;
GRANT ALL ON FUNCTION public.postgis_typmod_type(integer) TO authenticated;
GRANT ALL ON FUNCTION public.postgis_typmod_type(integer) TO service_role;


--
-- Name: FUNCTION postgis_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_version() TO postgres;
GRANT ALL ON FUNCTION public.postgis_version() TO anon;
GRANT ALL ON FUNCTION public.postgis_version() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_version() TO service_role;


--
-- Name: FUNCTION postgis_wagyu_version(); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.postgis_wagyu_version() TO postgres;
GRANT ALL ON FUNCTION public.postgis_wagyu_version() TO anon;
GRANT ALL ON FUNCTION public.postgis_wagyu_version() TO authenticated;
GRANT ALL ON FUNCTION public.postgis_wagyu_version() TO service_role;


--
-- Name: FUNCTION set_item_tenant_from_category(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.set_item_tenant_from_category() TO anon;
GRANT ALL ON FUNCTION public.set_item_tenant_from_category() TO authenticated;
GRANT ALL ON FUNCTION public.set_item_tenant_from_category() TO service_role;


--
-- Name: FUNCTION set_menu_tenant_from_restaurant(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.set_menu_tenant_from_restaurant() TO anon;
GRANT ALL ON FUNCTION public.set_menu_tenant_from_restaurant() TO authenticated;
GRANT ALL ON FUNCTION public.set_menu_tenant_from_restaurant() TO service_role;


--
-- Name: FUNCTION set_updated_at(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.set_updated_at() TO anon;
GRANT ALL ON FUNCTION public.set_updated_at() TO authenticated;
GRANT ALL ON FUNCTION public.set_updated_at() TO service_role;


--
-- Name: FUNCTION st_3dclosestpoint(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3dclosestpoint(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_3dclosestpoint(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_3dclosestpoint(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_3dclosestpoint(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_3ddfullywithin(geom1 public.geometry, geom2 public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3ddfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_3ddfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_3ddfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_3ddfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_3ddistance(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3ddistance(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_3ddistance(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_3ddistance(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_3ddistance(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_3ddwithin(geom1 public.geometry, geom2 public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3ddwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_3ddwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_3ddwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_3ddwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_3dintersects(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3dintersects(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_3dintersects(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_3dintersects(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_3dintersects(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_3dlength(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3dlength(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_3dlength(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_3dlength(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_3dlength(public.geometry) TO service_role;


--
-- Name: FUNCTION st_3dlineinterpolatepoint(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3dlineinterpolatepoint(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_3dlineinterpolatepoint(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_3dlineinterpolatepoint(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_3dlineinterpolatepoint(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_3dlongestline(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3dlongestline(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_3dlongestline(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_3dlongestline(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_3dlongestline(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_3dmakebox(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3dmakebox(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_3dmakebox(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_3dmakebox(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_3dmakebox(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_3dmaxdistance(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3dmaxdistance(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_3dmaxdistance(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_3dmaxdistance(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_3dmaxdistance(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_3dperimeter(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3dperimeter(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_3dperimeter(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_3dperimeter(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_3dperimeter(public.geometry) TO service_role;


--
-- Name: FUNCTION st_3dshortestline(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3dshortestline(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_3dshortestline(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_3dshortestline(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_3dshortestline(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_addmeasure(public.geometry, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_addmeasure(public.geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_addmeasure(public.geometry, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_addmeasure(public.geometry, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_addmeasure(public.geometry, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_addpoint(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_addpoint(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_addpoint(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_addpoint(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_addpoint(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_addpoint(geom1 public.geometry, geom2 public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_addpoint(geom1 public.geometry, geom2 public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_addpoint(geom1 public.geometry, geom2 public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_addpoint(geom1 public.geometry, geom2 public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_addpoint(geom1 public.geometry, geom2 public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_affine(public.geometry, double precision, double precision, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_affine(public.geometry, double precision, double precision, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_affine(public.geometry, double precision, double precision, double precision, double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_affine(public.geometry, double precision, double precision, double precision, double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_affine(public.geometry, double precision, double precision, double precision, double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_affine(public.geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_affine(public.geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_affine(public.geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_affine(public.geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_affine(public.geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_angle(line1 public.geometry, line2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_angle(line1 public.geometry, line2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_angle(line1 public.geometry, line2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_angle(line1 public.geometry, line2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_angle(line1 public.geometry, line2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_angle(pt1 public.geometry, pt2 public.geometry, pt3 public.geometry, pt4 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_angle(pt1 public.geometry, pt2 public.geometry, pt3 public.geometry, pt4 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_angle(pt1 public.geometry, pt2 public.geometry, pt3 public.geometry, pt4 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_angle(pt1 public.geometry, pt2 public.geometry, pt3 public.geometry, pt4 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_angle(pt1 public.geometry, pt2 public.geometry, pt3 public.geometry, pt4 public.geometry) TO service_role;


--
-- Name: FUNCTION st_area(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_area(text) TO postgres;
GRANT ALL ON FUNCTION public.st_area(text) TO anon;
GRANT ALL ON FUNCTION public.st_area(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_area(text) TO service_role;


--
-- Name: FUNCTION st_area(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_area(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_area(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_area(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_area(public.geometry) TO service_role;


--
-- Name: FUNCTION st_area(geog public.geography, use_spheroid boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_area(geog public.geography, use_spheroid boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_area(geog public.geography, use_spheroid boolean) TO anon;
GRANT ALL ON FUNCTION public.st_area(geog public.geography, use_spheroid boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_area(geog public.geography, use_spheroid boolean) TO service_role;


--
-- Name: FUNCTION st_area2d(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_area2d(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_area2d(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_area2d(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_area2d(public.geometry) TO service_role;


--
-- Name: FUNCTION st_asbinary(public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asbinary(public.geography) TO postgres;
GRANT ALL ON FUNCTION public.st_asbinary(public.geography) TO anon;
GRANT ALL ON FUNCTION public.st_asbinary(public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.st_asbinary(public.geography) TO service_role;


--
-- Name: FUNCTION st_asbinary(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asbinary(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_asbinary(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_asbinary(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_asbinary(public.geometry) TO service_role;


--
-- Name: FUNCTION st_asbinary(public.geography, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asbinary(public.geography, text) TO postgres;
GRANT ALL ON FUNCTION public.st_asbinary(public.geography, text) TO anon;
GRANT ALL ON FUNCTION public.st_asbinary(public.geography, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asbinary(public.geography, text) TO service_role;


--
-- Name: FUNCTION st_asbinary(public.geometry, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asbinary(public.geometry, text) TO postgres;
GRANT ALL ON FUNCTION public.st_asbinary(public.geometry, text) TO anon;
GRANT ALL ON FUNCTION public.st_asbinary(public.geometry, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asbinary(public.geometry, text) TO service_role;


--
-- Name: FUNCTION st_asencodedpolyline(geom public.geometry, nprecision integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asencodedpolyline(geom public.geometry, nprecision integer) TO postgres;
GRANT ALL ON FUNCTION public.st_asencodedpolyline(geom public.geometry, nprecision integer) TO anon;
GRANT ALL ON FUNCTION public.st_asencodedpolyline(geom public.geometry, nprecision integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_asencodedpolyline(geom public.geometry, nprecision integer) TO service_role;


--
-- Name: FUNCTION st_asewkb(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asewkb(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_asewkb(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_asewkb(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_asewkb(public.geometry) TO service_role;


--
-- Name: FUNCTION st_asewkb(public.geometry, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asewkb(public.geometry, text) TO postgres;
GRANT ALL ON FUNCTION public.st_asewkb(public.geometry, text) TO anon;
GRANT ALL ON FUNCTION public.st_asewkb(public.geometry, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asewkb(public.geometry, text) TO service_role;


--
-- Name: FUNCTION st_asewkt(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asewkt(text) TO postgres;
GRANT ALL ON FUNCTION public.st_asewkt(text) TO anon;
GRANT ALL ON FUNCTION public.st_asewkt(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asewkt(text) TO service_role;


--
-- Name: FUNCTION st_asewkt(public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asewkt(public.geography) TO postgres;
GRANT ALL ON FUNCTION public.st_asewkt(public.geography) TO anon;
GRANT ALL ON FUNCTION public.st_asewkt(public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.st_asewkt(public.geography) TO service_role;


--
-- Name: FUNCTION st_asewkt(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asewkt(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_asewkt(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_asewkt(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_asewkt(public.geometry) TO service_role;


--
-- Name: FUNCTION st_asewkt(public.geography, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asewkt(public.geography, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_asewkt(public.geography, integer) TO anon;
GRANT ALL ON FUNCTION public.st_asewkt(public.geography, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_asewkt(public.geography, integer) TO service_role;


--
-- Name: FUNCTION st_asewkt(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asewkt(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_asewkt(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_asewkt(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_asewkt(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_asgeojson(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asgeojson(text) TO postgres;
GRANT ALL ON FUNCTION public.st_asgeojson(text) TO anon;
GRANT ALL ON FUNCTION public.st_asgeojson(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asgeojson(text) TO service_role;


--
-- Name: FUNCTION st_asgeojson(geog public.geography, maxdecimaldigits integer, options integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asgeojson(geog public.geography, maxdecimaldigits integer, options integer) TO postgres;
GRANT ALL ON FUNCTION public.st_asgeojson(geog public.geography, maxdecimaldigits integer, options integer) TO anon;
GRANT ALL ON FUNCTION public.st_asgeojson(geog public.geography, maxdecimaldigits integer, options integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_asgeojson(geog public.geography, maxdecimaldigits integer, options integer) TO service_role;


--
-- Name: FUNCTION st_asgeojson(geom public.geometry, maxdecimaldigits integer, options integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asgeojson(geom public.geometry, maxdecimaldigits integer, options integer) TO postgres;
GRANT ALL ON FUNCTION public.st_asgeojson(geom public.geometry, maxdecimaldigits integer, options integer) TO anon;
GRANT ALL ON FUNCTION public.st_asgeojson(geom public.geometry, maxdecimaldigits integer, options integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_asgeojson(geom public.geometry, maxdecimaldigits integer, options integer) TO service_role;


--
-- Name: FUNCTION st_asgeojson(r record, geom_column text, maxdecimaldigits integer, pretty_bool boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asgeojson(r record, geom_column text, maxdecimaldigits integer, pretty_bool boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_asgeojson(r record, geom_column text, maxdecimaldigits integer, pretty_bool boolean) TO anon;
GRANT ALL ON FUNCTION public.st_asgeojson(r record, geom_column text, maxdecimaldigits integer, pretty_bool boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_asgeojson(r record, geom_column text, maxdecimaldigits integer, pretty_bool boolean) TO service_role;


--
-- Name: FUNCTION st_asgml(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asgml(text) TO postgres;
GRANT ALL ON FUNCTION public.st_asgml(text) TO anon;
GRANT ALL ON FUNCTION public.st_asgml(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asgml(text) TO service_role;


--
-- Name: FUNCTION st_asgml(geom public.geometry, maxdecimaldigits integer, options integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asgml(geom public.geometry, maxdecimaldigits integer, options integer) TO postgres;
GRANT ALL ON FUNCTION public.st_asgml(geom public.geometry, maxdecimaldigits integer, options integer) TO anon;
GRANT ALL ON FUNCTION public.st_asgml(geom public.geometry, maxdecimaldigits integer, options integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_asgml(geom public.geometry, maxdecimaldigits integer, options integer) TO service_role;


--
-- Name: FUNCTION st_asgml(geog public.geography, maxdecimaldigits integer, options integer, nprefix text, id text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asgml(geog public.geography, maxdecimaldigits integer, options integer, nprefix text, id text) TO postgres;
GRANT ALL ON FUNCTION public.st_asgml(geog public.geography, maxdecimaldigits integer, options integer, nprefix text, id text) TO anon;
GRANT ALL ON FUNCTION public.st_asgml(geog public.geography, maxdecimaldigits integer, options integer, nprefix text, id text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asgml(geog public.geography, maxdecimaldigits integer, options integer, nprefix text, id text) TO service_role;


--
-- Name: FUNCTION st_asgml(version integer, geog public.geography, maxdecimaldigits integer, options integer, nprefix text, id text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asgml(version integer, geog public.geography, maxdecimaldigits integer, options integer, nprefix text, id text) TO postgres;
GRANT ALL ON FUNCTION public.st_asgml(version integer, geog public.geography, maxdecimaldigits integer, options integer, nprefix text, id text) TO anon;
GRANT ALL ON FUNCTION public.st_asgml(version integer, geog public.geography, maxdecimaldigits integer, options integer, nprefix text, id text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asgml(version integer, geog public.geography, maxdecimaldigits integer, options integer, nprefix text, id text) TO service_role;


--
-- Name: FUNCTION st_asgml(version integer, geom public.geometry, maxdecimaldigits integer, options integer, nprefix text, id text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asgml(version integer, geom public.geometry, maxdecimaldigits integer, options integer, nprefix text, id text) TO postgres;
GRANT ALL ON FUNCTION public.st_asgml(version integer, geom public.geometry, maxdecimaldigits integer, options integer, nprefix text, id text) TO anon;
GRANT ALL ON FUNCTION public.st_asgml(version integer, geom public.geometry, maxdecimaldigits integer, options integer, nprefix text, id text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asgml(version integer, geom public.geometry, maxdecimaldigits integer, options integer, nprefix text, id text) TO service_role;


--
-- Name: FUNCTION st_ashexewkb(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_ashexewkb(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_ashexewkb(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_ashexewkb(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_ashexewkb(public.geometry) TO service_role;


--
-- Name: FUNCTION st_ashexewkb(public.geometry, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_ashexewkb(public.geometry, text) TO postgres;
GRANT ALL ON FUNCTION public.st_ashexewkb(public.geometry, text) TO anon;
GRANT ALL ON FUNCTION public.st_ashexewkb(public.geometry, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_ashexewkb(public.geometry, text) TO service_role;


--
-- Name: FUNCTION st_askml(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_askml(text) TO postgres;
GRANT ALL ON FUNCTION public.st_askml(text) TO anon;
GRANT ALL ON FUNCTION public.st_askml(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_askml(text) TO service_role;


--
-- Name: FUNCTION st_askml(geog public.geography, maxdecimaldigits integer, nprefix text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_askml(geog public.geography, maxdecimaldigits integer, nprefix text) TO postgres;
GRANT ALL ON FUNCTION public.st_askml(geog public.geography, maxdecimaldigits integer, nprefix text) TO anon;
GRANT ALL ON FUNCTION public.st_askml(geog public.geography, maxdecimaldigits integer, nprefix text) TO authenticated;
GRANT ALL ON FUNCTION public.st_askml(geog public.geography, maxdecimaldigits integer, nprefix text) TO service_role;


--
-- Name: FUNCTION st_askml(geom public.geometry, maxdecimaldigits integer, nprefix text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_askml(geom public.geometry, maxdecimaldigits integer, nprefix text) TO postgres;
GRANT ALL ON FUNCTION public.st_askml(geom public.geometry, maxdecimaldigits integer, nprefix text) TO anon;
GRANT ALL ON FUNCTION public.st_askml(geom public.geometry, maxdecimaldigits integer, nprefix text) TO authenticated;
GRANT ALL ON FUNCTION public.st_askml(geom public.geometry, maxdecimaldigits integer, nprefix text) TO service_role;


--
-- Name: FUNCTION st_aslatlontext(geom public.geometry, tmpl text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_aslatlontext(geom public.geometry, tmpl text) TO postgres;
GRANT ALL ON FUNCTION public.st_aslatlontext(geom public.geometry, tmpl text) TO anon;
GRANT ALL ON FUNCTION public.st_aslatlontext(geom public.geometry, tmpl text) TO authenticated;
GRANT ALL ON FUNCTION public.st_aslatlontext(geom public.geometry, tmpl text) TO service_role;


--
-- Name: FUNCTION st_asmarc21(geom public.geometry, format text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asmarc21(geom public.geometry, format text) TO postgres;
GRANT ALL ON FUNCTION public.st_asmarc21(geom public.geometry, format text) TO anon;
GRANT ALL ON FUNCTION public.st_asmarc21(geom public.geometry, format text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asmarc21(geom public.geometry, format text) TO service_role;


--
-- Name: FUNCTION st_asmvtgeom(geom public.geometry, bounds public.box2d, extent integer, buffer integer, clip_geom boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asmvtgeom(geom public.geometry, bounds public.box2d, extent integer, buffer integer, clip_geom boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_asmvtgeom(geom public.geometry, bounds public.box2d, extent integer, buffer integer, clip_geom boolean) TO anon;
GRANT ALL ON FUNCTION public.st_asmvtgeom(geom public.geometry, bounds public.box2d, extent integer, buffer integer, clip_geom boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_asmvtgeom(geom public.geometry, bounds public.box2d, extent integer, buffer integer, clip_geom boolean) TO service_role;


--
-- Name: FUNCTION st_assvg(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_assvg(text) TO postgres;
GRANT ALL ON FUNCTION public.st_assvg(text) TO anon;
GRANT ALL ON FUNCTION public.st_assvg(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_assvg(text) TO service_role;


--
-- Name: FUNCTION st_assvg(geog public.geography, rel integer, maxdecimaldigits integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_assvg(geog public.geography, rel integer, maxdecimaldigits integer) TO postgres;
GRANT ALL ON FUNCTION public.st_assvg(geog public.geography, rel integer, maxdecimaldigits integer) TO anon;
GRANT ALL ON FUNCTION public.st_assvg(geog public.geography, rel integer, maxdecimaldigits integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_assvg(geog public.geography, rel integer, maxdecimaldigits integer) TO service_role;


--
-- Name: FUNCTION st_assvg(geom public.geometry, rel integer, maxdecimaldigits integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_assvg(geom public.geometry, rel integer, maxdecimaldigits integer) TO postgres;
GRANT ALL ON FUNCTION public.st_assvg(geom public.geometry, rel integer, maxdecimaldigits integer) TO anon;
GRANT ALL ON FUNCTION public.st_assvg(geom public.geometry, rel integer, maxdecimaldigits integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_assvg(geom public.geometry, rel integer, maxdecimaldigits integer) TO service_role;


--
-- Name: FUNCTION st_astext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_astext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_astext(text) TO anon;
GRANT ALL ON FUNCTION public.st_astext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_astext(text) TO service_role;


--
-- Name: FUNCTION st_astext(public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_astext(public.geography) TO postgres;
GRANT ALL ON FUNCTION public.st_astext(public.geography) TO anon;
GRANT ALL ON FUNCTION public.st_astext(public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.st_astext(public.geography) TO service_role;


--
-- Name: FUNCTION st_astext(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_astext(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_astext(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_astext(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_astext(public.geometry) TO service_role;


--
-- Name: FUNCTION st_astext(public.geography, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_astext(public.geography, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_astext(public.geography, integer) TO anon;
GRANT ALL ON FUNCTION public.st_astext(public.geography, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_astext(public.geography, integer) TO service_role;


--
-- Name: FUNCTION st_astext(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_astext(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_astext(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_astext(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_astext(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_astwkb(geom public.geometry, prec integer, prec_z integer, prec_m integer, with_sizes boolean, with_boxes boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_astwkb(geom public.geometry, prec integer, prec_z integer, prec_m integer, with_sizes boolean, with_boxes boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_astwkb(geom public.geometry, prec integer, prec_z integer, prec_m integer, with_sizes boolean, with_boxes boolean) TO anon;
GRANT ALL ON FUNCTION public.st_astwkb(geom public.geometry, prec integer, prec_z integer, prec_m integer, with_sizes boolean, with_boxes boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_astwkb(geom public.geometry, prec integer, prec_z integer, prec_m integer, with_sizes boolean, with_boxes boolean) TO service_role;


--
-- Name: FUNCTION st_astwkb(geom public.geometry[], ids bigint[], prec integer, prec_z integer, prec_m integer, with_sizes boolean, with_boxes boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_astwkb(geom public.geometry[], ids bigint[], prec integer, prec_z integer, prec_m integer, with_sizes boolean, with_boxes boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_astwkb(geom public.geometry[], ids bigint[], prec integer, prec_z integer, prec_m integer, with_sizes boolean, with_boxes boolean) TO anon;
GRANT ALL ON FUNCTION public.st_astwkb(geom public.geometry[], ids bigint[], prec integer, prec_z integer, prec_m integer, with_sizes boolean, with_boxes boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_astwkb(geom public.geometry[], ids bigint[], prec integer, prec_z integer, prec_m integer, with_sizes boolean, with_boxes boolean) TO service_role;


--
-- Name: FUNCTION st_asx3d(geom public.geometry, maxdecimaldigits integer, options integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asx3d(geom public.geometry, maxdecimaldigits integer, options integer) TO postgres;
GRANT ALL ON FUNCTION public.st_asx3d(geom public.geometry, maxdecimaldigits integer, options integer) TO anon;
GRANT ALL ON FUNCTION public.st_asx3d(geom public.geometry, maxdecimaldigits integer, options integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_asx3d(geom public.geometry, maxdecimaldigits integer, options integer) TO service_role;


--
-- Name: FUNCTION st_azimuth(geog1 public.geography, geog2 public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_azimuth(geog1 public.geography, geog2 public.geography) TO postgres;
GRANT ALL ON FUNCTION public.st_azimuth(geog1 public.geography, geog2 public.geography) TO anon;
GRANT ALL ON FUNCTION public.st_azimuth(geog1 public.geography, geog2 public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.st_azimuth(geog1 public.geography, geog2 public.geography) TO service_role;


--
-- Name: FUNCTION st_azimuth(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_azimuth(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_azimuth(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_azimuth(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_azimuth(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_bdmpolyfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_bdmpolyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_bdmpolyfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_bdmpolyfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_bdmpolyfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_bdpolyfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_bdpolyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_bdpolyfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_bdpolyfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_bdpolyfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_boundary(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_boundary(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_boundary(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_boundary(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_boundary(public.geometry) TO service_role;


--
-- Name: FUNCTION st_boundingdiagonal(geom public.geometry, fits boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_boundingdiagonal(geom public.geometry, fits boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_boundingdiagonal(geom public.geometry, fits boolean) TO anon;
GRANT ALL ON FUNCTION public.st_boundingdiagonal(geom public.geometry, fits boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_boundingdiagonal(geom public.geometry, fits boolean) TO service_role;


--
-- Name: FUNCTION st_box2dfromgeohash(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_box2dfromgeohash(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_box2dfromgeohash(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_box2dfromgeohash(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_box2dfromgeohash(text, integer) TO service_role;


--
-- Name: FUNCTION st_buffer(text, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_buffer(text, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_buffer(text, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_buffer(text, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_buffer(text, double precision) TO service_role;


--
-- Name: FUNCTION st_buffer(public.geography, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision) TO service_role;


--
-- Name: FUNCTION st_buffer(text, double precision, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_buffer(text, double precision, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_buffer(text, double precision, integer) TO anon;
GRANT ALL ON FUNCTION public.st_buffer(text, double precision, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_buffer(text, double precision, integer) TO service_role;


--
-- Name: FUNCTION st_buffer(text, double precision, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_buffer(text, double precision, text) TO postgres;
GRANT ALL ON FUNCTION public.st_buffer(text, double precision, text) TO anon;
GRANT ALL ON FUNCTION public.st_buffer(text, double precision, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_buffer(text, double precision, text) TO service_role;


--
-- Name: FUNCTION st_buffer(public.geography, double precision, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision, integer) TO anon;
GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision, integer) TO service_role;


--
-- Name: FUNCTION st_buffer(public.geography, double precision, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision, text) TO postgres;
GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision, text) TO anon;
GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_buffer(public.geography, double precision, text) TO service_role;


--
-- Name: FUNCTION st_buffer(geom public.geometry, radius double precision, quadsegs integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_buffer(geom public.geometry, radius double precision, quadsegs integer) TO postgres;
GRANT ALL ON FUNCTION public.st_buffer(geom public.geometry, radius double precision, quadsegs integer) TO anon;
GRANT ALL ON FUNCTION public.st_buffer(geom public.geometry, radius double precision, quadsegs integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_buffer(geom public.geometry, radius double precision, quadsegs integer) TO service_role;


--
-- Name: FUNCTION st_buffer(geom public.geometry, radius double precision, options text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_buffer(geom public.geometry, radius double precision, options text) TO postgres;
GRANT ALL ON FUNCTION public.st_buffer(geom public.geometry, radius double precision, options text) TO anon;
GRANT ALL ON FUNCTION public.st_buffer(geom public.geometry, radius double precision, options text) TO authenticated;
GRANT ALL ON FUNCTION public.st_buffer(geom public.geometry, radius double precision, options text) TO service_role;


--
-- Name: FUNCTION st_buildarea(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_buildarea(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_buildarea(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_buildarea(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_buildarea(public.geometry) TO service_role;


--
-- Name: FUNCTION st_centroid(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_centroid(text) TO postgres;
GRANT ALL ON FUNCTION public.st_centroid(text) TO anon;
GRANT ALL ON FUNCTION public.st_centroid(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_centroid(text) TO service_role;


--
-- Name: FUNCTION st_centroid(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_centroid(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_centroid(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_centroid(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_centroid(public.geometry) TO service_role;


--
-- Name: FUNCTION st_centroid(public.geography, use_spheroid boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_centroid(public.geography, use_spheroid boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_centroid(public.geography, use_spheroid boolean) TO anon;
GRANT ALL ON FUNCTION public.st_centroid(public.geography, use_spheroid boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_centroid(public.geography, use_spheroid boolean) TO service_role;


--
-- Name: FUNCTION st_chaikinsmoothing(public.geometry, integer, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_chaikinsmoothing(public.geometry, integer, boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_chaikinsmoothing(public.geometry, integer, boolean) TO anon;
GRANT ALL ON FUNCTION public.st_chaikinsmoothing(public.geometry, integer, boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_chaikinsmoothing(public.geometry, integer, boolean) TO service_role;


--
-- Name: FUNCTION st_cleangeometry(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_cleangeometry(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_cleangeometry(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_cleangeometry(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_cleangeometry(public.geometry) TO service_role;


--
-- Name: FUNCTION st_clipbybox2d(geom public.geometry, box public.box2d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_clipbybox2d(geom public.geometry, box public.box2d) TO postgres;
GRANT ALL ON FUNCTION public.st_clipbybox2d(geom public.geometry, box public.box2d) TO anon;
GRANT ALL ON FUNCTION public.st_clipbybox2d(geom public.geometry, box public.box2d) TO authenticated;
GRANT ALL ON FUNCTION public.st_clipbybox2d(geom public.geometry, box public.box2d) TO service_role;


--
-- Name: FUNCTION st_closestpoint(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_closestpoint(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_closestpoint(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_closestpoint(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_closestpoint(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_closestpointofapproach(public.geometry, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_closestpointofapproach(public.geometry, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_closestpointofapproach(public.geometry, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_closestpointofapproach(public.geometry, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_closestpointofapproach(public.geometry, public.geometry) TO service_role;


--
-- Name: FUNCTION st_clusterdbscan(public.geometry, eps double precision, minpoints integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_clusterdbscan(public.geometry, eps double precision, minpoints integer) TO postgres;
GRANT ALL ON FUNCTION public.st_clusterdbscan(public.geometry, eps double precision, minpoints integer) TO anon;
GRANT ALL ON FUNCTION public.st_clusterdbscan(public.geometry, eps double precision, minpoints integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_clusterdbscan(public.geometry, eps double precision, minpoints integer) TO service_role;


--
-- Name: FUNCTION st_clusterintersecting(public.geometry[]); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_clusterintersecting(public.geometry[]) TO postgres;
GRANT ALL ON FUNCTION public.st_clusterintersecting(public.geometry[]) TO anon;
GRANT ALL ON FUNCTION public.st_clusterintersecting(public.geometry[]) TO authenticated;
GRANT ALL ON FUNCTION public.st_clusterintersecting(public.geometry[]) TO service_role;


--
-- Name: FUNCTION st_clusterkmeans(geom public.geometry, k integer, max_radius double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_clusterkmeans(geom public.geometry, k integer, max_radius double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_clusterkmeans(geom public.geometry, k integer, max_radius double precision) TO anon;
GRANT ALL ON FUNCTION public.st_clusterkmeans(geom public.geometry, k integer, max_radius double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_clusterkmeans(geom public.geometry, k integer, max_radius double precision) TO service_role;


--
-- Name: FUNCTION st_clusterwithin(public.geometry[], double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_clusterwithin(public.geometry[], double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_clusterwithin(public.geometry[], double precision) TO anon;
GRANT ALL ON FUNCTION public.st_clusterwithin(public.geometry[], double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_clusterwithin(public.geometry[], double precision) TO service_role;


--
-- Name: FUNCTION st_collect(public.geometry[]); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_collect(public.geometry[]) TO postgres;
GRANT ALL ON FUNCTION public.st_collect(public.geometry[]) TO anon;
GRANT ALL ON FUNCTION public.st_collect(public.geometry[]) TO authenticated;
GRANT ALL ON FUNCTION public.st_collect(public.geometry[]) TO service_role;


--
-- Name: FUNCTION st_collect(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_collect(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_collect(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_collect(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_collect(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_collectionextract(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_collectionextract(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_collectionextract(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_collectionextract(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_collectionextract(public.geometry) TO service_role;


--
-- Name: FUNCTION st_collectionextract(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_collectionextract(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_collectionextract(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_collectionextract(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_collectionextract(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_collectionhomogenize(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_collectionhomogenize(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_collectionhomogenize(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_collectionhomogenize(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_collectionhomogenize(public.geometry) TO service_role;


--
-- Name: FUNCTION st_combinebbox(public.box2d, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_combinebbox(public.box2d, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_combinebbox(public.box2d, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_combinebbox(public.box2d, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_combinebbox(public.box2d, public.geometry) TO service_role;


--
-- Name: FUNCTION st_combinebbox(public.box3d, public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_combinebbox(public.box3d, public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.st_combinebbox(public.box3d, public.box3d) TO anon;
GRANT ALL ON FUNCTION public.st_combinebbox(public.box3d, public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.st_combinebbox(public.box3d, public.box3d) TO service_role;


--
-- Name: FUNCTION st_combinebbox(public.box3d, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_combinebbox(public.box3d, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_combinebbox(public.box3d, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_combinebbox(public.box3d, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_combinebbox(public.box3d, public.geometry) TO service_role;


--
-- Name: FUNCTION st_concavehull(param_geom public.geometry, param_pctconvex double precision, param_allow_holes boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_concavehull(param_geom public.geometry, param_pctconvex double precision, param_allow_holes boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_concavehull(param_geom public.geometry, param_pctconvex double precision, param_allow_holes boolean) TO anon;
GRANT ALL ON FUNCTION public.st_concavehull(param_geom public.geometry, param_pctconvex double precision, param_allow_holes boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_concavehull(param_geom public.geometry, param_pctconvex double precision, param_allow_holes boolean) TO service_role;


--
-- Name: FUNCTION st_contains(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_contains(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_contains(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_contains(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_contains(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_containsproperly(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_containsproperly(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_containsproperly(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_containsproperly(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_containsproperly(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_convexhull(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_convexhull(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_convexhull(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_convexhull(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_convexhull(public.geometry) TO service_role;


--
-- Name: FUNCTION st_coorddim(geometry public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_coorddim(geometry public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_coorddim(geometry public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_coorddim(geometry public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_coorddim(geometry public.geometry) TO service_role;


--
-- Name: FUNCTION st_coveredby(text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_coveredby(text, text) TO postgres;
GRANT ALL ON FUNCTION public.st_coveredby(text, text) TO anon;
GRANT ALL ON FUNCTION public.st_coveredby(text, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_coveredby(text, text) TO service_role;


--
-- Name: FUNCTION st_coveredby(geog1 public.geography, geog2 public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_coveredby(geog1 public.geography, geog2 public.geography) TO postgres;
GRANT ALL ON FUNCTION public.st_coveredby(geog1 public.geography, geog2 public.geography) TO anon;
GRANT ALL ON FUNCTION public.st_coveredby(geog1 public.geography, geog2 public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.st_coveredby(geog1 public.geography, geog2 public.geography) TO service_role;


--
-- Name: FUNCTION st_coveredby(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_coveredby(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_coveredby(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_coveredby(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_coveredby(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_covers(text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_covers(text, text) TO postgres;
GRANT ALL ON FUNCTION public.st_covers(text, text) TO anon;
GRANT ALL ON FUNCTION public.st_covers(text, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_covers(text, text) TO service_role;


--
-- Name: FUNCTION st_covers(geog1 public.geography, geog2 public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_covers(geog1 public.geography, geog2 public.geography) TO postgres;
GRANT ALL ON FUNCTION public.st_covers(geog1 public.geography, geog2 public.geography) TO anon;
GRANT ALL ON FUNCTION public.st_covers(geog1 public.geography, geog2 public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.st_covers(geog1 public.geography, geog2 public.geography) TO service_role;


--
-- Name: FUNCTION st_covers(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_covers(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_covers(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_covers(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_covers(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_cpawithin(public.geometry, public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_cpawithin(public.geometry, public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_cpawithin(public.geometry, public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_cpawithin(public.geometry, public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_cpawithin(public.geometry, public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_crosses(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_crosses(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_crosses(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_crosses(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_crosses(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_curvetoline(geom public.geometry, tol double precision, toltype integer, flags integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_curvetoline(geom public.geometry, tol double precision, toltype integer, flags integer) TO postgres;
GRANT ALL ON FUNCTION public.st_curvetoline(geom public.geometry, tol double precision, toltype integer, flags integer) TO anon;
GRANT ALL ON FUNCTION public.st_curvetoline(geom public.geometry, tol double precision, toltype integer, flags integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_curvetoline(geom public.geometry, tol double precision, toltype integer, flags integer) TO service_role;


--
-- Name: FUNCTION st_delaunaytriangles(g1 public.geometry, tolerance double precision, flags integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_delaunaytriangles(g1 public.geometry, tolerance double precision, flags integer) TO postgres;
GRANT ALL ON FUNCTION public.st_delaunaytriangles(g1 public.geometry, tolerance double precision, flags integer) TO anon;
GRANT ALL ON FUNCTION public.st_delaunaytriangles(g1 public.geometry, tolerance double precision, flags integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_delaunaytriangles(g1 public.geometry, tolerance double precision, flags integer) TO service_role;


--
-- Name: FUNCTION st_dfullywithin(geom1 public.geometry, geom2 public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_dfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_dfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_dfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_dfullywithin(geom1 public.geometry, geom2 public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_difference(geom1 public.geometry, geom2 public.geometry, gridsize double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_difference(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_difference(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO anon;
GRANT ALL ON FUNCTION public.st_difference(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_difference(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO service_role;


--
-- Name: FUNCTION st_dimension(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_dimension(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_dimension(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_dimension(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_dimension(public.geometry) TO service_role;


--
-- Name: FUNCTION st_disjoint(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_disjoint(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_disjoint(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_disjoint(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_disjoint(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_distance(text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_distance(text, text) TO postgres;
GRANT ALL ON FUNCTION public.st_distance(text, text) TO anon;
GRANT ALL ON FUNCTION public.st_distance(text, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_distance(text, text) TO service_role;


--
-- Name: FUNCTION st_distance(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_distance(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_distance(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_distance(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_distance(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_distance(geog1 public.geography, geog2 public.geography, use_spheroid boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_distance(geog1 public.geography, geog2 public.geography, use_spheroid boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_distance(geog1 public.geography, geog2 public.geography, use_spheroid boolean) TO anon;
GRANT ALL ON FUNCTION public.st_distance(geog1 public.geography, geog2 public.geography, use_spheroid boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_distance(geog1 public.geography, geog2 public.geography, use_spheroid boolean) TO service_role;


--
-- Name: FUNCTION st_distancecpa(public.geometry, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_distancecpa(public.geometry, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_distancecpa(public.geometry, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_distancecpa(public.geometry, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_distancecpa(public.geometry, public.geometry) TO service_role;


--
-- Name: FUNCTION st_distancesphere(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_distancesphere(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_distancesphere(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_distancesphere(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_distancesphere(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_distancesphere(geom1 public.geometry, geom2 public.geometry, radius double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_distancesphere(geom1 public.geometry, geom2 public.geometry, radius double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_distancesphere(geom1 public.geometry, geom2 public.geometry, radius double precision) TO anon;
GRANT ALL ON FUNCTION public.st_distancesphere(geom1 public.geometry, geom2 public.geometry, radius double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_distancesphere(geom1 public.geometry, geom2 public.geometry, radius double precision) TO service_role;


--
-- Name: FUNCTION st_distancespheroid(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_distancespheroid(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_distancespheroid(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_distancespheroid(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_distancespheroid(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_distancespheroid(geom1 public.geometry, geom2 public.geometry, public.spheroid); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_distancespheroid(geom1 public.geometry, geom2 public.geometry, public.spheroid) TO postgres;
GRANT ALL ON FUNCTION public.st_distancespheroid(geom1 public.geometry, geom2 public.geometry, public.spheroid) TO anon;
GRANT ALL ON FUNCTION public.st_distancespheroid(geom1 public.geometry, geom2 public.geometry, public.spheroid) TO authenticated;
GRANT ALL ON FUNCTION public.st_distancespheroid(geom1 public.geometry, geom2 public.geometry, public.spheroid) TO service_role;


--
-- Name: FUNCTION st_dump(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_dump(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_dump(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_dump(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_dump(public.geometry) TO service_role;


--
-- Name: FUNCTION st_dumppoints(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_dumppoints(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_dumppoints(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_dumppoints(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_dumppoints(public.geometry) TO service_role;


--
-- Name: FUNCTION st_dumprings(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_dumprings(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_dumprings(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_dumprings(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_dumprings(public.geometry) TO service_role;


--
-- Name: FUNCTION st_dumpsegments(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_dumpsegments(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_dumpsegments(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_dumpsegments(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_dumpsegments(public.geometry) TO service_role;


--
-- Name: FUNCTION st_dwithin(text, text, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_dwithin(text, text, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_dwithin(text, text, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_dwithin(text, text, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_dwithin(text, text, double precision) TO service_role;


--
-- Name: FUNCTION st_dwithin(geom1 public.geometry, geom2 public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_dwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_dwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_dwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_dwithin(geom1 public.geometry, geom2 public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_dwithin(geog1 public.geography, geog2 public.geography, tolerance double precision, use_spheroid boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_dwithin(geog1 public.geography, geog2 public.geography, tolerance double precision, use_spheroid boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_dwithin(geog1 public.geography, geog2 public.geography, tolerance double precision, use_spheroid boolean) TO anon;
GRANT ALL ON FUNCTION public.st_dwithin(geog1 public.geography, geog2 public.geography, tolerance double precision, use_spheroid boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_dwithin(geog1 public.geography, geog2 public.geography, tolerance double precision, use_spheroid boolean) TO service_role;


--
-- Name: FUNCTION st_endpoint(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_endpoint(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_endpoint(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_endpoint(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_endpoint(public.geometry) TO service_role;


--
-- Name: FUNCTION st_envelope(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_envelope(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_envelope(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_envelope(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_envelope(public.geometry) TO service_role;


--
-- Name: FUNCTION st_equals(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_equals(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_equals(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_equals(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_equals(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_estimatedextent(text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_estimatedextent(text, text) TO postgres;
GRANT ALL ON FUNCTION public.st_estimatedextent(text, text) TO anon;
GRANT ALL ON FUNCTION public.st_estimatedextent(text, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_estimatedextent(text, text) TO service_role;


--
-- Name: FUNCTION st_estimatedextent(text, text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_estimatedextent(text, text, text) TO postgres;
GRANT ALL ON FUNCTION public.st_estimatedextent(text, text, text) TO anon;
GRANT ALL ON FUNCTION public.st_estimatedextent(text, text, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_estimatedextent(text, text, text) TO service_role;


--
-- Name: FUNCTION st_estimatedextent(text, text, text, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_estimatedextent(text, text, text, boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_estimatedextent(text, text, text, boolean) TO anon;
GRANT ALL ON FUNCTION public.st_estimatedextent(text, text, text, boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_estimatedextent(text, text, text, boolean) TO service_role;


--
-- Name: FUNCTION st_expand(public.box2d, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_expand(public.box2d, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_expand(public.box2d, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_expand(public.box2d, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_expand(public.box2d, double precision) TO service_role;


--
-- Name: FUNCTION st_expand(public.box3d, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_expand(public.box3d, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_expand(public.box3d, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_expand(public.box3d, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_expand(public.box3d, double precision) TO service_role;


--
-- Name: FUNCTION st_expand(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_expand(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_expand(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_expand(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_expand(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_expand(box public.box2d, dx double precision, dy double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_expand(box public.box2d, dx double precision, dy double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_expand(box public.box2d, dx double precision, dy double precision) TO anon;
GRANT ALL ON FUNCTION public.st_expand(box public.box2d, dx double precision, dy double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_expand(box public.box2d, dx double precision, dy double precision) TO service_role;


--
-- Name: FUNCTION st_expand(box public.box3d, dx double precision, dy double precision, dz double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_expand(box public.box3d, dx double precision, dy double precision, dz double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_expand(box public.box3d, dx double precision, dy double precision, dz double precision) TO anon;
GRANT ALL ON FUNCTION public.st_expand(box public.box3d, dx double precision, dy double precision, dz double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_expand(box public.box3d, dx double precision, dy double precision, dz double precision) TO service_role;


--
-- Name: FUNCTION st_expand(geom public.geometry, dx double precision, dy double precision, dz double precision, dm double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_expand(geom public.geometry, dx double precision, dy double precision, dz double precision, dm double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_expand(geom public.geometry, dx double precision, dy double precision, dz double precision, dm double precision) TO anon;
GRANT ALL ON FUNCTION public.st_expand(geom public.geometry, dx double precision, dy double precision, dz double precision, dm double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_expand(geom public.geometry, dx double precision, dy double precision, dz double precision, dm double precision) TO service_role;


--
-- Name: FUNCTION st_exteriorring(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_exteriorring(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_exteriorring(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_exteriorring(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_exteriorring(public.geometry) TO service_role;


--
-- Name: FUNCTION st_filterbym(public.geometry, double precision, double precision, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_filterbym(public.geometry, double precision, double precision, boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_filterbym(public.geometry, double precision, double precision, boolean) TO anon;
GRANT ALL ON FUNCTION public.st_filterbym(public.geometry, double precision, double precision, boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_filterbym(public.geometry, double precision, double precision, boolean) TO service_role;


--
-- Name: FUNCTION st_findextent(text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_findextent(text, text) TO postgres;
GRANT ALL ON FUNCTION public.st_findextent(text, text) TO anon;
GRANT ALL ON FUNCTION public.st_findextent(text, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_findextent(text, text) TO service_role;


--
-- Name: FUNCTION st_findextent(text, text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_findextent(text, text, text) TO postgres;
GRANT ALL ON FUNCTION public.st_findextent(text, text, text) TO anon;
GRANT ALL ON FUNCTION public.st_findextent(text, text, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_findextent(text, text, text) TO service_role;


--
-- Name: FUNCTION st_flipcoordinates(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_flipcoordinates(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_flipcoordinates(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_flipcoordinates(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_flipcoordinates(public.geometry) TO service_role;


--
-- Name: FUNCTION st_force2d(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_force2d(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_force2d(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_force2d(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_force2d(public.geometry) TO service_role;


--
-- Name: FUNCTION st_force3d(geom public.geometry, zvalue double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_force3d(geom public.geometry, zvalue double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_force3d(geom public.geometry, zvalue double precision) TO anon;
GRANT ALL ON FUNCTION public.st_force3d(geom public.geometry, zvalue double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_force3d(geom public.geometry, zvalue double precision) TO service_role;


--
-- Name: FUNCTION st_force3dm(geom public.geometry, mvalue double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_force3dm(geom public.geometry, mvalue double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_force3dm(geom public.geometry, mvalue double precision) TO anon;
GRANT ALL ON FUNCTION public.st_force3dm(geom public.geometry, mvalue double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_force3dm(geom public.geometry, mvalue double precision) TO service_role;


--
-- Name: FUNCTION st_force3dz(geom public.geometry, zvalue double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_force3dz(geom public.geometry, zvalue double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_force3dz(geom public.geometry, zvalue double precision) TO anon;
GRANT ALL ON FUNCTION public.st_force3dz(geom public.geometry, zvalue double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_force3dz(geom public.geometry, zvalue double precision) TO service_role;


--
-- Name: FUNCTION st_force4d(geom public.geometry, zvalue double precision, mvalue double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_force4d(geom public.geometry, zvalue double precision, mvalue double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_force4d(geom public.geometry, zvalue double precision, mvalue double precision) TO anon;
GRANT ALL ON FUNCTION public.st_force4d(geom public.geometry, zvalue double precision, mvalue double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_force4d(geom public.geometry, zvalue double precision, mvalue double precision) TO service_role;


--
-- Name: FUNCTION st_forcecollection(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_forcecollection(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_forcecollection(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_forcecollection(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_forcecollection(public.geometry) TO service_role;


--
-- Name: FUNCTION st_forcecurve(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_forcecurve(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_forcecurve(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_forcecurve(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_forcecurve(public.geometry) TO service_role;


--
-- Name: FUNCTION st_forcepolygonccw(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_forcepolygonccw(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_forcepolygonccw(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_forcepolygonccw(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_forcepolygonccw(public.geometry) TO service_role;


--
-- Name: FUNCTION st_forcepolygoncw(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_forcepolygoncw(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_forcepolygoncw(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_forcepolygoncw(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_forcepolygoncw(public.geometry) TO service_role;


--
-- Name: FUNCTION st_forcerhr(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_forcerhr(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_forcerhr(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_forcerhr(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_forcerhr(public.geometry) TO service_role;


--
-- Name: FUNCTION st_forcesfs(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_forcesfs(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_forcesfs(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_forcesfs(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_forcesfs(public.geometry) TO service_role;


--
-- Name: FUNCTION st_forcesfs(public.geometry, version text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_forcesfs(public.geometry, version text) TO postgres;
GRANT ALL ON FUNCTION public.st_forcesfs(public.geometry, version text) TO anon;
GRANT ALL ON FUNCTION public.st_forcesfs(public.geometry, version text) TO authenticated;
GRANT ALL ON FUNCTION public.st_forcesfs(public.geometry, version text) TO service_role;


--
-- Name: FUNCTION st_frechetdistance(geom1 public.geometry, geom2 public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_frechetdistance(geom1 public.geometry, geom2 public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_frechetdistance(geom1 public.geometry, geom2 public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_frechetdistance(geom1 public.geometry, geom2 public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_frechetdistance(geom1 public.geometry, geom2 public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_fromflatgeobuf(anyelement, bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_fromflatgeobuf(anyelement, bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_fromflatgeobuf(anyelement, bytea) TO anon;
GRANT ALL ON FUNCTION public.st_fromflatgeobuf(anyelement, bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_fromflatgeobuf(anyelement, bytea) TO service_role;


--
-- Name: FUNCTION st_fromflatgeobuftotable(text, text, bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_fromflatgeobuftotable(text, text, bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_fromflatgeobuftotable(text, text, bytea) TO anon;
GRANT ALL ON FUNCTION public.st_fromflatgeobuftotable(text, text, bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_fromflatgeobuftotable(text, text, bytea) TO service_role;


--
-- Name: FUNCTION st_generatepoints(area public.geometry, npoints integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_generatepoints(area public.geometry, npoints integer) TO postgres;
GRANT ALL ON FUNCTION public.st_generatepoints(area public.geometry, npoints integer) TO anon;
GRANT ALL ON FUNCTION public.st_generatepoints(area public.geometry, npoints integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_generatepoints(area public.geometry, npoints integer) TO service_role;


--
-- Name: FUNCTION st_generatepoints(area public.geometry, npoints integer, seed integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_generatepoints(area public.geometry, npoints integer, seed integer) TO postgres;
GRANT ALL ON FUNCTION public.st_generatepoints(area public.geometry, npoints integer, seed integer) TO anon;
GRANT ALL ON FUNCTION public.st_generatepoints(area public.geometry, npoints integer, seed integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_generatepoints(area public.geometry, npoints integer, seed integer) TO service_role;


--
-- Name: FUNCTION st_geogfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geogfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_geogfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_geogfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_geogfromtext(text) TO service_role;


--
-- Name: FUNCTION st_geogfromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geogfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_geogfromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_geogfromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_geogfromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_geographyfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geographyfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_geographyfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_geographyfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_geographyfromtext(text) TO service_role;


--
-- Name: FUNCTION st_geohash(geog public.geography, maxchars integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geohash(geog public.geography, maxchars integer) TO postgres;
GRANT ALL ON FUNCTION public.st_geohash(geog public.geography, maxchars integer) TO anon;
GRANT ALL ON FUNCTION public.st_geohash(geog public.geography, maxchars integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_geohash(geog public.geography, maxchars integer) TO service_role;


--
-- Name: FUNCTION st_geohash(geom public.geometry, maxchars integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geohash(geom public.geometry, maxchars integer) TO postgres;
GRANT ALL ON FUNCTION public.st_geohash(geom public.geometry, maxchars integer) TO anon;
GRANT ALL ON FUNCTION public.st_geohash(geom public.geometry, maxchars integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_geohash(geom public.geometry, maxchars integer) TO service_role;


--
-- Name: FUNCTION st_geomcollfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomcollfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_geomcollfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_geomcollfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomcollfromtext(text) TO service_role;


--
-- Name: FUNCTION st_geomcollfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomcollfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_geomcollfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_geomcollfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomcollfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_geomcollfromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomcollfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_geomcollfromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_geomcollfromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomcollfromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_geomcollfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomcollfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_geomcollfromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_geomcollfromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomcollfromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_geometricmedian(g public.geometry, tolerance double precision, max_iter integer, fail_if_not_converged boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geometricmedian(g public.geometry, tolerance double precision, max_iter integer, fail_if_not_converged boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_geometricmedian(g public.geometry, tolerance double precision, max_iter integer, fail_if_not_converged boolean) TO anon;
GRANT ALL ON FUNCTION public.st_geometricmedian(g public.geometry, tolerance double precision, max_iter integer, fail_if_not_converged boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_geometricmedian(g public.geometry, tolerance double precision, max_iter integer, fail_if_not_converged boolean) TO service_role;


--
-- Name: FUNCTION st_geometryfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geometryfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_geometryfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_geometryfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_geometryfromtext(text) TO service_role;


--
-- Name: FUNCTION st_geometryfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geometryfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_geometryfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_geometryfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_geometryfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_geometryn(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geometryn(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_geometryn(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_geometryn(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_geometryn(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_geometrytype(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geometrytype(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_geometrytype(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_geometrytype(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_geometrytype(public.geometry) TO service_role;


--
-- Name: FUNCTION st_geomfromewkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromewkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromewkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromewkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromewkb(bytea) TO service_role;


--
-- Name: FUNCTION st_geomfromewkt(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromewkt(text) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromewkt(text) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromewkt(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromewkt(text) TO service_role;


--
-- Name: FUNCTION st_geomfromgeohash(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromgeohash(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromgeohash(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromgeohash(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromgeohash(text, integer) TO service_role;


--
-- Name: FUNCTION st_geomfromgeojson(json); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromgeojson(json) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromgeojson(json) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromgeojson(json) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromgeojson(json) TO service_role;


--
-- Name: FUNCTION st_geomfromgeojson(jsonb); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromgeojson(jsonb) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromgeojson(jsonb) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromgeojson(jsonb) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromgeojson(jsonb) TO service_role;


--
-- Name: FUNCTION st_geomfromgeojson(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromgeojson(text) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromgeojson(text) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromgeojson(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromgeojson(text) TO service_role;


--
-- Name: FUNCTION st_geomfromgml(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromgml(text) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromgml(text) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromgml(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromgml(text) TO service_role;


--
-- Name: FUNCTION st_geomfromgml(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromgml(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromgml(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromgml(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromgml(text, integer) TO service_role;


--
-- Name: FUNCTION st_geomfromkml(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromkml(text) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromkml(text) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromkml(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromkml(text) TO service_role;


--
-- Name: FUNCTION st_geomfrommarc21(marc21xml text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfrommarc21(marc21xml text) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfrommarc21(marc21xml text) TO anon;
GRANT ALL ON FUNCTION public.st_geomfrommarc21(marc21xml text) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfrommarc21(marc21xml text) TO service_role;


--
-- Name: FUNCTION st_geomfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromtext(text) TO service_role;


--
-- Name: FUNCTION st_geomfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_geomfromtwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromtwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromtwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromtwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromtwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_geomfromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_geomfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_geomfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_geomfromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_geomfromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_geomfromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_gmltosql(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_gmltosql(text) TO postgres;
GRANT ALL ON FUNCTION public.st_gmltosql(text) TO anon;
GRANT ALL ON FUNCTION public.st_gmltosql(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_gmltosql(text) TO service_role;


--
-- Name: FUNCTION st_gmltosql(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_gmltosql(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_gmltosql(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_gmltosql(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_gmltosql(text, integer) TO service_role;


--
-- Name: FUNCTION st_hasarc(geometry public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_hasarc(geometry public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_hasarc(geometry public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_hasarc(geometry public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_hasarc(geometry public.geometry) TO service_role;


--
-- Name: FUNCTION st_hausdorffdistance(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_hausdorffdistance(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_hausdorffdistance(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_hausdorffdistance(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_hausdorffdistance(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_hausdorffdistance(geom1 public.geometry, geom2 public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_hausdorffdistance(geom1 public.geometry, geom2 public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_hausdorffdistance(geom1 public.geometry, geom2 public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_hausdorffdistance(geom1 public.geometry, geom2 public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_hausdorffdistance(geom1 public.geometry, geom2 public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_hexagon(size double precision, cell_i integer, cell_j integer, origin public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_hexagon(size double precision, cell_i integer, cell_j integer, origin public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_hexagon(size double precision, cell_i integer, cell_j integer, origin public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_hexagon(size double precision, cell_i integer, cell_j integer, origin public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_hexagon(size double precision, cell_i integer, cell_j integer, origin public.geometry) TO service_role;


--
-- Name: FUNCTION st_hexagongrid(size double precision, bounds public.geometry, OUT geom public.geometry, OUT i integer, OUT j integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_hexagongrid(size double precision, bounds public.geometry, OUT geom public.geometry, OUT i integer, OUT j integer) TO postgres;
GRANT ALL ON FUNCTION public.st_hexagongrid(size double precision, bounds public.geometry, OUT geom public.geometry, OUT i integer, OUT j integer) TO anon;
GRANT ALL ON FUNCTION public.st_hexagongrid(size double precision, bounds public.geometry, OUT geom public.geometry, OUT i integer, OUT j integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_hexagongrid(size double precision, bounds public.geometry, OUT geom public.geometry, OUT i integer, OUT j integer) TO service_role;


--
-- Name: FUNCTION st_interiorringn(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_interiorringn(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_interiorringn(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_interiorringn(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_interiorringn(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_interpolatepoint(line public.geometry, point public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_interpolatepoint(line public.geometry, point public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_interpolatepoint(line public.geometry, point public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_interpolatepoint(line public.geometry, point public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_interpolatepoint(line public.geometry, point public.geometry) TO service_role;


--
-- Name: FUNCTION st_intersection(text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_intersection(text, text) TO postgres;
GRANT ALL ON FUNCTION public.st_intersection(text, text) TO anon;
GRANT ALL ON FUNCTION public.st_intersection(text, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_intersection(text, text) TO service_role;


--
-- Name: FUNCTION st_intersection(public.geography, public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_intersection(public.geography, public.geography) TO postgres;
GRANT ALL ON FUNCTION public.st_intersection(public.geography, public.geography) TO anon;
GRANT ALL ON FUNCTION public.st_intersection(public.geography, public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.st_intersection(public.geography, public.geography) TO service_role;


--
-- Name: FUNCTION st_intersection(geom1 public.geometry, geom2 public.geometry, gridsize double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_intersection(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_intersection(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO anon;
GRANT ALL ON FUNCTION public.st_intersection(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_intersection(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO service_role;


--
-- Name: FUNCTION st_intersects(text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_intersects(text, text) TO postgres;
GRANT ALL ON FUNCTION public.st_intersects(text, text) TO anon;
GRANT ALL ON FUNCTION public.st_intersects(text, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_intersects(text, text) TO service_role;


--
-- Name: FUNCTION st_intersects(geog1 public.geography, geog2 public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_intersects(geog1 public.geography, geog2 public.geography) TO postgres;
GRANT ALL ON FUNCTION public.st_intersects(geog1 public.geography, geog2 public.geography) TO anon;
GRANT ALL ON FUNCTION public.st_intersects(geog1 public.geography, geog2 public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.st_intersects(geog1 public.geography, geog2 public.geography) TO service_role;


--
-- Name: FUNCTION st_intersects(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_intersects(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_intersects(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_intersects(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_intersects(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_isclosed(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_isclosed(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_isclosed(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_isclosed(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_isclosed(public.geometry) TO service_role;


--
-- Name: FUNCTION st_iscollection(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_iscollection(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_iscollection(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_iscollection(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_iscollection(public.geometry) TO service_role;


--
-- Name: FUNCTION st_isempty(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_isempty(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_isempty(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_isempty(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_isempty(public.geometry) TO service_role;


--
-- Name: FUNCTION st_ispolygonccw(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_ispolygonccw(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_ispolygonccw(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_ispolygonccw(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_ispolygonccw(public.geometry) TO service_role;


--
-- Name: FUNCTION st_ispolygoncw(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_ispolygoncw(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_ispolygoncw(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_ispolygoncw(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_ispolygoncw(public.geometry) TO service_role;


--
-- Name: FUNCTION st_isring(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_isring(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_isring(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_isring(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_isring(public.geometry) TO service_role;


--
-- Name: FUNCTION st_issimple(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_issimple(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_issimple(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_issimple(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_issimple(public.geometry) TO service_role;


--
-- Name: FUNCTION st_isvalid(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_isvalid(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_isvalid(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_isvalid(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_isvalid(public.geometry) TO service_role;


--
-- Name: FUNCTION st_isvalid(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_isvalid(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_isvalid(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_isvalid(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_isvalid(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_isvaliddetail(geom public.geometry, flags integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_isvaliddetail(geom public.geometry, flags integer) TO postgres;
GRANT ALL ON FUNCTION public.st_isvaliddetail(geom public.geometry, flags integer) TO anon;
GRANT ALL ON FUNCTION public.st_isvaliddetail(geom public.geometry, flags integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_isvaliddetail(geom public.geometry, flags integer) TO service_role;


--
-- Name: FUNCTION st_isvalidreason(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_isvalidreason(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_isvalidreason(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_isvalidreason(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_isvalidreason(public.geometry) TO service_role;


--
-- Name: FUNCTION st_isvalidreason(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_isvalidreason(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_isvalidreason(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_isvalidreason(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_isvalidreason(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_isvalidtrajectory(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_isvalidtrajectory(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_isvalidtrajectory(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_isvalidtrajectory(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_isvalidtrajectory(public.geometry) TO service_role;


--
-- Name: FUNCTION st_length(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_length(text) TO postgres;
GRANT ALL ON FUNCTION public.st_length(text) TO anon;
GRANT ALL ON FUNCTION public.st_length(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_length(text) TO service_role;


--
-- Name: FUNCTION st_length(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_length(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_length(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_length(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_length(public.geometry) TO service_role;


--
-- Name: FUNCTION st_length(geog public.geography, use_spheroid boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_length(geog public.geography, use_spheroid boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_length(geog public.geography, use_spheroid boolean) TO anon;
GRANT ALL ON FUNCTION public.st_length(geog public.geography, use_spheroid boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_length(geog public.geography, use_spheroid boolean) TO service_role;


--
-- Name: FUNCTION st_length2d(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_length2d(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_length2d(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_length2d(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_length2d(public.geometry) TO service_role;


--
-- Name: FUNCTION st_length2dspheroid(public.geometry, public.spheroid); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_length2dspheroid(public.geometry, public.spheroid) TO postgres;
GRANT ALL ON FUNCTION public.st_length2dspheroid(public.geometry, public.spheroid) TO anon;
GRANT ALL ON FUNCTION public.st_length2dspheroid(public.geometry, public.spheroid) TO authenticated;
GRANT ALL ON FUNCTION public.st_length2dspheroid(public.geometry, public.spheroid) TO service_role;


--
-- Name: FUNCTION st_lengthspheroid(public.geometry, public.spheroid); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_lengthspheroid(public.geometry, public.spheroid) TO postgres;
GRANT ALL ON FUNCTION public.st_lengthspheroid(public.geometry, public.spheroid) TO anon;
GRANT ALL ON FUNCTION public.st_lengthspheroid(public.geometry, public.spheroid) TO authenticated;
GRANT ALL ON FUNCTION public.st_lengthspheroid(public.geometry, public.spheroid) TO service_role;


--
-- Name: FUNCTION st_letters(letters text, font json); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_letters(letters text, font json) TO postgres;
GRANT ALL ON FUNCTION public.st_letters(letters text, font json) TO anon;
GRANT ALL ON FUNCTION public.st_letters(letters text, font json) TO authenticated;
GRANT ALL ON FUNCTION public.st_letters(letters text, font json) TO service_role;


--
-- Name: FUNCTION st_linecrossingdirection(line1 public.geometry, line2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linecrossingdirection(line1 public.geometry, line2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_linecrossingdirection(line1 public.geometry, line2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_linecrossingdirection(line1 public.geometry, line2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_linecrossingdirection(line1 public.geometry, line2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_linefromencodedpolyline(txtin text, nprecision integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linefromencodedpolyline(txtin text, nprecision integer) TO postgres;
GRANT ALL ON FUNCTION public.st_linefromencodedpolyline(txtin text, nprecision integer) TO anon;
GRANT ALL ON FUNCTION public.st_linefromencodedpolyline(txtin text, nprecision integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_linefromencodedpolyline(txtin text, nprecision integer) TO service_role;


--
-- Name: FUNCTION st_linefrommultipoint(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linefrommultipoint(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_linefrommultipoint(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_linefrommultipoint(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_linefrommultipoint(public.geometry) TO service_role;


--
-- Name: FUNCTION st_linefromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linefromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_linefromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_linefromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_linefromtext(text) TO service_role;


--
-- Name: FUNCTION st_linefromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linefromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_linefromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_linefromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_linefromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_linefromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linefromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_linefromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_linefromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_linefromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_linefromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linefromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_linefromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_linefromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_linefromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_lineinterpolatepoint(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_lineinterpolatepoint(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_lineinterpolatepoint(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_lineinterpolatepoint(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_lineinterpolatepoint(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_lineinterpolatepoints(public.geometry, double precision, repeat boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_lineinterpolatepoints(public.geometry, double precision, repeat boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_lineinterpolatepoints(public.geometry, double precision, repeat boolean) TO anon;
GRANT ALL ON FUNCTION public.st_lineinterpolatepoints(public.geometry, double precision, repeat boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_lineinterpolatepoints(public.geometry, double precision, repeat boolean) TO service_role;


--
-- Name: FUNCTION st_linelocatepoint(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linelocatepoint(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_linelocatepoint(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_linelocatepoint(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_linelocatepoint(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_linemerge(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linemerge(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_linemerge(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_linemerge(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_linemerge(public.geometry) TO service_role;


--
-- Name: FUNCTION st_linemerge(public.geometry, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linemerge(public.geometry, boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_linemerge(public.geometry, boolean) TO anon;
GRANT ALL ON FUNCTION public.st_linemerge(public.geometry, boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_linemerge(public.geometry, boolean) TO service_role;


--
-- Name: FUNCTION st_linestringfromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linestringfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_linestringfromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_linestringfromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_linestringfromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_linestringfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linestringfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_linestringfromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_linestringfromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_linestringfromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_linesubstring(public.geometry, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linesubstring(public.geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_linesubstring(public.geometry, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_linesubstring(public.geometry, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_linesubstring(public.geometry, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_linetocurve(geometry public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_linetocurve(geometry public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_linetocurve(geometry public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_linetocurve(geometry public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_linetocurve(geometry public.geometry) TO service_role;


--
-- Name: FUNCTION st_locatealong(geometry public.geometry, measure double precision, leftrightoffset double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_locatealong(geometry public.geometry, measure double precision, leftrightoffset double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_locatealong(geometry public.geometry, measure double precision, leftrightoffset double precision) TO anon;
GRANT ALL ON FUNCTION public.st_locatealong(geometry public.geometry, measure double precision, leftrightoffset double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_locatealong(geometry public.geometry, measure double precision, leftrightoffset double precision) TO service_role;


--
-- Name: FUNCTION st_locatebetween(geometry public.geometry, frommeasure double precision, tomeasure double precision, leftrightoffset double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_locatebetween(geometry public.geometry, frommeasure double precision, tomeasure double precision, leftrightoffset double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_locatebetween(geometry public.geometry, frommeasure double precision, tomeasure double precision, leftrightoffset double precision) TO anon;
GRANT ALL ON FUNCTION public.st_locatebetween(geometry public.geometry, frommeasure double precision, tomeasure double precision, leftrightoffset double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_locatebetween(geometry public.geometry, frommeasure double precision, tomeasure double precision, leftrightoffset double precision) TO service_role;


--
-- Name: FUNCTION st_locatebetweenelevations(geometry public.geometry, fromelevation double precision, toelevation double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_locatebetweenelevations(geometry public.geometry, fromelevation double precision, toelevation double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_locatebetweenelevations(geometry public.geometry, fromelevation double precision, toelevation double precision) TO anon;
GRANT ALL ON FUNCTION public.st_locatebetweenelevations(geometry public.geometry, fromelevation double precision, toelevation double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_locatebetweenelevations(geometry public.geometry, fromelevation double precision, toelevation double precision) TO service_role;


--
-- Name: FUNCTION st_longestline(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_longestline(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_longestline(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_longestline(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_longestline(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_m(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_m(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_m(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_m(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_m(public.geometry) TO service_role;


--
-- Name: FUNCTION st_makebox2d(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makebox2d(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_makebox2d(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_makebox2d(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_makebox2d(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_makeenvelope(double precision, double precision, double precision, double precision, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makeenvelope(double precision, double precision, double precision, double precision, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_makeenvelope(double precision, double precision, double precision, double precision, integer) TO anon;
GRANT ALL ON FUNCTION public.st_makeenvelope(double precision, double precision, double precision, double precision, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_makeenvelope(double precision, double precision, double precision, double precision, integer) TO service_role;


--
-- Name: FUNCTION st_makeline(public.geometry[]); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makeline(public.geometry[]) TO postgres;
GRANT ALL ON FUNCTION public.st_makeline(public.geometry[]) TO anon;
GRANT ALL ON FUNCTION public.st_makeline(public.geometry[]) TO authenticated;
GRANT ALL ON FUNCTION public.st_makeline(public.geometry[]) TO service_role;


--
-- Name: FUNCTION st_makeline(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makeline(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_makeline(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_makeline(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_makeline(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_makepoint(double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_makepoint(double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_makepoint(double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_makepoint(double precision, double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_makepointm(double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makepointm(double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_makepointm(double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_makepointm(double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_makepointm(double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_makepolygon(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makepolygon(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_makepolygon(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_makepolygon(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_makepolygon(public.geometry) TO service_role;


--
-- Name: FUNCTION st_makepolygon(public.geometry, public.geometry[]); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makepolygon(public.geometry, public.geometry[]) TO postgres;
GRANT ALL ON FUNCTION public.st_makepolygon(public.geometry, public.geometry[]) TO anon;
GRANT ALL ON FUNCTION public.st_makepolygon(public.geometry, public.geometry[]) TO authenticated;
GRANT ALL ON FUNCTION public.st_makepolygon(public.geometry, public.geometry[]) TO service_role;


--
-- Name: FUNCTION st_makevalid(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makevalid(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_makevalid(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_makevalid(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_makevalid(public.geometry) TO service_role;


--
-- Name: FUNCTION st_makevalid(geom public.geometry, params text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makevalid(geom public.geometry, params text) TO postgres;
GRANT ALL ON FUNCTION public.st_makevalid(geom public.geometry, params text) TO anon;
GRANT ALL ON FUNCTION public.st_makevalid(geom public.geometry, params text) TO authenticated;
GRANT ALL ON FUNCTION public.st_makevalid(geom public.geometry, params text) TO service_role;


--
-- Name: FUNCTION st_maxdistance(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_maxdistance(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_maxdistance(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_maxdistance(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_maxdistance(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_maximuminscribedcircle(public.geometry, OUT center public.geometry, OUT nearest public.geometry, OUT radius double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_maximuminscribedcircle(public.geometry, OUT center public.geometry, OUT nearest public.geometry, OUT radius double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_maximuminscribedcircle(public.geometry, OUT center public.geometry, OUT nearest public.geometry, OUT radius double precision) TO anon;
GRANT ALL ON FUNCTION public.st_maximuminscribedcircle(public.geometry, OUT center public.geometry, OUT nearest public.geometry, OUT radius double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_maximuminscribedcircle(public.geometry, OUT center public.geometry, OUT nearest public.geometry, OUT radius double precision) TO service_role;


--
-- Name: FUNCTION st_memsize(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_memsize(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_memsize(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_memsize(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_memsize(public.geometry) TO service_role;


--
-- Name: FUNCTION st_minimumboundingcircle(inputgeom public.geometry, segs_per_quarter integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_minimumboundingcircle(inputgeom public.geometry, segs_per_quarter integer) TO postgres;
GRANT ALL ON FUNCTION public.st_minimumboundingcircle(inputgeom public.geometry, segs_per_quarter integer) TO anon;
GRANT ALL ON FUNCTION public.st_minimumboundingcircle(inputgeom public.geometry, segs_per_quarter integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_minimumboundingcircle(inputgeom public.geometry, segs_per_quarter integer) TO service_role;


--
-- Name: FUNCTION st_minimumboundingradius(public.geometry, OUT center public.geometry, OUT radius double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_minimumboundingradius(public.geometry, OUT center public.geometry, OUT radius double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_minimumboundingradius(public.geometry, OUT center public.geometry, OUT radius double precision) TO anon;
GRANT ALL ON FUNCTION public.st_minimumboundingradius(public.geometry, OUT center public.geometry, OUT radius double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_minimumboundingradius(public.geometry, OUT center public.geometry, OUT radius double precision) TO service_role;


--
-- Name: FUNCTION st_minimumclearance(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_minimumclearance(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_minimumclearance(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_minimumclearance(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_minimumclearance(public.geometry) TO service_role;


--
-- Name: FUNCTION st_minimumclearanceline(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_minimumclearanceline(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_minimumclearanceline(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_minimumclearanceline(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_minimumclearanceline(public.geometry) TO service_role;


--
-- Name: FUNCTION st_mlinefromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mlinefromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_mlinefromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_mlinefromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_mlinefromtext(text) TO service_role;


--
-- Name: FUNCTION st_mlinefromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mlinefromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_mlinefromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_mlinefromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_mlinefromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_mlinefromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mlinefromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_mlinefromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_mlinefromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_mlinefromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_mlinefromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mlinefromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_mlinefromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_mlinefromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_mlinefromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_mpointfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mpointfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_mpointfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_mpointfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_mpointfromtext(text) TO service_role;


--
-- Name: FUNCTION st_mpointfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mpointfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_mpointfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_mpointfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_mpointfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_mpointfromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mpointfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_mpointfromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_mpointfromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_mpointfromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_mpointfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mpointfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_mpointfromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_mpointfromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_mpointfromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_mpolyfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mpolyfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_mpolyfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_mpolyfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_mpolyfromtext(text) TO service_role;


--
-- Name: FUNCTION st_mpolyfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mpolyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_mpolyfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_mpolyfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_mpolyfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_mpolyfromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mpolyfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_mpolyfromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_mpolyfromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_mpolyfromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_mpolyfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_mpolyfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_mpolyfromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_mpolyfromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_mpolyfromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_multi(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_multi(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_multi(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_multi(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_multi(public.geometry) TO service_role;


--
-- Name: FUNCTION st_multilinefromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_multilinefromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_multilinefromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_multilinefromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_multilinefromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_multilinestringfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_multilinestringfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_multilinestringfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_multilinestringfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_multilinestringfromtext(text) TO service_role;


--
-- Name: FUNCTION st_multilinestringfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_multilinestringfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_multilinestringfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_multilinestringfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_multilinestringfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_multipointfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_multipointfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_multipointfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_multipointfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_multipointfromtext(text) TO service_role;


--
-- Name: FUNCTION st_multipointfromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_multipointfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_multipointfromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_multipointfromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_multipointfromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_multipointfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_multipointfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_multipointfromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_multipointfromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_multipointfromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_multipolyfromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_multipolyfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_multipolyfromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_multipolyfromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_multipolyfromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_multipolyfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_multipolyfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_multipolyfromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_multipolyfromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_multipolyfromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_multipolygonfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_multipolygonfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_multipolygonfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_multipolygonfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_multipolygonfromtext(text) TO service_role;


--
-- Name: FUNCTION st_multipolygonfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_multipolygonfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_multipolygonfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_multipolygonfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_multipolygonfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_ndims(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_ndims(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_ndims(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_ndims(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_ndims(public.geometry) TO service_role;


--
-- Name: FUNCTION st_node(g public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_node(g public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_node(g public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_node(g public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_node(g public.geometry) TO service_role;


--
-- Name: FUNCTION st_normalize(geom public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_normalize(geom public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_normalize(geom public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_normalize(geom public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_normalize(geom public.geometry) TO service_role;


--
-- Name: FUNCTION st_npoints(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_npoints(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_npoints(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_npoints(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_npoints(public.geometry) TO service_role;


--
-- Name: FUNCTION st_nrings(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_nrings(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_nrings(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_nrings(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_nrings(public.geometry) TO service_role;


--
-- Name: FUNCTION st_numgeometries(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_numgeometries(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_numgeometries(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_numgeometries(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_numgeometries(public.geometry) TO service_role;


--
-- Name: FUNCTION st_numinteriorring(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_numinteriorring(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_numinteriorring(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_numinteriorring(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_numinteriorring(public.geometry) TO service_role;


--
-- Name: FUNCTION st_numinteriorrings(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_numinteriorrings(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_numinteriorrings(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_numinteriorrings(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_numinteriorrings(public.geometry) TO service_role;


--
-- Name: FUNCTION st_numpatches(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_numpatches(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_numpatches(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_numpatches(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_numpatches(public.geometry) TO service_role;


--
-- Name: FUNCTION st_numpoints(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_numpoints(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_numpoints(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_numpoints(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_numpoints(public.geometry) TO service_role;


--
-- Name: FUNCTION st_offsetcurve(line public.geometry, distance double precision, params text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_offsetcurve(line public.geometry, distance double precision, params text) TO postgres;
GRANT ALL ON FUNCTION public.st_offsetcurve(line public.geometry, distance double precision, params text) TO anon;
GRANT ALL ON FUNCTION public.st_offsetcurve(line public.geometry, distance double precision, params text) TO authenticated;
GRANT ALL ON FUNCTION public.st_offsetcurve(line public.geometry, distance double precision, params text) TO service_role;


--
-- Name: FUNCTION st_orderingequals(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_orderingequals(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_orderingequals(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_orderingequals(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_orderingequals(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_orientedenvelope(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_orientedenvelope(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_orientedenvelope(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_orientedenvelope(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_orientedenvelope(public.geometry) TO service_role;


--
-- Name: FUNCTION st_overlaps(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_overlaps(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_overlaps(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_overlaps(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_overlaps(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_patchn(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_patchn(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_patchn(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_patchn(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_patchn(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_perimeter(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_perimeter(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_perimeter(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_perimeter(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_perimeter(public.geometry) TO service_role;


--
-- Name: FUNCTION st_perimeter(geog public.geography, use_spheroid boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_perimeter(geog public.geography, use_spheroid boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_perimeter(geog public.geography, use_spheroid boolean) TO anon;
GRANT ALL ON FUNCTION public.st_perimeter(geog public.geography, use_spheroid boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_perimeter(geog public.geography, use_spheroid boolean) TO service_role;


--
-- Name: FUNCTION st_perimeter2d(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_perimeter2d(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_perimeter2d(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_perimeter2d(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_perimeter2d(public.geometry) TO service_role;


--
-- Name: FUNCTION st_point(double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_point(double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_point(double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_point(double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_point(double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_point(double precision, double precision, srid integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_point(double precision, double precision, srid integer) TO postgres;
GRANT ALL ON FUNCTION public.st_point(double precision, double precision, srid integer) TO anon;
GRANT ALL ON FUNCTION public.st_point(double precision, double precision, srid integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_point(double precision, double precision, srid integer) TO service_role;


--
-- Name: FUNCTION st_pointfromgeohash(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_pointfromgeohash(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_pointfromgeohash(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_pointfromgeohash(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_pointfromgeohash(text, integer) TO service_role;


--
-- Name: FUNCTION st_pointfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_pointfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_pointfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_pointfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_pointfromtext(text) TO service_role;


--
-- Name: FUNCTION st_pointfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_pointfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_pointfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_pointfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_pointfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_pointfromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_pointfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_pointfromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_pointfromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_pointfromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_pointfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_pointfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_pointfromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_pointfromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_pointfromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_pointinsidecircle(public.geometry, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_pointinsidecircle(public.geometry, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_pointinsidecircle(public.geometry, double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_pointinsidecircle(public.geometry, double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_pointinsidecircle(public.geometry, double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_pointm(xcoordinate double precision, ycoordinate double precision, mcoordinate double precision, srid integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_pointm(xcoordinate double precision, ycoordinate double precision, mcoordinate double precision, srid integer) TO postgres;
GRANT ALL ON FUNCTION public.st_pointm(xcoordinate double precision, ycoordinate double precision, mcoordinate double precision, srid integer) TO anon;
GRANT ALL ON FUNCTION public.st_pointm(xcoordinate double precision, ycoordinate double precision, mcoordinate double precision, srid integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_pointm(xcoordinate double precision, ycoordinate double precision, mcoordinate double precision, srid integer) TO service_role;


--
-- Name: FUNCTION st_pointn(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_pointn(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_pointn(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_pointn(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_pointn(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_pointonsurface(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_pointonsurface(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_pointonsurface(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_pointonsurface(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_pointonsurface(public.geometry) TO service_role;


--
-- Name: FUNCTION st_points(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_points(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_points(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_points(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_points(public.geometry) TO service_role;


--
-- Name: FUNCTION st_pointz(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, srid integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_pointz(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, srid integer) TO postgres;
GRANT ALL ON FUNCTION public.st_pointz(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, srid integer) TO anon;
GRANT ALL ON FUNCTION public.st_pointz(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, srid integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_pointz(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, srid integer) TO service_role;


--
-- Name: FUNCTION st_pointzm(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, mcoordinate double precision, srid integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_pointzm(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, mcoordinate double precision, srid integer) TO postgres;
GRANT ALL ON FUNCTION public.st_pointzm(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, mcoordinate double precision, srid integer) TO anon;
GRANT ALL ON FUNCTION public.st_pointzm(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, mcoordinate double precision, srid integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_pointzm(xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, mcoordinate double precision, srid integer) TO service_role;


--
-- Name: FUNCTION st_polyfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_polyfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_polyfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_polyfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_polyfromtext(text) TO service_role;


--
-- Name: FUNCTION st_polyfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_polyfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_polyfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_polyfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_polyfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_polyfromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_polyfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_polyfromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_polyfromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_polyfromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_polyfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_polyfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_polyfromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_polyfromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_polyfromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_polygon(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_polygon(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_polygon(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_polygon(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_polygon(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_polygonfromtext(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_polygonfromtext(text) TO postgres;
GRANT ALL ON FUNCTION public.st_polygonfromtext(text) TO anon;
GRANT ALL ON FUNCTION public.st_polygonfromtext(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_polygonfromtext(text) TO service_role;


--
-- Name: FUNCTION st_polygonfromtext(text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_polygonfromtext(text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_polygonfromtext(text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_polygonfromtext(text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_polygonfromtext(text, integer) TO service_role;


--
-- Name: FUNCTION st_polygonfromwkb(bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_polygonfromwkb(bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_polygonfromwkb(bytea) TO anon;
GRANT ALL ON FUNCTION public.st_polygonfromwkb(bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_polygonfromwkb(bytea) TO service_role;


--
-- Name: FUNCTION st_polygonfromwkb(bytea, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_polygonfromwkb(bytea, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_polygonfromwkb(bytea, integer) TO anon;
GRANT ALL ON FUNCTION public.st_polygonfromwkb(bytea, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_polygonfromwkb(bytea, integer) TO service_role;


--
-- Name: FUNCTION st_polygonize(public.geometry[]); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_polygonize(public.geometry[]) TO postgres;
GRANT ALL ON FUNCTION public.st_polygonize(public.geometry[]) TO anon;
GRANT ALL ON FUNCTION public.st_polygonize(public.geometry[]) TO authenticated;
GRANT ALL ON FUNCTION public.st_polygonize(public.geometry[]) TO service_role;


--
-- Name: FUNCTION st_project(geog public.geography, distance double precision, azimuth double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_project(geog public.geography, distance double precision, azimuth double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_project(geog public.geography, distance double precision, azimuth double precision) TO anon;
GRANT ALL ON FUNCTION public.st_project(geog public.geography, distance double precision, azimuth double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_project(geog public.geography, distance double precision, azimuth double precision) TO service_role;


--
-- Name: FUNCTION st_quantizecoordinates(g public.geometry, prec_x integer, prec_y integer, prec_z integer, prec_m integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_quantizecoordinates(g public.geometry, prec_x integer, prec_y integer, prec_z integer, prec_m integer) TO postgres;
GRANT ALL ON FUNCTION public.st_quantizecoordinates(g public.geometry, prec_x integer, prec_y integer, prec_z integer, prec_m integer) TO anon;
GRANT ALL ON FUNCTION public.st_quantizecoordinates(g public.geometry, prec_x integer, prec_y integer, prec_z integer, prec_m integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_quantizecoordinates(g public.geometry, prec_x integer, prec_y integer, prec_z integer, prec_m integer) TO service_role;


--
-- Name: FUNCTION st_reduceprecision(geom public.geometry, gridsize double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_reduceprecision(geom public.geometry, gridsize double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_reduceprecision(geom public.geometry, gridsize double precision) TO anon;
GRANT ALL ON FUNCTION public.st_reduceprecision(geom public.geometry, gridsize double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_reduceprecision(geom public.geometry, gridsize double precision) TO service_role;


--
-- Name: FUNCTION st_relate(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_relate(geom1 public.geometry, geom2 public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_relate(geom1 public.geometry, geom2 public.geometry, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry, text) TO postgres;
GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry, text) TO anon;
GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_relate(geom1 public.geometry, geom2 public.geometry, text) TO service_role;


--
-- Name: FUNCTION st_relatematch(text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_relatematch(text, text) TO postgres;
GRANT ALL ON FUNCTION public.st_relatematch(text, text) TO anon;
GRANT ALL ON FUNCTION public.st_relatematch(text, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_relatematch(text, text) TO service_role;


--
-- Name: FUNCTION st_removepoint(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_removepoint(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_removepoint(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_removepoint(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_removepoint(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_removerepeatedpoints(geom public.geometry, tolerance double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_removerepeatedpoints(geom public.geometry, tolerance double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_removerepeatedpoints(geom public.geometry, tolerance double precision) TO anon;
GRANT ALL ON FUNCTION public.st_removerepeatedpoints(geom public.geometry, tolerance double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_removerepeatedpoints(geom public.geometry, tolerance double precision) TO service_role;


--
-- Name: FUNCTION st_reverse(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_reverse(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_reverse(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_reverse(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_reverse(public.geometry) TO service_role;


--
-- Name: FUNCTION st_rotate(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_rotate(public.geometry, double precision, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision, public.geometry) TO service_role;


--
-- Name: FUNCTION st_rotate(public.geometry, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_rotate(public.geometry, double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_rotatex(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_rotatex(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_rotatex(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_rotatex(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_rotatex(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_rotatey(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_rotatey(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_rotatey(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_rotatey(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_rotatey(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_rotatez(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_rotatez(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_rotatez(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_rotatez(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_rotatez(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_scale(public.geometry, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_scale(public.geometry, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, public.geometry) TO service_role;


--
-- Name: FUNCTION st_scale(public.geometry, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_scale(public.geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_scale(public.geometry, public.geometry, origin public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_scale(public.geometry, public.geometry, origin public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, public.geometry, origin public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, public.geometry, origin public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, public.geometry, origin public.geometry) TO service_role;


--
-- Name: FUNCTION st_scale(public.geometry, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_scale(public.geometry, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_scale(public.geometry, double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_scroll(public.geometry, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_scroll(public.geometry, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_scroll(public.geometry, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_scroll(public.geometry, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_scroll(public.geometry, public.geometry) TO service_role;


--
-- Name: FUNCTION st_segmentize(geog public.geography, max_segment_length double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_segmentize(geog public.geography, max_segment_length double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_segmentize(geog public.geography, max_segment_length double precision) TO anon;
GRANT ALL ON FUNCTION public.st_segmentize(geog public.geography, max_segment_length double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_segmentize(geog public.geography, max_segment_length double precision) TO service_role;


--
-- Name: FUNCTION st_segmentize(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_segmentize(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_segmentize(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_segmentize(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_segmentize(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_seteffectivearea(public.geometry, double precision, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_seteffectivearea(public.geometry, double precision, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_seteffectivearea(public.geometry, double precision, integer) TO anon;
GRANT ALL ON FUNCTION public.st_seteffectivearea(public.geometry, double precision, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_seteffectivearea(public.geometry, double precision, integer) TO service_role;


--
-- Name: FUNCTION st_setpoint(public.geometry, integer, public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_setpoint(public.geometry, integer, public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_setpoint(public.geometry, integer, public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_setpoint(public.geometry, integer, public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_setpoint(public.geometry, integer, public.geometry) TO service_role;


--
-- Name: FUNCTION st_setsrid(geog public.geography, srid integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_setsrid(geog public.geography, srid integer) TO postgres;
GRANT ALL ON FUNCTION public.st_setsrid(geog public.geography, srid integer) TO anon;
GRANT ALL ON FUNCTION public.st_setsrid(geog public.geography, srid integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_setsrid(geog public.geography, srid integer) TO service_role;


--
-- Name: FUNCTION st_setsrid(geom public.geometry, srid integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_setsrid(geom public.geometry, srid integer) TO postgres;
GRANT ALL ON FUNCTION public.st_setsrid(geom public.geometry, srid integer) TO anon;
GRANT ALL ON FUNCTION public.st_setsrid(geom public.geometry, srid integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_setsrid(geom public.geometry, srid integer) TO service_role;


--
-- Name: FUNCTION st_sharedpaths(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_sharedpaths(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_sharedpaths(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_sharedpaths(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_sharedpaths(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_shiftlongitude(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_shiftlongitude(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_shiftlongitude(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_shiftlongitude(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_shiftlongitude(public.geometry) TO service_role;


--
-- Name: FUNCTION st_shortestline(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_shortestline(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_shortestline(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_shortestline(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_shortestline(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_simplify(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_simplify(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_simplify(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_simplify(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_simplify(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_simplify(public.geometry, double precision, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_simplify(public.geometry, double precision, boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_simplify(public.geometry, double precision, boolean) TO anon;
GRANT ALL ON FUNCTION public.st_simplify(public.geometry, double precision, boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_simplify(public.geometry, double precision, boolean) TO service_role;


--
-- Name: FUNCTION st_simplifypolygonhull(geom public.geometry, vertex_fraction double precision, is_outer boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_simplifypolygonhull(geom public.geometry, vertex_fraction double precision, is_outer boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_simplifypolygonhull(geom public.geometry, vertex_fraction double precision, is_outer boolean) TO anon;
GRANT ALL ON FUNCTION public.st_simplifypolygonhull(geom public.geometry, vertex_fraction double precision, is_outer boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_simplifypolygonhull(geom public.geometry, vertex_fraction double precision, is_outer boolean) TO service_role;


--
-- Name: FUNCTION st_simplifypreservetopology(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_simplifypreservetopology(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_simplifypreservetopology(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_simplifypreservetopology(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_simplifypreservetopology(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_simplifyvw(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_simplifyvw(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_simplifyvw(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_simplifyvw(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_simplifyvw(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_snap(geom1 public.geometry, geom2 public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_snap(geom1 public.geometry, geom2 public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_snap(geom1 public.geometry, geom2 public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_snap(geom1 public.geometry, geom2 public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_snap(geom1 public.geometry, geom2 public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_snaptogrid(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_snaptogrid(public.geometry, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_snaptogrid(public.geometry, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision, double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision, double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_snaptogrid(public.geometry, double precision, double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_snaptogrid(geom1 public.geometry, geom2 public.geometry, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_snaptogrid(geom1 public.geometry, geom2 public.geometry, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_snaptogrid(geom1 public.geometry, geom2 public.geometry, double precision, double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_snaptogrid(geom1 public.geometry, geom2 public.geometry, double precision, double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_snaptogrid(geom1 public.geometry, geom2 public.geometry, double precision, double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_split(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_split(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_split(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_split(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_split(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_square(size double precision, cell_i integer, cell_j integer, origin public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_square(size double precision, cell_i integer, cell_j integer, origin public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_square(size double precision, cell_i integer, cell_j integer, origin public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_square(size double precision, cell_i integer, cell_j integer, origin public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_square(size double precision, cell_i integer, cell_j integer, origin public.geometry) TO service_role;


--
-- Name: FUNCTION st_squaregrid(size double precision, bounds public.geometry, OUT geom public.geometry, OUT i integer, OUT j integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_squaregrid(size double precision, bounds public.geometry, OUT geom public.geometry, OUT i integer, OUT j integer) TO postgres;
GRANT ALL ON FUNCTION public.st_squaregrid(size double precision, bounds public.geometry, OUT geom public.geometry, OUT i integer, OUT j integer) TO anon;
GRANT ALL ON FUNCTION public.st_squaregrid(size double precision, bounds public.geometry, OUT geom public.geometry, OUT i integer, OUT j integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_squaregrid(size double precision, bounds public.geometry, OUT geom public.geometry, OUT i integer, OUT j integer) TO service_role;


--
-- Name: FUNCTION st_srid(geog public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_srid(geog public.geography) TO postgres;
GRANT ALL ON FUNCTION public.st_srid(geog public.geography) TO anon;
GRANT ALL ON FUNCTION public.st_srid(geog public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.st_srid(geog public.geography) TO service_role;


--
-- Name: FUNCTION st_srid(geom public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_srid(geom public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_srid(geom public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_srid(geom public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_srid(geom public.geometry) TO service_role;


--
-- Name: FUNCTION st_startpoint(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_startpoint(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_startpoint(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_startpoint(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_startpoint(public.geometry) TO service_role;


--
-- Name: FUNCTION st_subdivide(geom public.geometry, maxvertices integer, gridsize double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_subdivide(geom public.geometry, maxvertices integer, gridsize double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_subdivide(geom public.geometry, maxvertices integer, gridsize double precision) TO anon;
GRANT ALL ON FUNCTION public.st_subdivide(geom public.geometry, maxvertices integer, gridsize double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_subdivide(geom public.geometry, maxvertices integer, gridsize double precision) TO service_role;


--
-- Name: FUNCTION st_summary(public.geography); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_summary(public.geography) TO postgres;
GRANT ALL ON FUNCTION public.st_summary(public.geography) TO anon;
GRANT ALL ON FUNCTION public.st_summary(public.geography) TO authenticated;
GRANT ALL ON FUNCTION public.st_summary(public.geography) TO service_role;


--
-- Name: FUNCTION st_summary(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_summary(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_summary(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_summary(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_summary(public.geometry) TO service_role;


--
-- Name: FUNCTION st_swapordinates(geom public.geometry, ords cstring); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_swapordinates(geom public.geometry, ords cstring) TO postgres;
GRANT ALL ON FUNCTION public.st_swapordinates(geom public.geometry, ords cstring) TO anon;
GRANT ALL ON FUNCTION public.st_swapordinates(geom public.geometry, ords cstring) TO authenticated;
GRANT ALL ON FUNCTION public.st_swapordinates(geom public.geometry, ords cstring) TO service_role;


--
-- Name: FUNCTION st_symdifference(geom1 public.geometry, geom2 public.geometry, gridsize double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_symdifference(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_symdifference(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO anon;
GRANT ALL ON FUNCTION public.st_symdifference(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_symdifference(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO service_role;


--
-- Name: FUNCTION st_symmetricdifference(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_symmetricdifference(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_symmetricdifference(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_symmetricdifference(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_symmetricdifference(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_tileenvelope(zoom integer, x integer, y integer, bounds public.geometry, margin double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_tileenvelope(zoom integer, x integer, y integer, bounds public.geometry, margin double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_tileenvelope(zoom integer, x integer, y integer, bounds public.geometry, margin double precision) TO anon;
GRANT ALL ON FUNCTION public.st_tileenvelope(zoom integer, x integer, y integer, bounds public.geometry, margin double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_tileenvelope(zoom integer, x integer, y integer, bounds public.geometry, margin double precision) TO service_role;


--
-- Name: FUNCTION st_touches(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_touches(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_touches(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_touches(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_touches(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_transform(public.geometry, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_transform(public.geometry, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_transform(public.geometry, integer) TO anon;
GRANT ALL ON FUNCTION public.st_transform(public.geometry, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_transform(public.geometry, integer) TO service_role;


--
-- Name: FUNCTION st_transform(geom public.geometry, to_proj text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, to_proj text) TO postgres;
GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, to_proj text) TO anon;
GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, to_proj text) TO authenticated;
GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, to_proj text) TO service_role;


--
-- Name: FUNCTION st_transform(geom public.geometry, from_proj text, to_srid integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, from_proj text, to_srid integer) TO postgres;
GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, from_proj text, to_srid integer) TO anon;
GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, from_proj text, to_srid integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, from_proj text, to_srid integer) TO service_role;


--
-- Name: FUNCTION st_transform(geom public.geometry, from_proj text, to_proj text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, from_proj text, to_proj text) TO postgres;
GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, from_proj text, to_proj text) TO anon;
GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, from_proj text, to_proj text) TO authenticated;
GRANT ALL ON FUNCTION public.st_transform(geom public.geometry, from_proj text, to_proj text) TO service_role;


--
-- Name: FUNCTION st_translate(public.geometry, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_translate(public.geometry, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_translate(public.geometry, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_translate(public.geometry, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_translate(public.geometry, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_translate(public.geometry, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_translate(public.geometry, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_translate(public.geometry, double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_translate(public.geometry, double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_translate(public.geometry, double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_transscale(public.geometry, double precision, double precision, double precision, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_transscale(public.geometry, double precision, double precision, double precision, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_transscale(public.geometry, double precision, double precision, double precision, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_transscale(public.geometry, double precision, double precision, double precision, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_transscale(public.geometry, double precision, double precision, double precision, double precision) TO service_role;


--
-- Name: FUNCTION st_triangulatepolygon(g1 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_triangulatepolygon(g1 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_triangulatepolygon(g1 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_triangulatepolygon(g1 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_triangulatepolygon(g1 public.geometry) TO service_role;


--
-- Name: FUNCTION st_unaryunion(public.geometry, gridsize double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_unaryunion(public.geometry, gridsize double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_unaryunion(public.geometry, gridsize double precision) TO anon;
GRANT ALL ON FUNCTION public.st_unaryunion(public.geometry, gridsize double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_unaryunion(public.geometry, gridsize double precision) TO service_role;


--
-- Name: FUNCTION st_union(public.geometry[]); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_union(public.geometry[]) TO postgres;
GRANT ALL ON FUNCTION public.st_union(public.geometry[]) TO anon;
GRANT ALL ON FUNCTION public.st_union(public.geometry[]) TO authenticated;
GRANT ALL ON FUNCTION public.st_union(public.geometry[]) TO service_role;


--
-- Name: FUNCTION st_union(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_union(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_union(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_union(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_union(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_union(geom1 public.geometry, geom2 public.geometry, gridsize double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_union(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_union(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO anon;
GRANT ALL ON FUNCTION public.st_union(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_union(geom1 public.geometry, geom2 public.geometry, gridsize double precision) TO service_role;


--
-- Name: FUNCTION st_voronoilines(g1 public.geometry, tolerance double precision, extend_to public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_voronoilines(g1 public.geometry, tolerance double precision, extend_to public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_voronoilines(g1 public.geometry, tolerance double precision, extend_to public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_voronoilines(g1 public.geometry, tolerance double precision, extend_to public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_voronoilines(g1 public.geometry, tolerance double precision, extend_to public.geometry) TO service_role;


--
-- Name: FUNCTION st_voronoipolygons(g1 public.geometry, tolerance double precision, extend_to public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_voronoipolygons(g1 public.geometry, tolerance double precision, extend_to public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_voronoipolygons(g1 public.geometry, tolerance double precision, extend_to public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_voronoipolygons(g1 public.geometry, tolerance double precision, extend_to public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_voronoipolygons(g1 public.geometry, tolerance double precision, extend_to public.geometry) TO service_role;


--
-- Name: FUNCTION st_within(geom1 public.geometry, geom2 public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_within(geom1 public.geometry, geom2 public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_within(geom1 public.geometry, geom2 public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_within(geom1 public.geometry, geom2 public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_within(geom1 public.geometry, geom2 public.geometry) TO service_role;


--
-- Name: FUNCTION st_wkbtosql(wkb bytea); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_wkbtosql(wkb bytea) TO postgres;
GRANT ALL ON FUNCTION public.st_wkbtosql(wkb bytea) TO anon;
GRANT ALL ON FUNCTION public.st_wkbtosql(wkb bytea) TO authenticated;
GRANT ALL ON FUNCTION public.st_wkbtosql(wkb bytea) TO service_role;


--
-- Name: FUNCTION st_wkttosql(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_wkttosql(text) TO postgres;
GRANT ALL ON FUNCTION public.st_wkttosql(text) TO anon;
GRANT ALL ON FUNCTION public.st_wkttosql(text) TO authenticated;
GRANT ALL ON FUNCTION public.st_wkttosql(text) TO service_role;


--
-- Name: FUNCTION st_wrapx(geom public.geometry, wrap double precision, move double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_wrapx(geom public.geometry, wrap double precision, move double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_wrapx(geom public.geometry, wrap double precision, move double precision) TO anon;
GRANT ALL ON FUNCTION public.st_wrapx(geom public.geometry, wrap double precision, move double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_wrapx(geom public.geometry, wrap double precision, move double precision) TO service_role;


--
-- Name: FUNCTION st_x(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_x(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_x(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_x(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_x(public.geometry) TO service_role;


--
-- Name: FUNCTION st_xmax(public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_xmax(public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.st_xmax(public.box3d) TO anon;
GRANT ALL ON FUNCTION public.st_xmax(public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.st_xmax(public.box3d) TO service_role;


--
-- Name: FUNCTION st_xmin(public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_xmin(public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.st_xmin(public.box3d) TO anon;
GRANT ALL ON FUNCTION public.st_xmin(public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.st_xmin(public.box3d) TO service_role;


--
-- Name: FUNCTION st_y(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_y(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_y(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_y(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_y(public.geometry) TO service_role;


--
-- Name: FUNCTION st_ymax(public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_ymax(public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.st_ymax(public.box3d) TO anon;
GRANT ALL ON FUNCTION public.st_ymax(public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.st_ymax(public.box3d) TO service_role;


--
-- Name: FUNCTION st_ymin(public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_ymin(public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.st_ymin(public.box3d) TO anon;
GRANT ALL ON FUNCTION public.st_ymin(public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.st_ymin(public.box3d) TO service_role;


--
-- Name: FUNCTION st_z(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_z(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_z(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_z(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_z(public.geometry) TO service_role;


--
-- Name: FUNCTION st_zmax(public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_zmax(public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.st_zmax(public.box3d) TO anon;
GRANT ALL ON FUNCTION public.st_zmax(public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.st_zmax(public.box3d) TO service_role;


--
-- Name: FUNCTION st_zmflag(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_zmflag(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_zmflag(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_zmflag(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_zmflag(public.geometry) TO service_role;


--
-- Name: FUNCTION st_zmin(public.box3d); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_zmin(public.box3d) TO postgres;
GRANT ALL ON FUNCTION public.st_zmin(public.box3d) TO anon;
GRANT ALL ON FUNCTION public.st_zmin(public.box3d) TO authenticated;
GRANT ALL ON FUNCTION public.st_zmin(public.box3d) TO service_role;


--
-- Name: FUNCTION unlockrows(text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.unlockrows(text) TO postgres;
GRANT ALL ON FUNCTION public.unlockrows(text) TO anon;
GRANT ALL ON FUNCTION public.unlockrows(text) TO authenticated;
GRANT ALL ON FUNCTION public.unlockrows(text) TO service_role;


--
-- Name: FUNCTION update_updated_at_column(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.update_updated_at_column() TO anon;
GRANT ALL ON FUNCTION public.update_updated_at_column() TO authenticated;
GRANT ALL ON FUNCTION public.update_updated_at_column() TO service_role;


--
-- Name: FUNCTION updategeometrysrid(character varying, character varying, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.updategeometrysrid(character varying, character varying, integer) TO postgres;
GRANT ALL ON FUNCTION public.updategeometrysrid(character varying, character varying, integer) TO anon;
GRANT ALL ON FUNCTION public.updategeometrysrid(character varying, character varying, integer) TO authenticated;
GRANT ALL ON FUNCTION public.updategeometrysrid(character varying, character varying, integer) TO service_role;


--
-- Name: FUNCTION updategeometrysrid(character varying, character varying, character varying, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.updategeometrysrid(character varying, character varying, character varying, integer) TO postgres;
GRANT ALL ON FUNCTION public.updategeometrysrid(character varying, character varying, character varying, integer) TO anon;
GRANT ALL ON FUNCTION public.updategeometrysrid(character varying, character varying, character varying, integer) TO authenticated;
GRANT ALL ON FUNCTION public.updategeometrysrid(character varying, character varying, character varying, integer) TO service_role;


--
-- Name: FUNCTION updategeometrysrid(catalogn_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.updategeometrysrid(catalogn_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer) TO postgres;
GRANT ALL ON FUNCTION public.updategeometrysrid(catalogn_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer) TO anon;
GRANT ALL ON FUNCTION public.updategeometrysrid(catalogn_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer) TO authenticated;
GRANT ALL ON FUNCTION public.updategeometrysrid(catalogn_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer) TO service_role;


--
-- Name: FUNCTION apply_rls(wal jsonb, max_record_bytes integer); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO postgres;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO anon;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO authenticated;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO service_role;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO supabase_realtime_admin;


--
-- Name: FUNCTION broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) TO postgres;
GRANT ALL ON FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) TO dashboard_user;


--
-- Name: FUNCTION build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO postgres;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO anon;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO authenticated;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO service_role;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO supabase_realtime_admin;


--
-- Name: FUNCTION "cast"(val text, type_ regtype); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO postgres;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO dashboard_user;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO anon;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO authenticated;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO service_role;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO supabase_realtime_admin;


--
-- Name: FUNCTION check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO postgres;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO anon;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO authenticated;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO service_role;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO supabase_realtime_admin;


--
-- Name: FUNCTION is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO postgres;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO anon;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO authenticated;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO service_role;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO supabase_realtime_admin;


--
-- Name: FUNCTION list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO postgres;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO anon;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO authenticated;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO service_role;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO supabase_realtime_admin;


--
-- Name: FUNCTION quote_wal2json(entity regclass); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO postgres;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO anon;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO authenticated;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO service_role;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO supabase_realtime_admin;


--
-- Name: FUNCTION send(payload jsonb, event text, topic text, private boolean); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) TO postgres;
GRANT ALL ON FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) TO dashboard_user;


--
-- Name: FUNCTION subscription_check_filters(); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO postgres;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO dashboard_user;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO anon;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO authenticated;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO service_role;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO supabase_realtime_admin;


--
-- Name: FUNCTION to_regrole(role_name text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO postgres;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO anon;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO authenticated;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO service_role;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO supabase_realtime_admin;


--
-- Name: FUNCTION topic(); Type: ACL; Schema: realtime; Owner: supabase_realtime_admin
--

GRANT ALL ON FUNCTION realtime.topic() TO postgres;
GRANT ALL ON FUNCTION realtime.topic() TO dashboard_user;


--
-- Name: FUNCTION _crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault._crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault._crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea) TO service_role;


--
-- Name: FUNCTION create_secret(new_secret text, new_name text, new_description text, new_key_id uuid); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault.create_secret(new_secret text, new_name text, new_description text, new_key_id uuid) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault.create_secret(new_secret text, new_name text, new_description text, new_key_id uuid) TO service_role;


--
-- Name: FUNCTION update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault.update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault.update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid) TO service_role;


--
-- Name: FUNCTION st_3dextent(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_3dextent(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_3dextent(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_3dextent(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_3dextent(public.geometry) TO service_role;


--
-- Name: FUNCTION st_asflatgeobuf(anyelement); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement) TO postgres;
GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement) TO anon;
GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement) TO authenticated;
GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement) TO service_role;


--
-- Name: FUNCTION st_asflatgeobuf(anyelement, boolean); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement, boolean) TO postgres;
GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement, boolean) TO anon;
GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement, boolean) TO authenticated;
GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement, boolean) TO service_role;


--
-- Name: FUNCTION st_asflatgeobuf(anyelement, boolean, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement, boolean, text) TO postgres;
GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement, boolean, text) TO anon;
GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement, boolean, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asflatgeobuf(anyelement, boolean, text) TO service_role;


--
-- Name: FUNCTION st_asgeobuf(anyelement); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asgeobuf(anyelement) TO postgres;
GRANT ALL ON FUNCTION public.st_asgeobuf(anyelement) TO anon;
GRANT ALL ON FUNCTION public.st_asgeobuf(anyelement) TO authenticated;
GRANT ALL ON FUNCTION public.st_asgeobuf(anyelement) TO service_role;


--
-- Name: FUNCTION st_asgeobuf(anyelement, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asgeobuf(anyelement, text) TO postgres;
GRANT ALL ON FUNCTION public.st_asgeobuf(anyelement, text) TO anon;
GRANT ALL ON FUNCTION public.st_asgeobuf(anyelement, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asgeobuf(anyelement, text) TO service_role;


--
-- Name: FUNCTION st_asmvt(anyelement); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asmvt(anyelement) TO postgres;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement) TO anon;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement) TO authenticated;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement) TO service_role;


--
-- Name: FUNCTION st_asmvt(anyelement, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text) TO postgres;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text) TO anon;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text) TO service_role;


--
-- Name: FUNCTION st_asmvt(anyelement, text, integer); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer) TO postgres;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer) TO anon;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer) TO authenticated;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer) TO service_role;


--
-- Name: FUNCTION st_asmvt(anyelement, text, integer, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer, text) TO postgres;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer, text) TO anon;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer, text) TO service_role;


--
-- Name: FUNCTION st_asmvt(anyelement, text, integer, text, text); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer, text, text) TO postgres;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer, text, text) TO anon;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer, text, text) TO authenticated;
GRANT ALL ON FUNCTION public.st_asmvt(anyelement, text, integer, text, text) TO service_role;


--
-- Name: FUNCTION st_clusterintersecting(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_clusterintersecting(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_clusterintersecting(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_clusterintersecting(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_clusterintersecting(public.geometry) TO service_role;


--
-- Name: FUNCTION st_clusterwithin(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_clusterwithin(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_clusterwithin(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_clusterwithin(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_clusterwithin(public.geometry, double precision) TO service_role;


--
-- Name: FUNCTION st_collect(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_collect(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_collect(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_collect(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_collect(public.geometry) TO service_role;


--
-- Name: FUNCTION st_extent(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_extent(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_extent(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_extent(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_extent(public.geometry) TO service_role;


--
-- Name: FUNCTION st_makeline(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_makeline(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_makeline(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_makeline(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_makeline(public.geometry) TO service_role;


--
-- Name: FUNCTION st_memcollect(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_memcollect(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_memcollect(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_memcollect(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_memcollect(public.geometry) TO service_role;


--
-- Name: FUNCTION st_memunion(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_memunion(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_memunion(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_memunion(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_memunion(public.geometry) TO service_role;


--
-- Name: FUNCTION st_polygonize(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_polygonize(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_polygonize(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_polygonize(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_polygonize(public.geometry) TO service_role;


--
-- Name: FUNCTION st_union(public.geometry); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_union(public.geometry) TO postgres;
GRANT ALL ON FUNCTION public.st_union(public.geometry) TO anon;
GRANT ALL ON FUNCTION public.st_union(public.geometry) TO authenticated;
GRANT ALL ON FUNCTION public.st_union(public.geometry) TO service_role;


--
-- Name: FUNCTION st_union(public.geometry, double precision); Type: ACL; Schema: public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION public.st_union(public.geometry, double precision) TO postgres;
GRANT ALL ON FUNCTION public.st_union(public.geometry, double precision) TO anon;
GRANT ALL ON FUNCTION public.st_union(public.geometry, double precision) TO authenticated;
GRANT ALL ON FUNCTION public.st_union(public.geometry, double precision) TO service_role;


--
-- Name: TABLE audit_log_entries; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.audit_log_entries TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.audit_log_entries TO postgres;
GRANT SELECT ON TABLE auth.audit_log_entries TO postgres WITH GRANT OPTION;


--
-- Name: TABLE flow_state; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.flow_state TO postgres;
GRANT SELECT ON TABLE auth.flow_state TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.flow_state TO dashboard_user;


--
-- Name: TABLE identities; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.identities TO postgres;
GRANT SELECT ON TABLE auth.identities TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.identities TO dashboard_user;


--
-- Name: TABLE instances; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.instances TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.instances TO postgres;
GRANT SELECT ON TABLE auth.instances TO postgres WITH GRANT OPTION;


--
-- Name: TABLE mfa_amr_claims; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_amr_claims TO postgres;
GRANT SELECT ON TABLE auth.mfa_amr_claims TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_amr_claims TO dashboard_user;


--
-- Name: TABLE mfa_challenges; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_challenges TO postgres;
GRANT SELECT ON TABLE auth.mfa_challenges TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_challenges TO dashboard_user;


--
-- Name: TABLE mfa_factors; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_factors TO postgres;
GRANT SELECT ON TABLE auth.mfa_factors TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_factors TO dashboard_user;


--
-- Name: TABLE oauth_clients; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.oauth_clients TO postgres;
GRANT ALL ON TABLE auth.oauth_clients TO dashboard_user;


--
-- Name: TABLE one_time_tokens; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.one_time_tokens TO postgres;
GRANT SELECT ON TABLE auth.one_time_tokens TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.one_time_tokens TO dashboard_user;


--
-- Name: TABLE refresh_tokens; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.refresh_tokens TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.refresh_tokens TO postgres;
GRANT SELECT ON TABLE auth.refresh_tokens TO postgres WITH GRANT OPTION;


--
-- Name: SEQUENCE refresh_tokens_id_seq; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON SEQUENCE auth.refresh_tokens_id_seq TO dashboard_user;
GRANT ALL ON SEQUENCE auth.refresh_tokens_id_seq TO postgres;


--
-- Name: TABLE saml_providers; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.saml_providers TO postgres;
GRANT SELECT ON TABLE auth.saml_providers TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.saml_providers TO dashboard_user;


--
-- Name: TABLE saml_relay_states; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.saml_relay_states TO postgres;
GRANT SELECT ON TABLE auth.saml_relay_states TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.saml_relay_states TO dashboard_user;


--
-- Name: TABLE sessions; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sessions TO postgres;
GRANT SELECT ON TABLE auth.sessions TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sessions TO dashboard_user;


--
-- Name: TABLE sso_domains; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sso_domains TO postgres;
GRANT SELECT ON TABLE auth.sso_domains TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sso_domains TO dashboard_user;


--
-- Name: TABLE sso_providers; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sso_providers TO postgres;
GRANT SELECT ON TABLE auth.sso_providers TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sso_providers TO dashboard_user;


--
-- Name: TABLE users; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.users TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.users TO postgres;
GRANT SELECT ON TABLE auth.users TO postgres WITH GRANT OPTION;


--
-- Name: TABLE pg_stat_statements; Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON TABLE extensions.pg_stat_statements FROM postgres;
GRANT ALL ON TABLE extensions.pg_stat_statements TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE extensions.pg_stat_statements TO dashboard_user;


--
-- Name: TABLE pg_stat_statements_info; Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON TABLE extensions.pg_stat_statements_info FROM postgres;
GRANT ALL ON TABLE extensions.pg_stat_statements_info TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE extensions.pg_stat_statements_info TO dashboard_user;


--
-- Name: TABLE messages; Type: ACL; Schema: realtime; Owner: supabase_realtime_admin
--

GRANT ALL ON TABLE realtime.messages TO postgres;
GRANT ALL ON TABLE realtime.messages TO dashboard_user;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO anon;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO authenticated;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO service_role;


--
-- Name: TABLE schema_migrations; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.schema_migrations TO postgres;
GRANT ALL ON TABLE realtime.schema_migrations TO dashboard_user;
GRANT SELECT ON TABLE realtime.schema_migrations TO anon;
GRANT SELECT ON TABLE realtime.schema_migrations TO authenticated;
GRANT SELECT ON TABLE realtime.schema_migrations TO service_role;
GRANT ALL ON TABLE realtime.schema_migrations TO supabase_realtime_admin;


--
-- Name: TABLE subscription; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.subscription TO postgres;
GRANT ALL ON TABLE realtime.subscription TO dashboard_user;
GRANT SELECT ON TABLE realtime.subscription TO anon;
GRANT SELECT ON TABLE realtime.subscription TO authenticated;
GRANT SELECT ON TABLE realtime.subscription TO service_role;
GRANT ALL ON TABLE realtime.subscription TO supabase_realtime_admin;


--
-- Name: SEQUENCE subscription_id_seq; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO postgres;
GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO dashboard_user;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO anon;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO authenticated;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO service_role;
GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO supabase_realtime_admin;


--
-- Name: TABLE buckets; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.buckets TO anon;
GRANT ALL ON TABLE storage.buckets TO authenticated;
GRANT ALL ON TABLE storage.buckets TO service_role;
GRANT ALL ON TABLE storage.buckets TO postgres WITH GRANT OPTION;


--
-- Name: TABLE buckets_analytics; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.buckets_analytics TO service_role;
GRANT ALL ON TABLE storage.buckets_analytics TO authenticated;
GRANT ALL ON TABLE storage.buckets_analytics TO anon;


--
-- Name: TABLE objects; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.objects TO anon;
GRANT ALL ON TABLE storage.objects TO authenticated;
GRANT ALL ON TABLE storage.objects TO service_role;
GRANT ALL ON TABLE storage.objects TO postgres WITH GRANT OPTION;


--
-- Name: TABLE prefixes; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.prefixes TO service_role;
GRANT ALL ON TABLE storage.prefixes TO authenticated;
GRANT ALL ON TABLE storage.prefixes TO anon;


--
-- Name: TABLE s3_multipart_uploads; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.s3_multipart_uploads TO service_role;
GRANT SELECT ON TABLE storage.s3_multipart_uploads TO authenticated;
GRANT SELECT ON TABLE storage.s3_multipart_uploads TO anon;


--
-- Name: TABLE s3_multipart_uploads_parts; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.s3_multipart_uploads_parts TO service_role;
GRANT SELECT ON TABLE storage.s3_multipart_uploads_parts TO authenticated;
GRANT SELECT ON TABLE storage.s3_multipart_uploads_parts TO anon;


--
-- Name: TABLE secrets; Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT SELECT,REFERENCES,DELETE,TRUNCATE ON TABLE vault.secrets TO postgres WITH GRANT OPTION;
GRANT SELECT,DELETE ON TABLE vault.secrets TO service_role;


--
-- Name: TABLE decrypted_secrets; Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT SELECT,REFERENCES,DELETE,TRUNCATE ON TABLE vault.decrypted_secrets TO postgres WITH GRANT OPTION;
GRANT SELECT,DELETE ON TABLE vault.decrypted_secrets TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON SEQUENCES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON FUNCTIONS TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON TABLES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON SEQUENCES TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON FUNCTIONS TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON TABLES TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON SEQUENCES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON FUNCTIONS TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON TABLES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO service_role;


--
-- Name: issue_graphql_placeholder; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_graphql_placeholder ON sql_drop
         WHEN TAG IN ('DROP EXTENSION')
   EXECUTE FUNCTION extensions.set_graphql_placeholder();


ALTER EVENT TRIGGER issue_graphql_placeholder OWNER TO supabase_admin;

--
-- Name: issue_pg_cron_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_cron_access ON ddl_command_end
         WHEN TAG IN ('CREATE EXTENSION')
   EXECUTE FUNCTION extensions.grant_pg_cron_access();


ALTER EVENT TRIGGER issue_pg_cron_access OWNER TO supabase_admin;

--
-- Name: issue_pg_graphql_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_graphql_access ON ddl_command_end
         WHEN TAG IN ('CREATE FUNCTION')
   EXECUTE FUNCTION extensions.grant_pg_graphql_access();


ALTER EVENT TRIGGER issue_pg_graphql_access OWNER TO supabase_admin;

--
-- Name: issue_pg_net_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_net_access ON ddl_command_end
         WHEN TAG IN ('CREATE EXTENSION')
   EXECUTE FUNCTION extensions.grant_pg_net_access();


ALTER EVENT TRIGGER issue_pg_net_access OWNER TO supabase_admin;

--
-- Name: pgrst_ddl_watch; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER pgrst_ddl_watch ON ddl_command_end
   EXECUTE FUNCTION extensions.pgrst_ddl_watch();


ALTER EVENT TRIGGER pgrst_ddl_watch OWNER TO supabase_admin;

--
-- Name: pgrst_drop_watch; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER pgrst_drop_watch ON sql_drop
   EXECUTE FUNCTION extensions.pgrst_drop_watch();


ALTER EVENT TRIGGER pgrst_drop_watch OWNER TO supabase_admin;

--
-- PostgreSQL database dump complete
--

\unrestrict J7Bcjx4vALmedxoZauPQqMAV44DSjJz3uCzU02egK1j4fJxoCbP03Ptzcpzi2GI

--
-- PostgreSQL database cluster dump complete
--

